

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Fri Mar 22 14:37:33 2019

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1
    79                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    80                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    81                           	psect	text58,global,reloc=2,class=CODE,delta=1
    82                           	psect	text59,global,reloc=2,class=CODE,delta=1
    83                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	text63,global,reloc=2,class=CODE,delta=1
    87                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text65,global,reloc=2,class=CODE,delta=1
    89                           	psect	text66,global,reloc=2,class=CODE,delta=1
    90                           	psect	text67,global,reloc=2,class=CODE,delta=1
    91                           	psect	text68,global,reloc=2,class=CODE,delta=1
    92                           	psect	text69,global,reloc=2,class=CODE,delta=1
    93                           	psect	text70,global,reloc=2,class=CODE,delta=1
    94                           	psect	text71,global,reloc=2,class=CODE,delta=1
    95                           	psect	text72,global,reloc=2,class=CODE,delta=1
    96                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
    97                           	psect	text74,global,reloc=2,class=CODE,delta=1
    98                           	psect	text75,global,reloc=2,class=CODE,delta=1
    99                           	psect	text76,global,reloc=2,class=CODE,delta=1
   100                           	psect	text77,global,reloc=2,class=CODE,delta=1
   101                           	psect	text78,global,reloc=2,class=CODE,delta=1
   102                           	psect	text79,global,reloc=2,class=CODE,delta=1
   103                           	psect	text80,global,reloc=2,class=CODE,delta=1
   104                           	psect	text81,global,reloc=2,class=CODE,delta=1
   105                           	psect	text82,global,reloc=2,class=CODE,delta=1
   106                           	psect	text83,global,reloc=2,class=CODE,delta=1
   107                           	psect	text84,global,reloc=2,class=CODE,delta=1
   108                           	psect	text85,global,reloc=2,class=CODE,delta=1
   109                           	psect	text86,global,reloc=2,class=CODE,delta=1
   110                           	psect	text87,global,reloc=2,class=CODE,delta=1
   111                           	psect	text88,global,reloc=2,class=CODE,delta=1
   112                           	psect	text89,global,reloc=2,class=CODE,delta=1
   113                           	psect	text90,global,reloc=2,class=CODE,delta=1
   114                           	psect	text91,global,reloc=2,class=CODE,delta=1
   115                           	psect	text92,global,reloc=2,class=CODE,delta=1
   116                           	psect	text93,global,reloc=2,class=CODE,delta=1
   117                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   118                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   119                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   120                           	dabs	1,0x400,48,_BDT
   121                           	dabs	1,0x500,64,_cdc_data_tx
   122                           	dabs	1,0x438,8,_CtrlTrfData
   123                           	dabs	1,0x430,8,_SetupPkt
   124                           	dabs	1,0x540,64,_cdc_data_rx
   125  0000                     
   126                           ; Version 1.44
   127                           ; Generated 14/09/2017 GMT
   128                           ; 
   129                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   130                           ; All rights reserved.
   131                           ; 
   132                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   133                           ; 
   134                           ; Redistribution and use in source and binary forms, with or without modification, are
   135                           ; permitted provided that the following conditions are met:
   136                           ; 
   137                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   138                           ;        conditions and the following disclaimer.
   139                           ; 
   140                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   141                           ;        of conditions and the following disclaimer in the documentation and/or other
   142                           ;        materials provided with the distribution.
   143                           ; 
   144                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   145                           ;        software without specific prior written permission.
   146                           ; 
   147                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   148                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   149                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   150                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   151                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   152                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   153                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   154                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   155                           ; 
   156                           ; 
   157                           ; Code-generator required, PIC18F4550 Definitions
   158                           ; 
   159                           ; SFR Addresses
   160  0000                     
   161                           	psect	idataBANK3
   162  0054B4                     __pidataBANK3:
   163                           	opt stack 0
   164                           
   165                           ;initializer for _MSG_LORAWAN
   166  0054B4  85                 	db	low (STR_21+7)
   167  0054B5  7F                 	db	high (STR_21+7)
   168  0054B6  37                 	db	low STR_13
   169  0054B7  7F                 	db	high STR_13
   170  0054B8  53                 	db	low STR_14
   171  0054B9  7F                 	db	high STR_14
   172  0054BA  69                 	db	low STR_15
   173  0054BB  7F                 	db	high STR_15
   174  0054BC  C8                 	db	low STR_16
   175  0054BD  7F                 	db	high STR_16
   176  0054BE  9E                 	db	low STR_17
   177  0054BF  7E                 	db	high STR_17
   178  0054C0  FA                 	db	low STR_18
   179  0054C1  7F                 	db	high STR_18
   180  0054C2  5E                 	db	low STR_19
   181  0054C3  7F                 	db	high STR_19
   182  0054C4  E3                 	db	low STR_20
   183  0054C5  7E                 	db	high STR_20
   184  0054C6  7E                 	db	low STR_21
   185  0054C7  7F                 	db	high STR_21
   186  0054C8  9B                 	db	low STR_22
   187  0054C9  7F                 	db	high STR_22
   188  0054CA  A3                 	db	low STR_23
   189  0054CB  7F                 	db	high STR_23
   190  0054CC  45                 	db	low STR_24
   191  0054CD  7F                 	db	high STR_24
   192  0054CE  C1                 	db	low STR_25
   193  0054CF  7F                 	db	high STR_25
   194  0054D0  27                 	db	low STR_26
   195  0054D1  7F                 	db	high STR_26
   196                           
   197                           ;initializer for _randx
   198  0054D2  0001               	dw	1
   199  0054D4  0000               	dw	0
   200                           
   201                           	psect	mediumconst
   202  007C08                     __pmediumconst:
   203                           	opt stack 0
   204  007C08  00                 	db	0
   205  007C09                     _dpowers:
   206                           	opt stack 0
   207  007C09  0001               	dw	1
   208  007C0B  0000               	dw	0
   209  007C0D  000A               	dw	10
   210  007C0F  0000               	dw	0
   211  007C11  0064               	dw	100
   212  007C13  0000               	dw	0
   213  007C15  03E8               	dw	1000
   214  007C17  0000               	dw	0
   215  007C19  2710               	dw	10000
   216  007C1B  0000               	dw	0
   217  007C1D  86A0               	dw	34464
   218  007C1F  0001               	dw	1
   219  007C21  4240               	dw	16960
   220  007C23  000F               	dw	15
   221  007C25  9680               	dw	38528
   222  007C27  0098               	dw	152
   223  007C29  E100               	dw	57600
   224  007C2B  05F5               	dw	1525
   225  007C2D  CA00               	dw	51712
   226  007C2F  3B9A               	dw	15258
   227  007C31                     __end_of_dpowers:
   228                           	opt stack 0
   229  007C31                     __powers_:
   230                           	opt stack 0
   231  007C31  00                 	db	0
   232  007C32  80                 	db	128
   233  007C33  3F                 	db	63
   234  007C34  00                 	db	0
   235  007C35  20                 	db	32
   236  007C36  41                 	db	65
   237  007C37  00                 	db	0
   238  007C38  C8                 	db	200
   239  007C39  42                 	db	66
   240  007C3A  00                 	db	0
   241  007C3B  7A                 	db	122
   242  007C3C  44                 	db	68
   243  007C3D  40                 	db	64
   244  007C3E  1C                 	db	28
   245  007C3F  46                 	db	70
   246  007C40  50                 	db	80
   247  007C41  C3                 	db	195
   248  007C42  47                 	db	71
   249  007C43  24                 	db	36
   250  007C44  74                 	db	116
   251  007C45  49                 	db	73
   252  007C46  97                 	db	151
   253  007C47  18                 	db	24
   254  007C48  4B                 	db	75
   255  007C49  BC                 	db	188
   256  007C4A  BE                 	db	190
   257  007C4B  4C                 	db	76
   258  007C4C  6B                 	db	107
   259  007C4D  6E                 	db	110
   260  007C4E  4E                 	db	78
   261  007C4F  03                 	db	3
   262  007C50  15                 	db	21
   263  007C51  50                 	db	80
   264  007C52  79                 	db	121
   265  007C53  AD                 	db	173
   266  007C54  60                 	db	96
   267  007C55  F3                 	db	243
   268  007C56  49                 	db	73
   269  007C57  71                 	db	113
   270  007C58                     __end_of__powers_:
   271                           	opt stack 0
   272  007C58                     __npowers_:
   273                           	opt stack 0
   274  007C58  00                 	db	0
   275  007C59  80                 	db	128
   276  007C5A  3F                 	db	63
   277  007C5B  CD                 	db	205
   278  007C5C  CC                 	db	204
   279  007C5D  3D                 	db	61
   280  007C5E  D7                 	db	215
   281  007C5F  23                 	db	35
   282  007C60  3C                 	db	60
   283  007C61  12                 	db	18
   284  007C62  83                 	db	131
   285  007C63  3A                 	db	58
   286  007C64  B7                 	db	183
   287  007C65  D1                 	db	209
   288  007C66  38                 	db	56
   289  007C67  C6                 	db	198
   290  007C68  27                 	db	39
   291  007C69  37                 	db	55
   292  007C6A  38                 	db	56
   293  007C6B  86                 	db	134
   294  007C6C  35                 	db	53
   295  007C6D  C0                 	db	192
   296  007C6E  D6                 	db	214
   297  007C6F  33                 	db	51
   298  007C70  CC                 	db	204
   299  007C71  2B                 	db	43
   300  007C72  32                 	db	50
   301  007C73  70                 	db	112
   302  007C74  89                 	db	137
   303  007C75  30                 	db	48
   304  007C76  E7                 	db	231
   305  007C77  DB                 	db	219
   306  007C78  2E                 	db	46
   307  007C79  E5                 	db	229
   308  007C7A  3C                 	db	60
   309  007C7B  1E                 	db	30
   310  007C7C  42                 	db	66
   311  007C7D  A2                 	db	162
   312  007C7E  0D                 	db	13
   313  007C7F                     __end_of__npowers_:
   314                           	opt stack 0
   315  007C7F                     _hexpowers:
   316                           	opt stack 0
   317  007C7F  0001               	dw	1
   318  007C81  0000               	dw	0
   319  007C83  0010               	dw	16
   320  007C85  0000               	dw	0
   321  007C87  0100               	dw	256
   322  007C89  0000               	dw	0
   323  007C8B  1000               	dw	4096
   324  007C8D  0000               	dw	0
   325  007C8F  0000               	dw	0
   326  007C91  0001               	dw	1
   327  007C93  0000               	dw	0
   328  007C95  0010               	dw	16
   329  007C97  0000               	dw	0
   330  007C99  0100               	dw	256
   331  007C9B  0000               	dw	0
   332  007C9D  1000               	dw	4096
   333  007C9F                     __end_of_hexpowers:
   334                           	opt stack 0
   335  007C9F                     _USB_SD_Ptr:
   336                           	opt stack 0
   337  007C9F  00                 	db	low _sd000
   338  007CA0  7E                 	db	high _sd000
   339  007CA1  1E                 	db	low _sd001
   340  007CA2  7D                 	db	high _sd001
   341  007CA3  EA                 	db	low _sd002
   342  007CA4  7C                 	db	high _sd002
   343  007CA5                     __end_of_USB_SD_Ptr:
   344                           	opt stack 0
   345  007CA5                     _USB_CD_Ptr:
   346                           	opt stack 0
   347  007CA5  A7                 	db	low _configDescriptor1
   348  007CA6  7C                 	db	high _configDescriptor1
   349  007CA7                     __end_of_USB_CD_Ptr:
   350                           	opt stack 0
   351  007CA7                     _configDescriptor1:
   352                           	opt stack 0
   353  007CA7  09                 	db	9
   354  007CA8  02                 	db	2
   355  007CA9  43                 	db	67
   356  007CAA  00                 	db	0
   357  007CAB  02                 	db	2
   358  007CAC  01                 	db	1
   359  007CAD  00                 	db	0
   360  007CAE  C0                 	db	192
   361  007CAF  32                 	db	50
   362  007CB0  09                 	db	9
   363  007CB1  04                 	db	4
   364  007CB2  00                 	db	0
   365  007CB3  00                 	db	0
   366  007CB4  01                 	db	1
   367  007CB5  02                 	db	2
   368  007CB6  02                 	db	2
   369  007CB7  01                 	db	1
   370  007CB8  00                 	db	0
   371  007CB9  05                 	db	5
   372  007CBA  24                 	db	36
   373  007CBB  00                 	db	0
   374  007CBC  10                 	db	16
   375  007CBD  01                 	db	1
   376  007CBE  04                 	db	4
   377  007CBF  24                 	db	36
   378  007CC0  02                 	db	2
   379  007CC1  02                 	db	2
   380  007CC2  05                 	db	5
   381  007CC3  24                 	db	36
   382  007CC4  06                 	db	6
   383  007CC5  00                 	db	0
   384  007CC6  01                 	db	1
   385  007CC7  05                 	db	5
   386  007CC8  24                 	db	36
   387  007CC9  01                 	db	1
   388  007CCA  00                 	db	0
   389  007CCB  01                 	db	1
   390  007CCC  07                 	db	7
   391  007CCD  05                 	db	5
   392  007CCE  81                 	db	129
   393  007CCF  03                 	db	3
   394  007CD0  08                 	db	8
   395  007CD1  00                 	db	0
   396  007CD2  02                 	db	2
   397  007CD3  09                 	db	9
   398  007CD4  04                 	db	4
   399  007CD5  01                 	db	1
   400  007CD6  00                 	db	0
   401  007CD7  02                 	db	2
   402  007CD8  0A                 	db	10
   403  007CD9  00                 	db	0
   404  007CDA  00                 	db	0
   405  007CDB  00                 	db	0
   406  007CDC  07                 	db	7
   407  007CDD  05                 	db	5
   408  007CDE  02                 	db	2
   409  007CDF  02                 	db	2
   410  007CE0  40                 	db	64
   411  007CE1  00                 	db	0
   412  007CE2  00                 	db	0
   413  007CE3  07                 	db	7
   414  007CE4  05                 	db	5
   415  007CE5  82                 	db	130
   416  007CE6  02                 	db	2
   417  007CE7  40                 	db	64
   418  007CE8  00                 	db	0
   419  007CE9  00                 	db	0
   420  007CEA                     __end_of_configDescriptor1:
   421                           	opt stack 0
   422  007CEA                     _sd002:
   423                           	opt stack 0
   424  007CEA  34                 	db	52
   425  007CEB  03                 	db	3
   426  007CEC  0043               	dw	67
   427  007CEE  0044               	dw	68
   428  007CF0  0043               	dw	67
   429  007CF2  0020               	dw	32
   430  007CF4  0052               	dw	82
   431  007CF6  0053               	dw	83
   432  007CF8  002D               	dw	45
   433  007CFA  0032               	dw	50
   434  007CFC  0033               	dw	51
   435  007CFE  0032               	dw	50
   436  007D00  0020               	dw	32
   437  007D02  0045               	dw	69
   438  007D04  006D               	dw	109
   439  007D06  0075               	dw	117
   440  007D08  006C               	dw	108
   441  007D0A  0061               	dw	97
   442  007D0C  0074               	dw	116
   443  007D0E  0069               	dw	105
   444  007D10  006F               	dw	111
   445  007D12  006E               	dw	110
   446  007D14  0020               	dw	32
   447  007D16  0044               	dw	68
   448  007D18  0065               	dw	101
   449  007D1A  006D               	dw	109
   450  007D1C  006F               	dw	111
   451  007D1E                     __end_of_sd002:
   452                           	opt stack 0
   453  007D1E                     _sd001:
   454                           	opt stack 0
   455  007D1E  34                 	db	52
   456  007D1F  03                 	db	3
   457  007D20  004D               	dw	77
   458  007D22  0069               	dw	105
   459  007D24  0063               	dw	99
   460  007D26  0072               	dw	114
   461  007D28  006F               	dw	111
   462  007D2A  0063               	dw	99
   463  007D2C  0068               	dw	104
   464  007D2E  0069               	dw	105
   465  007D30  0070               	dw	112
   466  007D32  0020               	dw	32
   467  007D34  0054               	dw	84
   468  007D36  0065               	dw	101
   469  007D38  0063               	dw	99
   470  007D3A  0068               	dw	104
   471  007D3C  006E               	dw	110
   472  007D3E  006F               	dw	111
   473  007D40  006C               	dw	108
   474  007D42  006F               	dw	111
   475  007D44  0067               	dw	103
   476  007D46  0079               	dw	121
   477  007D48  0020               	dw	32
   478  007D4A  0049               	dw	73
   479  007D4C  006E               	dw	110
   480  007D4E  0063               	dw	99
   481  007D50  002E               	dw	46
   482  007D52                     __end_of_sd001:
   483                           	opt stack 0
   484  007D52                     _device_dsc:
   485                           	opt stack 0
   486  007D52  12                 	db	18
   487  007D53  01                 	db	1
   488  007D54  0200               	dw	512
   489  007D56  02                 	db	2
   490  007D57  00                 	db	0
   491  007D58  00                 	db	0
   492  007D59  08                 	db	8
   493  007D5A  04D8               	dw	1240
   494  007D5C  000A               	dw	10
   495  007D5E  0100               	dw	256
   496  007D60  01                 	db	1
   497  007D61  02                 	db	2
   498  007D62  00                 	db	0
   499  007D63  01                 	db	1
   500  007D64                     __end_of_device_dsc:
   501                           	opt stack 0
   502  007D64                     _MAC_SET_SF:
   503                           	opt stack 0
   504  007D64  72                 	db	114
   505  007D65  61                 	db	97
   506  007D66  64                 	db	100
   507  007D67  69                 	db	105
   508  007D68  6F                 	db	111
   509  007D69  20                 	db	32
   510  007D6A  73                 	db	115
   511  007D6B  65                 	db	101
   512  007D6C  74                 	db	116
   513  007D6D  20                 	db	32
   514  007D6E  73                 	db	115
   515  007D6F  66                 	db	102
   516  007D70  20                 	db	32
   517  007D71  53                 	db	83
   518  007D72  46                 	db	70
   519  007D73  00                 	db	0
   520  007D74                     __end_of_MAC_SET_SF:
   521                           	opt stack 0
   522  007D74                     _MAC_SET_CH_STATUS:
   523                           	opt stack 0
   524  007D74  73                 	db	115
   525  007D75  65                 	db	101
   526  007D76  74                 	db	116
   527  007D77  20                 	db	32
   528  007D78  63                 	db	99
   529  007D79  68                 	db	104
   530  007D7A  20                 	db	32
   531  007D7B  73                 	db	115
   532  007D7C  74                 	db	116
   533  007D7D  61                 	db	97
   534  007D7E  74                 	db	116
   535  007D7F  75                 	db	117
   536  007D80  73                 	db	115
   537  007D81  00                 	db	0
   538  007D82                     __end_of_MAC_SET_CH_STATUS:
   539                           	opt stack 0
   540  007D82                     _MAC_SET_BW:
   541                           	opt stack 0
   542  007D82  72                 	db	114
   543  007D83  61                 	db	97
   544  007D84  64                 	db	100
   545  007D85  69                 	db	105
   546  007D86  6F                 	db	111
   547  007D87  20                 	db	32
   548  007D88  73                 	db	115
   549  007D89  65                 	db	101
   550  007D8A  74                 	db	116
   551  007D8B  20                 	db	32
   552  007D8C  62                 	db	98
   553  007D8D  77                 	db	119
   554  007D8E  00                 	db	0
   555  007D8F                     __end_of_MAC_SET_BW:
   556                           	opt stack 0
   557  007D8F                     _MAC_SET_APPKEY:
   558                           	opt stack 0
   559  007D8F  73                 	db	115
   560  007D90  65                 	db	101
   561  007D91  74                 	db	116
   562  007D92  20                 	db	32
   563  007D93  61                 	db	97
   564  007D94  70                 	db	112
   565  007D95  70                 	db	112
   566  007D96  6B                 	db	107
   567  007D97  65                 	db	101
   568  007D98  79                 	db	121
   569  007D99  00                 	db	0
   570  007D9A                     __end_of_MAC_SET_APPKEY:
   571                           	opt stack 0
   572  007D9A                     _MAC_SET_APPEUI:
   573                           	opt stack 0
   574  007D9A  73                 	db	115
   575  007D9B  65                 	db	101
   576  007D9C  74                 	db	116
   577  007D9D  20                 	db	32
   578  007D9E  61                 	db	97
   579  007D9F  70                 	db	112
   580  007DA0  70                 	db	112
   581  007DA1  65                 	db	101
   582  007DA2  75                 	db	117
   583  007DA3  69                 	db	105
   584  007DA4  00                 	db	0
   585  007DA5                     __end_of_MAC_SET_APPEUI:
   586                           	opt stack 0
   587  007DA5                     _MAC_SET_DEVEUI:
   588                           	opt stack 0
   589  007DA5  73                 	db	115
   590  007DA6  65                 	db	101
   591  007DA7  74                 	db	116
   592  007DA8  20                 	db	32
   593  007DA9  64                 	db	100
   594  007DAA  65                 	db	101
   595  007DAB  76                 	db	118
   596  007DAC  65                 	db	101
   597  007DAD  75                 	db	117
   598  007DAE  69                 	db	105
   599  007DAF  00                 	db	0
   600  007DB0                     __end_of_MAC_SET_DEVEUI:
   601                           	opt stack 0
   602  007DB0                     _MAC_GET_DNCTR:
   603                           	opt stack 0
   604  007DB0  67                 	db	103
   605  007DB1  65                 	db	101
   606  007DB2  74                 	db	116
   607  007DB3  20                 	db	32
   608  007DB4  64                 	db	100
   609  007DB5  6E                 	db	110
   610  007DB6  63                 	db	99
   611  007DB7  74                 	db	116
   612  007DB8  72                 	db	114
   613  007DB9  00                 	db	0
   614  007DBA                     __end_of_MAC_GET_DNCTR:
   615                           	opt stack 0
   616  007DBA                     _MAC_JOIN_OTAA:
   617                           	opt stack 0
   618  007DBA  6A                 	db	106
   619  007DBB  6F                 	db	111
   620  007DBC  69                 	db	105
   621  007DBD  6E                 	db	110
   622  007DBE  20                 	db	32
   623  007DBF  6F                 	db	111
   624  007DC0  74                 	db	116
   625  007DC1  61                 	db	97
   626  007DC2  61                 	db	97
   627  007DC3  00                 	db	0
   628  007DC4                     __end_of_MAC_JOIN_OTAA:
   629                           	opt stack 0
   630  007DC4                     _MAC_TX_UNCNF:
   631                           	opt stack 0
   632  007DC4  74                 	db	116
   633  007DC5  78                 	db	120
   634  007DC6  20                 	db	32
   635  007DC7  75                 	db	117
   636  007DC8  6E                 	db	110
   637  007DC9  63                 	db	99
   638  007DCA  6E                 	db	110
   639  007DCB  66                 	db	102
   640  007DCC  00                 	db	0
   641  007DCD                     __end_of_MAC_TX_UNCNF:
   642                           	opt stack 0
   643  007DCD                     _MAC_GET_ADR:
   644                           	opt stack 0
   645  007DCD  67                 	db	103
   646  007DCE  65                 	db	101
   647  007DCF  74                 	db	116
   648  007DD0  20                 	db	32
   649  007DD1  61                 	db	97
   650  007DD2  64                 	db	100
   651  007DD3  72                 	db	114
   652  007DD4  00                 	db	0
   653  007DD5                     __end_of_MAC_GET_ADR:
   654                           	opt stack 0
   655  007DD5                     _MAC_SET_ADR:
   656                           	opt stack 0
   657  007DD5  73                 	db	115
   658  007DD6  65                 	db	101
   659  007DD7  74                 	db	116
   660  007DD8  20                 	db	32
   661  007DD9  61                 	db	97
   662  007DDA  64                 	db	100
   663  007DDB  72                 	db	114
   664  007DDC  00                 	db	0
   665  007DDD                     __end_of_MAC_SET_ADR:
   666                           	opt stack 0
   667  007DDD                     _MAC_SET_DR:
   668                           	opt stack 0
   669  007DDD  73                 	db	115
   670  007DDE  65                 	db	101
   671  007DDF  74                 	db	116
   672  007DE0  20                 	db	32
   673  007DE1  64                 	db	100
   674  007DE2  72                 	db	114
   675  007DE3  00                 	db	0
   676  007DE4                     __end_of_MAC_SET_DR:
   677                           	opt stack 0
   678  007DE4                     _MAC_TX_CNF:
   679                           	opt stack 0
   680  007DE4  74                 	db	116
   681  007DE5  78                 	db	120
   682  007DE6  20                 	db	32
   683  007DE7  63                 	db	99
   684  007DE8  6E                 	db	110
   685  007DE9  66                 	db	102
   686  007DEA  00                 	db	0
   687  007DEB                     __end_of_MAC_TX_CNF:
   688                           	opt stack 0
   689  007DEB                     _SYS_RESET:
   690                           	opt stack 0
   691  007DEB  72                 	db	114
   692  007DEC  65                 	db	101
   693  007DED  73                 	db	115
   694  007DEE  65                 	db	101
   695  007DEF  74                 	db	116
   696  007DF0  00                 	db	0
   697  007DF1                     __end_of_SYS_RESET:
   698                           	opt stack 0
   699  007DF1                     _SYS:
   700                           	opt stack 0
   701  007DF1  73                 	db	115
   702  007DF2  79                 	db	121
   703  007DF3  73                 	db	115
   704  007DF4  20                 	db	32
   705  007DF5  00                 	db	0
   706  007DF6                     __end_of_SYS:
   707                           	opt stack 0
   708  007DF6                     _MAC_SAVE:
   709                           	opt stack 0
   710  007DF6  73                 	db	115
   711  007DF7  61                 	db	97
   712  007DF8  76                 	db	118
   713  007DF9  65                 	db	101
   714  007DFA  00                 	db	0
   715  007DFB                     __end_of_MAC_SAVE:
   716                           	opt stack 0
   717  007DFB                     _MAC:
   718                           	opt stack 0
   719  007DFB  6D                 	db	109
   720  007DFC  61                 	db	97
   721  007DFD  63                 	db	99
   722  007DFE  20                 	db	32
   723  007DFF  00                 	db	0
   724  007E00                     __end_of_MAC:
   725                           	opt stack 0
   726  007E00                     _sd000:
   727                           	opt stack 0
   728  007E00  04                 	db	4
   729  007E01  03                 	db	3
   730  007E02  0409               	dw	1033
   731  007E04                     __end_of_sd000:
   732                           	opt stack 0
   733  007E04                     _STATE_OFF:
   734                           	opt stack 0
   735  007E04  6F                 	db	111
   736  007E05  66                 	db	102
   737  007E06  66                 	db	102
   738  007E07  00                 	db	0
   739  007E08                     __end_of_STATE_OFF:
   740                           	opt stack 0
   741  007E08                     _STATE_ON:
   742                           	opt stack 0
   743  007E08  6F                 	db	111
   744  007E09  6E                 	db	110
   745  007E0A  00                 	db	0
   746  007E0B                     __end_of_STATE_ON:
   747                           	opt stack 0
   748  007E0B                     _get_preambleid_900:
   749                           	opt stack 0
   750  007E0B  48                 	db	72
   751  007E0C  50                 	db	80
   752  007E0D                     __end_of_get_preambleid_900:
   753                           	opt stack 0
   754  007E0D                     _set_preambleid_900:
   755                           	opt stack 0
   756  007E0D  48                 	db	72
   757  007E0E  50                 	db	80
   758  007E0F                     __end_of_set_preambleid_900:
   759                           	opt stack 0
   760  007E0F                     _get_channelmask_900:
   761                           	opt stack 0
   762  007E0F  43                 	db	67
   763  007E10  4D                 	db	77
   764  007E11                     __end_of_get_channelmask_900:
   765                           	opt stack 0
   766  007E11                     _set_channelmask_900:
   767                           	opt stack 0
   768  007E11  43                 	db	67
   769  007E12  4D                 	db	77
   770  007E13                     __end_of_set_channelmask_900:
   771                           	opt stack 0
   772  007E13                     _gs_encryption:
   773                           	opt stack 0
   774  007E13  45                 	db	69
   775  007E14  45                 	db	69
   776  007E15                     __end_of_gs_encryption:
   777                           	opt stack 0
   778  007E15                     _set_link_key:
   779                           	opt stack 0
   780  007E15  4B                 	db	75
   781  007E16  59                 	db	89
   782  007E17                     __end_of_set_link_key:
   783                           	opt stack 0
   784  007E17                     _write_values:
   785                           	opt stack 0
   786  007E17  57                 	db	87
   787  007E18  52                 	db	82
   788  007E19                     __end_of_write_values:
   789                           	opt stack 0
   790  007E19                     _gs_channel:
   791                           	opt stack 0
   792  007E19  43                 	db	67
   793  007E1A  48                 	db	72
   794  007E1B                     __end_of_gs_channel:
   795                           	opt stack 0
   796  007E1B                     _gs_pan:
   797                           	opt stack 0
   798  007E1B  49                 	db	73
   799  007E1C  44                 	db	68
   800  007E1D                     __end_of_gs_pan:
   801                           	opt stack 0
   802  007E1D                     _get_own_mac_high:
   803                           	opt stack 0
   804  007E1D  53                 	db	83
   805  007E1E  48                 	db	72
   806  007E1F                     __end_of_get_own_mac_high:
   807                           	opt stack 0
   808  007E1F                     _get_own_mac_low:
   809                           	opt stack 0
   810  007E1F  53                 	db	83
   811  007E20  4C                 	db	76
   812  007E21                     __end_of_get_own_mac_low:
   813                           	opt stack 0
   814  0000                     _EECON2	set	4007
   815  0000                     _EECON1bits	set	4006
   816  0000                     _EEDATA	set	4008
   817  0000                     _EEADR	set	4009
   818  0000                     _ADRESL	set	4035
   819  0000                     _ADRESH	set	4036
   820  0000                     _ADCON0	set	4034
   821  0000                     _ADCON2	set	4032
   822  0000                     _ADCON1	set	4033
   823  0000                     _IPR1bits	set	3999
   824  0000                     _CCP1CON	set	4029
   825  0000                     _CCPR1L	set	4030
   826  0000                     _CCPR1H	set	4031
   827  0000                     _TMR1L	set	4046
   828  0000                     _TMR1H	set	4047
   829  0000                     _T3CON	set	4017
   830  0000                     _T0CON	set	4053
   831  0000                     _T1CON	set	4045
   832  0000                     _RCREG	set	4014
   833  0000                     _RCSTA	set	4011
   834  0000                     _TXREG	set	4013
   835  0000                     _RCSTAbits	set	4011
   836  0000                     _SPBRGH	set	4016
   837  0000                     _SPBRG	set	4015
   838  0000                     _BAUDCONbits	set	4024
   839  0000                     _TXSTAbits	set	4012
   840  0000                     _TRISCbits	set	3988
   841  0000                     _LATDbits	set	3980
   842  0000                     _LATEbits	set	3981
   843  0000                     _PORTEbits	set	3972
   844  0000                     _TRISDbits	set	3989
   845  0000                     _TRISEbits	set	3990
   846  0000                     _UEP0bits	set	3952
   847  0000                     _INTCONbits	set	4082
   848  0000                     _IPR2bits	set	4002
   849  0000                     _RCONbits	set	4048
   850  0000                     _PORTCbits	set	3970
   851  0000                     _UCON	set	3949
   852  0000                     _USTAT	set	3948
   853  0000                     _PIR2bits	set	4001
   854  0000                     _UIEbits	set	3945
   855  0000                     _UIRbits	set	3944
   856  0000                     _UADDR	set	3950
   857  0000                     _UCONbits	set	3949
   858  0000                     _UIE	set	3945
   859  0000                     _UEIE	set	3947
   860  0000                     _UCFG	set	3951
   861  0000                     _UIR	set	3944
   862  0000                     _UEIR	set	3946
   863  0000                     _PIE2bits	set	4000
   864  0000                     _PORTDbits	set	3971
   865  0000                     _UEP1	set	3953
   866  0000                     _UEP0	set	3952
   867  0000                     _GO_DONE	set	32273
   868  0000                     _ADIE	set	31982
   869  0000                     _ADIF	set	31990
   870  0000                     _ADON	set	32272
   871  0000                     _TMR0IE	set	32661
   872  0000                     _GIEH	set	32663
   873  0000                     _TMR1IE	set	31976
   874  0000                     _TXIF	set	31988
   875  0000                     _USBIE	set	32005
   876  0000                     _RCIF	set	31989
   877  0000                     _RCIE	set	31981
   878  0000                     _CCP1IE	set	31978
   879  0000                     _CCP1IF	set	31986
   880  007E21                     STR_4:
   881  007E21  72                 	db	114	;'r'
   882  007E22  65                 	db	101	;'e'
   883  007E23  73                 	db	115	;'s'
   884  007E24  70                 	db	112	;'p'
   885  007E25  6F                 	db	111	;'o'
   886  007E26  73                 	db	115	;'s'
   887  007E27  74                 	db	116	;'t'
   888  007E28  61                 	db	97	;'a'
   889  007E29  3A                 	db	58	;':'
   890  007E2A  20                 	db	32
   891  007E2B  25                 	db	37
   892  007E2C  32                 	db	50	;'2'
   893  007E2D  58                 	db	88	;'X'
   894  007E2E  20                 	db	32
   895  007E2F  25                 	db	37
   896  007E30  32                 	db	50	;'2'
   897  007E31  58                 	db	88	;'X'
   898  007E32  20                 	db	32
   899  007E33  25                 	db	37
   900  007E34  32                 	db	50	;'2'
   901  007E35  58                 	db	88	;'X'
   902  007E36  20                 	db	32
   903  007E37  25                 	db	37
   904  007E38  32                 	db	50	;'2'
   905  007E39  58                 	db	88	;'X'
   906  007E3A  20                 	db	32
   907  007E3B  25                 	db	37
   908  007E3C  32                 	db	50	;'2'
   909  007E3D  58                 	db	88	;'X'
   910  007E3E  20                 	db	32
   911  007E3F  25                 	db	37
   912  007E40  32                 	db	50	;'2'
   913  007E41  58                 	db	88	;'X'
   914  007E42  20                 	db	32
   915  007E43  25                 	db	37
   916  007E44  32                 	db	50	;'2'
   917  007E45  58                 	db	88	;'X'
   918  007E46  20                 	db	32
   919  007E47  25                 	db	37
   920  007E48  32                 	db	50	;'2'
   921  007E49  58                 	db	88	;'X'
   922  007E4A  20                 	db	32
   923  007E4B  25                 	db	37
   924  007E4C  32                 	db	50	;'2'
   925  007E4D  58                 	db	88	;'X'
   926  007E4E  20                 	db	32
   927  007E4F  25                 	db	37
   928  007E50  32                 	db	50	;'2'
   929  007E51  58                 	db	88	;'X'
   930  007E52  20                 	db	32
   931  007E53  20                 	db	32
   932  007E54  25                 	db	37
   933  007E55  64                 	db	100	;'d'
   934  007E56  20                 	db	32
   935  007E57  20                 	db	32
   936  007E58  25                 	db	37
   937  007E59  64                 	db	100	;'d'
   938  007E5A  20                 	db	32
   939  007E5B  20                 	db	32
   940  007E5C  25                 	db	37
   941  007E5D  64                 	db	100	;'d'
   942  007E5E  20                 	db	32
   943  007E5F  20                 	db	32
   944  007E60  25                 	db	37
   945  007E61  64                 	db	100	;'d'
   946  007E62  20                 	db	32
   947  007E63  20                 	db	32
   948  007E64  25                 	db	37
   949  007E65  64                 	db	100	;'d'
   950  007E66  20                 	db	32
   951  007E67  20                 	db	32
   952  007E68  25                 	db	37
   953  007E69  64                 	db	100	;'d'
   954  007E6A  20                 	db	32
   955  007E6B  20                 	db	32
   956  007E6C  25                 	db	37
   957  007E6D  64                 	db	100	;'d'
   958  007E6E  20                 	db	32
   959  007E6F  20                 	db	32
   960  007E70  25                 	db	37
   961  007E71  64                 	db	100	;'d'
   962  007E72  20                 	db	32
   963  007E73  20                 	db	32
   964  007E74  25                 	db	37
   965  007E75  64                 	db	100	;'d'
   966  007E76  20                 	db	32
   967  007E77  20                 	db	32
   968  007E78  25                 	db	37
   969  007E79  64                 	db	100	;'d'
   970  007E7A  0A                 	db	10
   971  007E7B  0D                 	db	13
   972  007E7C  00                 	db	0
   973  007E7D                     STR_3:
   974  007E7D  35                 	db	53	;'5'
   975  007E7E  35                 	db	53	;'5'
   976  007E7F  35                 	db	53	;'5'
   977  007E80  35                 	db	53	;'5'
   978  007E81  35                 	db	53	;'5'
   979  007E82  35                 	db	53	;'5'
   980  007E83  35                 	db	53	;'5'
   981  007E84  35                 	db	53	;'5'
   982  007E85  35                 	db	53	;'5'
   983  007E86  35                 	db	53	;'5'
   984  007E87  35                 	db	53	;'5'
   985  007E88  35                 	db	53	;'5'
   986  007E89  35                 	db	53	;'5'
   987  007E8A  35                 	db	53	;'5'
   988  007E8B  35                 	db	53	;'5'
   989  007E8C  35                 	db	53	;'5'
   990  007E8D  35                 	db	53	;'5'
   991  007E8E  35                 	db	53	;'5'
   992  007E8F  35                 	db	53	;'5'
   993  007E90  35                 	db	53	;'5'
   994  007E91  35                 	db	53	;'5'
   995  007E92  35                 	db	53	;'5'
   996  007E93  35                 	db	53	;'5'
   997  007E94  35                 	db	53	;'5'
   998  007E95  35                 	db	53	;'5'
   999  007E96  35                 	db	53	;'5'
  1000  007E97  35                 	db	53	;'5'
  1001  007E98  35                 	db	53	;'5'
  1002  007E99  35                 	db	53	;'5'
  1003  007E9A  35                 	db	53	;'5'
  1004  007E9B  35                 	db	53	;'5'
  1005  007E9C  35                 	db	53	;'5'
  1006  007E9D  00                 	db	0
  1007  007E9E                     STR_17:
  1008  007E9E  66                 	db	102	;'f'
  1009  007E9F  72                 	db	114	;'r'
  1010  007EA0  61                 	db	97	;'a'
  1011  007EA1  6D                 	db	109	;'m'
  1012  007EA2  65                 	db	101	;'e'
  1013  007EA3  5F                 	db	95	;'_'
  1014  007EA4  63                 	db	99	;'c'
  1015  007EA5  6F                 	db	111	;'o'
  1016  007EA6  75                 	db	117	;'u'
  1017  007EA7  6E                 	db	110	;'n'
  1018  007EA8  74                 	db	116	;'t'
  1019  007EA9  65                 	db	101	;'e'
  1020  007EAA  72                 	db	114	;'r'
  1021  007EAB  5F                 	db	95	;'_'
  1022  007EAC  65                 	db	101	;'e'
  1023  007EAD  72                 	db	114	;'r'
  1024  007EAE  72                 	db	114	;'r'
  1025  007EAF  5F                 	db	95	;'_'
  1026  007EB0  72                 	db	114	;'r'
  1027  007EB1  65                 	db	101	;'e'
  1028  007EB2  6A                 	db	106	;'j'
  1029  007EB3  6F                 	db	111	;'o'
  1030  007EB4  69                 	db	105	;'i'
  1031  007EB5  6E                 	db	110	;'n'
  1032  007EB6  5F                 	db	95	;'_'
  1033  007EB7  6E                 	db	110	;'n'
  1034  007EB8  65                 	db	101	;'e'
  1035  007EB9  65                 	db	101	;'e'
  1036  007EBA  64                 	db	100	;'d'
  1037  007EBB  65                 	db	101	;'e'
  1038  007EBC  64                 	db	100	;'d'
  1039  007EBD  00                 	db	0
  1040  007EBE  25                 	db	37
  1041  007EBF  73                 	db	115	;'s'
  1042  007EC0  3A                 	db	58	;':'
  1043  007EC1  25                 	db	37
  1044  007EC2  6C                 	db	108	;'l'
  1045  007EC3  75                 	db	117	;'u'
  1046  007EC4  3B                 	db	59	;';'
  1047  007EC5  25                 	db	37
  1048  007EC6  6C                 	db	108	;'l'
  1049  007EC7  75                 	db	117	;'u'
  1050  007EC8  3B                 	db	59	;';'
  1051  007EC9  25                 	db	37
  1052  007ECA  6C                 	db	108	;'l'
  1053  007ECB  75                 	db	117	;'u'
  1054  007ECC  3B                 	db	59	;';'
  1055  007ECD  25                 	db	37
  1056  007ECE  6C                 	db	108	;'l'
  1057  007ECF  75                 	db	117	;'u'
  1058  007ED0  23                 	db	35
  1059  007ED1  00                 	db	0
  1060  007ED2                     STR_43:
  1061  007ED2  30                 	db	48	;'0'
  1062  007ED3  31                 	db	49	;'1'
  1063  007ED4  32                 	db	50	;'2'
  1064  007ED5  33                 	db	51	;'3'
  1065  007ED6  34                 	db	52	;'4'
  1066  007ED7  35                 	db	53	;'5'
  1067  007ED8  36                 	db	54	;'6'
  1068  007ED9  37                 	db	55	;'7'
  1069  007EDA  38                 	db	56	;'8'
  1070  007EDB  39                 	db	57	;'9'
  1071  007EDC  41                 	db	65	;'A'
  1072  007EDD  42                 	db	66	;'B'
  1073  007EDE  43                 	db	67	;'C'
  1074  007EDF  44                 	db	68	;'D'
  1075  007EE0  45                 	db	69	;'E'
  1076  007EE1  46                 	db	70	;'F'
  1077  007EE2  00                 	db	0
  1078  007EE3                     STR_20:
  1079  007EE3  69                 	db	105	;'i'
  1080  007EE4  6E                 	db	110	;'n'
  1081  007EE5  76                 	db	118	;'v'
  1082  007EE6  61                 	db	97	;'a'
  1083  007EE7  6C                 	db	108	;'l'
  1084  007EE8  69                 	db	105	;'i'
  1085  007EE9  64                 	db	100	;'d'
  1086  007EEA  5F                 	db	95	;'_'
  1087  007EEB  64                 	db	100	;'d'
  1088  007EEC  61                 	db	97	;'a'
  1089  007EED  74                 	db	116	;'t'
  1090  007EEE  61                 	db	97	;'a'
  1091  007EEF  5F                 	db	95	;'_'
  1092  007EF0  6C                 	db	108	;'l'
  1093  007EF1  65                 	db	101	;'e'
  1094  007EF2  6E                 	db	110	;'n'
  1095  007EF3  00                 	db	0
  1096  007EF4  3C                 	db	60	;'<'
  1097  007EF5  3D                 	db	61	;'='
  1098  007EF6  3E                 	db	62	;'>'
  1099  007EF7  80                 	db	-128
  1100  007EF8  4E                 	db	78	;'N'
  1101  007EF9  23                 	db	35
  1102  007EFA  25                 	db	37
  1103  007EFB  6C                 	db	108	;'l'
  1104  007EFC  64                 	db	100	;'d'
  1105  007EFD  23                 	db	35
  1106  007EFE  25                 	db	37
  1107  007EFF  73                 	db	115	;'s'
  1108  007F00  23                 	db	35
  1109  007F01  25                 	db	37
  1110  007F02  75                 	db	117	;'u'
  1111  007F03  23                 	db	35
  1112  007F04  00                 	db	0
  1113  007F05                     STR_2:
  1114  007F05  30                 	db	48	;'0'
  1115  007F06  30                 	db	48	;'0'
  1116  007F07  30                 	db	48	;'0'
  1117  007F08  30                 	db	48	;'0'
  1118  007F09  30                 	db	48	;'0'
  1119  007F0A  30                 	db	48	;'0'
  1120  007F0B  30                 	db	48	;'0'
  1121  007F0C  30                 	db	48	;'0'
  1122  007F0D  30                 	db	48	;'0'
  1123  007F0E  30                 	db	48	;'0'
  1124  007F0F  30                 	db	48	;'0'
  1125  007F10  30                 	db	48	;'0'
  1126  007F11  30                 	db	48	;'0'
  1127  007F12  30                 	db	48	;'0'
  1128  007F13  30                 	db	48	;'0'
  1129  007F14  30                 	db	48	;'0'
  1130  007F15  00                 	db	0
  1131  007F16                     STR_1:
  1132  007F16  30                 	db	48	;'0'
  1133  007F17  30                 	db	48	;'0'
  1134  007F18  30                 	db	48	;'0'
  1135  007F19  34                 	db	52	;'4'
  1136  007F1A  61                 	db	97	;'a'
  1137  007F1B  33                 	db	51	;'3'
  1138  007F1C  30                 	db	48	;'0'
  1139  007F1D  62                 	db	98	;'b'
  1140  007F1E  30                 	db	48	;'0'
  1141  007F1F  30                 	db	48	;'0'
  1142  007F20  31                 	db	49	;'1'
  1143  007F21  62                 	db	98	;'b'
  1144  007F22  37                 	db	55	;'7'
  1145  007F23  34                 	db	52	;'4'
  1146  007F24  37                 	db	55	;'7'
  1147  007F25  36                 	db	54	;'6'
  1148  007F26  00                 	db	0
  1149  007F27                     STR_26:
  1150  007F27  61                 	db	97	;'a'
  1151  007F28  63                 	db	99	;'c'
  1152  007F29  63                 	db	99	;'c'
  1153  007F2A  65                 	db	101	;'e'
  1154  007F2B  70                 	db	112	;'p'
  1155  007F2C  74                 	db	116	;'t'
  1156  007F2D  65                 	db	101	;'e'
  1157  007F2E  64                 	db	100	;'d'
  1158  007F2F  52                 	db	82	;'R'
  1159  007F30  4E                 	db	78	;'N'
  1160  007F31  32                 	db	50	;'2'
  1161  007F32  39                 	db	57	;'9'
  1162  007F33  30                 	db	48	;'0'
  1163  007F34  33                 	db	51	;'3'
  1164  007F35  20                 	db	32
  1165  007F36  00                 	db	0
  1166  007F37                     STR_13:
  1167  007F37  69                 	db	105	;'i'
  1168  007F38  6E                 	db	110	;'n'
  1169  007F39  76                 	db	118	;'v'
  1170  007F3A  61                 	db	97	;'a'
  1171  007F3B  6C                 	db	108	;'l'
  1172  007F3C  69                 	db	105	;'i'
  1173  007F3D  64                 	db	100	;'d'
  1174  007F3E  5F                 	db	95	;'_'
  1175  007F3F  70                 	db	112	;'p'
  1176  007F40  61                 	db	97	;'a'
  1177  007F41  72                 	db	114	;'r'
  1178  007F42  61                 	db	97	;'a'
  1179  007F43  6D                 	db	109	;'m'
  1180  007F44  00                 	db	0
  1181  007F45                     STR_24:
  1182  007F45  6B                 	db	107	;'k'
  1183  007F46  65                 	db	101	;'e'
  1184  007F47  79                 	db	121	;'y'
  1185  007F48  73                 	db	115	;'s'
  1186  007F49  5F                 	db	95	;'_'
  1187  007F4A  6E                 	db	110	;'n'
  1188  007F4B  6F                 	db	111	;'o'
  1189  007F4C  74                 	db	116	;'t'
  1190  007F4D  5F                 	db	95	;'_'
  1191  007F4E  69                 	db	105	;'i'
  1192  007F4F  6E                 	db	110	;'n'
  1193  007F50  69                 	db	105	;'i'
  1194  007F51  74                 	db	116	;'t'
  1195  007F52  00                 	db	0
  1196  007F53                     STR_14:
  1197  007F53  6E                 	db	110	;'n'
  1198  007F54  6F                 	db	111	;'o'
  1199  007F55  74                 	db	116	;'t'
  1200  007F56  5F                 	db	95	;'_'
  1201  007F57  6A                 	db	106	;'j'
  1202  007F58  6F                 	db	111	;'o'
  1203  007F59  69                 	db	105	;'i'
  1204  007F5A  6E                 	db	110	;'n'
  1205  007F5B  65                 	db	101	;'e'
  1206  007F5C  64                 	db	100	;'d'
  1207  007F5D  00                 	db	0
  1208  007F5E                     STR_19:
  1209  007F5E  6D                 	db	109	;'m'
  1210  007F5F  61                 	db	97	;'a'
  1211  007F60  63                 	db	99	;'c'
  1212  007F61  5F                 	db	95	;'_'
  1213  007F62  70                 	db	112	;'p'
  1214  007F63  61                 	db	97	;'a'
  1215  007F64  75                 	db	117	;'u'
  1216  007F65  73                 	db	115	;'s'
  1217  007F66  65                 	db	101	;'e'
  1218  007F67  64                 	db	100	;'d'
  1219  007F68  00                 	db	0
  1220  007F69                     STR_15:
  1221  007F69  6E                 	db	110	;'n'
  1222  007F6A  6F                 	db	111	;'o'
  1223  007F6B  5F                 	db	95	;'_'
  1224  007F6C  66                 	db	102	;'f'
  1225  007F6D  72                 	db	114	;'r'
  1226  007F6E  65                 	db	101	;'e'
  1227  007F6F  65                 	db	101	;'e'
  1228  007F70  5F                 	db	95	;'_'
  1229  007F71  63                 	db	99	;'c'
  1230  007F72  68                 	db	104	;'h'
  1231  007F73  00                 	db	0
  1232  007F74                     STR_32:
  1233  007F74  25                 	db	37
  1234  007F75  73                 	db	115	;'s'
  1235  007F76  20                 	db	32
  1236  007F77  25                 	db	37
  1237  007F78  64                 	db	100	;'d'
  1238  007F79  20                 	db	32
  1239  007F7A  6F                 	db	111	;'o'
  1240  007F7B  66                 	db	102	;'f'
  1241  007F7C  66                 	db	102	;'f'
  1242  007F7D  00                 	db	0
  1243  007F7E                     STR_21:
  1244  007F7E  6D                 	db	109	;'m'
  1245  007F7F  61                 	db	97	;'a'
  1246  007F80  63                 	db	99	;'c'
  1247  007F81  5F                 	db	95	;'_'
  1248  007F82  74                 	db	116	;'t'
  1249  007F83  78                 	db	120	;'x'
  1250  007F84  5F                 	db	95	;'_'
  1251  007F85  6F                 	db	111	;'o'
  1252  007F86  6B                 	db	107	;'k'
  1253  007F87  00                 	db	0
  1254  007F88  25                 	db	37
  1255  007F89  73                 	db	115	;'s'
  1256  007F8A  3A                 	db	58	;':'
  1257  007F8B  25                 	db	37
  1258  007F8C  75                 	db	117	;'u'
  1259  007F8D  3B                 	db	59	;';'
  1260  007F8E  25                 	db	37
  1261  007F8F  75                 	db	117	;'u'
  1262  007F90  23                 	db	35
  1263  007F91  00                 	db	0
  1264  007F92                     STR_31:
  1265  007F92  25                 	db	37
  1266  007F93  73                 	db	115	;'s'
  1267  007F94  20                 	db	32
  1268  007F95  25                 	db	37
  1269  007F96  64                 	db	100	;'d'
  1270  007F97  20                 	db	32
  1271  007F98  6F                 	db	111	;'o'
  1272  007F99  6E                 	db	110	;'n'
  1273  007F9A  00                 	db	0
  1274  007F9B                     STR_22:
  1275  007F9B  6D                 	db	109	;'m'
  1276  007F9C  61                 	db	97	;'a'
  1277  007F9D  63                 	db	99	;'c'
  1278  007F9E  5F                 	db	95	;'_'
  1279  007F9F  72                 	db	114	;'r'
  1280  007FA0  78                 	db	120	;'x'
  1281  007FA1  20                 	db	32
  1282  007FA2  00                 	db	0
  1283  007FA3                     STR_23:
  1284  007FA3  6D                 	db	109	;'m'
  1285  007FA4  61                 	db	97	;'a'
  1286  007FA5  63                 	db	99	;'c'
  1287  007FA6  5F                 	db	95	;'_'
  1288  007FA7  65                 	db	101	;'e'
  1289  007FA8  72                 	db	114	;'r'
  1290  007FA9  72                 	db	114	;'r'
  1291  007FAA  00                 	db	0
  1292  007FAB  25                 	db	37
  1293  007FAC  73                 	db	115	;'s'
  1294  007FAD  3A                 	db	58	;':'
  1295  007FAE  25                 	db	37
  1296  007FAF  6C                 	db	108	;'l'
  1297  007FB0  75                 	db	117	;'u'
  1298  007FB1  23                 	db	35
  1299  007FB2  00                 	db	0
  1300  007FB3                     STR_42:
  1301  007FB3  28                 	db	40
  1302  007FB4  6E                 	db	110	;'n'
  1303  007FB5  75                 	db	117	;'u'
  1304  007FB6  6C                 	db	108	;'l'
  1305  007FB7  6C                 	db	108	;'l'
  1306  007FB8  29                 	db	41
  1307  007FB9  00                 	db	0
  1308  007FBA                     STR_39:
  1309  007FBA  25                 	db	37
  1310  007FBB  73                 	db	115	;'s'
  1311  007FBC  20                 	db	32
  1312  007FBD  25                 	db	37
  1313  007FBE  64                 	db	100	;'d'
  1314  007FBF  20                 	db	32
  1315  007FC0  00                 	db	0
  1316  007FC1                     STR_25:
  1317  007FC1  64                 	db	100	;'d'
  1318  007FC2  65                 	db	101	;'e'
  1319  007FC3  6E                 	db	110	;'n'
  1320  007FC4  69                 	db	105	;'i'
  1321  007FC5  65                 	db	101	;'e'
  1322  007FC6  64                 	db	100	;'d'
  1323  007FC7  00                 	db	0
  1324  007FC8                     STR_16:
  1325  007FC8  73                 	db	115	;'s'
  1326  007FC9  69                 	db	105	;'i'
  1327  007FCA  6C                 	db	108	;'l'
  1328  007FCB  65                 	db	101	;'e'
  1329  007FCC  6E                 	db	110	;'n'
  1330  007FCD  74                 	db	116	;'t'
  1331  007FCE  00                 	db	0
  1332  007FCF  25                 	db	37
  1333  007FD0  73                 	db	115	;'s'
  1334  007FD1  3A                 	db	58	;':'
  1335  007FD2  25                 	db	37
  1336  007FD3  64                 	db	100	;'d'
  1337  007FD4  23                 	db	35
  1338  007FD5  00                 	db	0
  1339  007FD6  25                 	db	37
  1340  007FD7  73                 	db	115	;'s'
  1341  007FD8  3A                 	db	58	;':'
  1342  007FD9  25                 	db	37
  1343  007FDA  66                 	db	102	;'f'
  1344  007FDB  23                 	db	35
  1345  007FDC  00                 	db	0
  1346  007FDD  25                 	db	37
  1347  007FDE  73                 	db	115	;'s'
  1348  007FDF  3A                 	db	58	;':'
  1349  007FE0  25                 	db	37
  1350  007FE1  73                 	db	115	;'s'
  1351  007FE2  23                 	db	35
  1352  007FE3  00                 	db	0
  1353  007FE4                     STR_37:
  1354  007FE4  25                 	db	37
  1355  007FE5  73                 	db	115	;'s'
  1356  007FE6  20                 	db	32
  1357  007FE7  25                 	db	37
  1358  007FE8  64                 	db	100	;'d'
  1359  007FE9  00                 	db	0
  1360  007FEA                     STR_28:
  1361  007FEA  25                 	db	37
  1362  007FEB  73                 	db	115	;'s'
  1363  007FEC  20                 	db	32
  1364  007FED  25                 	db	37
  1365  007FEE  73                 	db	115	;'s'
  1366  007FEF  00                 	db	0
  1367  007FF0                     STR_41:
  1368  007FF0  25                 	db	37
  1369  007FF1  30                 	db	48	;'0'
  1370  007FF2  32                 	db	50	;'2'
  1371  007FF3  58                 	db	88	;'X'
  1372  007FF4  00                 	db	0
  1373  007FF5                     STR_36:
  1374  007FF5  25                 	db	37
  1375  007FF6  73                 	db	115	;'s'
  1376  007FF7  25                 	db	37
  1377  007FF8  64                 	db	100	;'d'
  1378  007FF9  00                 	db	0
  1379  007FFA                     STR_18:
  1380  007FFA  62                 	db	98	;'b'
  1381  007FFB  75                 	db	117	;'u'
  1382  007FFC  73                 	db	115	;'s'
  1383  007FFD  79                 	db	121	;'y'
  1384  007FFE  00                 	db	0
  1385  0000                     
  1386                           ; #config settings
  1387  007FFF  00                 	db	0	; dummy byte at the end
  1388  0000                     
  1389                           	psect	cinit
  1390  0044B2                     __pcinit:
  1391                           	opt stack 0
  1392  0044B2                     start_initialization:
  1393                           	opt stack 0
  1394  0044B2                     __initialization:
  1395                           	opt stack 0
  1396                           
  1397                           ; Initialize objects allocated to BANK3 (34 bytes)
  1398                           ; load TBLPTR registers with __pidataBANK3
  1399  0044B2  0EB4               	movlw	low __pidataBANK3
  1400  0044B4  6EF6               	movwf	tblptrl,c
  1401  0044B6  0E54               	movlw	high __pidataBANK3
  1402  0044B8  6EF7               	movwf	tblptrh,c
  1403  0044BA  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1404  0044BC  6EF8               	movwf	tblptru,c
  1405  0044BE  EE03  F0C5         	lfsr	0,__pdataBANK3
  1406  0044C2  EE10 F022          	lfsr	1,34
  1407  0044C6                     copy_data0:
  1408  0044C6  0009               	tblrd		*+
  1409  0044C8  CFF5 FFEE          	movff	tablat,postinc0
  1410  0044CC  50E5               	movf	postdec1,w,c
  1411  0044CE  50E1               	movf	fsr1l,w,c
  1412  0044D0  E1FA               	bnz	copy_data0
  1413                           
  1414                           ; Clear objects allocated to BANK7 (250 bytes)
  1415  0044D2  EE07  F000         	lfsr	0,__pbssBANK7
  1416  0044D6  0EFA               	movlw	250
  1417  0044D8                     clear_0:
  1418  0044D8  6AEE               	clrf	postinc0,c
  1419  0044DA  06E8               	decf	wreg,f,c
  1420  0044DC  E1FD               	bnz	clear_0
  1421                           
  1422                           ; Clear objects allocated to BANK6 (250 bytes)
  1423  0044DE  EE06  F000         	lfsr	0,__pbssBANK6
  1424  0044E2  0EFA               	movlw	250
  1425  0044E4                     clear_1:
  1426  0044E4  6AEE               	clrf	postinc0,c
  1427  0044E6  06E8               	decf	wreg,f,c
  1428  0044E8  E1FD               	bnz	clear_1
  1429                           
  1430                           ; Clear objects allocated to BANK3 (197 bytes)
  1431  0044EA  EE03  F000         	lfsr	0,__pbssBANK3
  1432  0044EE  0EC5               	movlw	197
  1433  0044F0                     clear_2:
  1434  0044F0  6AEE               	clrf	postinc0,c
  1435  0044F2  06E8               	decf	wreg,f,c
  1436  0044F4  E1FD               	bnz	clear_2
  1437                           
  1438                           ; Clear objects allocated to BANK2 (55 bytes)
  1439  0044F6  EE02  F0C8         	lfsr	0,__pbssBANK2
  1440  0044FA  0E37               	movlw	55
  1441  0044FC                     clear_3:
  1442  0044FC  6AEE               	clrf	postinc0,c
  1443  0044FE  06E8               	decf	wreg,f,c
  1444  004500  E1FD               	bnz	clear_3
  1445                           
  1446                           ; Clear objects allocated to BANK1 (9 bytes)
  1447  004502  EE01  F0F7         	lfsr	0,__pbssBANK1
  1448  004506  0E09               	movlw	9
  1449  004508                     clear_4:
  1450  004508  6AEE               	clrf	postinc0,c
  1451  00450A  06E8               	decf	wreg,f,c
  1452  00450C  E1FD               	bnz	clear_4
  1453                           
  1454                           ; Clear objects allocated to BANK4 (100 bytes)
  1455  00450E  EE04  F040         	lfsr	0,__pbssBANK4
  1456  004512  0E64               	movlw	100
  1457  004514                     clear_5:
  1458  004514  6AEE               	clrf	postinc0,c
  1459  004516  06E8               	decf	wreg,f,c
  1460  004518  E1FD               	bnz	clear_5
  1461                           
  1462                           ; Clear objects allocated to BANK0 (7 bytes)
  1463  00451A  EE00  F0F9         	lfsr	0,__pbssBANK0
  1464  00451E  0E07               	movlw	7
  1465  004520                     clear_6:
  1466  004520  6AEE               	clrf	postinc0,c
  1467  004522  06E8               	decf	wreg,f,c
  1468  004524  E1FD               	bnz	clear_6
  1469                           
  1470                           ; Clear objects allocated to BANK5 (100 bytes)
  1471  004526  EE05  F080         	lfsr	0,__pbssBANK5
  1472  00452A  0E64               	movlw	100
  1473  00452C                     clear_7:
  1474  00452C  6AEE               	clrf	postinc0,c
  1475  00452E  06E8               	decf	wreg,f,c
  1476  004530  E1FD               	bnz	clear_7
  1477                           
  1478                           ; Clear objects allocated to COMRAM (39 bytes)
  1479  004532  EE00  F038         	lfsr	0,__pbssCOMRAM
  1480  004536  0E27               	movlw	39
  1481  004538                     clear_8:
  1482  004538  6AEE               	clrf	postinc0,c
  1483  00453A  06E8               	decf	wreg,f,c
  1484  00453C  E1FD               	bnz	clear_8
  1485  00453E                     end_of_initialization:
  1486                           	opt stack 0
  1487  00453E                     __end_of__initialization:
  1488                           	opt stack 0
  1489  00453E  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1490  004540  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1491  004542  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1492  004544  6EF8               	movwf	tblptru,c
  1493  004546  0100               	movlb	0
  1494  004548  EF5B  F006         	goto	_main	;jump to C main() function
  1495                           tblptru	equ	0xFF8
  1496                           tblptrh	equ	0xFF7
  1497                           tblptrl	equ	0xFF6
  1498                           tablat	equ	0xFF5
  1499                           postinc0	equ	0xFEE
  1500                           wreg	equ	0xFE8
  1501                           postdec1	equ	0xFE5
  1502                           fsr1l	equ	0xFE1
  1503                           
  1504                           	psect	bssCOMRAM
  1505  000038                     __pbssCOMRAM:
  1506                           	opt stack 0
  1507  000038                     _outPipes:
  1508                           	opt stack 0
  1509  000038                     	ds	8
  1510  000040                     _pBDTEntryIn:
  1511                           	opt stack 0
  1512  000040                     	ds	6
  1513  000046                     recebeByte@sizeData:
  1514                           	opt stack 0
  1515  000046                     	ds	2
  1516  000048                     recebeByte@tamanhoMensagem:
  1517                           	opt stack 0
  1518  000048                     	ds	2
  1519  00004A                     _CDCDataOutHandle:
  1520                           	opt stack 0
  1521  00004A                     	ds	2
  1522  00004C                     _pBDTEntryEP0OutNext:
  1523                           	opt stack 0
  1524  00004C                     	ds	2
  1525  00004E                     _pBDTEntryEP0OutCurrent:
  1526                           	opt stack 0
  1527  00004E                     	ds	2
  1528  000050                     recebeByte@escapeCaracter:
  1529                           	opt stack 0
  1530  000050                     	ds	1
  1531  000051                     _cdc_tx_len:
  1532                           	opt stack 0
  1533  000051                     	ds	1
  1534  000052                     _cdc_rx_len:
  1535                           	opt stack 0
  1536  000052                     	ds	1
  1537  000053                     _USBDeferStatusStagePacket:
  1538                           	opt stack 0
  1539  000053                     	ds	1
  1540  000054                     _USBStatusStageTimeoutCounter:
  1541                           	opt stack 0
  1542  000054                     	ds	1
  1543  000055                     _endpoint_number:
  1544                           	opt stack 0
  1545  000055                     	ds	1
  1546  000056                     _controlTransferState:
  1547                           	opt stack 0
  1548  000056                     	ds	1
  1549  000057                     _shortPacketStatus:
  1550                           	opt stack 0
  1551  000057                     	ds	1
  1552  000058                     _USBDeviceState:
  1553                           	opt stack 0
  1554  000058                     	ds	1
  1555  000059                     _novaMsgLoRaWan:
  1556                           	opt stack 0
  1557  000059                     	ds	1
  1558  00005A                     _tamFrame:
  1559                           	opt stack 0
  1560  00005A                     	ds	1
  1561  00005B                     _tamDadosRecebidos:
  1562                           	opt stack 0
  1563  00005B                     	ds	1
  1564  00005C                     _error_TX:
  1565                           	opt stack 0
  1566  00005C                     	ds	1
  1567  00005D                     _USTATcopy:
  1568                           	opt stack 0
  1569  00005D                     	ds	1
  1570  00005E                     _USBActiveConfiguration:
  1571                           	opt stack 0
  1572  00005E                     	ds	1
  1573                           tblptru	equ	0xFF8
  1574                           tblptrh	equ	0xFF7
  1575                           tblptrl	equ	0xFF6
  1576                           tablat	equ	0xFF5
  1577                           postinc0	equ	0xFEE
  1578                           wreg	equ	0xFE8
  1579                           postdec1	equ	0xFE5
  1580                           fsr1l	equ	0xFE1
  1581                           
  1582                           	psect	bssBANK0
  1583  0000F9                     __pbssBANK0:
  1584                           	opt stack 0
  1585  0000F9                     _inPipes:
  1586                           	opt stack 0
  1587  0000F9                     	ds	6
  1588  0000FF                     _cdc_trf_state:
  1589                           	opt stack 0
  1590  0000FF                     	ds	1
  1591                           tblptru	equ	0xFF8
  1592                           tblptrh	equ	0xFF7
  1593                           tblptrl	equ	0xFF6
  1594                           tablat	equ	0xFF5
  1595                           postinc0	equ	0xFEE
  1596                           wreg	equ	0xFE8
  1597                           postdec1	equ	0xFE5
  1598                           fsr1l	equ	0xFE1
  1599                           
  1600                           	psect	bssBANK1
  1601  0001F7                     __pbssBANK1:
  1602                           	opt stack 0
  1603  0001F7                     _tamanhoCommand:
  1604                           	opt stack 0
  1605  0001F7                     	ds	2
  1606  0001F9                     _USBBusIsSuspended:
  1607                           	opt stack 0
  1608  0001F9                     	ds	1
  1609  0001FA                     _RemoteWakeup:
  1610                           	opt stack 0
  1611  0001FA                     	ds	1
  1612  0001FB                     _pulsos4:
  1613                           	opt stack 0
  1614  0001FB                     	ds	1
  1615  0001FC                     _pulsos3:
  1616                           	opt stack 0
  1617  0001FC                     	ds	1
  1618  0001FD                     _pulsos2:
  1619                           	opt stack 0
  1620  0001FD                     	ds	1
  1621  0001FE                     _pulsos1:
  1622                           	opt stack 0
  1623  0001FE                     	ds	1
  1624  0001FF                     _responseLoRaWan:
  1625                           	opt stack 0
  1626  0001FF                     	ds	1
  1627                           tblptru	equ	0xFF8
  1628                           tblptrh	equ	0xFF7
  1629                           tblptrl	equ	0xFF6
  1630                           tablat	equ	0xFF5
  1631                           postinc0	equ	0xFEE
  1632                           wreg	equ	0xFE8
  1633                           postdec1	equ	0xFE5
  1634                           fsr1l	equ	0xFE1
  1635                           
  1636                           	psect	bssBANK2
  1637  0002C8                     __pbssBANK2:
  1638                           	opt stack 0
  1639  0002C8                     _pBDTEntryOut:
  1640                           	opt stack 0
  1641  0002C8                     	ds	6
  1642  0002CE                     _USB1msTickCount:
  1643                           	opt stack 0
  1644  0002CE                     	ds	4
  1645  0002D2                     _ep_data_out:
  1646                           	opt stack 0
  1647  0002D2                     	ds	3
  1648  0002D5                     _ep_data_in:
  1649                           	opt stack 0
  1650  0002D5                     	ds	3
  1651  0002D8                     _CDCDataInHandle:
  1652                           	opt stack 0
  1653  0002D8                     	ds	2
  1654  0002DA                     _dig_3:
  1655                           	opt stack 0
  1656  0002DA                     	ds	2
  1657  0002DC                     _dig_2:
  1658                           	opt stack 0
  1659  0002DC                     	ds	2
  1660  0002DE                     _dig_1:
  1661                           	opt stack 0
  1662  0002DE                     	ds	2
  1663  0002E0                     _cs:
  1664                           	opt stack 0
  1665  0002E0                     	ds	1
  1666  0002E1                     recebeByte@checksumRecebimento:
  1667                           	opt stack 0
  1668  0002E1                     	ds	1
  1669  0002E2                     recebeByte@estadoRecepcao:
  1670                           	opt stack 0
  1671  0002E2                     	ds	1
  1672  0002E3                     _control_signal_bitmap:
  1673                           	opt stack 0
  1674  0002E3                     	ds	1
  1675  0002E4                     _cdc_mem_type:
  1676                           	opt stack 0
  1677  0002E4                     	ds	1
  1678  0002E5                     _USBTicksSinceSuspendEnd:
  1679                           	opt stack 0
  1680  0002E5                     	ds	1
  1681  0002E6                     _USBDeferOUTDataStagePackets:
  1682                           	opt stack 0
  1683  0002E6                     	ds	1
  1684  0002E7                     _USBDeferINDataStagePackets:
  1685                           	opt stack 0
  1686  0002E7                     	ds	1
  1687  0002E8                     _USBStatusStageEnabledFlag2:
  1688                           	opt stack 0
  1689  0002E8                     	ds	1
  1690  0002E9                     _USBStatusStageEnabledFlag1:
  1691                           	opt stack 0
  1692  0002E9                     	ds	1
  1693  0002EA                     _BothEP0OutUOWNsSet:
  1694                           	opt stack 0
  1695  0002EA                     	ds	1
  1696  0002EB                     _Sequence:
  1697                           	opt stack 0
  1698  0002EB                     	ds	1
  1699  0002EC                     _nivel2:
  1700                           	opt stack 0
  1701  0002EC                     	ds	1
  1702  0002ED                     _nivel1:
  1703                           	opt stack 0
  1704  0002ED                     	ds	1
  1705  0002EE                     _teste1:
  1706                           	opt stack 0
  1707  0002EE                     	ds	1
  1708  0002EF                     _teste0:
  1709                           	opt stack 0
  1710  0002EF                     	ds	1
  1711  0002F0                     _feedback2:
  1712                           	opt stack 0
  1713  0002F0                     	ds	1
  1714  0002F1                     _feedback1:
  1715                           	opt stack 0
  1716  0002F1                     	ds	1
  1717  0002F2                     _aaa:
  1718                           	opt stack 0
  1719  0002F2                     	ds	1
  1720  0002F3                     _encryptMode:
  1721                           	opt stack 0
  1722  0002F3                     	ds	1
  1723  0002F4                     _retries_sending:
  1724                           	opt stack 0
  1725  0002F4                     	ds	1
  1726  0002F5                     _discovery_status:
  1727                           	opt stack 0
  1728  0002F5                     	ds	1
  1729  0002F6                     _delivery_status:
  1730                           	opt stack 0
  1731  0002F6                     	ds	1
  1732  0002F7                     __send_retries:
  1733                           	opt stack 0
  1734  0002F7                     	ds	1
  1735  0002F8                     _channel:
  1736                           	opt stack 0
  1737  0002F8                     	ds	1
  1738  0002F9                     _error_RX:
  1739                           	opt stack 0
  1740  0002F9                     	ds	1
  1741  0002FA                     _protocol:
  1742                           	opt stack 0
  1743  0002FA                     	ds	1
  1744  0002FB                     _error_AT:
  1745                           	opt stack 0
  1746  0002FB                     	ds	1
  1747  0002FC                     __preambleID:
  1748                           	opt stack 0
  1749  0002FC                     	ds	1
  1750  0002FD                     _USBAlternateInterface:
  1751                           	opt stack 0
  1752  0002FD                     	ds	2
  1753                           tblptru	equ	0xFF8
  1754                           tblptrh	equ	0xFF7
  1755                           tblptrl	equ	0xFF6
  1756                           tablat	equ	0xFF5
  1757                           postinc0	equ	0xFEE
  1758                           wreg	equ	0xFE8
  1759                           postdec1	equ	0xFE5
  1760                           fsr1l	equ	0xFE1
  1761                           
  1762                           	psect	bssBANK3
  1763  000300                     __pbssBANK3:
  1764                           	opt stack 0
  1765  000300                     _dadosRecebidos:
  1766                           	opt stack 0
  1767  000300                     	ds	20
  1768  000314                     _cdc_notice:
  1769                           	opt stack 0
  1770  000314                     	ds	10
  1771  00031E                     __channelMask:
  1772                           	opt stack 0
  1773  00031E                     	ds	8
  1774  000326                     _BaudRateGen:
  1775                           	opt stack 0
  1776  000326                     	ds	4
  1777  00032A                     _ticks:
  1778                           	opt stack 0
  1779  00032A                     	ds	4
  1780  00032E                     _freqPulses4:
  1781                           	opt stack 0
  1782  00032E                     	ds	4
  1783  000332                     _freqPulses3:
  1784                           	opt stack 0
  1785  000332                     	ds	4
  1786  000336                     _freqPulses2:
  1787                           	opt stack 0
  1788  000336                     	ds	4
  1789  00033A                     _freqPulses1:
  1790                           	opt stack 0
  1791  00033A                     	ds	4
  1792  00033E                     _sourceMacHigh:
  1793                           	opt stack 0
  1794  00033E                     	ds	4
  1795  000342                     _sourceMacLow:
  1796                           	opt stack 0
  1797  000342                     	ds	4
  1798  000346                     _pCDCDst:
  1799                           	opt stack 0
  1800  000346                     	ds	3
  1801  000349                     _pCDCSrc:
  1802                           	opt stack 0
  1803  000349                     	ds	3
  1804  00034C                     _pDst:
  1805                           	opt stack 0
  1806  00034C                     	ds	2
  1807  00034E                     _dig_4:
  1808                           	opt stack 0
  1809  00034E                     	ds	2
  1810  000350                     _PAN_ID:
  1811                           	opt stack 0
  1812  000350                     	ds	2
  1813  000352                     _response:
  1814                           	opt stack 0
  1815  000352                     	ds	100
  1816  0003B6                     _dummy_encapsulated_cmd_response:
  1817                           	opt stack 0
  1818  0003B6                     	ds	8
  1819  0003BE                     _line_coding:
  1820                           	opt stack 0
  1821  0003BE                     	ds	7
  1822                           tblptru	equ	0xFF8
  1823                           tblptrh	equ	0xFF7
  1824                           tblptrl	equ	0xFF6
  1825                           tablat	equ	0xFF5
  1826                           postinc0	equ	0xFEE
  1827                           wreg	equ	0xFE8
  1828                           postdec1	equ	0xFE5
  1829                           fsr1l	equ	0xFE1
  1830                           
  1831                           	psect	dataBANK3
  1832  0003C5                     __pdataBANK3:
  1833                           	opt stack 0
  1834  0003C5                     _MSG_LORAWAN:
  1835                           	opt stack 0
  1836  0003C5                     	ds	30
  1837  0003E3                     _randx:
  1838                           	opt stack 0
  1839  0003E3                     	ds	4
  1840                           tblptru	equ	0xFF8
  1841                           tblptrh	equ	0xFF7
  1842                           tblptrl	equ	0xFF6
  1843                           tablat	equ	0xFF5
  1844                           postinc0	equ	0xFEE
  1845                           wreg	equ	0xFE8
  1846                           postdec1	equ	0xFE5
  1847                           fsr1l	equ	0xFE1
  1848                           
  1849                           	psect	bssBANK4
  1850  000440                     __pbssBANK4:
  1851                           	opt stack 0
  1852  000440                     recebeByteLoRaWan@frameData:
  1853                           	opt stack 0
  1854  000440                     	ds	100
  1855                           tblptru	equ	0xFF8
  1856                           tblptrh	equ	0xFF7
  1857                           tblptrl	equ	0xFF6
  1858                           tablat	equ	0xFF5
  1859                           postinc0	equ	0xFEE
  1860                           wreg	equ	0xFE8
  1861                           postdec1	equ	0xFE5
  1862                           fsr1l	equ	0xFE1
  1863                           
  1864                           	psect	bssBANK5
  1865  000580                     __pbssBANK5:
  1866                           	opt stack 0
  1867  000580                     _receivePacket:
  1868                           	opt stack 0
  1869  000580                     	ds	100
  1870                           tblptru	equ	0xFF8
  1871                           tblptrh	equ	0xFF7
  1872                           tblptrl	equ	0xFF6
  1873                           tablat	equ	0xFF5
  1874                           postinc0	equ	0xFEE
  1875                           wreg	equ	0xFE8
  1876                           postdec1	equ	0xFE5
  1877                           fsr1l	equ	0xFE1
  1878                           
  1879                           	psect	bssBANK6
  1880  000600                     __pbssBANK6:
  1881                           	opt stack 0
  1882  000600                     _data:
  1883                           	opt stack 0
  1884  000600                     	ds	100
  1885  000664                     _frameBuffer:
  1886                           	opt stack 0
  1887  000664                     	ds	150
  1888                           tblptru	equ	0xFF8
  1889                           tblptrh	equ	0xFF7
  1890                           tblptrl	equ	0xFF6
  1891                           tablat	equ	0xFF5
  1892                           postinc0	equ	0xFEE
  1893                           wreg	equ	0xFE8
  1894                           postdec1	equ	0xFE5
  1895                           fsr1l	equ	0xFE1
  1896                           
  1897                           	psect	bssBANK7
  1898  000700                     __pbssBANK7:
  1899                           	opt stack 0
  1900  000700                     _command:
  1901                           	opt stack 0
  1902  000700                     	ds	150
  1903  000796                     recebeByte@frameData:
  1904                           	opt stack 0
  1905  000796                     	ds	100
  1906                           tblptru	equ	0xFF8
  1907                           tblptrh	equ	0xFF7
  1908                           tblptrl	equ	0xFF6
  1909                           tablat	equ	0xFF5
  1910                           postinc0	equ	0xFEE
  1911                           wreg	equ	0xFE8
  1912                           postdec1	equ	0xFE5
  1913                           fsr1l	equ	0xFE1
  1914                           
  1915                           	psect	cstackBANK2
  1916  000200                     __pcstackBANK2:
  1917                           	opt stack 0
  1918  000200                     main@data:
  1919                           	opt stack 0
  1920                           
  1921                           ; 150 bytes @ 0x0
  1922  000200                     	ds	150
  1923  000296                     main@tempo:
  1924                           	opt stack 0
  1925                           
  1926                           ; 4 bytes @ 0x96
  1927  000296                     	ds	4
  1928  00029A                     main@tempoTimeOut:
  1929                           	opt stack 0
  1930                           
  1931                           ; 4 bytes @ 0x9A
  1932  00029A                     	ds	4
  1933  00029E                     main@Icanal:
  1934                           	opt stack 0
  1935                           
  1936                           ; 1 bytes @ 0x9E
  1937  00029E                     	ds	1
  1938  00029F                     main@sf:
  1939                           	opt stack 0
  1940                           
  1941                           ; 1 bytes @ 0x9F
  1942  00029F                     	ds	1
  1943  0002A0                     main@resp:
  1944                           	opt stack 0
  1945                           
  1946                           ; 1 bytes @ 0xA0
  1947  0002A0                     	ds	1
  1948  0002A1                     main@contador:
  1949                           	opt stack 0
  1950                           
  1951                           ; 1 bytes @ 0xA1
  1952  0002A1                     	ds	1
  1953  0002A2                     main@deltaTempo:
  1954                           	opt stack 0
  1955                           
  1956                           ; 4 bytes @ 0xA2
  1957  0002A2                     	ds	4
  1958  0002A6                     _main$5961:
  1959                           	opt stack 0
  1960                           
  1961                           ; 3 bytes @ 0xA6
  1962  0002A6                     	ds	3
  1963  0002A9                     main@i:
  1964                           	opt stack 0
  1965                           
  1966                           ; 2 bytes @ 0xA9
  1967  0002A9                     	ds	2
  1968  0002AB                     main@Fcanal:
  1969                           	opt stack 0
  1970                           
  1971                           ; 1 bytes @ 0xAB
  1972  0002AB                     	ds	1
  1973  0002AC                     main@i_3355:
  1974                           	opt stack 0
  1975                           
  1976                           ; 1 bytes @ 0xAC
  1977  0002AC                     	ds	1
  1978  0002AD                     main@i_3356:
  1979                           	opt stack 0
  1980                           
  1981                           ; 1 bytes @ 0xAD
  1982  0002AD                     	ds	1
  1983  0002AE                     main@dr:
  1984                           	opt stack 0
  1985                           
  1986                           ; 1 bytes @ 0xAE
  1987  0002AE                     	ds	1
  1988  0002AF                     main@pisca:
  1989                           	opt stack 0
  1990                           
  1991                           ; 1 bytes @ 0xAF
  1992  0002AF                     	ds	1
  1993  0002B0                     main@i_3335:
  1994                           	opt stack 0
  1995                           
  1996                           ; 1 bytes @ 0xB0
  1997  0002B0                     	ds	1
  1998  0002B1                     main@i_3336:
  1999                           	opt stack 0
  2000                           
  2001                           ; 1 bytes @ 0xB1
  2002  0002B1                     	ds	1
  2003  0002B2                     main@dadoPoco:
  2004                           	opt stack 0
  2005                           
  2006                           ; 22 bytes @ 0xB2
  2007  0002B2                     	ds	22
  2008                           tblptru	equ	0xFF8
  2009                           tblptrh	equ	0xFF7
  2010                           tblptrl	equ	0xFF6
  2011                           tablat	equ	0xFF5
  2012                           postinc0	equ	0xFEE
  2013                           wreg	equ	0xFE8
  2014                           postdec1	equ	0xFE5
  2015                           fsr1l	equ	0xFE1
  2016                           
  2017                           	psect	cstackBANK1
  2018  000100                     __pcstackBANK1:
  2019                           	opt stack 0
  2020  000100                     _sprintf$5966:
  2021                           	opt stack 0
  2022                           
  2023                           ; 3 bytes @ 0x0
  2024  000100                     	ds	3
  2025  000103                     sprintf@idx:
  2026                           	opt stack 0
  2027                           
  2028                           ; 1 bytes @ 0x3
  2029  000103                     	ds	1
  2030  000104                     sprintf@cp:
  2031                           	opt stack 0
  2032                           
  2033                           ; 2 bytes @ 0x4
  2034  000104                     	ds	2
  2035  000106                     sprintf@len:
  2036                           	opt stack 0
  2037                           
  2038                           ; 2 bytes @ 0x6
  2039  000106                     	ds	2
  2040  000108                     sprintf@ap:
  2041                           	opt stack 0
  2042                           
  2043                           ; 2 bytes @ 0x8
  2044  000108                     	ds	2
  2045  00010A                     sprintf@prec:
  2046                           	opt stack 0
  2047                           
  2048                           ; 2 bytes @ 0xA
  2049  00010A                     	ds	2
  2050  00010C                     sprintf@tmpval:
  2051                           	opt stack 0
  2052                           
  2053                           ; 4 bytes @ 0xC
  2054  00010C                     	ds	4
  2055  000110                     sprintf@exp:
  2056                           	opt stack 0
  2057                           
  2058                           ; 2 bytes @ 0x10
  2059  000110                     	ds	2
  2060  000112                     sprintf@val:
  2061                           	opt stack 0
  2062                           
  2063                           ; 4 bytes @ 0x12
  2064  000112                     	ds	4
  2065  000116                     sprintf@fval:
  2066                           	opt stack 0
  2067                           
  2068                           ; 3 bytes @ 0x16
  2069  000116                     	ds	3
  2070  000119                     sprintf@width:
  2071                           	opt stack 0
  2072                           
  2073                           ; 2 bytes @ 0x19
  2074  000119                     	ds	2
  2075  00011B                     sprintf@flag:
  2076                           	opt stack 0
  2077                           
  2078                           ; 2 bytes @ 0x1B
  2079  00011B                     	ds	2
  2080  00011D                     sprintf@c:
  2081                           	opt stack 0
  2082                           
  2083                           ; 1 bytes @ 0x1D
  2084  00011D                     	ds	1
  2085  00011E                     DataRate@status:
  2086                           	opt stack 0
  2087  00011E                     SetAdr@comando:
  2088                           	opt stack 0
  2089  00011E                     SetSpreadingFactor@comando:
  2090                           	opt stack 0
  2091  00011E                     SetBandWidth@comando:
  2092                           	opt stack 0
  2093  00011E                     SetChannelLoRaWan@comando:
  2094                           	opt stack 0
  2095  00011E                     SetDevEUI@comando:
  2096                           	opt stack 0
  2097  00011E                     SetAppEUI@comando:
  2098                           	opt stack 0
  2099  00011E                     SetAppKey@comando:
  2100                           	opt stack 0
  2101  00011E                     TxLoRaWan@comando:
  2102                           	opt stack 0
  2103                           
  2104                           ; 200 bytes @ 0x1E
  2105  00011E                     	ds	2
  2106  000120                     DataRate@comando:
  2107                           	opt stack 0
  2108                           
  2109                           ; 12 bytes @ 0x20
  2110  000120                     	ds	13
  2111  00012D                     SetAdr@status:
  2112                           	opt stack 0
  2113                           
  2114                           ; 1 bytes @ 0x2D
  2115  00012D                     	ds	5
  2116  000132                     SetSpreadingFactor@status:
  2117                           	opt stack 0
  2118  000132                     SetBandWidth@status:
  2119                           	opt stack 0
  2120                           
  2121                           ; 2 bytes @ 0x32
  2122  000132                     	ds	1
  2123  000133                     SetSpreadingFactor@sf:
  2124                           	opt stack 0
  2125                           
  2126                           ; 1 bytes @ 0x33
  2127  000133                     	ds	4
  2128  000137                     SetChannelLoRaWan@status:
  2129                           	opt stack 0
  2130                           
  2131                           ; 1 bytes @ 0x37
  2132  000137                     	ds	1
  2133  000138                     SetChannelLoRaWan@canal:
  2134                           	opt stack 0
  2135                           
  2136                           ; 1 bytes @ 0x38
  2137  000138                     	ds	6
  2138  00013E                     SetDevEUI@status:
  2139                           	opt stack 0
  2140  00013E                     SetAppEUI@status:
  2141                           	opt stack 0
  2142                           
  2143                           ; 1 bytes @ 0x3E
  2144  00013E                     	ds	18
  2145  000150                     SetAppKey@status:
  2146                           	opt stack 0
  2147                           
  2148                           ; 1 bytes @ 0x50
  2149  000150                     	ds	150
  2150  0001E6                     TxLoRaWan@conf:
  2151                           	opt stack 0
  2152                           
  2153                           ; 1 bytes @ 0xE6
  2154  0001E6                     	ds	1
  2155  0001E7                     TxLoRaWan@status:
  2156                           	opt stack 0
  2157                           
  2158                           ; 1 bytes @ 0xE7
  2159  0001E7                     	ds	1
  2160  0001E8                     TxLoRaWan@hex:
  2161                           	opt stack 0
  2162                           
  2163                           ; 4 bytes @ 0xE8
  2164  0001E8                     	ds	4
  2165  0001EC                     TxLoRaWan@i:
  2166                           	opt stack 0
  2167                           
  2168                           ; 1 bytes @ 0xEC
  2169  0001EC                     	ds	1
  2170  0001ED                     ??_main:
  2171                           
  2172                           ; 1 bytes @ 0xED
  2173  0001ED                     	ds	10
  2174                           tblptru	equ	0xFF8
  2175                           tblptrh	equ	0xFF7
  2176                           tblptrl	equ	0xFF6
  2177                           tablat	equ	0xFF5
  2178                           postinc0	equ	0xFEE
  2179                           wreg	equ	0xFE8
  2180                           postdec1	equ	0xFE5
  2181                           fsr1l	equ	0xFE1
  2182                           
  2183                           	psect	cstackBANK0
  2184  000060                     __pcstackBANK0:
  2185                           	opt stack 0
  2186  000060                     ??_setup_pulsos:
  2187  000060                     ??_isdigit:
  2188  000060                     ?_USBTransferOnePacket:
  2189                           	opt stack 0
  2190  000060                     ?_strlen:
  2191                           	opt stack 0
  2192  000060                     ?___awmod:
  2193                           	opt stack 0
  2194  000060                     ?___ftpack:
  2195                           	opt stack 0
  2196  000060                     ?___ftneg:
  2197                           	opt stack 0
  2198  000060                     ?_millis:
  2199                           	opt stack 0
  2200  000060                     ?__tdiv_to_l_:
  2201                           	opt stack 0
  2202  000060                     ?__div_to_l_:
  2203                           	opt stack 0
  2204  000060                     ?___lldiv:
  2205                           	opt stack 0
  2206  000060                     USBTransferOnePacket@dir:
  2207                           	opt stack 0
  2208  000060                     putch@data:
  2209                           	opt stack 0
  2210  000060                     retornaDado@dadoBit:
  2211                           	opt stack 0
  2212  000060                     putsUSBUSART@data:
  2213                           	opt stack 0
  2214  000060                     ___awmod@dividend:
  2215                           	opt stack 0
  2216  000060                     memset@p1:
  2217                           	opt stack 0
  2218  000060                     strcat@to:
  2219                           	opt stack 0
  2220  000060                     strlen@s:
  2221                           	opt stack 0
  2222  000060                     __div_to_l_@f1:
  2223                           	opt stack 0
  2224  000060                     ___ftpack@arg:
  2225                           	opt stack 0
  2226  000060                     __tdiv_to_l_@f1:
  2227                           	opt stack 0
  2228  000060                     ___ftge@ff1:
  2229                           	opt stack 0
  2230  000060                     ___ftneg@f1:
  2231                           	opt stack 0
  2232  000060                     ___lldiv@dividend:
  2233                           	opt stack 0
  2234                           
  2235                           ; 4 bytes @ 0x0
  2236  000060                     	ds	1
  2237  000061                     ??_retornaDado:
  2238  000061                     _isdigit$5386:
  2239                           	opt stack 0
  2240  000061                     USBTransferOnePacket@data:
  2241                           	opt stack 0
  2242                           
  2243                           ; 2 bytes @ 0x1
  2244  000061                     	ds	1
  2245  000062                     ??_strlen:
  2246  000062                     isdigit@c:
  2247                           	opt stack 0
  2248  000062                     putsUSBUSART@pData:
  2249                           	opt stack 0
  2250  000062                     ___awmod@divisor:
  2251                           	opt stack 0
  2252  000062                     memset@c:
  2253                           	opt stack 0
  2254  000062                     strcat@from:
  2255                           	opt stack 0
  2256                           
  2257                           ; 2 bytes @ 0x2
  2258  000062                     	ds	1
  2259  000063                     USBTransferOnePacket@len:
  2260                           	opt stack 0
  2261  000063                     retornaDado@selectDado:
  2262                           	opt stack 0
  2263  000063                     ___ftpack@exp:
  2264                           	opt stack 0
  2265  000063                     __div_to_l_@f2:
  2266                           	opt stack 0
  2267  000063                     __tdiv_to_l_@f2:
  2268                           	opt stack 0
  2269  000063                     ___ftge@ff2:
  2270                           	opt stack 0
  2271                           
  2272                           ; 3 bytes @ 0x3
  2273  000063                     	ds	1
  2274  000064                     ??_USBTransferOnePacket:
  2275  000064                     putsUSBUSART@len:
  2276                           	opt stack 0
  2277  000064                     retornaDado@dadoByte:
  2278                           	opt stack 0
  2279  000064                     ___awmod@counter:
  2280                           	opt stack 0
  2281  000064                     ___ftpack@sign:
  2282                           	opt stack 0
  2283  000064                     memset@n:
  2284                           	opt stack 0
  2285  000064                     strcat@cp:
  2286                           	opt stack 0
  2287  000064                     strlen@cp:
  2288                           	opt stack 0
  2289  000064                     millis@m:
  2290                           	opt stack 0
  2291  000064                     ___lldiv@divisor:
  2292                           	opt stack 0
  2293                           
  2294                           ; 4 bytes @ 0x4
  2295  000064                     	ds	1
  2296  000065                     ??___ftpack:
  2297  000065                     ?_le_pulsos:
  2298                           	opt stack 0
  2299  000065                     le_pulsos@modo:
  2300                           	opt stack 0
  2301  000065                     ___awmod@sign:
  2302                           	opt stack 0
  2303                           
  2304                           ; 1 bytes @ 0x5
  2305  000065                     	ds	1
  2306  000066                     ??__tdiv_to_l_:
  2307  000066                     ??___ftge:
  2308  000066                     ?___awdiv:
  2309                           	opt stack 0
  2310  000066                     ___awdiv@dividend:
  2311                           	opt stack 0
  2312  000066                     memset@p:
  2313                           	opt stack 0
  2314  000066                     __div_to_l_@quot:
  2315                           	opt stack 0
  2316                           
  2317                           ; 4 bytes @ 0x6
  2318  000066                     	ds	2
  2319  000068                     ??_parseLoRaWan:
  2320  000068                     ?___awtoft:
  2321                           	opt stack 0
  2322  000068                     ?___lltoft:
  2323                           	opt stack 0
  2324  000068                     USBDeviceInit@i:
  2325                           	opt stack 0
  2326  000068                     USBTransferOnePacket@ep:
  2327                           	opt stack 0
  2328  000068                     ___awdiv@divisor:
  2329                           	opt stack 0
  2330  000068                     ___awtoft@c:
  2331                           	opt stack 0
  2332  000068                     ___lldiv@quotient:
  2333                           	opt stack 0
  2334  000068                     ___lltoft@c:
  2335                           	opt stack 0
  2336                           
  2337                           ; 4 bytes @ 0x8
  2338  000068                     	ds	1
  2339  000069                     le_pulsos@freqPulses:
  2340                           	opt stack 0
  2341  000069                     USBTransferOnePacket@handle:
  2342                           	opt stack 0
  2343  000069                     __tdiv_to_l_@quot:
  2344                           	opt stack 0
  2345                           
  2346                           ; 4 bytes @ 0x9
  2347  000069                     	ds	1
  2348  00006A                     ___awdiv@counter:
  2349                           	opt stack 0
  2350  00006A                     __div_to_l_@cntr:
  2351                           	opt stack 0
  2352  00006A                     le_pulsos@freq:
  2353                           	opt stack 0
  2354                           
  2355                           ; 4 bytes @ 0xA
  2356  00006A                     	ds	1
  2357  00006B                     CDCTxService@i:
  2358                           	opt stack 0
  2359  00006B                     ___awdiv@sign:
  2360                           	opt stack 0
  2361  00006B                     ___awtoft@sign:
  2362                           	opt stack 0
  2363  00006B                     __div_to_l_@exp1:
  2364                           	opt stack 0
  2365                           
  2366                           ; 1 bytes @ 0xB
  2367  00006B                     	ds	1
  2368  00006C                     ??___lltoft:
  2369  00006C                     CDCTxService@byte_to_send:
  2370                           	opt stack 0
  2371  00006C                     ___lldiv@counter:
  2372                           	opt stack 0
  2373  00006C                     ___awdiv@quotient:
  2374                           	opt stack 0
  2375                           
  2376                           ; 2 bytes @ 0xC
  2377  00006C                     	ds	1
  2378  00006D                     ?___llmod:
  2379                           	opt stack 0
  2380  00006D                     __tdiv_to_l_@cntr:
  2381                           	opt stack 0
  2382  00006D                     delay@time:
  2383                           	opt stack 0
  2384  00006D                     setup_uart@baudRate:
  2385                           	opt stack 0
  2386  00006D                     ___llmod@dividend:
  2387                           	opt stack 0
  2388                           
  2389                           ; 4 bytes @ 0xD
  2390  00006D                     	ds	1
  2391  00006E                     ?___wmul:
  2392                           	opt stack 0
  2393  00006E                     __tdiv_to_l_@exp1:
  2394                           	opt stack 0
  2395  00006E                     ___wmul@multiplier:
  2396                           	opt stack 0
  2397                           
  2398                           ; 2 bytes @ 0xE
  2399  00006E                     	ds	2
  2400  000070                     ___lltoft@exp:
  2401                           	opt stack 0
  2402  000070                     ___wmul@multiplicand:
  2403                           	opt stack 0
  2404                           
  2405                           ; 2 bytes @ 0x10
  2406  000070                     	ds	1
  2407  000071                     ??_delay:
  2408  000071                     setup_uart@brg:
  2409                           	opt stack 0
  2410  000071                     ___llmod@divisor:
  2411                           	opt stack 0
  2412                           
  2413                           ; 4 bytes @ 0x11
  2414  000071                     	ds	1
  2415  000072                     ___wmul@product:
  2416                           	opt stack 0
  2417                           
  2418                           ; 2 bytes @ 0x12
  2419  000072                     	ds	2
  2420  000074                     ?___ftadd:
  2421                           	opt stack 0
  2422  000074                     ___ftadd@f1:
  2423                           	opt stack 0
  2424  000074                     parseLoRaWan@previous:
  2425                           	opt stack 0
  2426                           
  2427                           ; 4 bytes @ 0x14
  2428  000074                     	ds	1
  2429  000075                     ___llmod@counter:
  2430                           	opt stack 0
  2431                           
  2432                           ; 1 bytes @ 0x15
  2433  000075                     	ds	2
  2434  000077                     ___ftadd@f2:
  2435                           	opt stack 0
  2436                           
  2437                           ; 3 bytes @ 0x17
  2438  000077                     	ds	1
  2439  000078                     parseLoRaWan@intervalMAX:
  2440                           	opt stack 0
  2441                           
  2442                           ; 2 bytes @ 0x18
  2443  000078                     	ds	1
  2444  000079                     delay@to:
  2445                           	opt stack 0
  2446                           
  2447                           ; 4 bytes @ 0x19
  2448  000079                     	ds	1
  2449  00007A                     ??___ftadd:
  2450  00007A                     parseLoRaWan@status:
  2451                           	opt stack 0
  2452                           
  2453                           ; 1 bytes @ 0x1A
  2454  00007A                     	ds	1
  2455  00007B                     parseLoRaWan@timeout:
  2456                           	opt stack 0
  2457                           
  2458                           ; 1 bytes @ 0x1B
  2459  00007B                     	ds	1
  2460  00007C                     enviaComando@cmd:
  2461                           	opt stack 0
  2462                           
  2463                           ; 2 bytes @ 0x1C
  2464  00007C                     	ds	1
  2465  00007D                     ___ftadd@sign:
  2466                           	opt stack 0
  2467                           
  2468                           ; 1 bytes @ 0x1D
  2469  00007D                     	ds	1
  2470  00007E                     enviaComando@tipoComando:
  2471                           	opt stack 0
  2472  00007E                     ___ftadd@exp2:
  2473                           	opt stack 0
  2474                           
  2475                           ; 1 bytes @ 0x1E
  2476  00007E                     	ds	1
  2477  00007F                     ??_enviaComando:
  2478  00007F                     ___ftadd@exp1:
  2479                           	opt stack 0
  2480                           
  2481                           ; 1 bytes @ 0x1F
  2482  00007F                     	ds	1
  2483  000080                     ?___ftmul:
  2484                           	opt stack 0
  2485  000080                     ?___ftsub:
  2486                           	opt stack 0
  2487  000080                     ___ftmul@f1:
  2488                           	opt stack 0
  2489  000080                     ___ftsub@f1:
  2490                           	opt stack 0
  2491                           
  2492                           ; 3 bytes @ 0x20
  2493  000080                     	ds	1
  2494  000081                     enviaComando@i:
  2495                           	opt stack 0
  2496                           
  2497                           ; 2 bytes @ 0x21
  2498  000081                     	ds	2
  2499  000083                     enviaComando@i_4915:
  2500                           	opt stack 0
  2501  000083                     ___ftmul@f2:
  2502                           	opt stack 0
  2503  000083                     ___ftsub@f2:
  2504                           	opt stack 0
  2505                           
  2506                           ; 3 bytes @ 0x23
  2507  000083                     	ds	2
  2508  000085                     enviaComando@i_4916:
  2509                           	opt stack 0
  2510                           
  2511                           ; 2 bytes @ 0x25
  2512  000085                     	ds	1
  2513  000086                     ??___ftmul:
  2514  000086                     
  2515                           ; 1 bytes @ 0x26
  2516  000086                     	ds	1
  2517  000087                     ResetModuloLoRaWan@status:
  2518                           	opt stack 0
  2519  000087                     JoinLoRaWan@status:
  2520                           	opt stack 0
  2521                           
  2522                           ; 1 bytes @ 0x27
  2523  000087                     	ds	2
  2524  000089                     ___ftmul@exp:
  2525                           	opt stack 0
  2526                           
  2527                           ; 1 bytes @ 0x29
  2528  000089                     	ds	1
  2529  00008A                     ___ftmul@f3_as_product:
  2530                           	opt stack 0
  2531                           
  2532                           ; 3 bytes @ 0x2A
  2533  00008A                     	ds	3
  2534  00008D                     ___ftmul@cntr:
  2535                           	opt stack 0
  2536                           
  2537                           ; 1 bytes @ 0x2D
  2538  00008D                     	ds	1
  2539  00008E                     ___ftmul@sign:
  2540                           	opt stack 0
  2541                           
  2542                           ; 1 bytes @ 0x2E
  2543  00008E                     	ds	1
  2544  00008F                     ?___ftdiv:
  2545                           	opt stack 0
  2546  00008F                     ?_fround:
  2547                           	opt stack 0
  2548  00008F                     ?_scale:
  2549                           	opt stack 0
  2550  00008F                     ___ftdiv@f1:
  2551                           	opt stack 0
  2552                           
  2553                           ; 3 bytes @ 0x2F
  2554  00008F                     	ds	3
  2555  000092                     ___ftdiv@f2:
  2556                           	opt stack 0
  2557  000092                     _fround$5964:
  2558                           	opt stack 0
  2559  000092                     _scale$5965:
  2560                           	opt stack 0
  2561                           
  2562                           ; 3 bytes @ 0x32
  2563  000092                     	ds	3
  2564  000095                     ??___ftdiv:
  2565  000095                     scale@scl:
  2566                           	opt stack 0
  2567  000095                     _fround$5963:
  2568                           	opt stack 0
  2569                           
  2570                           ; 3 bytes @ 0x35
  2571  000095                     	ds	3
  2572  000098                     fround@prec:
  2573                           	opt stack 0
  2574  000098                     ___ftdiv@cntr:
  2575                           	opt stack 0
  2576                           
  2577                           ; 1 bytes @ 0x38
  2578  000098                     	ds	1
  2579  000099                     ___ftdiv@f3:
  2580                           	opt stack 0
  2581                           
  2582                           ; 3 bytes @ 0x39
  2583  000099                     	ds	3
  2584  00009C                     ___ftdiv@exp:
  2585                           	opt stack 0
  2586                           
  2587                           ; 1 bytes @ 0x3C
  2588  00009C                     	ds	1
  2589  00009D                     ___ftdiv@sign:
  2590                           	opt stack 0
  2591                           
  2592                           ; 1 bytes @ 0x3D
  2593  00009D                     	ds	1
  2594  00009E                     ?_le_AD:
  2595                           	opt stack 0
  2596                           
  2597                           ; 3 bytes @ 0x3E
  2598  00009E                     	ds	3
  2599  0000A1                     ??_le_AD:
  2600                           
  2601                           ; 1 bytes @ 0x41
  2602  0000A1                     	ds	2
  2603  0000A3                     _le_AD$5962:
  2604                           	opt stack 0
  2605                           
  2606                           ; 3 bytes @ 0x43
  2607  0000A3                     	ds	3
  2608  0000A6                     le_AD@corrente:
  2609                           	opt stack 0
  2610                           
  2611                           ; 3 bytes @ 0x46
  2612  0000A6                     	ds	3
  2613  0000A9                     le_AD@AnalogPort:
  2614                           	opt stack 0
  2615                           
  2616                           ; 1 bytes @ 0x49
  2617  0000A9                     	ds	1
  2618  0000AA                     le_AD@leituraAux:
  2619                           	opt stack 0
  2620                           
  2621                           ; 2 bytes @ 0x4A
  2622  0000AA                     	ds	2
  2623  0000AC                     le_AD@i:
  2624                           	opt stack 0
  2625                           
  2626                           ; 2 bytes @ 0x4C
  2627  0000AC                     	ds	2
  2628  0000AE                     le_AD@leitura:
  2629                           	opt stack 0
  2630                           
  2631                           ; 2 bytes @ 0x4E
  2632  0000AE                     	ds	2
  2633  0000B0                     ?___fttol:
  2634                           	opt stack 0
  2635  0000B0                     ___fttol@f1:
  2636                           	opt stack 0
  2637                           
  2638                           ; 3 bytes @ 0x50
  2639  0000B0                     	ds	4
  2640  0000B4                     ??___fttol:
  2641                           
  2642                           ; 1 bytes @ 0x54
  2643  0000B4                     	ds	5
  2644  0000B9                     ___fttol@sign1:
  2645                           	opt stack 0
  2646                           
  2647                           ; 1 bytes @ 0x59
  2648  0000B9                     	ds	1
  2649  0000BA                     ___fttol@lval:
  2650                           	opt stack 0
  2651                           
  2652                           ; 4 bytes @ 0x5A
  2653  0000BA                     	ds	4
  2654  0000BE                     ___fttol@exp1:
  2655                           	opt stack 0
  2656                           
  2657                           ; 1 bytes @ 0x5E
  2658  0000BE                     	ds	1
  2659  0000BF                     ?_sprintf:
  2660                           	opt stack 0
  2661  0000BF                     sprintf@sp:
  2662                           	opt stack 0
  2663                           
  2664                           ; 2 bytes @ 0x5F
  2665  0000BF                     	ds	2
  2666  0000C1                     sprintf@f:
  2667                           	opt stack 0
  2668                           
  2669                           ; 2 bytes @ 0x61
  2670  0000C1                     	ds	42
  2671  0000EB                     ??_sprintf:
  2672                           
  2673                           ; 1 bytes @ 0x8B
  2674  0000EB                     	ds	6
  2675  0000F1                     SetChannelLoRaWan@ligado:
  2676                           	opt stack 0
  2677  0000F1                     MacSave@status:
  2678                           	opt stack 0
  2679  0000F1                     TxLoRaWan@porta:
  2680                           	opt stack 0
  2681  0000F1                     SetDevEUI@state:
  2682                           	opt stack 0
  2683  0000F1                     SetAppEUI@state:
  2684                           	opt stack 0
  2685  0000F1                     SetAppKey@state:
  2686                           	opt stack 0
  2687  0000F1                     SetAdr@state:
  2688                           	opt stack 0
  2689  0000F1                     SetBandWidth@bw:
  2690                           	opt stack 0
  2691  0000F1                     DataRate@dr:
  2692                           	opt stack 0
  2693                           
  2694                           ; 2 bytes @ 0x91
  2695  0000F1                     	ds	1
  2696  0000F2                     TxLoRaWan@data:
  2697                           	opt stack 0
  2698  0000F2                     MacSave@comando:
  2699                           	opt stack 0
  2700                           
  2701                           ; 7 bytes @ 0x92
  2702  0000F2                     	ds	1
  2703  0000F3                     ??_DataRate:
  2704  0000F3                     ??_SetBandWidth:
  2705                           
  2706                           ; 1 bytes @ 0x93
  2707  0000F3                     	ds	1
  2708  0000F4                     TxLoRaWan@tamData:
  2709                           	opt stack 0
  2710                           
  2711                           ; 1 bytes @ 0x94
  2712  0000F4                     	ds	1
  2713  0000F5                     ??_TxLoRaWan:
  2714                           
  2715                           ; 1 bytes @ 0x95
  2716  0000F5                     	ds	4
  2717                           tblptru	equ	0xFF8
  2718                           tblptrh	equ	0xFF7
  2719                           tblptrl	equ	0xFF6
  2720                           tablat	equ	0xFF5
  2721                           postinc0	equ	0xFEE
  2722                           wreg	equ	0xFE8
  2723                           postdec1	equ	0xFE5
  2724                           fsr1l	equ	0xFE1
  2725                           
  2726                           	psect	cstackCOMRAM
  2727  000001                     __pcstackCOMRAM:
  2728                           	opt stack 0
  2729  000001                     ??_getch:
  2730  000001                     ??_USBStdGetDscHandler:
  2731  000001                     ??_USBStdGetStatusHandler:
  2732  000001                     ?_strcmp:
  2733                           	opt stack 0
  2734  000001                     ?_strncmp:
  2735                           	opt stack 0
  2736  000001                     ?i2_USBTransferOnePacket:
  2737                           	opt stack 0
  2738  000001                     ?i2_strlen:
  2739                           	opt stack 0
  2740  000001                     USBConfigureEndpoint@direction:
  2741                           	opt stack 0
  2742  000001                     USBCtrlTrfTxService@byteToSend:
  2743                           	opt stack 0
  2744  000001                     USBCtrlTrfRxService@i:
  2745                           	opt stack 0
  2746  000001                     toupper@c:
  2747                           	opt stack 0
  2748  000001                     i2USBTransferOnePacket@dir:
  2749                           	opt stack 0
  2750  000001                     memcpy@d1:
  2751                           	opt stack 0
  2752  000001                     strcmp@s1:
  2753                           	opt stack 0
  2754  000001                     strcpy@to:
  2755                           	opt stack 0
  2756  000001                     strncmp@s1:
  2757                           	opt stack 0
  2758  000001                     i2memset@p1:
  2759                           	opt stack 0
  2760  000001                     i2strlen@s:
  2761                           	opt stack 0
  2762                           
  2763                           ; 2 bytes @ 0x0
  2764  000001                     	ds	1
  2765  000002                     ??_USBConfigureEndpoint:
  2766  000002                     USBCtrlTrfRxService@byteToRead:
  2767                           	opt stack 0
  2768  000002                     USBCtrlTrfInHandler@lastDTS:
  2769                           	opt stack 0
  2770  000002                     getch@RC:
  2771                           	opt stack 0
  2772  000002                     converter@conv2:
  2773                           	opt stack 0
  2774  000002                     USBStdGetStatusHandler@p:
  2775                           	opt stack 0
  2776  000002                     i2USBTransferOnePacket@data:
  2777                           	opt stack 0
  2778                           
  2779                           ; 2 bytes @ 0x1
  2780  000002                     	ds	1
  2781  000003                     ??i2_strlen:
  2782  000003                     getch@data:
  2783                           	opt stack 0
  2784  000003                     converter@resul:
  2785                           	opt stack 0
  2786  000003                     memcpy@s1:
  2787                           	opt stack 0
  2788  000003                     strcmp@s2:
  2789                           	opt stack 0
  2790  000003                     strcpy@from:
  2791                           	opt stack 0
  2792  000003                     strncmp@s2:
  2793                           	opt stack 0
  2794  000003                     i2memset@c:
  2795                           	opt stack 0
  2796                           
  2797                           ; 2 bytes @ 0x2
  2798  000003                     	ds	1
  2799  000004                     converter@aux:
  2800                           	opt stack 0
  2801  000004                     i2USBTransferOnePacket@len:
  2802                           	opt stack 0
  2803                           
  2804                           ; 1 bytes @ 0x3
  2805  000004                     	ds	1
  2806  000005                     ??_strcmp:
  2807  000005                     ??i2_USBTransferOnePacket:
  2808  000005                     converter@aux2:
  2809                           	opt stack 0
  2810  000005                     memcpy@n:
  2811                           	opt stack 0
  2812  000005                     strcpy@cp:
  2813                           	opt stack 0
  2814  000005                     strncmp@len:
  2815                           	opt stack 0
  2816  000005                     i2memset@n:
  2817                           	opt stack 0
  2818  000005                     i2strlen@cp:
  2819                           	opt stack 0
  2820                           
  2821                           ; 2 bytes @ 0x4
  2822  000005                     	ds	1
  2823  000006                     USBConfigureEndpoint@EPNum:
  2824                           	opt stack 0
  2825  000006                     converter@conv1:
  2826                           	opt stack 0
  2827  000006                     strcmp@r:
  2828                           	opt stack 0
  2829                           
  2830                           ; 1 bytes @ 0x5
  2831  000006                     	ds	1
  2832  000007                     ??_strncmp:
  2833  000007                     USBConfigureEndpoint@handle:
  2834                           	opt stack 0
  2835  000007                     memcpy@d:
  2836                           	opt stack 0
  2837  000007                     i2memset@p:
  2838                           	opt stack 0
  2839                           
  2840                           ; 2 bytes @ 0x6
  2841  000007                     	ds	2
  2842  000009                     USBEnableEndpoint@options:
  2843                           	opt stack 0
  2844  000009                     i2USBDeviceInit@i:
  2845                           	opt stack 0
  2846  000009                     i2USBTransferOnePacket@ep:
  2847                           	opt stack 0
  2848  000009                     memcpy@s:
  2849                           	opt stack 0
  2850                           
  2851                           ; 2 bytes @ 0x8
  2852  000009                     	ds	1
  2853  00000A                     ??_recebeByteLoRaWan:
  2854  00000A                     USBEnableEndpoint@p:
  2855                           	opt stack 0
  2856  00000A                     i2USBTransferOnePacket@handle:
  2857                           	opt stack 0
  2858                           
  2859                           ; 2 bytes @ 0x9
  2860  00000A                     	ds	1
  2861  00000B                     memcpy@tmp:
  2862                           	opt stack 0
  2863                           
  2864                           ; 1 bytes @ 0xA
  2865  00000B                     	ds	1
  2866  00000C                     USBEnableEndpoint@ep:
  2867                           	opt stack 0
  2868                           
  2869                           ; 1 bytes @ 0xB
  2870  00000C                     	ds	1
  2871  00000D                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  2872                           	opt stack 0
  2873                           
  2874                           ; 2 bytes @ 0xC
  2875  00000D                     	ds	1
  2876  00000E                     recebeByteLoRaWan@len:
  2877                           	opt stack 0
  2878                           
  2879                           ; 1 bytes @ 0xD
  2880  00000E                     	ds	1
  2881  00000F                     recebeByteLoRaWan@port:
  2882                           	opt stack 0
  2883  00000F                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  2884                           	opt stack 0
  2885                           
  2886                           ; 2 bytes @ 0xE
  2887  00000F                     	ds	1
  2888  000010                     recebeByteLoRaWan@b:
  2889                           	opt stack 0
  2890                           
  2891                           ; 1 bytes @ 0xF
  2892  000010                     	ds	1
  2893  000011                     recebeByteLoRaWan@i:
  2894                           	opt stack 0
  2895  000011                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  2896                           	opt stack 0
  2897                           
  2898                           ; 2 bytes @ 0x10
  2899  000011                     	ds	1
  2900  000012                     recebeByteLoRaWan@tamMsgRx:
  2901                           	opt stack 0
  2902                           
  2903                           ; 1 bytes @ 0x11
  2904  000012                     	ds	1
  2905  000013                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  2906  000013                     recebeByteLoRaWan@i_4929:
  2907                           	opt stack 0
  2908                           
  2909                           ; 1 bytes @ 0x12
  2910  000013                     	ds	2
  2911  000015                     ??_USBStdFeatureReqHandler:
  2912  000015                     USBStdSetCfgHandler@i:
  2913                           	opt stack 0
  2914                           
  2915                           ; 1 bytes @ 0x14
  2916  000015                     	ds	1
  2917  000016                     USBStdFeatureReqHandler@pUEP:
  2918                           	opt stack 0
  2919                           
  2920                           ; 2 bytes @ 0x15
  2921  000016                     	ds	2
  2922  000018                     USBStdFeatureReqHandler@current_ep_data:
  2923                           	opt stack 0
  2924                           
  2925                           ; 1 bytes @ 0x17
  2926  000018                     	ds	1
  2927  000019                     USBStdFeatureReqHandler@p:
  2928                           	opt stack 0
  2929                           
  2930                           ; 2 bytes @ 0x18
  2931  000019                     	ds	2
  2932  00001B                     ??_USBCtrlEPService:
  2933  00001B                     
  2934                           ; 1 bytes @ 0x1A
  2935  00001B                     	ds	1
  2936  00001C                     USBDeviceTasks@i:
  2937                           	opt stack 0
  2938                           
  2939                           ; 1 bytes @ 0x1B
  2940  00001C                     	ds	1
  2941  00001D                     ??_SYS_InterruptHigh:
  2942                           
  2943                           ; 1 bytes @ 0x1C
  2944  00001D                     	ds	19
  2945  000030                     SYS_InterruptHigh@dig1:
  2946                           	opt stack 0
  2947                           
  2948                           ; 2 bytes @ 0x2F
  2949  000030                     	ds	2
  2950  000032                     SYS_InterruptHigh@dig2:
  2951                           	opt stack 0
  2952                           
  2953                           ; 2 bytes @ 0x31
  2954  000032                     	ds	2
  2955  000034                     SYS_InterruptHigh@dig3:
  2956                           	opt stack 0
  2957                           
  2958                           ; 2 bytes @ 0x33
  2959  000034                     	ds	2
  2960  000036                     SYS_InterruptHigh@dig4:
  2961                           	opt stack 0
  2962                           
  2963                           ; 2 bytes @ 0x35
  2964  000036                     	ds	2
  2965                           tblptru	equ	0xFF8
  2966                           tblptrh	equ	0xFF7
  2967                           tblptrl	equ	0xFF6
  2968                           tablat	equ	0xFF5
  2969                           postinc0	equ	0xFEE
  2970                           wreg	equ	0xFE8
  2971                           postdec1	equ	0xFE5
  2972                           fsr1l	equ	0xFE1
  2973                           
  2974 ;;
  2975 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
  2976 ;;
  2977 ;; *************** function _main *****************
  2978 ;; Defined at:
  2979 ;;		line 42 in file "UT.c"
  2980 ;; Parameters:    Size  Location     Type
  2981 ;;		None
  2982 ;; Auto vars:     Size  Location     Type
  2983 ;;  sf              1  159[BANK2 ] unsigned char 
  2984 ;;  dr              1  174[BANK2 ] unsigned char 
  2985 ;;  i               1  173[BANK2 ] unsigned char 
  2986 ;;  i               1  172[BANK2 ] unsigned char 
  2987 ;;  tempoTimeOut    4  154[BANK2 ] unsigned long 
  2988 ;;  data          150    0[BANK2 ] unsigned char [150]
  2989 ;;  Fcanal          1  171[BANK2 ] unsigned char 
  2990 ;;  Icanal          1  158[BANK2 ] unsigned char 
  2991 ;;  deltaTempo      4  162[BANK2 ] unsigned long 
  2992 ;;  tempo           4  150[BANK2 ] unsigned long 
  2993 ;;  resp            1  160[BANK2 ] unsigned char 
  2994 ;;  i               1  177[BANK2 ] unsigned char 
  2995 ;;  i               1  176[BANK2 ] unsigned char 
  2996 ;;  i               2  169[BANK2 ] int 
  2997 ;;  dadoPoco       22  178[BANK2 ] struct .
  2998 ;;  pisca           1  175[BANK2 ] unsigned char 
  2999 ;;  contador        1  161[BANK2 ] unsigned char 
  3000 ;;  valor           1    0        unsigned char 
  3001 ;; Return value:  Size  Location     Type
  3002 ;;                  1    wreg      void 
  3003 ;; Registers used:
  3004 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3005 ;; Tracked objects:
  3006 ;;		On entry : 0/0
  3007 ;;		On exit  : 0/0
  3008 ;;		Unchanged: 0/0
  3009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3010 ;;      Params:         0       0       0       0       0       0       0       0       0
  3011 ;;      Locals:         0       0       0     200       0       0       0       0       0
  3012 ;;      Temps:          0       0      10       0       0       0       0       0       0
  3013 ;;      Totals:         0       0      10     200       0       0       0       0       0
  3014 ;;Total ram usage:      210 bytes
  3015 ;; Hardware stack levels required when called:   15
  3016 ;; This function calls:
  3017 ;;		_DataRate
  3018 ;;		_MacSave
  3019 ;;		_SetAdr
  3020 ;;		_SetAppEUI
  3021 ;;		_SetAppKey
  3022 ;;		_SetBandWidth
  3023 ;;		_SetChannelLoRaWan
  3024 ;;		_SetDevEUI
  3025 ;;		_SetSpreadingFactor
  3026 ;;		_TxLoRaWan
  3027 ;;		_USBDeviceInit
  3028 ;;		___ftmul
  3029 ;;		___fttol
  3030 ;;		_delay
  3031 ;;		_le_AD
  3032 ;;		_le_pulsos
  3033 ;;		_millis
  3034 ;;		_putch
  3035 ;;		_putsUSBUSART
  3036 ;;		_retornaDado
  3037 ;;		_setup_AD
  3038 ;;		_setup_ccp1
  3039 ;;		_setup_pulsos
  3040 ;;		_setup_uart
  3041 ;;		_sprintf
  3042 ;;		_verificaUSB
  3043 ;; This function is called by:
  3044 ;;		Startup code after reset
  3045 ;; This function uses a non-reentrant model
  3046 ;;
  3047                           
  3048                           	psect	text0
  3049  000CB6                     __ptext0:
  3050                           	opt stack 0
  3051  000CB6                     _main:
  3052                           	opt stack 16
  3053                           
  3054                           ;UT.c: 43: uint8_t contador;
  3055                           ;UT.c: 44: uint8_t pisca=0;
  3056                           
  3057                           ;incstack = 0
  3058  000CB6  0E00               	movlw	0
  3059  000CB8  0102               	movlb	2	; () banked
  3060  000CBA  6FAF               	movwf	main@pisca& (0+255),b
  3061                           
  3062                           ; BSR set to: 2
  3063                           ;UT.c: 46: TRISEbits.RE2=0;
  3064  000CBC  9496               	bcf	3990,2,c	;volatile
  3065                           
  3066                           ; BSR set to: 2
  3067                           ;UT.c: 47: PORTDbits.RD4=0;
  3068  000CBE  9883               	bcf	3971,4,c	;volatile
  3069                           
  3070                           ; BSR set to: 2
  3071                           ;UT.c: 48: TRISDbits.RD4=0;
  3072  000CC0  9895               	bcf	3989,4,c	;volatile
  3073                           
  3074                           ; BSR set to: 2
  3075                           ;UT.c: 49: PORTDbits.RD5=0;
  3076  000CC2  9A83               	bcf	3971,5,c	;volatile
  3077                           
  3078                           ; BSR set to: 2
  3079                           ;UT.c: 50: TRISDbits.RD5=0;
  3080  000CC4  9A95               	bcf	3989,5,c	;volatile
  3081                           
  3082                           ; BSR set to: 2
  3083                           ;UT.c: 51: PORTDbits.RD6=0;
  3084  000CC6  9C83               	bcf	3971,6,c	;volatile
  3085                           
  3086                           ; BSR set to: 2
  3087                           ;UT.c: 52: TRISDbits.RD6=0;
  3088  000CC8  9C95               	bcf	3989,6,c	;volatile
  3089                           
  3090                           ; BSR set to: 2
  3091                           ;UT.c: 53: PORTDbits.RD7=0;
  3092  000CCA  9E83               	bcf	3971,7,c	;volatile
  3093                           
  3094                           ; BSR set to: 2
  3095                           ;UT.c: 54: TRISDbits.RD7=0;
  3096  000CCC  9E95               	bcf	3989,7,c	;volatile
  3097                           
  3098                           ;UT.c: 57: for (int i=0;i<25;i++)
  3099  000CCE  0E00               	movlw	0
  3100  000CD0  6FAA               	movwf	(main@i+1)& (0+255),b
  3101  000CD2  0E00               	movlw	0
  3102  000CD4  6FA9               	movwf	main@i& (0+255),b
  3103  000CD6                     l10576:
  3104                           
  3105                           ; BSR set to: 2
  3106  000CD6  BFAA               	btfsc	(main@i+1)& (0+255),7,b
  3107  000CD8  D006               	goto	l1059
  3108  000CDA  51AA               	movf	(main@i+1)& (0+255),w,b
  3109  000CDC  E11C               	bnz	l10588
  3110  000CDE  0E19               	movlw	25
  3111  000CE0  5DA9               	subwf	main@i& (0+255),w,b
  3112  000CE2  B0D8               	btfsc	status,0,c
  3113  000CE4  D018               	goto	u10680
  3114  000CE6                     l1059:
  3115                           
  3116                           ; BSR set to: 2
  3117                           ;UT.c: 58: {
  3118                           ;UT.c: 59: pisca ^= 1;
  3119                           
  3120                           ; BSR set to: 2
  3121  000CE6  0E01               	movlw	1
  3122  000CE8  1BAF               	xorwf	main@pisca& (0+255),f,b
  3123                           
  3124                           ; BSR set to: 2
  3125                           ;UT.c: 60: PORTEbits.RE2 = pisca;
  3126  000CEA  B1AF               	btfsc	main@pisca& (0+255),0,b
  3127  000CEC  D002               	bra	u10675
  3128  000CEE  9484               	bcf	3972,2,c	;volatile
  3129  000CF0  D001               	bra	u10676
  3130  000CF2                     u10675:
  3131  000CF2  8484               	bsf	3972,2,c	;volatile
  3132  000CF4                     u10676:
  3133                           
  3134                           ;UT.c: 61: _delay((unsigned long)((200)*(48000000/4000.0)));
  3135  000CF4  0E0D               	movlw	13
  3136  000CF6  0101               	movlb	1	; () banked
  3137  000CF8  6FEE               	movwf	(??_main+1)& (0+255),b
  3138  000CFA  0E2D               	movlw	45
  3139  000CFC  6FED               	movwf	??_main& (0+255),b
  3140  000CFE  0ED7               	movlw	215
  3141  000D00                     u11267:
  3142  000D00  2EE8               	decfsz	wreg,f,c
  3143  000D02  D7FE               	bra	u11267
  3144  000D04  2FED               	decfsz	??_main& (0+255),f,b
  3145  000D06  D7FC               	bra	u11267
  3146  000D08  2FEE               	decfsz	(??_main+1)& (0+255),f,b
  3147  000D0A  D7FA               	bra	u11267
  3148  000D0C  D000               	nop2	
  3149  000D0E  0102               	movlb	2	; () banked
  3150  000D10  4BA9               	infsnz	main@i& (0+255),f,b
  3151  000D12  2BAA               	incf	(main@i+1)& (0+255),f,b
  3152  000D14  D7E0               	goto	l10576
  3153  000D16                     u10680:
  3154  000D16                     l10588:
  3155                           
  3156                           ; BSR set to: 2
  3157                           ;UT.c: 62: }
  3158                           ;UT.c: 65: setup_uart(57600);
  3159  000D16  0E00               	movlw	0
  3160  000D18  0100               	movlb	0	; () banked
  3161  000D1A  6F6D               	movwf	setup_uart@baudRate& (0+255),b
  3162  000D1C  0EE1               	movlw	225
  3163  000D1E  6F6E               	movwf	(setup_uart@baudRate+1)& (0+255),b
  3164  000D20  0E00               	movlw	0
  3165  000D22  6F6F               	movwf	(setup_uart@baudRate+2)& (0+255),b
  3166  000D24  0E00               	movlw	0
  3167  000D26  6F70               	movwf	(setup_uart@baudRate+3)& (0+255),b
  3168  000D28  ECBA  F021         	call	_setup_uart	;wreg free
  3169                           
  3170                           ;UT.c: 71: USBDeviceInit();
  3171  000D2C  ECD4  F014         	call	_USBDeviceInit	;wreg free
  3172                           
  3173                           ;UT.c: 72: setup_AD();
  3174  000D30  EC91  F02A         	call	_setup_AD	;wreg free
  3175                           
  3176                           ;UT.c: 73: setup_pulsos();
  3177  000D34  EC10  F021         	call	_setup_pulsos	;wreg free
  3178                           
  3179                           ;UT.c: 74: setup_ccp1();
  3180  000D38  ECCC  F027         	call	_setup_ccp1	;wreg free
  3181                           
  3182                           ;UT.c: 76: verificaUSB();
  3183  000D3C  EC73  F029         	call	_verificaUSB	;wreg free
  3184                           
  3185                           ;UT.c: 87: struct
  3186                           ;UT.c: 88: {
  3187                           ;UT.c: 89: uint8_t feedback1;
  3188                           ;UT.c: 90: uint8_t feedback2;
  3189                           ;UT.c: 91: uint16_t nivel1;
  3190                           ;UT.c: 92: uint16_t nivel2;
  3191                           ;UT.c: 93: uint32_t pulsos1;
  3192                           ;UT.c: 94: uint32_t pulsos2;
  3193                           ;UT.c: 95: uint32_t pulsos3;
  3194                           ;UT.c: 96: uint32_t pulsos4;
  3195                           ;UT.c: 97: } dadoPoco;
  3196                           ;UT.c: 100: putch(0x34);
  3197  000D40  0E34               	movlw	52
  3198  000D42  ECA0  F02A         	call	_putch
  3199                           
  3200                           ;UT.c: 102: for (uint8_t i=0; i<48; i++){
  3201  000D46  0E00               	movlw	0
  3202  000D48  0102               	movlb	2	; () banked
  3203  000D4A  6FB0               	movwf	main@i_3335& (0+255),b
  3204  000D4C                     l10604:
  3205                           
  3206                           ; BSR set to: 2
  3207  000D4C  0E2F               	movlw	47
  3208  000D4E  65B0               	cpfsgt	main@i_3335& (0+255),b
  3209  000D50  D001               	goto	l1061
  3210  000D52  D00A               	goto	u10700
  3211  000D54                     l1061:
  3212                           
  3213                           ; BSR set to: 2
  3214                           ;UT.c: 103: SetChannelLoRaWan (i,0);
  3215                           
  3216                           ; BSR set to: 2
  3217  000D54  0E00               	movlw	0
  3218  000D56  0100               	movlb	0	; () banked
  3219  000D58  6FF1               	movwf	SetChannelLoRaWan@ligado& (0+255),b
  3220  000D5A  0102               	movlb	2	; () banked
  3221  000D5C  51B0               	movf	main@i_3335& (0+255),w,b
  3222  000D5E  EC48  F025         	call	_SetChannelLoRaWan
  3223  000D62  0102               	movlb	2	; () banked
  3224  000D64  2BB0               	incf	main@i_3335& (0+255),f,b
  3225  000D66  D7F2               	goto	l10604
  3226  000D68                     u10700:
  3227                           
  3228                           ; BSR set to: 2
  3229                           ;UT.c: 104: }
  3230                           ;UT.c: 105: for (uint8_t i=48; i<=63; i++){
  3231                           
  3232                           ; BSR set to: 2
  3233  000D68  0E30               	movlw	48
  3234  000D6A  6FB1               	movwf	main@i_3336& (0+255),b
  3235  000D6C                     l10616:
  3236                           
  3237                           ; BSR set to: 2
  3238  000D6C  0E3F               	movlw	63
  3239  000D6E  65B1               	cpfsgt	main@i_3336& (0+255),b
  3240  000D70  D001               	goto	l1063
  3241  000D72  D00A               	goto	u10720
  3242  000D74                     l1063:
  3243                           
  3244                           ; BSR set to: 2
  3245                           ;UT.c: 106: SetChannelLoRaWan (i,1);
  3246                           
  3247                           ; BSR set to: 2
  3248  000D74  0E01               	movlw	1
  3249  000D76  0100               	movlb	0	; () banked
  3250  000D78  6FF1               	movwf	SetChannelLoRaWan@ligado& (0+255),b
  3251  000D7A  0102               	movlb	2	; () banked
  3252  000D7C  51B1               	movf	main@i_3336& (0+255),w,b
  3253  000D7E  EC48  F025         	call	_SetChannelLoRaWan
  3254  000D82  0102               	movlb	2	; () banked
  3255  000D84  2BB1               	incf	main@i_3336& (0+255),f,b
  3256  000D86  D7F2               	goto	l10616
  3257  000D88                     u10720:
  3258                           
  3259                           ; BSR set to: 2
  3260                           ;UT.c: 107: }
  3261                           ;UT.c: 109: DataRate(1);
  3262                           
  3263                           ; BSR set to: 2
  3264  000D88  0E00               	movlw	0
  3265  000D8A  0100               	movlb	0	; () banked
  3266  000D8C  6FF2               	movwf	(DataRate@dr+1)& (0+255),b
  3267  000D8E  0E01               	movlw	1
  3268  000D90  6FF1               	movwf	DataRate@dr& (0+255),b
  3269  000D92  EC87  F027         	call	_DataRate	;wreg free
  3270                           
  3271                           ;UT.c: 110: SetAdr(STATE_OFF);
  3272  000D96  0E04               	movlw	low _STATE_OFF
  3273  000D98  0100               	movlb	0	; () banked
  3274  000D9A  6FF1               	movwf	SetAdr@state& (0+255),b
  3275  000D9C  0E7E               	movlw	high _STATE_OFF
  3276  000D9E  6FF2               	movwf	(SetAdr@state+1)& (0+255),b
  3277  000DA0  ECAC  F028         	call	_SetAdr	;wreg free
  3278                           
  3279                           ;UT.c: 111: SetDevEUI("0004a30b001b7476");
  3280  000DA4  0E16               	movlw	low STR_1
  3281  000DA6  0100               	movlb	0	; () banked
  3282  000DA8  6FF1               	movwf	SetDevEUI@state& (0+255),b
  3283  000DAA  0E7F               	movlw	high STR_1
  3284  000DAC  6FF2               	movwf	(SetDevEUI@state+1)& (0+255),b
  3285  000DAE  EC4F  F028         	call	_SetDevEUI	;wreg free
  3286                           
  3287                           ;UT.c: 112: SetAppEUI("0000000000000000");
  3288  000DB2  0E05               	movlw	low STR_2
  3289  000DB4  0100               	movlb	0	; () banked
  3290  000DB6  6FF1               	movwf	SetAppEUI@state& (0+255),b
  3291  000DB8  0E7F               	movlw	high STR_2
  3292  000DBA  6FF2               	movwf	(SetAppEUI@state+1)& (0+255),b
  3293  000DBC  EC8D  F028         	call	_SetAppEUI	;wreg free
  3294                           
  3295                           ;UT.c: 113: SetAppKey("55555555555555555555555555555555");
  3296  000DC0  0E7D               	movlw	low STR_3
  3297  000DC2  0100               	movlb	0	; () banked
  3298  000DC4  6FF1               	movwf	SetAppKey@state& (0+255),b
  3299  000DC6  0E7E               	movlw	high STR_3
  3300  000DC8  6FF2               	movwf	(SetAppKey@state+1)& (0+255),b
  3301  000DCA  EC6E  F028         	call	_SetAppKey	;wreg free
  3302                           
  3303                           ;UT.c: 114: MacSave();
  3304  000DCE  EC23  F029         	call	_MacSave	;wreg free
  3305  000DD2                     
  3306                           ;UT.c: 118: {
  3307                           ;UT.c: 119: uint32_t tempo=millis();
  3308  000DD2  EC22  F02A         	call	_millis	;wreg free
  3309  000DD6  C060  F296         	movff	?_millis,main@tempo
  3310  000DDA  C061  F297         	movff	?_millis+1,main@tempo+1
  3311  000DDE  C062  F298         	movff	?_millis+2,main@tempo+2
  3312  000DE2  C063  F299         	movff	?_millis+3,main@tempo+3
  3313                           
  3314                           ;UT.c: 120: pisca ^= 1;
  3315  000DE6  0E01               	movlw	1
  3316  000DE8  0102               	movlb	2	; () banked
  3317  000DEA  1BAF               	xorwf	main@pisca& (0+255),f,b
  3318                           
  3319                           ; BSR set to: 2
  3320                           ;UT.c: 121: LATEbits.LATE2 = pisca;
  3321  000DEC  B1AF               	btfsc	main@pisca& (0+255),0,b
  3322  000DEE  D002               	bra	u10735
  3323  000DF0  948D               	bcf	3981,2,c	;volatile
  3324  000DF2  D001               	bra	u10736
  3325  000DF4                     u10735:
  3326  000DF4  848D               	bsf	3981,2,c	;volatile
  3327  000DF6                     u10736:
  3328                           
  3329                           ;UT.c: 147: dadoPoco.nivel1 =(uint16_t)(le_AD(0)*1000.0);
  3330  000DF6  0E00               	movlw	0
  3331  000DF8  ECDE  F017         	call	_le_AD
  3332  000DFC  C09E  F2A6         	movff	?_le_AD,_main$5961
  3333  000E00  C09F  F2A7         	movff	?_le_AD+1,_main$5961+1
  3334  000E04  C0A0  F2A8         	movff	?_le_AD+2,_main$5961+2
  3335                           
  3336                           ;UT.c: 147: dadoPoco.nivel1 =(uint16_t)(le_AD(0)*1000.0);
  3337  000E08  0E00               	movlw	0
  3338  000E0A  0100               	movlb	0	; () banked
  3339  000E0C  6F83               	movwf	___ftmul@f2& (0+255),b
  3340  000E0E  0E7A               	movlw	122
  3341  000E10  6F84               	movwf	(___ftmul@f2+1)& (0+255),b
  3342  000E12  0E44               	movlw	68
  3343  000E14  6F85               	movwf	(___ftmul@f2+2)& (0+255),b
  3344  000E16  C2A6  F080         	movff	_main$5961,___ftmul@f1
  3345  000E1A  C2A7  F081         	movff	_main$5961+1,___ftmul@f1+1
  3346  000E1E  C2A8  F082         	movff	_main$5961+2,___ftmul@f1+2
  3347  000E22  ECA2  F01C         	call	___ftmul	;wreg free
  3348  000E26  C080  F0B0         	movff	?___ftmul,___fttol@f1
  3349  000E2A  C081  F0B1         	movff	?___ftmul+1,___fttol@f1+1
  3350  000E2E  C082  F0B2         	movff	?___ftmul+2,___fttol@f1+2
  3351  000E32  EC26  F01C         	call	___fttol	;wreg free
  3352  000E36  C0B0  F2B4         	movff	?___fttol,main@dadoPoco+2
  3353  000E3A  C0B1  F2B5         	movff	?___fttol+1,main@dadoPoco+3
  3354                           
  3355                           ;UT.c: 148: dadoPoco.nivel2 =(uint16_t)(le_AD(1)*1000.0);
  3356  000E3E  0E01               	movlw	1
  3357  000E40  ECDE  F017         	call	_le_AD
  3358  000E44  C09E  F2A6         	movff	?_le_AD,_main$5961
  3359  000E48  C09F  F2A7         	movff	?_le_AD+1,_main$5961+1
  3360  000E4C  C0A0  F2A8         	movff	?_le_AD+2,_main$5961+2
  3361                           
  3362                           ;UT.c: 148: dadoPoco.nivel2 =(uint16_t)(le_AD(1)*1000.0);
  3363  000E50  0E00               	movlw	0
  3364  000E52  0100               	movlb	0	; () banked
  3365  000E54  6F83               	movwf	___ftmul@f2& (0+255),b
  3366  000E56  0E7A               	movlw	122
  3367  000E58  6F84               	movwf	(___ftmul@f2+1)& (0+255),b
  3368  000E5A  0E44               	movlw	68
  3369  000E5C  6F85               	movwf	(___ftmul@f2+2)& (0+255),b
  3370  000E5E  C2A6  F080         	movff	_main$5961,___ftmul@f1
  3371  000E62  C2A7  F081         	movff	_main$5961+1,___ftmul@f1+1
  3372  000E66  C2A8  F082         	movff	_main$5961+2,___ftmul@f1+2
  3373  000E6A  ECA2  F01C         	call	___ftmul	;wreg free
  3374  000E6E  C080  F0B0         	movff	?___ftmul,___fttol@f1
  3375  000E72  C081  F0B1         	movff	?___ftmul+1,___fttol@f1+1
  3376  000E76  C082  F0B2         	movff	?___ftmul+2,___fttol@f1+2
  3377  000E7A  EC26  F01C         	call	___fttol	;wreg free
  3378  000E7E  C0B0  F2B6         	movff	?___fttol,main@dadoPoco+4
  3379  000E82  C0B1  F2B7         	movff	?___fttol+1,main@dadoPoco+5
  3380                           
  3381                           ;UT.c: 149: dadoPoco.pulsos1 =le_pulsos(1,retornaDado(1,0));
  3382  000E86  0E00               	movlw	0
  3383  000E88  0100               	movlb	0	; () banked
  3384  000E8A  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3385  000E8C  0E01               	movlw	1
  3386  000E8E  ECE5  F025         	call	_retornaDado
  3387  000E92  0100               	movlb	0	; () banked
  3388  000E94  6F65               	movwf	le_pulsos@modo& (0+255),b
  3389  000E96  0E01               	movlw	1
  3390  000E98  EC02  F01E         	call	_le_pulsos
  3391  000E9C  C065  F2B8         	movff	?_le_pulsos,main@dadoPoco+6
  3392  000EA0  C066  F2B9         	movff	?_le_pulsos+1,main@dadoPoco+7
  3393  000EA4  C067  F2BA         	movff	?_le_pulsos+2,main@dadoPoco+8
  3394  000EA8  C068  F2BB         	movff	?_le_pulsos+3,main@dadoPoco+9
  3395                           
  3396                           ;UT.c: 150: dadoPoco.pulsos2 =le_pulsos(2,retornaDado(1,1));
  3397  000EAC  0E01               	movlw	1
  3398  000EAE  0100               	movlb	0	; () banked
  3399  000EB0  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3400  000EB2  0E01               	movlw	1
  3401  000EB4  ECE5  F025         	call	_retornaDado
  3402  000EB8  0100               	movlb	0	; () banked
  3403  000EBA  6F65               	movwf	le_pulsos@modo& (0+255),b
  3404  000EBC  0E02               	movlw	2
  3405  000EBE  EC02  F01E         	call	_le_pulsos
  3406  000EC2  C065  F2BC         	movff	?_le_pulsos,main@dadoPoco+10
  3407  000EC6  C066  F2BD         	movff	?_le_pulsos+1,main@dadoPoco+11
  3408  000ECA  C067  F2BE         	movff	?_le_pulsos+2,main@dadoPoco+12
  3409  000ECE  C068  F2BF         	movff	?_le_pulsos+3,main@dadoPoco+13
  3410                           
  3411                           ;UT.c: 151: dadoPoco.pulsos3 =le_pulsos(3,retornaDado(1,2));
  3412  000ED2  0E02               	movlw	2
  3413  000ED4  0100               	movlb	0	; () banked
  3414  000ED6  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3415  000ED8  0E01               	movlw	1
  3416  000EDA  ECE5  F025         	call	_retornaDado
  3417  000EDE  0100               	movlb	0	; () banked
  3418  000EE0  6F65               	movwf	le_pulsos@modo& (0+255),b
  3419  000EE2  0E03               	movlw	3
  3420  000EE4  EC02  F01E         	call	_le_pulsos
  3421  000EE8  C065  F2C0         	movff	?_le_pulsos,main@dadoPoco+14
  3422  000EEC  C066  F2C1         	movff	?_le_pulsos+1,main@dadoPoco+15
  3423  000EF0  C067  F2C2         	movff	?_le_pulsos+2,main@dadoPoco+16
  3424  000EF4  C068  F2C3         	movff	?_le_pulsos+3,main@dadoPoco+17
  3425                           
  3426                           ;UT.c: 152: dadoPoco.pulsos4 =le_pulsos(4,retornaDado(1,3));
  3427  000EF8  0E03               	movlw	3
  3428  000EFA  0100               	movlb	0	; () banked
  3429  000EFC  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3430  000EFE  0E01               	movlw	1
  3431  000F00  ECE5  F025         	call	_retornaDado
  3432  000F04  0100               	movlb	0	; () banked
  3433  000F06  6F65               	movwf	le_pulsos@modo& (0+255),b
  3434  000F08  0E04               	movlw	4
  3435  000F0A  EC02  F01E         	call	_le_pulsos
  3436  000F0E  C065  F2C4         	movff	?_le_pulsos,main@dadoPoco+18
  3437  000F12  C066  F2C5         	movff	?_le_pulsos+1,main@dadoPoco+19
  3438  000F16  C067  F2C6         	movff	?_le_pulsos+2,main@dadoPoco+20
  3439  000F1A  C068  F2C7         	movff	?_le_pulsos+3,main@dadoPoco+21
  3440                           
  3441                           ;UT.c: 154: nivel1 = dadoPoco.nivel1;
  3442  000F1E  C2B4  F2ED         	movff	main@dadoPoco+2,_nivel1
  3443                           
  3444                           ;UT.c: 155: nivel2 = dadoPoco.nivel2;
  3445  000F22  C2B6  F2EC         	movff	main@dadoPoco+4,_nivel2
  3446                           
  3447                           ;UT.c: 156: pulsos1 = dadoPoco.pulsos1;
  3448  000F26  C2B8  F1FE         	movff	main@dadoPoco+6,_pulsos1
  3449                           
  3450                           ;UT.c: 157: pulsos2 = dadoPoco.pulsos2;
  3451  000F2A  C2BC  F1FD         	movff	main@dadoPoco+10,_pulsos2
  3452                           
  3453                           ;UT.c: 158: pulsos3 = dadoPoco.pulsos3;
  3454  000F2E  C2C0  F1FC         	movff	main@dadoPoco+14,_pulsos3
  3455                           
  3456                           ;UT.c: 159: pulsos4 = dadoPoco.pulsos4;
  3457  000F32  C2C4  F1FB         	movff	main@dadoPoco+18,_pulsos4
  3458                           
  3459                           ;UT.c: 161: LATDbits.LATD4 = retornaDado(0,0);
  3460  000F36  0E00               	movlw	0
  3461  000F38  0100               	movlb	0	; () banked
  3462  000F3A  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3463  000F3C  0E00               	movlw	0
  3464  000F3E  ECE5  F025         	call	_retornaDado
  3465  000F42  0101               	movlb	1	; () banked
  3466  000F44  6FED               	movwf	??_main& (0+255),b
  3467  000F46  3BED               	swapf	??_main& (0+255),f,b
  3468  000F48  508C               	movf	3980,w,c	;volatile
  3469  000F4A  19ED               	xorwf	??_main& (0+255),w,b
  3470  000F4C  0BEF               	andlw	-17
  3471  000F4E  19ED               	xorwf	??_main& (0+255),w,b
  3472  000F50  6E8C               	movwf	3980,c	;volatile
  3473                           
  3474                           ; BSR set to: 1
  3475                           ;UT.c: 162: LATDbits.LATD5 = retornaDado(0,3);
  3476  000F52  0E03               	movlw	3
  3477  000F54  0100               	movlb	0	; () banked
  3478  000F56  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3479  000F58  0E00               	movlw	0
  3480  000F5A  ECE5  F025         	call	_retornaDado
  3481  000F5E  0101               	movlb	1	; () banked
  3482  000F60  6FED               	movwf	??_main& (0+255),b
  3483  000F62  3BED               	swapf	??_main& (0+255),f,b
  3484  000F64  47ED               	rlncf	??_main& (0+255),f,b
  3485  000F66  508C               	movf	3980,w,c	;volatile
  3486  000F68  19ED               	xorwf	??_main& (0+255),w,b
  3487  000F6A  0BDF               	andlw	-33
  3488  000F6C  19ED               	xorwf	??_main& (0+255),w,b
  3489  000F6E  6E8C               	movwf	3980,c	;volatile
  3490                           
  3491                           ; BSR set to: 1
  3492                           ;UT.c: 163: LATDbits.LATD6 = retornaDado(0,2);
  3493  000F70  0E02               	movlw	2
  3494  000F72  0100               	movlb	0	; () banked
  3495  000F74  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3496  000F76  0E00               	movlw	0
  3497  000F78  ECE5  F025         	call	_retornaDado
  3498  000F7C  0101               	movlb	1	; () banked
  3499  000F7E  6FED               	movwf	??_main& (0+255),b
  3500  000F80  3BED               	swapf	??_main& (0+255),f,b
  3501  000F82  47ED               	rlncf	??_main& (0+255),f,b
  3502  000F84  47ED               	rlncf	??_main& (0+255),f,b
  3503  000F86  508C               	movf	3980,w,c	;volatile
  3504  000F88  19ED               	xorwf	??_main& (0+255),w,b
  3505  000F8A  0BBF               	andlw	-65
  3506  000F8C  19ED               	xorwf	??_main& (0+255),w,b
  3507  000F8E  6E8C               	movwf	3980,c	;volatile
  3508                           
  3509                           ; BSR set to: 1
  3510                           ;UT.c: 164: LATDbits.LATD7 = retornaDado(0,1);
  3511  000F90  0E01               	movlw	1
  3512  000F92  0100               	movlb	0	; () banked
  3513  000F94  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3514  000F96  0E00               	movlw	0
  3515  000F98  ECE5  F025         	call	_retornaDado
  3516  000F9C  0101               	movlb	1	; () banked
  3517  000F9E  6FED               	movwf	??_main& (0+255),b
  3518  000FA0  33ED               	rrcf	??_main& (0+255),f,b
  3519  000FA2  33ED               	rrcf	??_main& (0+255),f,b
  3520  000FA4  508C               	movf	3980,w,c	;volatile
  3521  000FA6  19ED               	xorwf	??_main& (0+255),w,b
  3522  000FA8  0B7F               	andlw	-129
  3523  000FAA  19ED               	xorwf	??_main& (0+255),w,b
  3524  000FAC  6E8C               	movwf	3980,c	;volatile
  3525                           
  3526                           ; BSR set to: 1
  3527                           ;UT.c: 166: feedback1 = (feedback1 & (~(1))) | (retornaDado(0,0));
  3528  000FAE  0E00               	movlw	0
  3529  000FB0  0100               	movlb	0	; () banked
  3530  000FB2  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3531  000FB4  0E00               	movlw	0
  3532  000FB6  ECE5  F025         	call	_retornaDado
  3533  000FBA  0101               	movlb	1	; () banked
  3534  000FBC  6FED               	movwf	??_main& (0+255),b
  3535  000FBE  0102               	movlb	2	; () banked
  3536  000FC0  51F1               	movf	_feedback1& (0+255),w,b
  3537  000FC2  0BFE               	andlw	254
  3538  000FC4  0101               	movlb	1	; () banked
  3539  000FC6  11ED               	iorwf	??_main& (0+255),w,b
  3540  000FC8  0102               	movlb	2	; () banked
  3541  000FCA  6FF1               	movwf	_feedback1& (0+255),b
  3542                           
  3543                           ; BSR set to: 2
  3544                           ;UT.c: 167: feedback1 = (feedback1 & (~(1<<1))) | (retornaDado(0,3)<<1);
  3545  000FCC  0E03               	movlw	3
  3546  000FCE  0100               	movlb	0	; () banked
  3547  000FD0  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3548  000FD2  0E00               	movlw	0
  3549  000FD4  ECE5  F025         	call	_retornaDado
  3550  000FD8  0101               	movlb	1	; () banked
  3551  000FDA  6FED               	movwf	??_main& (0+255),b
  3552  000FDC  90D8               	bcf	status,0,c
  3553  000FDE  35ED               	rlcf	??_main& (0+255),w,b
  3554  000FE0  6FEE               	movwf	(??_main+1)& (0+255),b
  3555  000FE2  0102               	movlb	2	; () banked
  3556  000FE4  51F1               	movf	_feedback1& (0+255),w,b
  3557  000FE6  0BFD               	andlw	253
  3558  000FE8  0101               	movlb	1	; () banked
  3559  000FEA  11EE               	iorwf	(??_main+1)& (0+255),w,b
  3560  000FEC  0102               	movlb	2	; () banked
  3561  000FEE  6FF1               	movwf	_feedback1& (0+255),b
  3562                           
  3563                           ; BSR set to: 2
  3564                           ;UT.c: 168: feedback1 = (feedback1 & (~(1<<2))) | (retornaDado(0,2)<<2);
  3565  000FF0  0E02               	movlw	2
  3566  000FF2  0100               	movlb	0	; () banked
  3567  000FF4  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3568  000FF6  0E00               	movlw	0
  3569  000FF8  ECE5  F025         	call	_retornaDado
  3570  000FFC  0101               	movlb	1	; () banked
  3571  000FFE  6FED               	movwf	??_main& (0+255),b
  3572  001000  90D8               	bcf	status,0,c
  3573  001002  37ED               	rlcf	??_main& (0+255),f,b
  3574  001004  90D8               	bcf	status,0,c
  3575  001006  37ED               	rlcf	??_main& (0+255),f,b
  3576  001008  0102               	movlb	2	; () banked
  3577  00100A  51F1               	movf	_feedback1& (0+255),w,b
  3578  00100C  0BFB               	andlw	251
  3579  00100E  0101               	movlb	1	; () banked
  3580  001010  11ED               	iorwf	??_main& (0+255),w,b
  3581  001012  0102               	movlb	2	; () banked
  3582  001014  6FF1               	movwf	_feedback1& (0+255),b
  3583                           
  3584                           ; BSR set to: 2
  3585                           ;UT.c: 169: feedback1 = (feedback1 & (~(1<<3))) | (retornaDado(0,1)<<3);
  3586  001016  0E01               	movlw	1
  3587  001018  0100               	movlb	0	; () banked
  3588  00101A  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3589  00101C  0E00               	movlw	0
  3590  00101E  ECE5  F025         	call	_retornaDado
  3591  001022  0101               	movlb	1	; () banked
  3592  001024  6FED               	movwf	??_main& (0+255),b
  3593  001026  90D8               	bcf	status,0,c
  3594  001028  37ED               	rlcf	??_main& (0+255),f,b
  3595  00102A  90D8               	bcf	status,0,c
  3596  00102C  37ED               	rlcf	??_main& (0+255),f,b
  3597  00102E  90D8               	bcf	status,0,c
  3598  001030  37ED               	rlcf	??_main& (0+255),f,b
  3599  001032  0102               	movlb	2	; () banked
  3600  001034  51F1               	movf	_feedback1& (0+255),w,b
  3601  001036  0BF7               	andlw	247
  3602  001038  0101               	movlb	1	; () banked
  3603  00103A  11ED               	iorwf	??_main& (0+255),w,b
  3604  00103C  0102               	movlb	2	; () banked
  3605  00103E  6FF1               	movwf	_feedback1& (0+255),b
  3606                           
  3607                           ; BSR set to: 2
  3608                           ;UT.c: 170: feedback1 = (feedback1 & (~(1<<4))) | (retornaDado(1,4)<<4);
  3609  001040  0E04               	movlw	4
  3610  001042  0100               	movlb	0	; () banked
  3611  001044  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3612  001046  0E01               	movlw	1
  3613  001048  ECE5  F025         	call	_retornaDado
  3614  00104C  0101               	movlb	1	; () banked
  3615  00104E  6FED               	movwf	??_main& (0+255),b
  3616  001050  3BED               	swapf	??_main& (0+255),f,b
  3617  001052  0EF0               	movlw	240
  3618  001054  17ED               	andwf	??_main& (0+255),f,b
  3619  001056  0102               	movlb	2	; () banked
  3620  001058  51F1               	movf	_feedback1& (0+255),w,b
  3621  00105A  0BEF               	andlw	239
  3622  00105C  0101               	movlb	1	; () banked
  3623  00105E  11ED               	iorwf	??_main& (0+255),w,b
  3624  001060  0102               	movlb	2	; () banked
  3625  001062  6FF1               	movwf	_feedback1& (0+255),b
  3626                           
  3627                           ; BSR set to: 2
  3628                           ;UT.c: 171: feedback1 = (feedback1 & (~(1<<5))) | (retornaDado(1,5)<<5);
  3629  001064  0E05               	movlw	5
  3630  001066  0100               	movlb	0	; () banked
  3631  001068  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3632  00106A  0E01               	movlw	1
  3633  00106C  ECE5  F025         	call	_retornaDado
  3634  001070  0101               	movlb	1	; () banked
  3635  001072  6FED               	movwf	??_main& (0+255),b
  3636  001074  0E05               	movlw	5
  3637  001076  6FEE               	movwf	(??_main+1)& (0+255),b
  3638  001078                     u10745:
  3639  001078  90D8               	bcf	status,0,c
  3640  00107A  37ED               	rlcf	??_main& (0+255),f,b
  3641  00107C  2FEE               	decfsz	(??_main+1)& (0+255),f,b
  3642  00107E  D7FC               	goto	u10745
  3643  001080  0102               	movlb	2	; () banked
  3644  001082  51F1               	movf	_feedback1& (0+255),w,b
  3645  001084  0BDF               	andlw	223
  3646  001086  0101               	movlb	1	; () banked
  3647  001088  11ED               	iorwf	??_main& (0+255),w,b
  3648  00108A  0102               	movlb	2	; () banked
  3649  00108C  6FF1               	movwf	_feedback1& (0+255),b
  3650                           
  3651                           ; BSR set to: 2
  3652                           ;UT.c: 172: feedback2 = (feedback2 & (~(1))) | (retornaDado(5,6));
  3653  00108E  0E06               	movlw	6
  3654  001090  0100               	movlb	0	; () banked
  3655  001092  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3656  001094  0E05               	movlw	5
  3657  001096  ECE5  F025         	call	_retornaDado
  3658  00109A  0101               	movlb	1	; () banked
  3659  00109C  6FED               	movwf	??_main& (0+255),b
  3660  00109E  0102               	movlb	2	; () banked
  3661  0010A0  51F0               	movf	_feedback2& (0+255),w,b
  3662  0010A2  0BFE               	andlw	254
  3663  0010A4  0101               	movlb	1	; () banked
  3664  0010A6  11ED               	iorwf	??_main& (0+255),w,b
  3665  0010A8  0102               	movlb	2	; () banked
  3666  0010AA  6FF0               	movwf	_feedback2& (0+255),b
  3667                           
  3668                           ; BSR set to: 2
  3669                           ;UT.c: 173: feedback2 = (feedback2 & (~(1<<1))) | (retornaDado(5,7)<<1);
  3670  0010AC  0E07               	movlw	7
  3671  0010AE  0100               	movlb	0	; () banked
  3672  0010B0  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3673  0010B2  0E05               	movlw	5
  3674  0010B4  ECE5  F025         	call	_retornaDado
  3675  0010B8  0101               	movlb	1	; () banked
  3676  0010BA  6FED               	movwf	??_main& (0+255),b
  3677  0010BC  90D8               	bcf	status,0,c
  3678  0010BE  35ED               	rlcf	??_main& (0+255),w,b
  3679  0010C0  6FEE               	movwf	(??_main+1)& (0+255),b
  3680  0010C2  0102               	movlb	2	; () banked
  3681  0010C4  51F0               	movf	_feedback2& (0+255),w,b
  3682  0010C6  0BFD               	andlw	253
  3683  0010C8  0101               	movlb	1	; () banked
  3684  0010CA  11EE               	iorwf	(??_main+1)& (0+255),w,b
  3685  0010CC  0102               	movlb	2	; () banked
  3686  0010CE  6FF0               	movwf	_feedback2& (0+255),b
  3687                           
  3688                           ; BSR set to: 2
  3689                           ;UT.c: 174: feedback2 = (feedback2 & (~(1<<2))) | (retornaDado(5,4)<<2);
  3690  0010D0  0E04               	movlw	4
  3691  0010D2  0100               	movlb	0	; () banked
  3692  0010D4  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3693  0010D6  0E05               	movlw	5
  3694  0010D8  ECE5  F025         	call	_retornaDado
  3695  0010DC  0101               	movlb	1	; () banked
  3696  0010DE  6FED               	movwf	??_main& (0+255),b
  3697  0010E0  90D8               	bcf	status,0,c
  3698  0010E2  37ED               	rlcf	??_main& (0+255),f,b
  3699  0010E4  90D8               	bcf	status,0,c
  3700  0010E6  37ED               	rlcf	??_main& (0+255),f,b
  3701  0010E8  0102               	movlb	2	; () banked
  3702  0010EA  51F0               	movf	_feedback2& (0+255),w,b
  3703  0010EC  0BFB               	andlw	251
  3704  0010EE  0101               	movlb	1	; () banked
  3705  0010F0  11ED               	iorwf	??_main& (0+255),w,b
  3706  0010F2  0102               	movlb	2	; () banked
  3707  0010F4  6FF0               	movwf	_feedback2& (0+255),b
  3708                           
  3709                           ; BSR set to: 2
  3710                           ;UT.c: 175: feedback2 = (feedback2 & (~(1<<3))) | (retornaDado(5,5)<<3);
  3711  0010F6  0E05               	movlw	5
  3712  0010F8  0100               	movlb	0	; () banked
  3713  0010FA  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3714  0010FC  0E05               	movlw	5
  3715  0010FE  ECE5  F025         	call	_retornaDado
  3716  001102  0101               	movlb	1	; () banked
  3717  001104  6FED               	movwf	??_main& (0+255),b
  3718  001106  90D8               	bcf	status,0,c
  3719  001108  37ED               	rlcf	??_main& (0+255),f,b
  3720  00110A  90D8               	bcf	status,0,c
  3721  00110C  37ED               	rlcf	??_main& (0+255),f,b
  3722  00110E  90D8               	bcf	status,0,c
  3723  001110  37ED               	rlcf	??_main& (0+255),f,b
  3724  001112  0102               	movlb	2	; () banked
  3725  001114  51F0               	movf	_feedback2& (0+255),w,b
  3726  001116  0BF7               	andlw	247
  3727  001118  0101               	movlb	1	; () banked
  3728  00111A  11ED               	iorwf	??_main& (0+255),w,b
  3729  00111C  0102               	movlb	2	; () banked
  3730  00111E  6FF0               	movwf	_feedback2& (0+255),b
  3731                           
  3732                           ; BSR set to: 2
  3733                           ;UT.c: 176: feedback2 = (feedback2 & (~(1<<4))) | (retornaDado(5,2)<<4);
  3734  001120  0E02               	movlw	2
  3735  001122  0100               	movlb	0	; () banked
  3736  001124  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3737  001126  0E05               	movlw	5
  3738  001128  ECE5  F025         	call	_retornaDado
  3739  00112C  0101               	movlb	1	; () banked
  3740  00112E  6FED               	movwf	??_main& (0+255),b
  3741  001130  3BED               	swapf	??_main& (0+255),f,b
  3742  001132  0EF0               	movlw	240
  3743  001134  17ED               	andwf	??_main& (0+255),f,b
  3744  001136  0102               	movlb	2	; () banked
  3745  001138  51F0               	movf	_feedback2& (0+255),w,b
  3746  00113A  0BEF               	andlw	239
  3747  00113C  0101               	movlb	1	; () banked
  3748  00113E  11ED               	iorwf	??_main& (0+255),w,b
  3749  001140  0102               	movlb	2	; () banked
  3750  001142  6FF0               	movwf	_feedback2& (0+255),b
  3751                           
  3752                           ; BSR set to: 2
  3753                           ;UT.c: 177: feedback2 = (feedback2 & (~(1<<5))) | (retornaDado(5,3)<<5);
  3754  001144  0E03               	movlw	3
  3755  001146  0100               	movlb	0	; () banked
  3756  001148  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3757  00114A  0E05               	movlw	5
  3758  00114C  ECE5  F025         	call	_retornaDado
  3759  001150  0101               	movlb	1	; () banked
  3760  001152  6FED               	movwf	??_main& (0+255),b
  3761  001154  0E05               	movlw	5
  3762  001156  6FEE               	movwf	(??_main+1)& (0+255),b
  3763  001158                     u10755:
  3764  001158  90D8               	bcf	status,0,c
  3765  00115A  37ED               	rlcf	??_main& (0+255),f,b
  3766  00115C  2FEE               	decfsz	(??_main+1)& (0+255),f,b
  3767  00115E  D7FC               	goto	u10755
  3768  001160  0102               	movlb	2	; () banked
  3769  001162  51F0               	movf	_feedback2& (0+255),w,b
  3770  001164  0BDF               	andlw	223
  3771  001166  0101               	movlb	1	; () banked
  3772  001168  11ED               	iorwf	??_main& (0+255),w,b
  3773  00116A  0102               	movlb	2	; () banked
  3774  00116C  6FF0               	movwf	_feedback2& (0+255),b
  3775                           
  3776                           ; BSR set to: 2
  3777                           ;UT.c: 178: feedback2 = (feedback2 & (~(1<<6))) | (retornaDado(5,0)<<6);
  3778  00116E  0E00               	movlw	0
  3779  001170  0100               	movlb	0	; () banked
  3780  001172  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3781  001174  0E05               	movlw	5
  3782  001176  ECE5  F025         	call	_retornaDado
  3783  00117A  0101               	movlb	1	; () banked
  3784  00117C  6FED               	movwf	??_main& (0+255),b
  3785  00117E  0E06               	movlw	6
  3786  001180  6FEE               	movwf	(??_main+1)& (0+255),b
  3787  001182                     u10765:
  3788  001182  90D8               	bcf	status,0,c
  3789  001184  37ED               	rlcf	??_main& (0+255),f,b
  3790  001186  2FEE               	decfsz	(??_main+1)& (0+255),f,b
  3791  001188  D7FC               	goto	u10765
  3792  00118A  0102               	movlb	2	; () banked
  3793  00118C  51F0               	movf	_feedback2& (0+255),w,b
  3794  00118E  0BBF               	andlw	191
  3795  001190  0101               	movlb	1	; () banked
  3796  001192  11ED               	iorwf	??_main& (0+255),w,b
  3797  001194  0102               	movlb	2	; () banked
  3798  001196  6FF0               	movwf	_feedback2& (0+255),b
  3799                           
  3800                           ; BSR set to: 2
  3801                           ;UT.c: 179: feedback2 = (feedback2 & (~(1<<7))) | (retornaDado(5,1)<<7);
  3802  001198  0E01               	movlw	1
  3803  00119A  0100               	movlb	0	; () banked
  3804  00119C  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3805  00119E  0E05               	movlw	5
  3806  0011A0  ECE5  F025         	call	_retornaDado
  3807  0011A4  0101               	movlb	1	; () banked
  3808  0011A6  6FED               	movwf	??_main& (0+255),b
  3809  0011A8  0E00               	movlw	0
  3810  0011AA  B1ED               	btfsc	??_main& (0+255),0,b
  3811  0011AC  0E80               	movlw	128
  3812  0011AE  6FED               	movwf	??_main& (0+255),b
  3813  0011B0  0102               	movlb	2	; () banked
  3814  0011B2  51F0               	movf	_feedback2& (0+255),w,b
  3815  0011B4  0B7F               	andlw	127
  3816  0011B6  0101               	movlb	1	; () banked
  3817  0011B8  11ED               	iorwf	??_main& (0+255),w,b
  3818  0011BA  0102               	movlb	2	; () banked
  3819  0011BC  6FF0               	movwf	_feedback2& (0+255),b
  3820                           
  3821                           ; BSR set to: 2
  3822                           ;UT.c: 181: if (retornaDado(0,4) == 1){
  3823  0011BE  0E04               	movlw	4
  3824  0011C0  0100               	movlb	0	; () banked
  3825  0011C2  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3826  0011C4  0E00               	movlw	0
  3827  0011C6  ECE5  F025         	call	_retornaDado
  3828  0011CA  06E8               	decf	wreg,f,c
  3829  0011CC  A4D8               	btfss	status,2,c
  3830  0011CE  D182               	goto	l1066
  3831                           
  3832                           ;UT.c: 182: uint8_t Icanal = retornaDado(6,6)<<6 | retornaDado(6,5)<<5 | retornaDado(6,4
      +                          )<<4 | retornaDado(6,3)<<3 | retornaDado(6,2)<<2 | retornaDado(6,1)<<1 | retornaDado(6,0
      +                          );
  3833  0011D0  0E00               	movlw	0
  3834  0011D2  0100               	movlb	0	; () banked
  3835  0011D4  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3836  0011D6  0E06               	movlw	6
  3837  0011D8  ECE5  F025         	call	_retornaDado
  3838  0011DC  0101               	movlb	1	; () banked
  3839  0011DE  6FED               	movwf	??_main& (0+255),b
  3840  0011E0  0E01               	movlw	1
  3841  0011E2  0100               	movlb	0	; () banked
  3842  0011E4  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3843  0011E6  0E06               	movlw	6
  3844  0011E8  ECE5  F025         	call	_retornaDado
  3845  0011EC  0101               	movlb	1	; () banked
  3846  0011EE  6FEE               	movwf	(??_main+1)& (0+255),b
  3847  0011F0  90D8               	bcf	status,0,c
  3848  0011F2  35EE               	rlcf	(??_main+1)& (0+255),w,b
  3849  0011F4  6FEF               	movwf	(??_main+2)& (0+255),b
  3850  0011F6  0E02               	movlw	2
  3851  0011F8  0100               	movlb	0	; () banked
  3852  0011FA  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3853  0011FC  0E06               	movlw	6
  3854  0011FE  ECE5  F025         	call	_retornaDado
  3855  001202  0101               	movlb	1	; () banked
  3856  001204  6FF0               	movwf	(??_main+3)& (0+255),b
  3857  001206  90D8               	bcf	status,0,c
  3858  001208  37F0               	rlcf	(??_main+3)& (0+255),f,b
  3859  00120A  90D8               	bcf	status,0,c
  3860  00120C  37F0               	rlcf	(??_main+3)& (0+255),f,b
  3861  00120E  0E03               	movlw	3
  3862  001210  0100               	movlb	0	; () banked
  3863  001212  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3864  001214  0E06               	movlw	6
  3865  001216  ECE5  F025         	call	_retornaDado
  3866  00121A  0101               	movlb	1	; () banked
  3867  00121C  6FF1               	movwf	(??_main+4)& (0+255),b
  3868  00121E  90D8               	bcf	status,0,c
  3869  001220  37F1               	rlcf	(??_main+4)& (0+255),f,b
  3870  001222  90D8               	bcf	status,0,c
  3871  001224  37F1               	rlcf	(??_main+4)& (0+255),f,b
  3872  001226  90D8               	bcf	status,0,c
  3873  001228  37F1               	rlcf	(??_main+4)& (0+255),f,b
  3874  00122A  0E04               	movlw	4
  3875  00122C  0100               	movlb	0	; () banked
  3876  00122E  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3877  001230  0E06               	movlw	6
  3878  001232  ECE5  F025         	call	_retornaDado
  3879  001236  0101               	movlb	1	; () banked
  3880  001238  6FF2               	movwf	(??_main+5)& (0+255),b
  3881  00123A  3BF2               	swapf	(??_main+5)& (0+255),f,b
  3882  00123C  0EF0               	movlw	240
  3883  00123E  17F2               	andwf	(??_main+5)& (0+255),f,b
  3884  001240  0E05               	movlw	5
  3885  001242  0100               	movlb	0	; () banked
  3886  001244  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3887  001246  0E06               	movlw	6
  3888  001248  ECE5  F025         	call	_retornaDado
  3889  00124C  0101               	movlb	1	; () banked
  3890  00124E  6FF3               	movwf	(??_main+6)& (0+255),b
  3891  001250  0E05               	movlw	5
  3892  001252  6FF4               	movwf	(??_main+7)& (0+255),b
  3893  001254                     u10785:
  3894  001254  90D8               	bcf	status,0,c
  3895  001256  37F3               	rlcf	(??_main+6)& (0+255),f,b
  3896  001258  2FF4               	decfsz	(??_main+7)& (0+255),f,b
  3897  00125A  D7FC               	goto	u10785
  3898  00125C  0E06               	movlw	6
  3899  00125E  0100               	movlb	0	; () banked
  3900  001260  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3901  001262  0E06               	movlw	6
  3902  001264  ECE5  F025         	call	_retornaDado
  3903  001268  0101               	movlb	1	; () banked
  3904  00126A  6FF5               	movwf	(??_main+8)& (0+255),b
  3905  00126C  0E06               	movlw	6
  3906  00126E  6FF6               	movwf	(??_main+9)& (0+255),b
  3907  001270                     u10795:
  3908  001270  90D8               	bcf	status,0,c
  3909  001272  37F5               	rlcf	(??_main+8)& (0+255),f,b
  3910  001274  2FF6               	decfsz	(??_main+9)& (0+255),f,b
  3911  001276  D7FC               	goto	u10795
  3912  001278  51F5               	movf	(??_main+8)& (0+255),w,b
  3913  00127A  11F3               	iorwf	(??_main+6)& (0+255),w,b
  3914  00127C  11F2               	iorwf	(??_main+5)& (0+255),w,b
  3915  00127E  11F1               	iorwf	(??_main+4)& (0+255),w,b
  3916  001280  11F0               	iorwf	(??_main+3)& (0+255),w,b
  3917  001282  11EF               	iorwf	(??_main+2)& (0+255),w,b
  3918  001284  11ED               	iorwf	??_main& (0+255),w,b
  3919  001286  0102               	movlb	2	; () banked
  3920  001288  6F9E               	movwf	main@Icanal& (0+255),b
  3921                           
  3922                           ;UT.c: 183: uint8_t Fcanal = retornaDado(7,6)<<6 | retornaDado(7,5)<<5 | retornaDado(7,4
      +                          )<<4 | retornaDado(7,3)<<3 | retornaDado(7,2)<<2 | retornaDado(7,1)<<1 | retornaDado(7,0
      +                          );
  3923  00128A  0E00               	movlw	0
  3924  00128C  0100               	movlb	0	; () banked
  3925  00128E  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3926  001290  0E07               	movlw	7
  3927  001292  ECE5  F025         	call	_retornaDado
  3928  001296  0101               	movlb	1	; () banked
  3929  001298  6FED               	movwf	??_main& (0+255),b
  3930  00129A  0E01               	movlw	1
  3931  00129C  0100               	movlb	0	; () banked
  3932  00129E  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3933  0012A0  0E07               	movlw	7
  3934  0012A2  ECE5  F025         	call	_retornaDado
  3935  0012A6  0101               	movlb	1	; () banked
  3936  0012A8  6FEE               	movwf	(??_main+1)& (0+255),b
  3937  0012AA  90D8               	bcf	status,0,c
  3938  0012AC  35EE               	rlcf	(??_main+1)& (0+255),w,b
  3939  0012AE  6FEF               	movwf	(??_main+2)& (0+255),b
  3940  0012B0  0E02               	movlw	2
  3941  0012B2  0100               	movlb	0	; () banked
  3942  0012B4  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3943  0012B6  0E07               	movlw	7
  3944  0012B8  ECE5  F025         	call	_retornaDado
  3945  0012BC  0101               	movlb	1	; () banked
  3946  0012BE  6FF0               	movwf	(??_main+3)& (0+255),b
  3947  0012C0  90D8               	bcf	status,0,c
  3948  0012C2  37F0               	rlcf	(??_main+3)& (0+255),f,b
  3949  0012C4  90D8               	bcf	status,0,c
  3950  0012C6  37F0               	rlcf	(??_main+3)& (0+255),f,b
  3951  0012C8  0E03               	movlw	3
  3952  0012CA  0100               	movlb	0	; () banked
  3953  0012CC  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3954  0012CE  0E07               	movlw	7
  3955  0012D0  ECE5  F025         	call	_retornaDado
  3956  0012D4  0101               	movlb	1	; () banked
  3957  0012D6  6FF1               	movwf	(??_main+4)& (0+255),b
  3958  0012D8  90D8               	bcf	status,0,c
  3959  0012DA  37F1               	rlcf	(??_main+4)& (0+255),f,b
  3960  0012DC  90D8               	bcf	status,0,c
  3961  0012DE  37F1               	rlcf	(??_main+4)& (0+255),f,b
  3962  0012E0  90D8               	bcf	status,0,c
  3963  0012E2  37F1               	rlcf	(??_main+4)& (0+255),f,b
  3964  0012E4  0E04               	movlw	4
  3965  0012E6  0100               	movlb	0	; () banked
  3966  0012E8  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3967  0012EA  0E07               	movlw	7
  3968  0012EC  ECE5  F025         	call	_retornaDado
  3969  0012F0  0101               	movlb	1	; () banked
  3970  0012F2  6FF2               	movwf	(??_main+5)& (0+255),b
  3971  0012F4  3BF2               	swapf	(??_main+5)& (0+255),f,b
  3972  0012F6  0EF0               	movlw	240
  3973  0012F8  17F2               	andwf	(??_main+5)& (0+255),f,b
  3974  0012FA  0E05               	movlw	5
  3975  0012FC  0100               	movlb	0	; () banked
  3976  0012FE  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3977  001300  0E07               	movlw	7
  3978  001302  ECE5  F025         	call	_retornaDado
  3979  001306  0101               	movlb	1	; () banked
  3980  001308  6FF3               	movwf	(??_main+6)& (0+255),b
  3981  00130A  0E05               	movlw	5
  3982  00130C  6FF4               	movwf	(??_main+7)& (0+255),b
  3983  00130E                     u10805:
  3984  00130E  90D8               	bcf	status,0,c
  3985  001310  37F3               	rlcf	(??_main+6)& (0+255),f,b
  3986  001312  2FF4               	decfsz	(??_main+7)& (0+255),f,b
  3987  001314  D7FC               	goto	u10805
  3988  001316  0E06               	movlw	6
  3989  001318  0100               	movlb	0	; () banked
  3990  00131A  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  3991  00131C  0E07               	movlw	7
  3992  00131E  ECE5  F025         	call	_retornaDado
  3993  001322  0101               	movlb	1	; () banked
  3994  001324  6FF5               	movwf	(??_main+8)& (0+255),b
  3995  001326  0E06               	movlw	6
  3996  001328  6FF6               	movwf	(??_main+9)& (0+255),b
  3997  00132A                     u10815:
  3998  00132A  90D8               	bcf	status,0,c
  3999  00132C  37F5               	rlcf	(??_main+8)& (0+255),f,b
  4000  00132E  2FF6               	decfsz	(??_main+9)& (0+255),f,b
  4001  001330  D7FC               	goto	u10815
  4002  001332  51F5               	movf	(??_main+8)& (0+255),w,b
  4003  001334  11F3               	iorwf	(??_main+6)& (0+255),w,b
  4004  001336  11F2               	iorwf	(??_main+5)& (0+255),w,b
  4005  001338  11F1               	iorwf	(??_main+4)& (0+255),w,b
  4006  00133A  11F0               	iorwf	(??_main+3)& (0+255),w,b
  4007  00133C  11EF               	iorwf	(??_main+2)& (0+255),w,b
  4008  00133E  11ED               	iorwf	??_main& (0+255),w,b
  4009  001340  0102               	movlb	2	; () banked
  4010  001342  6FAB               	movwf	main@Fcanal& (0+255),b
  4011                           
  4012                           ; BSR set to: 2
  4013                           ;UT.c: 184: for (uint8_t i=0; i<Fcanal; i++){
  4014  001344  0E00               	movlw	0
  4015  001346  6FAC               	movwf	main@i_3355& (0+255),b
  4016  001348  D009               	goto	l1067
  4017  00134A                     
  4018                           ; BSR set to: 2
  4019                           ;UT.c: 185: SetChannelLoRaWan (i,0);
  4020                           
  4021                           ; BSR set to: 2
  4022  00134A  0E00               	movlw	0
  4023  00134C  0100               	movlb	0	; () banked
  4024  00134E  6FF1               	movwf	SetChannelLoRaWan@ligado& (0+255),b
  4025  001350  0102               	movlb	2	; () banked
  4026  001352  51AC               	movf	main@i_3355& (0+255),w,b
  4027  001354  EC48  F025         	call	_SetChannelLoRaWan
  4028  001358  0102               	movlb	2	; () banked
  4029  00135A  2BAC               	incf	main@i_3355& (0+255),f,b
  4030  00135C                     l1067:
  4031                           
  4032                           ; BSR set to: 2
  4033                           
  4034                           ; BSR set to: 2
  4035  00135C  51AB               	movf	main@Fcanal& (0+255),w,b
  4036  00135E  5DAC               	subwf	main@i_3355& (0+255),w,b
  4037  001360  A0D8               	btfss	status,0,c
  4038  001362  D7F3               	goto	l1068
  4039                           
  4040                           ; BSR set to: 2
  4041                           ;UT.c: 186: }
  4042                           ;UT.c: 187: for (uint8_t i=Icanal; i<=Fcanal; i++){
  4043  001364  C29E  F2AD         	movff	main@Icanal,main@i_3356
  4044  001368  D009               	goto	l1070
  4045  00136A                     
  4046                           ; BSR set to: 2
  4047                           ;UT.c: 188: SetChannelLoRaWan (i,1);
  4048                           
  4049                           ; BSR set to: 2
  4050  00136A  0E01               	movlw	1
  4051  00136C  0100               	movlb	0	; () banked
  4052  00136E  6FF1               	movwf	SetChannelLoRaWan@ligado& (0+255),b
  4053  001370  0102               	movlb	2	; () banked
  4054  001372  51AD               	movf	main@i_3356& (0+255),w,b
  4055  001374  EC48  F025         	call	_SetChannelLoRaWan
  4056  001378  0102               	movlb	2	; () banked
  4057  00137A  2BAD               	incf	main@i_3356& (0+255),f,b
  4058  00137C                     l1070:
  4059                           
  4060                           ; BSR set to: 2
  4061                           
  4062                           ; BSR set to: 2
  4063  00137C  51AD               	movf	main@i_3356& (0+255),w,b
  4064  00137E  5DAB               	subwf	main@Fcanal& (0+255),w,b
  4065  001380  B0D8               	btfsc	status,0,c
  4066  001382  D7F3               	goto	l1071
  4067                           
  4068                           ; BSR set to: 2
  4069                           ;UT.c: 189: }
  4070                           ;UT.c: 190: if (retornaDado(0,7) == 1){
  4071                           
  4072                           ; BSR set to: 2
  4073  001384  0E07               	movlw	7
  4074  001386  0100               	movlb	0	; () banked
  4075  001388  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  4076  00138A  0E00               	movlw	0
  4077  00138C  ECE5  F025         	call	_retornaDado
  4078  001390  06E8               	decf	wreg,f,c
  4079  001392  A4D8               	btfss	status,2,c
  4080  001394  D096               	goto	l1073
  4081                           
  4082                           ;UT.c: 191: SetAdr(STATE_OFF);
  4083  001396  0E04               	movlw	low _STATE_OFF
  4084  001398  0100               	movlb	0	; () banked
  4085  00139A  6FF1               	movwf	SetAdr@state& (0+255),b
  4086  00139C  0E7E               	movlw	high _STATE_OFF
  4087  00139E  6FF2               	movwf	(SetAdr@state+1)& (0+255),b
  4088  0013A0  ECAC  F028         	call	_SetAdr	;wreg free
  4089                           
  4090                           ;UT.c: 192: uint8_t dr = retornaDado(2,3)<<3 | retornaDado(2,2)<<2 | retornaDado(2,1)<<1
      +                           | retornaDado(2,0);
  4091  0013A4  0E00               	movlw	0
  4092  0013A6  0100               	movlb	0	; () banked
  4093  0013A8  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  4094  0013AA  0E02               	movlw	2
  4095  0013AC  ECE5  F025         	call	_retornaDado
  4096  0013B0  0101               	movlb	1	; () banked
  4097  0013B2  6FED               	movwf	??_main& (0+255),b
  4098  0013B4  0E01               	movlw	1
  4099  0013B6  0100               	movlb	0	; () banked
  4100  0013B8  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  4101  0013BA  0E02               	movlw	2
  4102  0013BC  ECE5  F025         	call	_retornaDado
  4103  0013C0  0101               	movlb	1	; () banked
  4104  0013C2  6FEE               	movwf	(??_main+1)& (0+255),b
  4105  0013C4  90D8               	bcf	status,0,c
  4106  0013C6  35EE               	rlcf	(??_main+1)& (0+255),w,b
  4107  0013C8  6FEF               	movwf	(??_main+2)& (0+255),b
  4108  0013CA  0E02               	movlw	2
  4109  0013CC  0100               	movlb	0	; () banked
  4110  0013CE  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  4111  0013D0  0E02               	movlw	2
  4112  0013D2  ECE5  F025         	call	_retornaDado
  4113  0013D6  0101               	movlb	1	; () banked
  4114  0013D8  6FF0               	movwf	(??_main+3)& (0+255),b
  4115  0013DA  90D8               	bcf	status,0,c
  4116  0013DC  37F0               	rlcf	(??_main+3)& (0+255),f,b
  4117  0013DE  90D8               	bcf	status,0,c
  4118  0013E0  37F0               	rlcf	(??_main+3)& (0+255),f,b
  4119  0013E2  0E03               	movlw	3
  4120  0013E4  0100               	movlb	0	; () banked
  4121  0013E6  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  4122  0013E8  0E02               	movlw	2
  4123  0013EA  ECE5  F025         	call	_retornaDado
  4124  0013EE  0101               	movlb	1	; () banked
  4125  0013F0  6FF1               	movwf	(??_main+4)& (0+255),b
  4126  0013F2  90D8               	bcf	status,0,c
  4127  0013F4  37F1               	rlcf	(??_main+4)& (0+255),f,b
  4128  0013F6  90D8               	bcf	status,0,c
  4129  0013F8  37F1               	rlcf	(??_main+4)& (0+255),f,b
  4130  0013FA  90D8               	bcf	status,0,c
  4131  0013FC  35F1               	rlcf	(??_main+4)& (0+255),w,b
  4132  0013FE  11F0               	iorwf	(??_main+3)& (0+255),w,b
  4133  001400  11EF               	iorwf	(??_main+2)& (0+255),w,b
  4134  001402  11ED               	iorwf	??_main& (0+255),w,b
  4135  001404  0102               	movlb	2	; () banked
  4136  001406  6FAE               	movwf	main@dr& (0+255),b
  4137                           
  4138                           ; BSR set to: 2
  4139                           ;UT.c: 195: DataRate(dr);
  4140                           
  4141                           ; BSR set to: 2
  4142                           
  4143                           ; BSR set to: 2
  4144                           ;UT.c: 194: dr++;
  4145                           
  4146                           ; BSR set to: 2
  4147                           
  4148                           ;UT.c: 193: if (sizeof(dadoPoco)<11 && dr==0)
  4149  001408  C2AE  F0F1         	movff	main@dr,DataRate@dr
  4150  00140C  0100               	movlb	0	; () banked
  4151  00140E  6BF2               	clrf	(DataRate@dr+1)& (0+255),b
  4152  001410  EC87  F027         	call	_DataRate	;wreg free
  4153                           
  4154                           ;UT.c: 196: if (retornaDado(0,5) == 1){
  4155  001414  0E05               	movlw	5
  4156  001416  0100               	movlb	0	; () banked
  4157  001418  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  4158  00141A  0E00               	movlw	0
  4159  00141C  ECE5  F025         	call	_retornaDado
  4160  001420  06E8               	decf	wreg,f,c
  4161  001422  A4D8               	btfss	status,2,c
  4162  001424  D055               	goto	l1078
  4163                           
  4164                           ;UT.c: 197: uint8_t sf = retornaDado(2,7)<<3 | retornaDado(2,6)<<2 | retornaDado(2,5)<<1
      +                           | retornaDado(2,4);
  4165  001426  0E04               	movlw	4
  4166  001428  0100               	movlb	0	; () banked
  4167  00142A  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  4168  00142C  0E02               	movlw	2
  4169  00142E  ECE5  F025         	call	_retornaDado
  4170  001432  0101               	movlb	1	; () banked
  4171  001434  6FED               	movwf	??_main& (0+255),b
  4172  001436  0E05               	movlw	5
  4173  001438  0100               	movlb	0	; () banked
  4174  00143A  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  4175  00143C  0E02               	movlw	2
  4176  00143E  ECE5  F025         	call	_retornaDado
  4177  001442  0101               	movlb	1	; () banked
  4178  001444  6FEE               	movwf	(??_main+1)& (0+255),b
  4179  001446  90D8               	bcf	status,0,c
  4180  001448  35EE               	rlcf	(??_main+1)& (0+255),w,b
  4181  00144A  6FEF               	movwf	(??_main+2)& (0+255),b
  4182  00144C  0E06               	movlw	6
  4183  00144E  0100               	movlb	0	; () banked
  4184  001450  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  4185  001452  0E02               	movlw	2
  4186  001454  ECE5  F025         	call	_retornaDado
  4187  001458  0101               	movlb	1	; () banked
  4188  00145A  6FF0               	movwf	(??_main+3)& (0+255),b
  4189  00145C  90D8               	bcf	status,0,c
  4190  00145E  37F0               	rlcf	(??_main+3)& (0+255),f,b
  4191  001460  90D8               	bcf	status,0,c
  4192  001462  37F0               	rlcf	(??_main+3)& (0+255),f,b
  4193  001464  0E07               	movlw	7
  4194  001466  0100               	movlb	0	; () banked
  4195  001468  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  4196  00146A  0E02               	movlw	2
  4197  00146C  ECE5  F025         	call	_retornaDado
  4198  001470  0101               	movlb	1	; () banked
  4199  001472  6FF1               	movwf	(??_main+4)& (0+255),b
  4200  001474  90D8               	bcf	status,0,c
  4201  001476  37F1               	rlcf	(??_main+4)& (0+255),f,b
  4202  001478  90D8               	bcf	status,0,c
  4203  00147A  37F1               	rlcf	(??_main+4)& (0+255),f,b
  4204  00147C  90D8               	bcf	status,0,c
  4205  00147E  35F1               	rlcf	(??_main+4)& (0+255),w,b
  4206  001480  11F0               	iorwf	(??_main+3)& (0+255),w,b
  4207  001482  11EF               	iorwf	(??_main+2)& (0+255),w,b
  4208  001484  11ED               	iorwf	??_main& (0+255),w,b
  4209  001486  0102               	movlb	2	; () banked
  4210  001488  6F9F               	movwf	main@sf& (0+255),b
  4211                           
  4212                           ; BSR set to: 2
  4213                           ;UT.c: 198: SetSpreadingFactor (sf);
  4214  00148A  519F               	movf	main@sf& (0+255),w,b
  4215  00148C  EC2F  F028         	call	_SetSpreadingFactor
  4216                           
  4217                           ;UT.c: 199: if (retornaDado(0,6) == 0)
  4218  001490  0E06               	movlw	6
  4219  001492  0100               	movlb	0	; () banked
  4220  001494  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  4221  001496  0E00               	movlw	0
  4222  001498  ECE5  F025         	call	_retornaDado
  4223  00149C  0900               	iorlw	0
  4224  00149E  A4D8               	btfss	status,2,c
  4225  0014A0  D008               	goto	l1076
  4226                           
  4227                           ;UT.c: 200: SetBandWidth (125);
  4228  0014A2  0E00               	movlw	0
  4229  0014A4  0100               	movlb	0	; () banked
  4230  0014A6  6FF2               	movwf	(SetBandWidth@bw+1)& (0+255),b
  4231  0014A8  0E7D               	movlw	125
  4232  0014AA  6FF1               	movwf	SetBandWidth@bw& (0+255),b
  4233  0014AC  EC64  F027         	call	_SetBandWidth	;wreg free
  4234  0014B0  D00F               	goto	l1078
  4235  0014B2                     l1076:
  4236                           
  4237                           ;UT.c: 201: else
  4238                           ;UT.c: 202: SetBandWidth (500);
  4239  0014B2  0E01               	movlw	1
  4240  0014B4  0100               	movlb	0	; () banked
  4241  0014B6  6FF2               	movwf	(SetBandWidth@bw+1)& (0+255),b
  4242  0014B8  0EF4               	movlw	244
  4243  0014BA  6FF1               	movwf	SetBandWidth@bw& (0+255),b
  4244  0014BC  EC64  F027         	call	_SetBandWidth	;wreg free
  4245                           
  4246                           ;UT.c: 203: }}
  4247  0014C0  D007               	goto	l1078
  4248  0014C2                     l1073:
  4249                           
  4250                           ;UT.c: 204: else
  4251                           ;UT.c: 205: SetAdr(STATE_ON);
  4252  0014C2  0E08               	movlw	low _STATE_ON
  4253  0014C4  0100               	movlb	0	; () banked
  4254  0014C6  6FF1               	movwf	SetAdr@state& (0+255),b
  4255  0014C8  0E7E               	movlw	high _STATE_ON
  4256  0014CA  6FF2               	movwf	(SetAdr@state+1)& (0+255),b
  4257  0014CC  ECAC  F028         	call	_SetAdr	;wreg free
  4258  0014D0                     l1078:
  4259                           
  4260                           ;UT.c: 206: MacSave();
  4261  0014D0  EC23  F029         	call	_MacSave	;wreg free
  4262  0014D4                     l1066:
  4263                           
  4264                           ;UT.c: 207: }
  4265                           ;UT.c: 209: dadoPoco.feedback1=feedback1;
  4266  0014D4  C2F1  F2B2         	movff	_feedback1,main@dadoPoco
  4267                           
  4268                           ;UT.c: 210: dadoPoco.feedback2=feedback2;
  4269  0014D8  C2F0  F2B3         	movff	_feedback2,main@dadoPoco+1
  4270                           
  4271                           ;UT.c: 212: uint8_t resp=TxLoRaWan(1, 3, (const uint8_t*)&dadoPoco, sizeof(dadoPoco));
  4272  0014DC  0E03               	movlw	3
  4273  0014DE  0100               	movlb	0	; () banked
  4274  0014E0  6FF1               	movwf	TxLoRaWan@porta& (0+255),b
  4275  0014E2  0EB2               	movlw	low main@dadoPoco
  4276  0014E4  6FF2               	movwf	TxLoRaWan@data& (0+255),b
  4277  0014E6  0E02               	movlw	high main@dadoPoco
  4278  0014E8  6FF3               	movwf	(TxLoRaWan@data+1)& (0+255),b
  4279  0014EA  0E16               	movlw	22
  4280  0014EC  6FF4               	movwf	TxLoRaWan@tamData& (0+255),b
  4281  0014EE  0E01               	movlw	1
  4282  0014F0  EC6F  F00D         	call	_TxLoRaWan
  4283  0014F4  0102               	movlb	2	; () banked
  4284  0014F6  6FA0               	movwf	main@resp& (0+255),b
  4285                           
  4286                           ; BSR set to: 2
  4287                           ;UT.c: 214: if (resp == 0){
  4288  0014F8  51A0               	movf	main@resp& (0+255),w,b
  4289  0014FA  A4D8               	btfss	status,2,c
  4290  0014FC  D017               	goto	l1080
  4291                           
  4292                           ; BSR set to: 2
  4293                           ;UT.c: 215: contador++;
  4294  0014FE  2BA1               	incf	main@contador& (0+255),f,b
  4295                           
  4296                           ; BSR set to: 2
  4297                           ;UT.c: 216: if (contador > 2 ){
  4298  001500  0E02               	movlw	2
  4299  001502  65A1               	cpfsgt	main@contador& (0+255),b
  4300  001504  D013               	goto	l1080
  4301                           
  4302                           ; BSR set to: 2
  4303                           ;UT.c: 217: SetAdr(STATE_OFF);
  4304  001506  0E04               	movlw	low _STATE_OFF
  4305  001508  0100               	movlb	0	; () banked
  4306  00150A  6FF1               	movwf	SetAdr@state& (0+255),b
  4307  00150C  0E7E               	movlw	high _STATE_OFF
  4308  00150E  6FF2               	movwf	(SetAdr@state+1)& (0+255),b
  4309  001510  ECAC  F028         	call	_SetAdr	;wreg free
  4310                           
  4311                           ;UT.c: 218: DataRate(1);
  4312  001514  0E00               	movlw	0
  4313  001516  0100               	movlb	0	; () banked
  4314  001518  6FF2               	movwf	(DataRate@dr+1)& (0+255),b
  4315  00151A  0E01               	movlw	1
  4316  00151C  6FF1               	movwf	DataRate@dr& (0+255),b
  4317  00151E  EC87  F027         	call	_DataRate	;wreg free
  4318                           
  4319                           ;UT.c: 219: MacSave();
  4320  001522  EC23  F029         	call	_MacSave	;wreg free
  4321                           
  4322                           ;UT.c: 220: contador=0;
  4323  001526  0E00               	movlw	0
  4324  001528  0102               	movlb	2	; () banked
  4325  00152A  6FA1               	movwf	main@contador& (0+255),b
  4326  00152C                     l1080:
  4327                           
  4328                           ; BSR set to: 2
  4329                           ;UT.c: 221: }
  4330                           ;UT.c: 222: }
  4331                           ;UT.c: 228: if (verificaUSB() && (cdc_trf_state == 0))
  4332                           
  4333                           ; BSR set to: 2
  4334                           
  4335                           ; BSR set to: 2
  4336  00152C  EC73  F029         	call	_verificaUSB	;wreg free
  4337  001530  0900               	iorlw	0
  4338  001532  B4D8               	btfsc	status,2,c
  4339  001534  D051               	goto	l1081
  4340  001536  0100               	movlb	0	; () banked
  4341  001538  51FF               	movf	_cdc_trf_state& (0+255),w,b
  4342  00153A  A4D8               	btfss	status,2,c
  4343  00153C  D04D               	goto	l1081
  4344                           
  4345                           ; BSR set to: 0
  4346                           ;UT.c: 229: {
  4347                           ;UT.c: 230: char data[150];
  4348                           ;UT.c: 232: sprintf(data,"resposta: %2X %2X %2X %2X %2X %2X %2X %2X %2X %2X  %d  %d  %d 
      +                           %d  %d  %d  %d  %d  %d  %d\n\r",
  4349                           ;UT.c: 233: dadosRecebidos[0].data,
  4350                           ;UT.c: 234: dadosRecebidos[1].data,
  4351                           ;UT.c: 235: dadosRecebidos[2].data,
  4352                           ;UT.c: 236: dadosRecebidos[3].data,
  4353                           ;UT.c: 237: dadosRecebidos[4].data,
  4354                           ;UT.c: 238: dadosRecebidos[5].data,
  4355                           ;UT.c: 239: dadosRecebidos[6].data,
  4356                           ;UT.c: 240: dadosRecebidos[7].data,
  4357                           ;UT.c: 241: dadosRecebidos[8].data,
  4358                           ;UT.c: 242: dadosRecebidos[9].data,
  4359  00153E  0E00               	movlw	low main@data
  4360  001540  6FBF               	movwf	sprintf@sp& (0+255),b
  4361  001542  0E02               	movlw	high main@data
  4362  001544  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  4363  001546  0E21               	movlw	low STR_4
  4364  001548  6FC1               	movwf	sprintf@f& (0+255),b
  4365  00154A  0E7E               	movlw	high STR_4
  4366  00154C  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  4367  00154E  C301  F0C3         	movff	_dadosRecebidos+1,?_sprintf+4	;volatile
  4368  001552  6BC4               	clrf	(?_sprintf+5)& (0+255),b
  4369  001554  C303  F0C5         	movff	_dadosRecebidos+3,?_sprintf+6	;volatile
  4370  001558  6BC6               	clrf	(?_sprintf+7)& (0+255),b
  4371  00155A  C305  F0C7         	movff	_dadosRecebidos+5,?_sprintf+8	;volatile
  4372  00155E  6BC8               	clrf	(?_sprintf+9)& (0+255),b
  4373  001560  C307  F0C9         	movff	_dadosRecebidos+7,?_sprintf+10	;volatile
  4374  001564  6BCA               	clrf	(?_sprintf+11)& (0+255),b
  4375  001566  C309  F0CB         	movff	_dadosRecebidos+9,?_sprintf+12	;volatile
  4376  00156A  6BCC               	clrf	(?_sprintf+13)& (0+255),b
  4377  00156C  C30B  F0CD         	movff	_dadosRecebidos+11,?_sprintf+14	;volatile
  4378  001570  6BCE               	clrf	(?_sprintf+15)& (0+255),b
  4379  001572  C30D  F0CF         	movff	_dadosRecebidos+13,?_sprintf+16	;volatile
  4380  001576  6BD0               	clrf	(?_sprintf+17)& (0+255),b
  4381  001578  C30F  F0D1         	movff	_dadosRecebidos+15,?_sprintf+18	;volatile
  4382  00157C  6BD2               	clrf	(?_sprintf+19)& (0+255),b
  4383  00157E  C311  F0D3         	movff	_dadosRecebidos+17,?_sprintf+20	;volatile
  4384  001582  6BD4               	clrf	(?_sprintf+21)& (0+255),b
  4385  001584  C313  F0D5         	movff	_dadosRecebidos+19,?_sprintf+22	;volatile
  4386  001588  6BD6               	clrf	(?_sprintf+23)& (0+255),b
  4387  00158A  C300  F0D7         	movff	_dadosRecebidos,?_sprintf+24	;volatile
  4388  00158E  6BD8               	clrf	(?_sprintf+25)& (0+255),b
  4389  001590  C302  F0D9         	movff	_dadosRecebidos+2,?_sprintf+26	;volatile
  4390  001594  6BDA               	clrf	(?_sprintf+27)& (0+255),b
  4391  001596  C304  F0DB         	movff	_dadosRecebidos+4,?_sprintf+28	;volatile
  4392  00159A  6BDC               	clrf	(?_sprintf+29)& (0+255),b
  4393  00159C  C306  F0DD         	movff	_dadosRecebidos+6,?_sprintf+30	;volatile
  4394  0015A0  6BDE               	clrf	(?_sprintf+31)& (0+255),b
  4395  0015A2  C308  F0DF         	movff	_dadosRecebidos+8,?_sprintf+32	;volatile
  4396  0015A6  6BE0               	clrf	(?_sprintf+33)& (0+255),b
  4397  0015A8  C30A  F0E1         	movff	_dadosRecebidos+10,?_sprintf+34	;volatile
  4398  0015AC  6BE2               	clrf	(?_sprintf+35)& (0+255),b
  4399  0015AE  C30C  F0E3         	movff	_dadosRecebidos+12,?_sprintf+36	;volatile
  4400  0015B2  6BE4               	clrf	(?_sprintf+37)& (0+255),b
  4401  0015B4  C30E  F0E5         	movff	_dadosRecebidos+14,?_sprintf+38	;volatile
  4402  0015B8  6BE6               	clrf	(?_sprintf+39)& (0+255),b
  4403  0015BA  C310  F0E7         	movff	_dadosRecebidos+16,?_sprintf+40	;volatile
  4404  0015BE  6BE8               	clrf	(?_sprintf+41)& (0+255),b
  4405  0015C0  C2EB  F0E9         	movff	_Sequence,?_sprintf+42
  4406  0015C4  6BEA               	clrf	(?_sprintf+43)& (0+255),b
  4407  0015C6  EC09  F000         	call	_sprintf	;wreg free
  4408                           
  4409                           ;UT.c: 254: putsUSBUSART(data);
  4410  0015CA  0E00               	movlw	low main@data
  4411  0015CC  0100               	movlb	0	; () banked
  4412  0015CE  6F60               	movwf	putsUSBUSART@data& (0+255),b
  4413  0015D0  0E02               	movlw	high main@data
  4414  0015D2  6F61               	movwf	(putsUSBUSART@data+1)& (0+255),b
  4415  0015D4  ECF5  F026         	call	_putsUSBUSART	;wreg free
  4416  0015D8                     l1081:
  4417                           
  4418                           ;UT.c: 255: }
  4419                           ;UT.c: 256: uint32_t deltaTempo=(millis()-tempo);
  4420  0015D8  C296  F1ED         	movff	main@tempo,??_main
  4421  0015DC  C297  F1EE         	movff	main@tempo+1,??_main+1
  4422  0015E0  C298  F1EF         	movff	main@tempo+2,??_main+2
  4423  0015E4  C299  F1F0         	movff	main@tempo+3,??_main+3
  4424  0015E8  0101               	movlb	1	; () banked
  4425  0015EA  1FED               	comf	??_main& (0+255),f,b
  4426  0015EC  1FEE               	comf	(??_main+1)& (0+255),f,b
  4427  0015EE  1FEF               	comf	(??_main+2)& (0+255),f,b
  4428  0015F0  1FF0               	comf	(??_main+3)& (0+255),f,b
  4429  0015F2  2BED               	incf	??_main& (0+255),f,b
  4430  0015F4  0E00               	movlw	0
  4431  0015F6  23EE               	addwfc	(??_main+1)& (0+255),f,b
  4432  0015F8  23EF               	addwfc	(??_main+2)& (0+255),f,b
  4433  0015FA  23F0               	addwfc	(??_main+3)& (0+255),f,b
  4434  0015FC  EC22  F02A         	call	_millis	;wreg free
  4435  001600  0101               	movlb	1	; () banked
  4436  001602  51ED               	movf	??_main& (0+255),w,b
  4437  001604  0100               	movlb	0	; () banked
  4438  001606  2560               	addwf	?_millis& (0+255),w,b
  4439  001608  0102               	movlb	2	; () banked
  4440  00160A  6FA2               	movwf	main@deltaTempo& (0+255),b
  4441  00160C  0101               	movlb	1	; () banked
  4442  00160E  51EE               	movf	(??_main+1)& (0+255),w,b
  4443  001610  0100               	movlb	0	; () banked
  4444  001612  2161               	addwfc	(?_millis+1)& (0+255),w,b
  4445  001614  0102               	movlb	2	; () banked
  4446  001616  6FA3               	movwf	(main@deltaTempo+1)& (0+255),b
  4447  001618  0101               	movlb	1	; () banked
  4448  00161A  51EF               	movf	(??_main+2)& (0+255),w,b
  4449  00161C  0100               	movlb	0	; () banked
  4450  00161E  2162               	addwfc	(?_millis+2)& (0+255),w,b
  4451  001620  0102               	movlb	2	; () banked
  4452  001622  6FA4               	movwf	(main@deltaTempo+2)& (0+255),b
  4453  001624  0101               	movlb	1	; () banked
  4454  001626  51F0               	movf	(??_main+3)& (0+255),w,b
  4455  001628  0100               	movlb	0	; () banked
  4456  00162A  2163               	addwfc	(?_millis+3)& (0+255),w,b
  4457  00162C  0102               	movlb	2	; () banked
  4458  00162E  6FA5               	movwf	(main@deltaTempo+3)& (0+255),b
  4459                           
  4460                           ; BSR set to: 2
  4461                           ;UT.c: 257: if (deltaTempo<30000)
  4462  001630  51A5               	movf	(main@deltaTempo+3)& (0+255),w,b
  4463  001632  11A4               	iorwf	(main@deltaTempo+2)& (0+255),w,b
  4464  001634  E105               	bnz	u10921
  4465  001636  0E30               	movlw	48
  4466  001638  5DA2               	subwf	main@deltaTempo& (0+255),w,b
  4467  00163A  0E75               	movlw	117
  4468  00163C  59A3               	subwfb	(main@deltaTempo+1)& (0+255),w,b
  4469  00163E  B0D8               	btfsc	status,0,c
  4470  001640                     u10921:
  4471  001640  EFE9  F006         	goto	l1065
  4472                           
  4473                           ; BSR set to: 2
  4474                           ;UT.c: 258: {
  4475                           ;UT.c: 259: uint32_t tempoTimeOut=30000-deltaTempo;
  4476  001644  C2A2  F1ED         	movff	main@deltaTempo,??_main
  4477  001648  C2A3  F1EE         	movff	main@deltaTempo+1,??_main+1
  4478  00164C  C2A4  F1EF         	movff	main@deltaTempo+2,??_main+2
  4479  001650  C2A5  F1F0         	movff	main@deltaTempo+3,??_main+3
  4480  001654  0101               	movlb	1	; () banked
  4481  001656  1FED               	comf	??_main& (0+255),f,b
  4482  001658  1FEE               	comf	(??_main+1)& (0+255),f,b
  4483  00165A  1FEF               	comf	(??_main+2)& (0+255),f,b
  4484  00165C  1FF0               	comf	(??_main+3)& (0+255),f,b
  4485  00165E  2BED               	incf	??_main& (0+255),f,b
  4486  001660  0E00               	movlw	0
  4487  001662  23EE               	addwfc	(??_main+1)& (0+255),f,b
  4488  001664  23EF               	addwfc	(??_main+2)& (0+255),f,b
  4489  001666  23F0               	addwfc	(??_main+3)& (0+255),f,b
  4490  001668  0E30               	movlw	48
  4491  00166A  25ED               	addwf	??_main& (0+255),w,b
  4492  00166C  0102               	movlb	2	; () banked
  4493  00166E  6F9A               	movwf	main@tempoTimeOut& (0+255),b
  4494  001670  0E75               	movlw	117
  4495  001672  0101               	movlb	1	; () banked
  4496  001674  21EE               	addwfc	(??_main+1)& (0+255),w,b
  4497  001676  0102               	movlb	2	; () banked
  4498  001678  6F9B               	movwf	(main@tempoTimeOut+1)& (0+255),b
  4499  00167A  0E00               	movlw	0
  4500  00167C  0101               	movlb	1	; () banked
  4501  00167E  21EF               	addwfc	(??_main+2)& (0+255),w,b
  4502  001680  0102               	movlb	2	; () banked
  4503  001682  6F9C               	movwf	(main@tempoTimeOut+2)& (0+255),b
  4504  001684  0E00               	movlw	0
  4505  001686  0101               	movlb	1	; () banked
  4506  001688  21F0               	addwfc	(??_main+3)& (0+255),w,b
  4507  00168A  0102               	movlb	2	; () banked
  4508  00168C  6F9D               	movwf	(main@tempoTimeOut+3)& (0+255),b
  4509                           
  4510                           ; BSR set to: 2
  4511                           ;UT.c: 260: delay(tempoTimeOut);
  4512  00168E  C29A  F06D         	movff	main@tempoTimeOut,delay@time
  4513  001692  C29B  F06E         	movff	main@tempoTimeOut+1,delay@time+1
  4514  001696  C29C  F06F         	movff	main@tempoTimeOut+2,delay@time+2
  4515  00169A  C29D  F070         	movff	main@tempoTimeOut+3,delay@time+3
  4516  00169E  ECD6  F024         	call	_delay	;wreg free
  4517  0016A2  EFE9  F006         	goto	l1065
  4518  0016A6                     __end_of_main:
  4519                           	opt stack 0
  4520                           tblptru	equ	0xFF8
  4521                           tblptrh	equ	0xFF7
  4522                           tblptrl	equ	0xFF6
  4523                           tablat	equ	0xFF5
  4524                           postinc0	equ	0xFEE
  4525                           wreg	equ	0xFE8
  4526                           postdec1	equ	0xFE5
  4527                           fsr1l	equ	0xFE1
  4528                           status	equ	0xFD8
  4529                           
  4530 ;; *************** function _setup_uart *****************
  4531 ;; Defined at:
  4532 ;;		line 13 in file "uart/uart.c"
  4533 ;; Parameters:    Size  Location     Type
  4534 ;;  baudRate        4   13[BANK0 ] unsigned long 
  4535 ;; Auto vars:     Size  Location     Type
  4536 ;;  brg             4   17[BANK0 ] unsigned long 
  4537 ;; Return value:  Size  Location     Type
  4538 ;;                  1    wreg      void 
  4539 ;; Registers used:
  4540 ;;		wreg, status,2, status,0, cstack
  4541 ;; Tracked objects:
  4542 ;;		On entry : 0/0
  4543 ;;		On exit  : 0/0
  4544 ;;		Unchanged: 0/0
  4545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4546 ;;      Params:         0       4       0       0       0       0       0       0       0
  4547 ;;      Locals:         0       4       0       0       0       0       0       0       0
  4548 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4549 ;;      Totals:         0       8       0       0       0       0       0       0       0
  4550 ;;Total ram usage:        8 bytes
  4551 ;; Hardware stack levels used:    1
  4552 ;; Hardware stack levels required when called:   11
  4553 ;; This function calls:
  4554 ;;		___lldiv
  4555 ;; This function is called by:
  4556 ;;		_main
  4557 ;; This function uses a non-reentrant model
  4558 ;;
  4559                           
  4560                           	psect	text1
  4561  004374                     __ptext1:
  4562                           	opt stack 0
  4563  004374                     _setup_uart:
  4564                           	opt stack 19
  4565                           
  4566                           ;uart.c: 15: uint32_t brg;
  4567                           ;uart.c: 17: PORTCbits.RC6=1;
  4568                           
  4569                           ;incstack = 0
  4570  004374  8C82               	bsf	3970,6,c	;volatile
  4571                           
  4572                           ;uart.c: 18: TRISCbits.RC6=0;
  4573  004376  9C94               	bcf	3988,6,c	;volatile
  4574                           
  4575                           ;uart.c: 20: PORTCbits.RC7=1;
  4576  004378  8E82               	bsf	3970,7,c	;volatile
  4577                           
  4578                           ;uart.c: 21: TRISCbits.RC7=1;
  4579  00437A  8E94               	bsf	3988,7,c	;volatile
  4580                           
  4581                           ;uart.c: 23: TXSTAbits.BRGH=1;
  4582  00437C  84AC               	bsf	4012,2,c	;volatile
  4583                           
  4584                           ;uart.c: 24: BAUDCONbits.BRG16=1;
  4585  00437E  86B8               	bsf	4024,3,c	;volatile
  4586                           
  4587                           ;uart.c: 25: brg = ((48000000*10/4)/(baudRate)-5);
  4588  004380  0E00               	movlw	0
  4589  004382  0100               	movlb	0	; () banked
  4590  004384  6F60               	movwf	___lldiv@dividend& (0+255),b
  4591  004386  0E0E               	movlw	14
  4592  004388  6F61               	movwf	(___lldiv@dividend+1)& (0+255),b
  4593  00438A  0E27               	movlw	39
  4594  00438C  6F62               	movwf	(___lldiv@dividend+2)& (0+255),b
  4595  00438E  0E07               	movlw	7
  4596  004390  6F63               	movwf	(___lldiv@dividend+3)& (0+255),b
  4597  004392  C06D  F064         	movff	setup_uart@baudRate,___lldiv@divisor
  4598  004396  C06E  F065         	movff	setup_uart@baudRate+1,___lldiv@divisor+1
  4599  00439A  C06F  F066         	movff	setup_uart@baudRate+2,___lldiv@divisor+2
  4600  00439E  C070  F067         	movff	setup_uart@baudRate+3,___lldiv@divisor+3
  4601  0043A2  EC53  F024         	call	___lldiv	;wreg free
  4602  0043A6  0EFB               	movlw	251
  4603  0043A8  0100               	movlb	0	; () banked
  4604  0043AA  2560               	addwf	?___lldiv& (0+255),w,b
  4605  0043AC  6F71               	movwf	setup_uart@brg& (0+255),b
  4606  0043AE  0EFF               	movlw	255
  4607  0043B0  2161               	addwfc	(?___lldiv+1)& (0+255),w,b
  4608  0043B2  6F72               	movwf	(setup_uart@brg+1)& (0+255),b
  4609  0043B4  0EFF               	movlw	255
  4610  0043B6  2162               	addwfc	(?___lldiv+2)& (0+255),w,b
  4611  0043B8  6F73               	movwf	(setup_uart@brg+2)& (0+255),b
  4612  0043BA  0EFF               	movlw	255
  4613  0043BC  2163               	addwfc	(?___lldiv+3)& (0+255),w,b
  4614  0043BE  6F74               	movwf	(setup_uart@brg+3)& (0+255),b
  4615                           
  4616                           ;uart.c: 26: brg /= 10;
  4617  0043C0  C071  F060         	movff	setup_uart@brg,___lldiv@dividend
  4618  0043C4  C072  F061         	movff	setup_uart@brg+1,___lldiv@dividend+1
  4619  0043C8  C073  F062         	movff	setup_uart@brg+2,___lldiv@dividend+2
  4620  0043CC  C074  F063         	movff	setup_uart@brg+3,___lldiv@dividend+3
  4621  0043D0  0E0A               	movlw	10
  4622  0043D2  6F64               	movwf	___lldiv@divisor& (0+255),b
  4623  0043D4  0E00               	movlw	0
  4624  0043D6  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  4625  0043D8  0E00               	movlw	0
  4626  0043DA  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  4627  0043DC  0E00               	movlw	0
  4628  0043DE  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  4629  0043E0  EC53  F024         	call	___lldiv	;wreg free
  4630  0043E4  C060  F071         	movff	?___lldiv,setup_uart@brg
  4631  0043E8  C061  F072         	movff	?___lldiv+1,setup_uart@brg+1
  4632  0043EC  C062  F073         	movff	?___lldiv+2,setup_uart@brg+2
  4633  0043F0  C063  F074         	movff	?___lldiv+3,setup_uart@brg+3
  4634                           
  4635                           ;uart.c: 27: SPBRG=(uint8_t)brg;
  4636  0043F4  C071  FFAF         	movff	setup_uart@brg,4015	;volatile
  4637                           
  4638                           ;uart.c: 28: SPBRGH=(uint8_t)(brg >> 8);
  4639  0043F8  C072  FFB0         	movff	setup_uart@brg+1,4016	;volatile
  4640                           
  4641                           ;uart.c: 30: TXSTAbits.SYNC=0;
  4642  0043FC  98AC               	bcf	4012,4,c	;volatile
  4643                           
  4644                           ;uart.c: 31: TXSTAbits.SENDB=0;
  4645  0043FE  96AC               	bcf	4012,3,c	;volatile
  4646                           
  4647                           ;uart.c: 32: RCSTAbits.SPEN=1;
  4648  004400  8EAB               	bsf	4011,7,c	;volatile
  4649                           
  4650                           ;uart.c: 34: BAUDCONbits.TXCKP=0;
  4651  004402  98B8               	bcf	4024,4,c	;volatile
  4652                           
  4653                           ;uart.c: 35: BAUDCONbits.RXDTP=0;
  4654  004404  9AB8               	bcf	4024,5,c	;volatile
  4655                           
  4656                           ;uart.c: 36: BAUDCONbits.ABDEN=0;
  4657  004406  90B8               	bcf	4024,0,c	;volatile
  4658                           
  4659                           ;uart.c: 37: TXSTAbits.TX9=0;
  4660  004408  9CAC               	bcf	4012,6,c	;volatile
  4661                           
  4662                           ;uart.c: 38: RCSTAbits.RX9=0;
  4663  00440A  9CAB               	bcf	4011,6,c	;volatile
  4664                           
  4665                           ;uart.c: 40: RCSTAbits.CREN=1;
  4666  00440C  88AB               	bsf	4011,4,c	;volatile
  4667                           
  4668                           ;uart.c: 41: TXSTAbits.TXEN=1;
  4669  00440E  8AAC               	bsf	4012,5,c	;volatile
  4670                           
  4671                           ;uart.c: 43: RCIE=1;
  4672  004410  8A9D               	bsf	3997,5,c	;volatile
  4673  004412  0012               	return		;funcret
  4674  004414                     __end_of_setup_uart:
  4675                           	opt stack 0
  4676                           tblptru	equ	0xFF8
  4677                           tblptrh	equ	0xFF7
  4678                           tblptrl	equ	0xFF6
  4679                           tablat	equ	0xFF5
  4680                           postinc0	equ	0xFEE
  4681                           wreg	equ	0xFE8
  4682                           postdec1	equ	0xFE5
  4683                           fsr1l	equ	0xFE1
  4684                           status	equ	0xFD8
  4685                           
  4686 ;; *************** function _setup_pulsos *****************
  4687 ;; Defined at:
  4688 ;;		line 10 in file "Pulses.c"
  4689 ;; Parameters:    Size  Location     Type
  4690 ;;		None
  4691 ;; Auto vars:     Size  Location     Type
  4692 ;;		None
  4693 ;; Return value:  Size  Location     Type
  4694 ;;                  1    wreg      void 
  4695 ;; Registers used:
  4696 ;;		wreg, status,2
  4697 ;; Tracked objects:
  4698 ;;		On entry : 0/0
  4699 ;;		On exit  : 0/0
  4700 ;;		Unchanged: 0/0
  4701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4702 ;;      Params:         0       0       0       0       0       0       0       0       0
  4703 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4704 ;;      Temps:          0       1       0       0       0       0       0       0       0
  4705 ;;      Totals:         0       1       0       0       0       0       0       0       0
  4706 ;;Total ram usage:        1 bytes
  4707 ;; Hardware stack levels used:    1
  4708 ;; Hardware stack levels required when called:   10
  4709 ;; This function calls:
  4710 ;;		Nothing
  4711 ;; This function is called by:
  4712 ;;		_main
  4713 ;; This function uses a non-reentrant model
  4714 ;;
  4715                           
  4716                           	psect	text2
  4717  004220                     __ptext2:
  4718                           	opt stack 0
  4719  004220                     _setup_pulsos:
  4720                           	opt stack 20
  4721                           
  4722                           ;Pulses.c: 12: TRISDbits.RD0=1;
  4723                           
  4724                           ;incstack = 0
  4725  004220  8095               	bsf	3989,0,c	;volatile
  4726                           
  4727                           ;Pulses.c: 13: dig_1=PORTDbits.RD0;
  4728  004222  A083               	btfss	3971,0,c	;volatile
  4729  004224  D004               	goto	u9330
  4730  004226  0100               	movlb	0	; () banked
  4731  004228  6B60               	clrf	??_setup_pulsos& (0+255),b
  4732  00422A  2B60               	incf	??_setup_pulsos& (0+255),f,b
  4733  00422C  D002               	goto	u9338
  4734  00422E                     u9330:
  4735  00422E  0100               	movlb	0	; () banked
  4736  004230  6B60               	clrf	??_setup_pulsos& (0+255),b
  4737  004232                     u9338:
  4738  004232  5160               	movf	??_setup_pulsos& (0+255),w,b
  4739  004234  0102               	movlb	2	; () banked
  4740  004236  6FDE               	movwf	_dig_1& (0+255),b	;volatile
  4741  004238  6BDF               	clrf	(_dig_1+1)& (0+255),b	;volatile
  4742                           
  4743                           ; BSR set to: 2
  4744                           ;Pulses.c: 14: TRISDbits.RD1=1;
  4745  00423A  8295               	bsf	3989,1,c	;volatile
  4746                           
  4747                           ;Pulses.c: 15: dig_2=PORTDbits.RD1;
  4748  00423C  A283               	btfss	3971,1,c	;volatile
  4749  00423E  D004               	goto	u9340
  4750  004240  0100               	movlb	0	; () banked
  4751  004242  6B60               	clrf	??_setup_pulsos& (0+255),b
  4752  004244  2B60               	incf	??_setup_pulsos& (0+255),f,b
  4753  004246  D002               	goto	u9348
  4754  004248                     u9340:
  4755  004248  0100               	movlb	0	; () banked
  4756  00424A  6B60               	clrf	??_setup_pulsos& (0+255),b
  4757  00424C                     u9348:
  4758  00424C  5160               	movf	??_setup_pulsos& (0+255),w,b
  4759  00424E  0102               	movlb	2	; () banked
  4760  004250  6FDC               	movwf	_dig_2& (0+255),b	;volatile
  4761  004252  6BDD               	clrf	(_dig_2+1)& (0+255),b	;volatile
  4762                           
  4763                           ; BSR set to: 2
  4764                           ;Pulses.c: 16: TRISDbits.RD2=1;
  4765  004254  8495               	bsf	3989,2,c	;volatile
  4766                           
  4767                           ;Pulses.c: 17: dig_3=PORTDbits.RD2;
  4768  004256  A483               	btfss	3971,2,c	;volatile
  4769  004258  D004               	goto	u9350
  4770  00425A  0100               	movlb	0	; () banked
  4771  00425C  6B60               	clrf	??_setup_pulsos& (0+255),b
  4772  00425E  2B60               	incf	??_setup_pulsos& (0+255),f,b
  4773  004260  D002               	goto	u9358
  4774  004262                     u9350:
  4775  004262  0100               	movlb	0	; () banked
  4776  004264  6B60               	clrf	??_setup_pulsos& (0+255),b
  4777  004266                     u9358:
  4778  004266  5160               	movf	??_setup_pulsos& (0+255),w,b
  4779  004268  0102               	movlb	2	; () banked
  4780  00426A  6FDA               	movwf	_dig_3& (0+255),b	;volatile
  4781  00426C  6BDB               	clrf	(_dig_3+1)& (0+255),b	;volatile
  4782                           
  4783                           ; BSR set to: 2
  4784                           ;Pulses.c: 18: TRISDbits.RD3=1;
  4785  00426E  8695               	bsf	3989,3,c	;volatile
  4786                           
  4787                           ;Pulses.c: 19: dig_4=PORTDbits.RD3;
  4788  004270  A683               	btfss	3971,3,c	;volatile
  4789  004272  D004               	goto	u9360
  4790  004274  0100               	movlb	0	; () banked
  4791  004276  6B60               	clrf	??_setup_pulsos& (0+255),b
  4792  004278  2B60               	incf	??_setup_pulsos& (0+255),f,b
  4793  00427A  D002               	goto	u9368
  4794  00427C                     u9360:
  4795  00427C  0100               	movlb	0	; () banked
  4796  00427E  6B60               	clrf	??_setup_pulsos& (0+255),b
  4797  004280                     u9368:
  4798  004280  5160               	movf	??_setup_pulsos& (0+255),w,b
  4799  004282  0103               	movlb	3	; () banked
  4800  004284  6F4E               	movwf	_dig_4& (0+255),b	;volatile
  4801  004286  6B4F               	clrf	(_dig_4+1)& (0+255),b	;volatile
  4802                           
  4803                           ;Pulses.c: 20: freqPulses1=0;
  4804  004288  0E00               	movlw	0
  4805  00428A  6F3A               	movwf	_freqPulses1& (0+255),b	;volatile
  4806  00428C  0E00               	movlw	0
  4807  00428E  6F3B               	movwf	(_freqPulses1+1)& (0+255),b	;volatile
  4808  004290  0E00               	movlw	0
  4809  004292  6F3C               	movwf	(_freqPulses1+2)& (0+255),b	;volatile
  4810  004294  0E00               	movlw	0
  4811  004296  6F3D               	movwf	(_freqPulses1+3)& (0+255),b	;volatile
  4812                           
  4813                           ;Pulses.c: 21: freqPulses2=0;
  4814  004298  0E00               	movlw	0
  4815  00429A  6F36               	movwf	_freqPulses2& (0+255),b	;volatile
  4816  00429C  0E00               	movlw	0
  4817  00429E  6F37               	movwf	(_freqPulses2+1)& (0+255),b	;volatile
  4818  0042A0  0E00               	movlw	0
  4819  0042A2  6F38               	movwf	(_freqPulses2+2)& (0+255),b	;volatile
  4820  0042A4  0E00               	movlw	0
  4821  0042A6  6F39               	movwf	(_freqPulses2+3)& (0+255),b	;volatile
  4822                           
  4823                           ;Pulses.c: 22: freqPulses3=0;
  4824  0042A8  0E00               	movlw	0
  4825  0042AA  6F32               	movwf	_freqPulses3& (0+255),b	;volatile
  4826  0042AC  0E00               	movlw	0
  4827  0042AE  6F33               	movwf	(_freqPulses3+1)& (0+255),b	;volatile
  4828  0042B0  0E00               	movlw	0
  4829  0042B2  6F34               	movwf	(_freqPulses3+2)& (0+255),b	;volatile
  4830  0042B4  0E00               	movlw	0
  4831  0042B6  6F35               	movwf	(_freqPulses3+3)& (0+255),b	;volatile
  4832                           
  4833                           ;Pulses.c: 23: freqPulses4=0;
  4834  0042B8  0E00               	movlw	0
  4835  0042BA  6F2E               	movwf	_freqPulses4& (0+255),b	;volatile
  4836  0042BC  0E00               	movlw	0
  4837  0042BE  6F2F               	movwf	(_freqPulses4+1)& (0+255),b	;volatile
  4838  0042C0  0E00               	movlw	0
  4839  0042C2  6F30               	movwf	(_freqPulses4+2)& (0+255),b	;volatile
  4840  0042C4  0E00               	movlw	0
  4841  0042C6  6F31               	movwf	(_freqPulses4+3)& (0+255),b	;volatile
  4842                           
  4843                           ; BSR set to: 3
  4844  0042C8  0012               	return		;funcret
  4845  0042CA                     __end_of_setup_pulsos:
  4846                           	opt stack 0
  4847                           tblptru	equ	0xFF8
  4848                           tblptrh	equ	0xFF7
  4849                           tblptrl	equ	0xFF6
  4850                           tablat	equ	0xFF5
  4851                           postinc0	equ	0xFEE
  4852                           wreg	equ	0xFE8
  4853                           postdec1	equ	0xFE5
  4854                           fsr1l	equ	0xFE1
  4855                           status	equ	0xFD8
  4856                           
  4857 ;; *************** function _setup_ccp1 *****************
  4858 ;; Defined at:
  4859 ;;		line 27 in file "Timer.c"
  4860 ;; Parameters:    Size  Location     Type
  4861 ;;		None
  4862 ;; Auto vars:     Size  Location     Type
  4863 ;;		None
  4864 ;; Return value:  Size  Location     Type
  4865 ;;                  1    wreg      void 
  4866 ;; Registers used:
  4867 ;;		wreg, status,2
  4868 ;; Tracked objects:
  4869 ;;		On entry : 0/0
  4870 ;;		On exit  : 0/0
  4871 ;;		Unchanged: 0/0
  4872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4873 ;;      Params:         0       0       0       0       0       0       0       0       0
  4874 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4875 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4876 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4877 ;;Total ram usage:        0 bytes
  4878 ;; Hardware stack levels used:    1
  4879 ;; Hardware stack levels required when called:   10
  4880 ;; This function calls:
  4881 ;;		Nothing
  4882 ;; This function is called by:
  4883 ;;		_main
  4884 ;; This function uses a non-reentrant model
  4885 ;;
  4886                           
  4887                           	psect	text3
  4888  004F98                     __ptext3:
  4889                           	opt stack 0
  4890  004F98                     _setup_ccp1:
  4891                           	opt stack 20
  4892                           
  4893                           ;Timer.c: 29: aaa = 1;
  4894                           
  4895                           ; BSR set to: 3
  4896                           ;incstack = 0
  4897  004F98  0E01               	movlw	1
  4898  004F9A  0102               	movlb	2	; () banked
  4899  004F9C  6FF2               	movwf	_aaa& (0+255),b
  4900                           
  4901                           ; BSR set to: 2
  4902                           ;Timer.c: 30: GIEH = 0;
  4903  004F9E  9EF2               	bcf	intcon,7,c	;volatile
  4904                           
  4905                           ;Timer.c: 31: T3CON=0b10111000;
  4906  004FA0  0EB8               	movlw	184
  4907  004FA2  6EB1               	movwf	4017,c	;volatile
  4908                           
  4909                           ;Timer.c: 32: TMR1H=0x00;
  4910  004FA4  0E00               	movlw	0
  4911  004FA6  6ECF               	movwf	4047,c	;volatile
  4912                           
  4913                           ;Timer.c: 33: TMR1L=0x00;
  4914  004FA8  0E00               	movlw	0
  4915  004FAA  6ECE               	movwf	4046,c	;volatile
  4916                           
  4917                           ;Timer.c: 34: CCPR1H=0x05;
  4918  004FAC  0E05               	movlw	5
  4919  004FAE  6EBF               	movwf	4031,c	;volatile
  4920                           
  4921                           ;Timer.c: 35: CCPR1L=0xDC;
  4922  004FB0  0EDC               	movlw	220
  4923  004FB2  6EBE               	movwf	4030,c	;volatile
  4924                           
  4925                           ;Timer.c: 36: ticks=0;
  4926  004FB4  0E00               	movlw	0
  4927  004FB6  0103               	movlb	3	; () banked
  4928  004FB8  6F2A               	movwf	_ticks& (0+255),b	;volatile
  4929  004FBA  0E00               	movlw	0
  4930  004FBC  6F2B               	movwf	(_ticks+1)& (0+255),b	;volatile
  4931  004FBE  0E00               	movlw	0
  4932  004FC0  6F2C               	movwf	(_ticks+2)& (0+255),b	;volatile
  4933  004FC2  0E00               	movlw	0
  4934  004FC4  6F2D               	movwf	(_ticks+3)& (0+255),b	;volatile
  4935                           
  4936                           ; BSR set to: 3
  4937                           ;Timer.c: 38: CCP1IF=0;
  4938  004FC6  949E               	bcf	3998,2,c	;volatile
  4939                           
  4940                           ;Timer.c: 39: T1CON=0b11110001;
  4941  004FC8  0EF1               	movlw	241
  4942  004FCA  6ECD               	movwf	4045,c	;volatile
  4943                           
  4944                           ;Timer.c: 40: CCP1CON = 0b00001011;
  4945  004FCC  0E0B               	movlw	11
  4946  004FCE  6EBD               	movwf	4029,c	;volatile
  4947                           
  4948                           ; BSR set to: 3
  4949                           ;Timer.c: 41: CCP1IE=1;
  4950  004FD0  849D               	bsf	3997,2,c	;volatile
  4951                           
  4952                           ; BSR set to: 3
  4953                           ;Timer.c: 42: IPR1bits.CCP1IP=1;
  4954  004FD2  849F               	bsf	3999,2,c	;volatile
  4955                           
  4956                           ; BSR set to: 3
  4957                           ;Timer.c: 43: RCONbits.IPEN = 1;
  4958  004FD4  8ED0               	bsf	4048,7,c	;volatile
  4959                           
  4960                           ; BSR set to: 3
  4961                           ;Timer.c: 44: GIEH = 1;
  4962  004FD6  8EF2               	bsf	intcon,7,c	;volatile
  4963                           
  4964                           ; BSR set to: 3
  4965  004FD8  0012               	return		;funcret
  4966  004FDA                     __end_of_setup_ccp1:
  4967                           	opt stack 0
  4968                           tblptru	equ	0xFF8
  4969                           tblptrh	equ	0xFF7
  4970                           tblptrl	equ	0xFF6
  4971                           tablat	equ	0xFF5
  4972                           intcon	equ	0xFF2
  4973                           postinc0	equ	0xFEE
  4974                           wreg	equ	0xFE8
  4975                           postdec1	equ	0xFE5
  4976                           fsr1l	equ	0xFE1
  4977                           status	equ	0xFD8
  4978                           
  4979 ;; *************** function _setup_AD *****************
  4980 ;; Defined at:
  4981 ;;		line 10 in file "AD.c"
  4982 ;; Parameters:    Size  Location     Type
  4983 ;;		None
  4984 ;; Auto vars:     Size  Location     Type
  4985 ;;		None
  4986 ;; Return value:  Size  Location     Type
  4987 ;;                  1    wreg      void 
  4988 ;; Registers used:
  4989 ;;		wreg, status,2
  4990 ;; Tracked objects:
  4991 ;;		On entry : 0/0
  4992 ;;		On exit  : 0/0
  4993 ;;		Unchanged: 0/0
  4994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4995 ;;      Params:         0       0       0       0       0       0       0       0       0
  4996 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4997 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4998 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4999 ;;Total ram usage:        0 bytes
  5000 ;; Hardware stack levels used:    1
  5001 ;; Hardware stack levels required when called:   10
  5002 ;; This function calls:
  5003 ;;		Nothing
  5004 ;; This function is called by:
  5005 ;;		_main
  5006 ;; This function uses a non-reentrant model
  5007 ;;
  5008                           
  5009                           	psect	text4
  5010  005522                     __ptext4:
  5011                           	opt stack 0
  5012  005522                     _setup_AD:
  5013                           	opt stack 20
  5014                           
  5015                           ;AD.c: 12: ADON=0;
  5016                           
  5017                           ; BSR set to: 3
  5018                           ;incstack = 0
  5019  005522  90C2               	bcf	4034,0,c	;volatile
  5020                           
  5021                           ;AD.c: 13: ADCON1=0b00001101;
  5022  005524  0E0D               	movlw	13
  5023  005526  6EC1               	movwf	4033,c	;volatile
  5024                           
  5025                           ;AD.c: 14: ADCON2=0b10111110;
  5026  005528  0EBE               	movlw	190
  5027  00552A  6EC0               	movwf	4032,c	;volatile
  5028                           
  5029                           ;AD.c: 16: ADIF=0;
  5030  00552C  9C9E               	bcf	3998,6,c	;volatile
  5031                           
  5032                           ;AD.c: 17: ADIE=0;
  5033  00552E  9C9D               	bcf	3997,6,c	;volatile
  5034  005530  0012               	return		;funcret
  5035  005532                     __end_of_setup_AD:
  5036                           	opt stack 0
  5037                           tblptru	equ	0xFF8
  5038                           tblptrh	equ	0xFF7
  5039                           tblptrl	equ	0xFF6
  5040                           tablat	equ	0xFF5
  5041                           intcon	equ	0xFF2
  5042                           postinc0	equ	0xFEE
  5043                           wreg	equ	0xFE8
  5044                           postdec1	equ	0xFE5
  5045                           fsr1l	equ	0xFE1
  5046                           status	equ	0xFD8
  5047                           
  5048 ;; *************** function _putsUSBUSART *****************
  5049 ;; Defined at:
  5050 ;;		line 629 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device_cdc.c"
  5051 ;; Parameters:    Size  Location     Type
  5052 ;;  data            2    0[BANK0 ] PTR unsigned char 
  5053 ;;		 -> main@data(150), 
  5054 ;; Auto vars:     Size  Location     Type
  5055 ;;  pData           2    2[BANK0 ] PTR unsigned char 
  5056 ;;		 -> main@data(150), 
  5057 ;;  len             1    4[BANK0 ] unsigned char 
  5058 ;; Return value:  Size  Location     Type
  5059 ;;                  1    wreg      void 
  5060 ;; Registers used:
  5061 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5062 ;; Tracked objects:
  5063 ;;		On entry : 0/0
  5064 ;;		On exit  : 0/0
  5065 ;;		Unchanged: 0/0
  5066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5067 ;;      Params:         0       2       0       0       0       0       0       0       0
  5068 ;;      Locals:         0       3       0       0       0       0       0       0       0
  5069 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5070 ;;      Totals:         0       5       0       0       0       0       0       0       0
  5071 ;;Total ram usage:        5 bytes
  5072 ;; Hardware stack levels used:    1
  5073 ;; Hardware stack levels required when called:   10
  5074 ;; This function calls:
  5075 ;;		Nothing
  5076 ;; This function is called by:
  5077 ;;		_main
  5078 ;; This function uses a non-reentrant model
  5079 ;;
  5080                           
  5081                           	psect	text5
  5082  004DEA                     __ptext5:
  5083                           	opt stack 0
  5084  004DEA                     _putsUSBUSART:
  5085                           	opt stack 20
  5086                           
  5087                           ;usb_device_cdc.c: 631: uint8_t len;
  5088                           ;usb_device_cdc.c: 632: char *pData;
  5089                           ;usb_device_cdc.c: 657: {PIE2bits.USBIE = 0;};
  5090                           
  5091                           ;incstack = 0
  5092  004DEA  9AA0               	bcf	4000,5,c	;volatile
  5093                           
  5094                           ;usb_device_cdc.c: 658: if(cdc_trf_state != 0)
  5095  004DEC  0100               	movlb	0	; () banked
  5096  004DEE  51FF               	movf	_cdc_trf_state& (0+255),w,b
  5097  004DF0  B4D8               	btfsc	status,2,c
  5098  004DF2  D002               	goto	l838
  5099                           
  5100                           ; BSR set to: 0
  5101                           ;usb_device_cdc.c: 659: {
  5102                           ;usb_device_cdc.c: 660: {PIE2bits.USBIE = 1;};
  5103  004DF4  8AA0               	bsf	4000,5,c	;volatile
  5104                           
  5105                           ;usb_device_cdc.c: 661: return;
  5106  004DF6  0012               	return	
  5107  004DF8                     l838:
  5108                           
  5109                           ; BSR set to: 0
  5110                           ;usb_device_cdc.c: 662: }
  5111                           ;usb_device_cdc.c: 668: len = 0;
  5112                           
  5113                           ; BSR set to: 0
  5114  004DF8  0E00               	movlw	0
  5115  004DFA  6F64               	movwf	putsUSBUSART@len& (0+255),b
  5116                           
  5117                           ; BSR set to: 0
  5118                           ;usb_device_cdc.c: 669: pData = data;
  5119  004DFC  C060  F062         	movff	putsUSBUSART@data,putsUSBUSART@pData
  5120  004E00  C061  F063         	movff	putsUSBUSART@data+1,putsUSBUSART@pData+1
  5121  004E04                     
  5122                           ; BSR set to: 0
  5123                           ;usb_device_cdc.c: 671: {
  5124                           ;usb_device_cdc.c: 672: len++;
  5125                           
  5126                           ; BSR set to: 0
  5127  004E04  2B64               	incf	putsUSBUSART@len& (0+255),f,b
  5128                           
  5129                           ; BSR set to: 0
  5130                           ;usb_device_cdc.c: 673: if(len == 255) break;
  5131  004E06  2964               	incf	putsUSBUSART@len& (0+255),w,b
  5132  004E08  B4D8               	btfsc	status,2,c
  5133  004E0A  D009               	goto	u9310
  5134                           
  5135                           ; BSR set to: 0
  5136                           ;usb_device_cdc.c: 674: }while(*pData++);
  5137                           
  5138                           ; BSR set to: 0
  5139                           
  5140                           ; BSR set to: 0
  5141  004E0C  C062  FFD9         	movff	putsUSBUSART@pData,fsr2l
  5142  004E10  C063  FFDA         	movff	putsUSBUSART@pData+1,fsr2h
  5143  004E14  4B62               	infsnz	putsUSBUSART@pData& (0+255),f,b
  5144  004E16  2B63               	incf	(putsUSBUSART@pData+1)& (0+255),f,b
  5145  004E18  50DF               	movf	indf2,w,c
  5146  004E1A  A4D8               	btfss	status,2,c
  5147  004E1C  D7F3               	goto	l840
  5148  004E1E                     u9310:
  5149                           
  5150                           ; BSR set to: 0
  5151                           ;usb_device_cdc.c: 682: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = len; cdc_mem_type 
      +                          = 0x01; cdc_trf_state = 1; };
  5152                           
  5153                           ; BSR set to: 0
  5154  004E1E  C060  F349         	movff	putsUSBUSART@data,_pCDCSrc
  5155  004E22  C061  F34A         	movff	putsUSBUSART@data+1,_pCDCSrc+1
  5156                           
  5157                           ; BSR set to: 0
  5158  004E26  C064  F051         	movff	putsUSBUSART@len,_cdc_tx_len
  5159                           
  5160                           ; BSR set to: 0
  5161  004E2A  0E01               	movlw	1
  5162  004E2C  0102               	movlb	2	; () banked
  5163  004E2E  6FE4               	movwf	_cdc_mem_type& (0+255),b
  5164                           
  5165                           ; BSR set to: 2
  5166  004E30  0E01               	movlw	1
  5167  004E32  0100               	movlb	0	; () banked
  5168  004E34  6FFF               	movwf	_cdc_trf_state& (0+255),b
  5169                           
  5170                           ; BSR set to: 0
  5171                           ;usb_device_cdc.c: 683: {PIE2bits.USBIE = 1;};
  5172  004E36  8AA0               	bsf	4000,5,c	;volatile
  5173                           
  5174                           ; BSR set to: 0
  5175  004E38  0012               	return		;funcret
  5176  004E3A                     __end_of_putsUSBUSART:
  5177                           	opt stack 0
  5178                           tblptru	equ	0xFF8
  5179                           tblptrh	equ	0xFF7
  5180                           tblptrl	equ	0xFF6
  5181                           tablat	equ	0xFF5
  5182                           intcon	equ	0xFF2
  5183                           postinc0	equ	0xFEE
  5184                           wreg	equ	0xFE8
  5185                           postdec1	equ	0xFE5
  5186                           fsr1l	equ	0xFE1
  5187                           indf2	equ	0xFDF
  5188                           fsr2h	equ	0xFDA
  5189                           fsr2l	equ	0xFD9
  5190                           status	equ	0xFD8
  5191                           
  5192 ;; *************** function _le_pulsos *****************
  5193 ;; Defined at:
  5194 ;;		line 26 in file "Pulses.c"
  5195 ;; Parameters:    Size  Location     Type
  5196 ;;  freqPulses      1    wreg     unsigned char 
  5197 ;;  modo            1    5[BANK0 ] unsigned char 
  5198 ;; Auto vars:     Size  Location     Type
  5199 ;;  freqPulses      1    9[BANK0 ] unsigned char 
  5200 ;;  freq            4   10[BANK0 ] unsigned long 
  5201 ;; Return value:  Size  Location     Type
  5202 ;;                  4    5[BANK0 ] unsigned long 
  5203 ;; Registers used:
  5204 ;;		wreg, status,2, status,0
  5205 ;; Tracked objects:
  5206 ;;		On entry : 0/0
  5207 ;;		On exit  : 0/0
  5208 ;;		Unchanged: 0/0
  5209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5210 ;;      Params:         0       4       0       0       0       0       0       0       0
  5211 ;;      Locals:         0       5       0       0       0       0       0       0       0
  5212 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5213 ;;      Totals:         0       9       0       0       0       0       0       0       0
  5214 ;;Total ram usage:        9 bytes
  5215 ;; Hardware stack levels used:    1
  5216 ;; Hardware stack levels required when called:   10
  5217 ;; This function calls:
  5218 ;;		Nothing
  5219 ;; This function is called by:
  5220 ;;		_main
  5221 ;; This function uses a non-reentrant model
  5222 ;;
  5223                           
  5224                           	psect	text6
  5225  003C04                     __ptext6:
  5226                           	opt stack 0
  5227  003C04                     _le_pulsos:
  5228                           	opt stack 20
  5229                           
  5230                           ; BSR set to: 0
  5231                           ;incstack = 0
  5232                           ;le_pulsos@freqPulses stored from wreg
  5233  003C04  0100               	movlb	0	; () banked
  5234  003C06  6F69               	movwf	le_pulsos@freqPulses& (0+255),b
  5235                           
  5236                           ;Pulses.c: 28: CCP1IE=0;
  5237  003C08  949D               	bcf	3997,2,c	;volatile
  5238                           
  5239                           ;Pulses.c: 29: uint32_t freq;
  5240                           ;Pulses.c: 30: switch(freqPulses){
  5241  003C0A  D054               	goto	l2091
  5242  003C0C                     l2092:
  5243                           
  5244                           ; BSR set to: 0
  5245                           ;Pulses.c: 32: freq = freqPulses1;
  5246  003C0C  C33A  F06A         	movff	_freqPulses1,le_pulsos@freq	;volatile
  5247  003C10  C33B  F06B         	movff	_freqPulses1+1,le_pulsos@freq+1	;volatile
  5248  003C14  C33C  F06C         	movff	_freqPulses1+2,le_pulsos@freq+2	;volatile
  5249  003C18  C33D  F06D         	movff	_freqPulses1+3,le_pulsos@freq+3	;volatile
  5250                           
  5251                           ; BSR set to: 0
  5252                           ;Pulses.c: 33: if (!modo)
  5253  003C1C  5165               	movf	le_pulsos@modo& (0+255),w,b
  5254  003C1E  A4D8               	btfss	status,2,c
  5255  003C20  D057               	goto	l2094
  5256                           
  5257                           ; BSR set to: 0
  5258                           ;Pulses.c: 34: freqPulses1=0;
  5259  003C22  0E00               	movlw	0
  5260  003C24  0103               	movlb	3	; () banked
  5261  003C26  6F3A               	movwf	_freqPulses1& (0+255),b	;volatile
  5262  003C28  0E00               	movlw	0
  5263  003C2A  6F3B               	movwf	(_freqPulses1+1)& (0+255),b	;volatile
  5264  003C2C  0E00               	movlw	0
  5265  003C2E  6F3C               	movwf	(_freqPulses1+2)& (0+255),b	;volatile
  5266  003C30  0E00               	movlw	0
  5267  003C32  6F3D               	movwf	(_freqPulses1+3)& (0+255),b	;volatile
  5268                           
  5269                           ; BSR set to: 3
  5270                           ;Pulses.c: 35: break;
  5271  003C34  D04D               	goto	l2094
  5272  003C36                     l2095:
  5273                           
  5274                           ; BSR set to: 0
  5275                           ;Pulses.c: 37: freq = freqPulses2;
  5276  003C36  C336  F06A         	movff	_freqPulses2,le_pulsos@freq	;volatile
  5277  003C3A  C337  F06B         	movff	_freqPulses2+1,le_pulsos@freq+1	;volatile
  5278  003C3E  C338  F06C         	movff	_freqPulses2+2,le_pulsos@freq+2	;volatile
  5279  003C42  C339  F06D         	movff	_freqPulses2+3,le_pulsos@freq+3	;volatile
  5280                           
  5281                           ; BSR set to: 0
  5282                           ;Pulses.c: 38: if (!modo)
  5283  003C46  5165               	movf	le_pulsos@modo& (0+255),w,b
  5284  003C48  A4D8               	btfss	status,2,c
  5285  003C4A  D042               	goto	l2094
  5286                           
  5287                           ; BSR set to: 0
  5288                           ;Pulses.c: 39: freqPulses2=0;
  5289  003C4C  0E00               	movlw	0
  5290  003C4E  0103               	movlb	3	; () banked
  5291  003C50  6F36               	movwf	_freqPulses2& (0+255),b	;volatile
  5292  003C52  0E00               	movlw	0
  5293  003C54  6F37               	movwf	(_freqPulses2+1)& (0+255),b	;volatile
  5294  003C56  0E00               	movlw	0
  5295  003C58  6F38               	movwf	(_freqPulses2+2)& (0+255),b	;volatile
  5296  003C5A  0E00               	movlw	0
  5297  003C5C  6F39               	movwf	(_freqPulses2+3)& (0+255),b	;volatile
  5298                           
  5299                           ; BSR set to: 3
  5300                           ;Pulses.c: 40: break;
  5301  003C5E  D038               	goto	l2094
  5302  003C60                     l2097:
  5303                           
  5304                           ; BSR set to: 0
  5305                           ;Pulses.c: 42: freq = freqPulses3;
  5306  003C60  C332  F06A         	movff	_freqPulses3,le_pulsos@freq	;volatile
  5307  003C64  C333  F06B         	movff	_freqPulses3+1,le_pulsos@freq+1	;volatile
  5308  003C68  C334  F06C         	movff	_freqPulses3+2,le_pulsos@freq+2	;volatile
  5309  003C6C  C335  F06D         	movff	_freqPulses3+3,le_pulsos@freq+3	;volatile
  5310                           
  5311                           ; BSR set to: 0
  5312                           ;Pulses.c: 43: if (!modo)
  5313  003C70  5165               	movf	le_pulsos@modo& (0+255),w,b
  5314  003C72  A4D8               	btfss	status,2,c
  5315  003C74  D02D               	goto	l2094
  5316                           
  5317                           ; BSR set to: 0
  5318                           ;Pulses.c: 44: freqPulses3=0;
  5319  003C76  0E00               	movlw	0
  5320  003C78  0103               	movlb	3	; () banked
  5321  003C7A  6F32               	movwf	_freqPulses3& (0+255),b	;volatile
  5322  003C7C  0E00               	movlw	0
  5323  003C7E  6F33               	movwf	(_freqPulses3+1)& (0+255),b	;volatile
  5324  003C80  0E00               	movlw	0
  5325  003C82  6F34               	movwf	(_freqPulses3+2)& (0+255),b	;volatile
  5326  003C84  0E00               	movlw	0
  5327  003C86  6F35               	movwf	(_freqPulses3+3)& (0+255),b	;volatile
  5328                           
  5329                           ; BSR set to: 3
  5330                           ;Pulses.c: 45: break;
  5331  003C88  D023               	goto	l2094
  5332  003C8A                     l2099:
  5333                           
  5334                           ; BSR set to: 0
  5335                           ;Pulses.c: 47: freq = freqPulses4;
  5336  003C8A  C32E  F06A         	movff	_freqPulses4,le_pulsos@freq	;volatile
  5337  003C8E  C32F  F06B         	movff	_freqPulses4+1,le_pulsos@freq+1	;volatile
  5338  003C92  C330  F06C         	movff	_freqPulses4+2,le_pulsos@freq+2	;volatile
  5339  003C96  C331  F06D         	movff	_freqPulses4+3,le_pulsos@freq+3	;volatile
  5340                           
  5341                           ; BSR set to: 0
  5342                           ;Pulses.c: 48: if (!modo)
  5343  003C9A  5165               	movf	le_pulsos@modo& (0+255),w,b
  5344  003C9C  A4D8               	btfss	status,2,c
  5345  003C9E  D018               	goto	l2094
  5346                           
  5347                           ; BSR set to: 0
  5348                           ;Pulses.c: 49: freqPulses4=0;
  5349  003CA0  0E00               	movlw	0
  5350  003CA2  0103               	movlb	3	; () banked
  5351  003CA4  6F2E               	movwf	_freqPulses4& (0+255),b	;volatile
  5352  003CA6  0E00               	movlw	0
  5353  003CA8  6F2F               	movwf	(_freqPulses4+1)& (0+255),b	;volatile
  5354  003CAA  0E00               	movlw	0
  5355  003CAC  6F30               	movwf	(_freqPulses4+2)& (0+255),b	;volatile
  5356  003CAE  0E00               	movlw	0
  5357  003CB0  6F31               	movwf	(_freqPulses4+3)& (0+255),b	;volatile
  5358                           
  5359                           ; BSR set to: 3
  5360                           ;Pulses.c: 51: }
  5361                           
  5362                           ; BSR set to: 3
  5363                           ;Pulses.c: 50: break;
  5364  003CB2  D00E               	goto	l2094
  5365  003CB4                     l2091:
  5366                           
  5367                           ; BSR set to: 3
  5368  003CB4  0100               	movlb	0	; () banked
  5369  003CB6  5169               	movf	le_pulsos@freqPulses& (0+255),w,b
  5370                           
  5371                           ; Switch size 1, requested type "space"
  5372                           ; Number of cases is 4, Range of values is 1 to 4
  5373                           ; switch strategies available:
  5374                           ; Name         Instructions Cycles
  5375                           ; simple_byte           13     7 (average)
  5376                           ;	Chosen strategy is simple_byte
  5377  003CB8  0A01               	xorlw	1	; case 1
  5378  003CBA  B4D8               	btfsc	status,2,c
  5379  003CBC  D7A7               	goto	l2092
  5380  003CBE  0A03               	xorlw	3	; case 2
  5381  003CC0  B4D8               	btfsc	status,2,c
  5382  003CC2  D7B9               	goto	l2095
  5383  003CC4  0A01               	xorlw	1	; case 3
  5384  003CC6  B4D8               	btfsc	status,2,c
  5385  003CC8  D7CB               	goto	l2097
  5386  003CCA  0A07               	xorlw	7	; case 4
  5387  003CCC  B4D8               	btfsc	status,2,c
  5388  003CCE  D7DD               	goto	l2099
  5389  003CD0                     l2094:
  5390                           
  5391                           ;Pulses.c: 53: CCP1IE=1;
  5392  003CD0  849D               	bsf	3997,2,c	;volatile
  5393                           
  5394                           ;Pulses.c: 54: return freq;
  5395  003CD2  C06A  F065         	movff	le_pulsos@freq,?_le_pulsos
  5396  003CD6  C06B  F066         	movff	le_pulsos@freq+1,?_le_pulsos+1
  5397  003CDA  C06C  F067         	movff	le_pulsos@freq+2,?_le_pulsos+2
  5398  003CDE  C06D  F068         	movff	le_pulsos@freq+3,?_le_pulsos+3
  5399  003CE2  0012               	return		;funcret
  5400  003CE4                     __end_of_le_pulsos:
  5401                           	opt stack 0
  5402                           tblptru	equ	0xFF8
  5403                           tblptrh	equ	0xFF7
  5404                           tblptrl	equ	0xFF6
  5405                           tablat	equ	0xFF5
  5406                           intcon	equ	0xFF2
  5407                           postinc0	equ	0xFEE
  5408                           wreg	equ	0xFE8
  5409                           postdec1	equ	0xFE5
  5410                           fsr1l	equ	0xFE1
  5411                           indf2	equ	0xFDF
  5412                           fsr2h	equ	0xFDA
  5413                           fsr2l	equ	0xFD9
  5414                           status	equ	0xFD8
  5415                           
  5416 ;; *************** function _le_AD *****************
  5417 ;; Defined at:
  5418 ;;		line 20 in file "AD.c"
  5419 ;; Parameters:    Size  Location     Type
  5420 ;;  AnalogPort      1    wreg     unsigned char 
  5421 ;; Auto vars:     Size  Location     Type
  5422 ;;  AnalogPort      1   73[BANK0 ] unsigned char 
  5423 ;;  i               2   76[BANK0 ] int 
  5424 ;;  corrente        3   70[BANK0 ] float 
  5425 ;;  leitura         2   78[BANK0 ] unsigned int 
  5426 ;;  leituraAux      2   74[BANK0 ] unsigned int 
  5427 ;; Return value:  Size  Location     Type
  5428 ;;                  3   62[BANK0 ] float 
  5429 ;; Registers used:
  5430 ;;		wreg, status,2, status,0, cstack
  5431 ;; Tracked objects:
  5432 ;;		On entry : 0/0
  5433 ;;		On exit  : 0/0
  5434 ;;		Unchanged: 0/0
  5435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5436 ;;      Params:         0       3       0       0       0       0       0       0       0
  5437 ;;      Locals:         0      13       0       0       0       0       0       0       0
  5438 ;;      Temps:          0       2       0       0       0       0       0       0       0
  5439 ;;      Totals:         0      18       0       0       0       0       0       0       0
  5440 ;;Total ram usage:       18 bytes
  5441 ;; Hardware stack levels used:    1
  5442 ;; Hardware stack levels required when called:   12
  5443 ;; This function calls:
  5444 ;;		___awtoft
  5445 ;;		___ftadd
  5446 ;;		___ftdiv
  5447 ;;		___ftmul
  5448 ;; This function is called by:
  5449 ;;		_main
  5450 ;; This function uses a non-reentrant model
  5451 ;;
  5452                           
  5453                           	psect	text7
  5454  002FBC                     __ptext7:
  5455                           	opt stack 0
  5456  002FBC                     _le_AD:
  5457                           	opt stack 18
  5458                           
  5459                           ;incstack = 0
  5460                           ;le_AD@AnalogPort stored from wreg
  5461  002FBC  0100               	movlb	0	; () banked
  5462  002FBE  6FA9               	movwf	le_AD@AnalogPort& (0+255),b
  5463                           
  5464                           ;AD.c: 22: if (AnalogPort == 0){
  5465  002FC0  0100               	movlb	0	; () banked
  5466  002FC2  51A9               	movf	le_AD@AnalogPort& (0+255),w,b
  5467  002FC4  A4D8               	btfss	status,2,c
  5468  002FC6  D002               	goto	l1974
  5469                           
  5470                           ; BSR set to: 0
  5471                           ;AD.c: 23: ADCON0=0b00000001;
  5472  002FC8  0E01               	movlw	1
  5473  002FCA  6EC2               	movwf	4034,c	;volatile
  5474  002FCC                     l1974:
  5475                           
  5476                           ; BSR set to: 0
  5477                           ;AD.c: 24: }
  5478                           ;AD.c: 25: if (AnalogPort == 1){
  5479                           
  5480                           ; BSR set to: 0
  5481  002FCC  05A9               	decf	le_AD@AnalogPort& (0+255),w,b
  5482  002FCE  A4D8               	btfss	status,2,c
  5483  002FD0  D002               	goto	l1975
  5484                           
  5485                           ; BSR set to: 0
  5486                           ;AD.c: 26: ADCON0=0b00000101;
  5487  002FD2  0E05               	movlw	5
  5488  002FD4  6EC2               	movwf	4034,c	;volatile
  5489  002FD6                     l1975:
  5490                           
  5491                           ; BSR set to: 0
  5492                           ;AD.c: 27: }
  5493                           ;AD.c: 35: float corrente;
  5494                           ;AD.c: 37: uint16_t leituraAux;
  5495                           ;AD.c: 38: uint16_t leitura=0;
  5496  002FD6  0E00               	movlw	0
  5497  002FD8  6FAF               	movwf	(le_AD@leitura+1)& (0+255),b
  5498  002FDA  0E00               	movlw	0
  5499  002FDC  6FAE               	movwf	le_AD@leitura& (0+255),b
  5500                           
  5501                           ;AD.c: 40: for (int i=0;i<32;i++)
  5502  002FDE  0E00               	movlw	0
  5503  002FE0  6FAD               	movwf	(le_AD@i+1)& (0+255),b
  5504  002FE2  0E00               	movlw	0
  5505  002FE4  6FAC               	movwf	le_AD@i& (0+255),b
  5506  002FE6                     l10000:
  5507                           
  5508                           ; BSR set to: 0
  5509  002FE6  BFAD               	btfsc	(le_AD@i+1)& (0+255),7,b
  5510  002FE8  D006               	goto	l1976
  5511  002FEA  51AD               	movf	(le_AD@i+1)& (0+255),w,b
  5512  002FEC  E119               	bnz	l10012
  5513  002FEE  0E20               	movlw	32
  5514  002FF0  5DAC               	subwf	le_AD@i& (0+255),w,b
  5515  002FF2  B0D8               	btfsc	status,0,c
  5516  002FF4  D015               	goto	u9420
  5517  002FF6                     l1976:
  5518                           
  5519                           ; BSR set to: 0
  5520                           ;AD.c: 41: {
  5521                           ;AD.c: 42: GO_DONE=1;
  5522  002FF6  82C2               	bsf	4034,1,c	;volatile
  5523                           
  5524                           ;AD.c: 43: __nop();
  5525  002FF8  F000               	nop	
  5526  002FFA  B2C2               	btfsc	4034,1,c	;volatile
  5527  002FFC  D7FE               	goto	l1979
  5528                           
  5529                           ;AD.c: 47: leituraAux=ADRESH;
  5530  002FFE  CFC4 F0AA          	movff	4036,le_AD@leituraAux	;volatile
  5531  003002  0100               	movlb	0	; () banked
  5532  003004  6BAB               	clrf	(le_AD@leituraAux+1)& (0+255),b
  5533                           
  5534                           ; BSR set to: 0
  5535                           ;AD.c: 48: leituraAux=(leituraAux <<8) | ADRESL;
  5536  003006  51AA               	movf	le_AD@leituraAux& (0+255),w,b
  5537  003008  6FA1               	movwf	??_le_AD& (0+255),b
  5538  00300A  50C3               	movf	4035,w,c	;volatile
  5539  00300C  6FAA               	movwf	le_AD@leituraAux& (0+255),b
  5540  00300E  C0A1  F0AB         	movff	??_le_AD,le_AD@leituraAux+1
  5541                           
  5542                           ; BSR set to: 0
  5543                           ;AD.c: 49: leitura+=leituraAux;
  5544  003012  51AA               	movf	le_AD@leituraAux& (0+255),w,b
  5545  003014  27AE               	addwf	le_AD@leitura& (0+255),f,b
  5546  003016  51AB               	movf	(le_AD@leituraAux+1)& (0+255),w,b
  5547  003018  23AF               	addwfc	(le_AD@leitura+1)& (0+255),f,b
  5548                           
  5549                           ; BSR set to: 0
  5550  00301A  4BAC               	infsnz	le_AD@i& (0+255),f,b
  5551  00301C  2BAD               	incf	(le_AD@i+1)& (0+255),f,b
  5552  00301E  D7E3               	goto	l10000
  5553  003020                     u9420:
  5554  003020                     l10012:
  5555                           
  5556                           ; BSR set to: 0
  5557                           ;AD.c: 51: }
  5558                           ;AD.c: 53: leitura>>=5;
  5559  003020  0E05               	movlw	5
  5560  003022  6FA1               	movwf	??_le_AD& (0+255),b
  5561  003024                     u9435:
  5562  003024  90D8               	bcf	status,0,c
  5563  003026  33AF               	rrcf	(le_AD@leitura+1)& (0+255),f,b
  5564  003028  33AE               	rrcf	le_AD@leitura& (0+255),f,b
  5565  00302A  2FA1               	decfsz	??_le_AD& (0+255),f,b
  5566  00302C  D7FB               	goto	u9435
  5567                           
  5568                           ;AD.c: 55: if (leitura==0)
  5569  00302E  51AE               	movf	le_AD@leitura& (0+255),w,b
  5570  003030  11AF               	iorwf	(le_AD@leitura+1)& (0+255),w,b
  5571  003032  A4D8               	btfss	status,2,c
  5572  003034  D007               	goto	l1981
  5573                           
  5574                           ; BSR set to: 0
  5575                           ;AD.c: 56: corrente=0;
  5576  003036  0E00               	movlw	0
  5577  003038  6FA6               	movwf	le_AD@corrente& (0+255),b
  5578  00303A  0E00               	movlw	0
  5579  00303C  6FA7               	movwf	(le_AD@corrente+1)& (0+255),b
  5580  00303E  0E00               	movlw	0
  5581  003040  6FA8               	movwf	(le_AD@corrente+2)& (0+255),b
  5582  003042  D04B               	goto	l1982
  5583  003044                     l1981:
  5584                           
  5585                           ; BSR set to: 0
  5586                           ;AD.c: 57: else
  5587                           ;AD.c: 58: corrente=((int16_t) leitura-195.0)*16.0/784.0+4.0;
  5588                           
  5589                           ; BSR set to: 0
  5590  003044  0E00               	movlw	0
  5591  003046  6F92               	movwf	___ftdiv@f2& (0+255),b
  5592  003048  0E44               	movlw	68
  5593  00304A  6F93               	movwf	(___ftdiv@f2+1)& (0+255),b
  5594  00304C  0E44               	movlw	68
  5595  00304E  6F94               	movwf	(___ftdiv@f2+2)& (0+255),b
  5596  003050  0E00               	movlw	0
  5597  003052  6F83               	movwf	___ftmul@f2& (0+255),b
  5598  003054  0E80               	movlw	128
  5599  003056  6F84               	movwf	(___ftmul@f2+1)& (0+255),b
  5600  003058  0E41               	movlw	65
  5601  00305A  6F85               	movwf	(___ftmul@f2+2)& (0+255),b
  5602  00305C  0E00               	movlw	0
  5603  00305E  6F77               	movwf	___ftadd@f2& (0+255),b
  5604  003060  0E43               	movlw	67
  5605  003062  6F78               	movwf	(___ftadd@f2+1)& (0+255),b
  5606  003064  0EC3               	movlw	195
  5607  003066  6F79               	movwf	(___ftadd@f2+2)& (0+255),b
  5608  003068  C0AE  F068         	movff	le_AD@leitura,___awtoft@c
  5609  00306C  C0AF  F069         	movff	le_AD@leitura+1,___awtoft@c+1
  5610  003070  ECE9  F028         	call	___awtoft	;wreg free
  5611  003074  C068  F074         	movff	?___awtoft,___ftadd@f1
  5612  003078  C069  F075         	movff	?___awtoft+1,___ftadd@f1+1
  5613  00307C  C06A  F076         	movff	?___awtoft+2,___ftadd@f1+2
  5614  003080  ECFD  F013         	call	___ftadd	;wreg free
  5615  003084  C074  F080         	movff	?___ftadd,___ftmul@f1
  5616  003088  C075  F081         	movff	?___ftadd+1,___ftmul@f1+1
  5617  00308C  C076  F082         	movff	?___ftadd+2,___ftmul@f1+2
  5618  003090  ECA2  F01C         	call	___ftmul	;wreg free
  5619  003094  C080  F08F         	movff	?___ftmul,___ftdiv@f1
  5620  003098  C081  F090         	movff	?___ftmul+1,___ftdiv@f1+1
  5621  00309C  C082  F091         	movff	?___ftmul+2,___ftdiv@f1+2
  5622  0030A0  EC1D  F01D         	call	___ftdiv	;wreg free
  5623  0030A4  C08F  F0A3         	movff	?___ftdiv,_le_AD$5962
  5624  0030A8  C090  F0A4         	movff	?___ftdiv+1,_le_AD$5962+1
  5625  0030AC  C091  F0A5         	movff	?___ftdiv+2,_le_AD$5962+2
  5626                           
  5627                           ;AD.c: 57: else
  5628                           ;AD.c: 58: corrente=((int16_t) leitura-195.0)*16.0/784.0+4.0;
  5629  0030B0  C0A3  F074         	movff	_le_AD$5962,___ftadd@f1
  5630  0030B4  C0A4  F075         	movff	_le_AD$5962+1,___ftadd@f1+1
  5631  0030B8  C0A5  F076         	movff	_le_AD$5962+2,___ftadd@f1+2
  5632  0030BC  0E00               	movlw	0
  5633  0030BE  0100               	movlb	0	; () banked
  5634  0030C0  6F77               	movwf	___ftadd@f2& (0+255),b
  5635  0030C2  0E80               	movlw	128
  5636  0030C4  6F78               	movwf	(___ftadd@f2+1)& (0+255),b
  5637  0030C6  0E40               	movlw	64
  5638  0030C8  6F79               	movwf	(___ftadd@f2+2)& (0+255),b
  5639  0030CA  ECFD  F013         	call	___ftadd	;wreg free
  5640  0030CE  C074  F0A6         	movff	?___ftadd,le_AD@corrente
  5641  0030D2  C075  F0A7         	movff	?___ftadd+1,le_AD@corrente+1
  5642  0030D6  C076  F0A8         	movff	?___ftadd+2,le_AD@corrente+2
  5643  0030DA                     l1982:
  5644                           
  5645                           ;AD.c: 60: return corrente;
  5646  0030DA  C0A6  F09E         	movff	le_AD@corrente,?_le_AD
  5647  0030DE  C0A7  F09F         	movff	le_AD@corrente+1,?_le_AD+1
  5648  0030E2  C0A8  F0A0         	movff	le_AD@corrente+2,?_le_AD+2
  5649  0030E6  0012               	return	
  5650  0030E8                     __end_of_le_AD:
  5651                           	opt stack 0
  5652                           tblptru	equ	0xFF8
  5653                           tblptrh	equ	0xFF7
  5654                           tblptrl	equ	0xFF6
  5655                           tablat	equ	0xFF5
  5656                           intcon	equ	0xFF2
  5657                           postinc0	equ	0xFEE
  5658                           wreg	equ	0xFE8
  5659                           postdec1	equ	0xFE5
  5660                           fsr1l	equ	0xFE1
  5661                           indf2	equ	0xFDF
  5662                           fsr2h	equ	0xFDA
  5663                           fsr2l	equ	0xFD9
  5664                           status	equ	0xFD8
  5665                           
  5666 ;; *************** function ___ftdiv *****************
  5667 ;; Defined at:
  5668 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftdiv.c"
  5669 ;; Parameters:    Size  Location     Type
  5670 ;;  f1              3   47[BANK0 ] float 
  5671 ;;  f2              3   50[BANK0 ] float 
  5672 ;; Auto vars:     Size  Location     Type
  5673 ;;  f3              3   57[BANK0 ] float 
  5674 ;;  sign            1   61[BANK0 ] unsigned char 
  5675 ;;  exp             1   60[BANK0 ] unsigned char 
  5676 ;;  cntr            1   56[BANK0 ] unsigned char 
  5677 ;; Return value:  Size  Location     Type
  5678 ;;                  3   47[BANK0 ] float 
  5679 ;; Registers used:
  5680 ;;		wreg, status,2, status,0, cstack
  5681 ;; Tracked objects:
  5682 ;;		On entry : 0/0
  5683 ;;		On exit  : 0/0
  5684 ;;		Unchanged: 0/0
  5685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5686 ;;      Params:         0       6       0       0       0       0       0       0       0
  5687 ;;      Locals:         0       6       0       0       0       0       0       0       0
  5688 ;;      Temps:          0       3       0       0       0       0       0       0       0
  5689 ;;      Totals:         0      15       0       0       0       0       0       0       0
  5690 ;;Total ram usage:       15 bytes
  5691 ;; Hardware stack levels used:    1
  5692 ;; Hardware stack levels required when called:   11
  5693 ;; This function calls:
  5694 ;;		___ftpack
  5695 ;; This function is called by:
  5696 ;;		_le_AD
  5697 ;; This function uses a non-reentrant model
  5698 ;;
  5699                           
  5700                           	psect	text8
  5701  003A3A                     __ptext8:
  5702                           	opt stack 0
  5703  003A3A                     ___ftdiv:
  5704                           	opt stack 18
  5705                           
  5706                           ;incstack = 0
  5707  003A3A  C091  F095         	movff	___ftdiv@f1+2,??___ftdiv
  5708  003A3E  0100               	movlb	0	; () banked
  5709  003A40  6B96               	clrf	(??___ftdiv+1)& (0+255),b
  5710  003A42  6B97               	clrf	(??___ftdiv+2)& (0+255),b
  5711  003A44  3590               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  5712  003A46  3795               	rlcf	??___ftdiv& (0+255),f,b
  5713  003A48  E301               	bnc	u8701
  5714  003A4A  8196               	bsf	(??___ftdiv+1)& (0+255),0,b
  5715  003A4C                     u8701:
  5716  003A4C  5195               	movf	??___ftdiv& (0+255),w,b
  5717  003A4E  6F9C               	movwf	___ftdiv@exp& (0+255),b
  5718  003A50  519C               	movf	___ftdiv@exp& (0+255),w,b
  5719  003A52  A4D8               	btfss	status,2,c
  5720  003A54  D007               	goto	l3063
  5721                           
  5722                           ; BSR set to: 0
  5723  003A56  0E00               	movlw	0
  5724  003A58  6F8F               	movwf	?___ftdiv& (0+255),b
  5725  003A5A  0E00               	movlw	0
  5726  003A5C  6F90               	movwf	(?___ftdiv+1)& (0+255),b
  5727  003A5E  0E00               	movlw	0
  5728  003A60  6F91               	movwf	(?___ftdiv+2)& (0+255),b
  5729                           
  5730                           ; BSR set to: 0
  5731  003A62  0012               	return	
  5732  003A64                     l3063:
  5733                           
  5734                           ; BSR set to: 0
  5735                           
  5736                           ; BSR set to: 0
  5737  003A64  C094  F095         	movff	___ftdiv@f2+2,??___ftdiv
  5738  003A68  6B96               	clrf	(??___ftdiv+1)& (0+255),b
  5739  003A6A  6B97               	clrf	(??___ftdiv+2)& (0+255),b
  5740  003A6C  3593               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  5741  003A6E  3795               	rlcf	??___ftdiv& (0+255),f,b
  5742  003A70  E301               	bnc	u8721
  5743  003A72  8196               	bsf	(??___ftdiv+1)& (0+255),0,b
  5744  003A74                     u8721:
  5745  003A74  5195               	movf	??___ftdiv& (0+255),w,b
  5746  003A76  6F9D               	movwf	___ftdiv@sign& (0+255),b
  5747  003A78  519D               	movf	___ftdiv@sign& (0+255),w,b
  5748  003A7A  A4D8               	btfss	status,2,c
  5749  003A7C  D007               	goto	l3065
  5750                           
  5751                           ; BSR set to: 0
  5752  003A7E  0E00               	movlw	0
  5753  003A80  6F8F               	movwf	?___ftdiv& (0+255),b
  5754  003A82  0E00               	movlw	0
  5755  003A84  6F90               	movwf	(?___ftdiv+1)& (0+255),b
  5756  003A86  0E00               	movlw	0
  5757  003A88  6F91               	movwf	(?___ftdiv+2)& (0+255),b
  5758                           
  5759                           ; BSR set to: 0
  5760  003A8A  0012               	return	
  5761  003A8C                     l3065:
  5762                           
  5763                           ; BSR set to: 0
  5764                           
  5765                           ; BSR set to: 0
  5766  003A8C  0E00               	movlw	0
  5767  003A8E  6F99               	movwf	___ftdiv@f3& (0+255),b
  5768  003A90  0E00               	movlw	0
  5769  003A92  6F9A               	movwf	(___ftdiv@f3+1)& (0+255),b
  5770  003A94  0E00               	movlw	0
  5771  003A96  6F9B               	movwf	(___ftdiv@f3+2)& (0+255),b
  5772                           
  5773                           ; BSR set to: 0
  5774  003A98  519D               	movf	___ftdiv@sign& (0+255),w,b
  5775  003A9A  0F89               	addlw	137
  5776  003A9C  5F9C               	subwf	___ftdiv@exp& (0+255),f,b
  5777                           
  5778                           ; BSR set to: 0
  5779  003A9E  C091  F09D         	movff	___ftdiv@f1+2,___ftdiv@sign
  5780                           
  5781                           ; BSR set to: 0
  5782  003AA2  5194               	movf	(___ftdiv@f2+2)& (0+255),w,b
  5783  003AA4  1B9D               	xorwf	___ftdiv@sign& (0+255),f,b
  5784                           
  5785                           ; BSR set to: 0
  5786  003AA6  0E80               	movlw	128
  5787  003AA8  179D               	andwf	___ftdiv@sign& (0+255),f,b
  5788                           
  5789                           ; BSR set to: 0
  5790  003AAA  8F90               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  5791                           
  5792                           ; BSR set to: 0
  5793  003AAC  0EFF               	movlw	255
  5794  003AAE  178F               	andwf	___ftdiv@f1& (0+255),f,b
  5795  003AB0  0EFF               	movlw	255
  5796  003AB2  1790               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  5797  003AB4  0E00               	movlw	0
  5798  003AB6  1791               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  5799                           
  5800                           ; BSR set to: 0
  5801  003AB8  8F93               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  5802                           
  5803                           ; BSR set to: 0
  5804  003ABA  0EFF               	movlw	255
  5805  003ABC  1792               	andwf	___ftdiv@f2& (0+255),f,b
  5806  003ABE  0EFF               	movlw	255
  5807  003AC0  1793               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  5808  003AC2  0E00               	movlw	0
  5809  003AC4  1794               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  5810                           
  5811                           ; BSR set to: 0
  5812  003AC6  0E18               	movlw	24
  5813  003AC8  6F98               	movwf	___ftdiv@cntr& (0+255),b
  5814  003ACA                     
  5815                           ; BSR set to: 0
  5816                           
  5817                           ; BSR set to: 0
  5818  003ACA  90D8               	bcf	status,0,c
  5819  003ACC  3799               	rlcf	___ftdiv@f3& (0+255),f,b
  5820  003ACE  379A               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  5821  003AD0  379B               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  5822                           
  5823                           ; BSR set to: 0
  5824  003AD2  5192               	movf	___ftdiv@f2& (0+255),w,b
  5825  003AD4  5D8F               	subwf	___ftdiv@f1& (0+255),w,b
  5826  003AD6  5193               	movf	(___ftdiv@f2+1)& (0+255),w,b
  5827  003AD8  5990               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  5828  003ADA  5194               	movf	(___ftdiv@f2+2)& (0+255),w,b
  5829  003ADC  5991               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  5830  003ADE  A0D8               	btfss	status,0,c
  5831  003AE0  D007               	goto	l3067
  5832                           
  5833                           ; BSR set to: 0
  5834  003AE2  5192               	movf	___ftdiv@f2& (0+255),w,b
  5835  003AE4  5F8F               	subwf	___ftdiv@f1& (0+255),f,b
  5836  003AE6  5193               	movf	(___ftdiv@f2+1)& (0+255),w,b
  5837  003AE8  5B90               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  5838  003AEA  5194               	movf	(___ftdiv@f2+2)& (0+255),w,b
  5839  003AEC  5B91               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  5840                           
  5841                           ; BSR set to: 0
  5842  003AEE  8199               	bsf	___ftdiv@f3& (0+255),0,b
  5843  003AF0                     l3067:
  5844                           
  5845                           ; BSR set to: 0
  5846  003AF0  90D8               	bcf	status,0,c
  5847  003AF2  378F               	rlcf	___ftdiv@f1& (0+255),f,b
  5848  003AF4  3790               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  5849  003AF6  3791               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  5850                           
  5851                           ; BSR set to: 0
  5852  003AF8  2F98               	decfsz	___ftdiv@cntr& (0+255),f,b
  5853  003AFA  D7E7               	goto	l3066
  5854                           
  5855                           ; BSR set to: 0
  5856                           
  5857                           ; BSR set to: 0
  5858  003AFC  C099  F060         	movff	___ftdiv@f3,___ftpack@arg
  5859  003B00  C09A  F061         	movff	___ftdiv@f3+1,___ftpack@arg+1
  5860  003B04  C09B  F062         	movff	___ftdiv@f3+2,___ftpack@arg+2
  5861  003B08  C09C  F063         	movff	___ftdiv@exp,___ftpack@exp
  5862  003B0C  C09D  F064         	movff	___ftdiv@sign,___ftpack@sign
  5863  003B10  EC0B  F020         	call	___ftpack	;wreg free
  5864  003B14  C060  F08F         	movff	?___ftpack,?___ftdiv
  5865  003B18  C061  F090         	movff	?___ftpack+1,?___ftdiv+1
  5866  003B1C  C062  F091         	movff	?___ftpack+2,?___ftdiv+2
  5867  003B20  0012               	return	
  5868  003B22                     __end_of___ftdiv:
  5869                           	opt stack 0
  5870                           tblptru	equ	0xFF8
  5871                           tblptrh	equ	0xFF7
  5872                           tblptrl	equ	0xFF6
  5873                           tablat	equ	0xFF5
  5874                           intcon	equ	0xFF2
  5875                           postinc0	equ	0xFEE
  5876                           wreg	equ	0xFE8
  5877                           postdec1	equ	0xFE5
  5878                           fsr1l	equ	0xFE1
  5879                           indf2	equ	0xFDF
  5880                           fsr2h	equ	0xFDA
  5881                           fsr2l	equ	0xFD9
  5882                           status	equ	0xFD8
  5883                           
  5884 ;; *************** function ___awtoft *****************
  5885 ;; Defined at:
  5886 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\awtoft.c"
  5887 ;; Parameters:    Size  Location     Type
  5888 ;;  c               2    8[BANK0 ] int 
  5889 ;; Auto vars:     Size  Location     Type
  5890 ;;  sign            1   11[BANK0 ] unsigned char 
  5891 ;; Return value:  Size  Location     Type
  5892 ;;                  3    8[BANK0 ] float 
  5893 ;; Registers used:
  5894 ;;		wreg, status,2, status,0, cstack
  5895 ;; Tracked objects:
  5896 ;;		On entry : 0/0
  5897 ;;		On exit  : 0/0
  5898 ;;		Unchanged: 0/0
  5899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5900 ;;      Params:         0       3       0       0       0       0       0       0       0
  5901 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5902 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5903 ;;      Totals:         0       4       0       0       0       0       0       0       0
  5904 ;;Total ram usage:        4 bytes
  5905 ;; Hardware stack levels used:    1
  5906 ;; Hardware stack levels required when called:   11
  5907 ;; This function calls:
  5908 ;;		___ftpack
  5909 ;; This function is called by:
  5910 ;;		_le_AD
  5911 ;; This function uses a non-reentrant model
  5912 ;;
  5913                           
  5914                           	psect	text9
  5915  0051D2                     __ptext9:
  5916                           	opt stack 0
  5917  0051D2                     ___awtoft:
  5918                           	opt stack 18
  5919                           
  5920                           ;incstack = 0
  5921  0051D2  0E00               	movlw	0
  5922  0051D4  0100               	movlb	0	; () banked
  5923  0051D6  6F6B               	movwf	___awtoft@sign& (0+255),b
  5924                           
  5925                           ; BSR set to: 0
  5926  0051D8  AF69               	btfss	(___awtoft@c+1)& (0+255),7,b
  5927  0051DA  D006               	goto	l2963
  5928                           
  5929                           ; BSR set to: 0
  5930  0051DC  6D68               	negf	___awtoft@c& (0+255),b
  5931  0051DE  1F69               	comf	(___awtoft@c+1)& (0+255),f,b
  5932  0051E0  B0D8               	btfsc	status,0,c
  5933  0051E2  2B69               	incf	(___awtoft@c+1)& (0+255),f,b
  5934                           
  5935                           ; BSR set to: 0
  5936  0051E4  0E01               	movlw	1
  5937  0051E6  6F6B               	movwf	___awtoft@sign& (0+255),b
  5938  0051E8                     l2963:
  5939                           
  5940                           ; BSR set to: 0
  5941                           
  5942                           ; BSR set to: 0
  5943  0051E8  C068  F060         	movff	___awtoft@c,___ftpack@arg
  5944  0051EC  C069  F061         	movff	___awtoft@c+1,___ftpack@arg+1
  5945  0051F0  6B62               	clrf	(___ftpack@arg+2)& (0+255),b
  5946  0051F2  0E8E               	movlw	142
  5947  0051F4  6F63               	movwf	___ftpack@exp& (0+255),b
  5948  0051F6  C06B  F064         	movff	___awtoft@sign,___ftpack@sign
  5949  0051FA  EC0B  F020         	call	___ftpack	;wreg free
  5950  0051FE  C060  F068         	movff	?___ftpack,?___awtoft
  5951  005202  C061  F069         	movff	?___ftpack+1,?___awtoft+1
  5952  005206  C062  F06A         	movff	?___ftpack+2,?___awtoft+2
  5953  00520A  0012               	return	
  5954  00520C                     __end_of___awtoft:
  5955                           	opt stack 0
  5956                           tblptru	equ	0xFF8
  5957                           tblptrh	equ	0xFF7
  5958                           tblptrl	equ	0xFF6
  5959                           tablat	equ	0xFF5
  5960                           intcon	equ	0xFF2
  5961                           postinc0	equ	0xFEE
  5962                           wreg	equ	0xFE8
  5963                           postdec1	equ	0xFE5
  5964                           fsr1l	equ	0xFE1
  5965                           indf2	equ	0xFDF
  5966                           fsr2h	equ	0xFDA
  5967                           fsr2l	equ	0xFD9
  5968                           status	equ	0xFD8
  5969                           
  5970 ;; *************** function _delay *****************
  5971 ;; Defined at:
  5972 ;;		line 33 in file "UT.c"
  5973 ;; Parameters:    Size  Location     Type
  5974 ;;  time            4   13[BANK0 ] unsigned long 
  5975 ;; Auto vars:     Size  Location     Type
  5976 ;;  to              4   25[BANK0 ] unsigned long 
  5977 ;; Return value:  Size  Location     Type
  5978 ;;                  1    wreg      void 
  5979 ;; Registers used:
  5980 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5981 ;; Tracked objects:
  5982 ;;		On entry : 0/0
  5983 ;;		On exit  : 0/0
  5984 ;;		Unchanged: 0/0
  5985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5986 ;;      Params:         0       4       0       0       0       0       0       0       0
  5987 ;;      Locals:         0       4       0       0       0       0       0       0       0
  5988 ;;      Temps:          0       8       0       0       0       0       0       0       0
  5989 ;;      Totals:         0      16       0       0       0       0       0       0       0
  5990 ;;Total ram usage:       16 bytes
  5991 ;; Hardware stack levels used:    1
  5992 ;; Hardware stack levels required when called:   13
  5993 ;; This function calls:
  5994 ;;		_millis
  5995 ;;		_verificaUSB
  5996 ;; This function is called by:
  5997 ;;		_main
  5998 ;; This function uses a non-reentrant model
  5999 ;;
  6000                           
  6001                           	psect	text10
  6002  0049AC                     __ptext10:
  6003                           	opt stack 0
  6004  0049AC                     _delay:
  6005                           	opt stack 17
  6006                           
  6007                           ;UT.c: 35: uint32_t to=millis();
  6008                           
  6009                           ;incstack = 0
  6010  0049AC  EC22  F02A         	call	_millis	;wreg free
  6011  0049B0  C060  F079         	movff	?_millis,delay@to
  6012  0049B4  C061  F07A         	movff	?_millis+1,delay@to+1
  6013  0049B8  C062  F07B         	movff	?_millis+2,delay@to+2
  6014  0049BC  C063  F07C         	movff	?_millis+3,delay@to+3
  6015                           
  6016                           ;UT.c: 36: while ((millis()-to)<time)
  6017  0049C0  D002               	goto	l1051
  6018  0049C2                     
  6019                           ;UT.c: 37: {
  6020                           ;UT.c: 38: verificaUSB();
  6021  0049C2  EC73  F029         	call	_verificaUSB	;wreg free
  6022  0049C6                     l1051:
  6023  0049C6  C079  F071         	movff	delay@to,??_delay
  6024  0049CA  C07A  F072         	movff	delay@to+1,??_delay+1
  6025  0049CE  C07B  F073         	movff	delay@to+2,??_delay+2
  6026  0049D2  C07C  F074         	movff	delay@to+3,??_delay+3
  6027  0049D6  0100               	movlb	0	; () banked
  6028  0049D8  1F71               	comf	??_delay& (0+255),f,b
  6029  0049DA  1F72               	comf	(??_delay+1)& (0+255),f,b
  6030  0049DC  1F73               	comf	(??_delay+2)& (0+255),f,b
  6031  0049DE  1F74               	comf	(??_delay+3)& (0+255),f,b
  6032  0049E0  2B71               	incf	??_delay& (0+255),f,b
  6033  0049E2  0E00               	movlw	0
  6034  0049E4  2372               	addwfc	(??_delay+1)& (0+255),f,b
  6035  0049E6  2373               	addwfc	(??_delay+2)& (0+255),f,b
  6036  0049E8  2374               	addwfc	(??_delay+3)& (0+255),f,b
  6037  0049EA  EC22  F02A         	call	_millis	;wreg free
  6038  0049EE  0100               	movlb	0	; () banked
  6039  0049F0  5171               	movf	??_delay& (0+255),w,b
  6040  0049F2  2560               	addwf	?_millis& (0+255),w,b
  6041  0049F4  6F75               	movwf	(??_delay+4)& (0+255),b
  6042  0049F6  5172               	movf	(??_delay+1)& (0+255),w,b
  6043  0049F8  2161               	addwfc	(?_millis+1)& (0+255),w,b
  6044  0049FA  6F76               	movwf	(??_delay+5)& (0+255),b
  6045  0049FC  5173               	movf	(??_delay+2)& (0+255),w,b
  6046  0049FE  2162               	addwfc	(?_millis+2)& (0+255),w,b
  6047  004A00  6F77               	movwf	(??_delay+6)& (0+255),b
  6048  004A02  5174               	movf	(??_delay+3)& (0+255),w,b
  6049  004A04  2163               	addwfc	(?_millis+3)& (0+255),w,b
  6050  004A06  6F78               	movwf	(??_delay+7)& (0+255),b
  6051  004A08  516D               	movf	delay@time& (0+255),w,b
  6052  004A0A  5D75               	subwf	(??_delay+4)& (0+255),w,b
  6053  004A0C  516E               	movf	(delay@time+1)& (0+255),w,b
  6054  004A0E  5976               	subwfb	(??_delay+5)& (0+255),w,b
  6055  004A10  516F               	movf	(delay@time+2)& (0+255),w,b
  6056  004A12  5977               	subwfb	(??_delay+6)& (0+255),w,b
  6057  004A14  5170               	movf	(delay@time+3)& (0+255),w,b
  6058  004A16  5978               	subwfb	(??_delay+7)& (0+255),w,b
  6059  004A18  B0D8               	btfsc	status,0,c
  6060  004A1A  0012               	return	
  6061  004A1C  D7D2               	goto	l1052
  6062  004A1E                     __end_of_delay:
  6063                           	opt stack 0
  6064                           tblptru	equ	0xFF8
  6065                           tblptrh	equ	0xFF7
  6066                           tblptrl	equ	0xFF6
  6067                           tablat	equ	0xFF5
  6068                           intcon	equ	0xFF2
  6069                           postinc0	equ	0xFEE
  6070                           wreg	equ	0xFE8
  6071                           postdec1	equ	0xFE5
  6072                           fsr1l	equ	0xFE1
  6073                           indf2	equ	0xFDF
  6074                           fsr2h	equ	0xFDA
  6075                           fsr2l	equ	0xFD9
  6076                           status	equ	0xFD8
  6077                           
  6078 ;; *************** function _verificaUSB *****************
  6079 ;; Defined at:
  6080 ;;		line 13 in file "UT.c"
  6081 ;; Parameters:    Size  Location     Type
  6082 ;;		None
  6083 ;; Auto vars:     Size  Location     Type
  6084 ;;		None
  6085 ;; Return value:  Size  Location     Type
  6086 ;;                  1    wreg      unsigned char 
  6087 ;; Registers used:
  6088 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6089 ;; Tracked objects:
  6090 ;;		On entry : 0/0
  6091 ;;		On exit  : 0/0
  6092 ;;		Unchanged: 0/0
  6093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6094 ;;      Params:         0       0       0       0       0       0       0       0       0
  6095 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6096 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6097 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6098 ;;Total ram usage:        0 bytes
  6099 ;; Hardware stack levels used:    1
  6100 ;; Hardware stack levels required when called:   12
  6101 ;; This function calls:
  6102 ;;		_CDCTxService
  6103 ;;		_USBDeviceAttach
  6104 ;;		_USBDeviceDetach
  6105 ;; This function is called by:
  6106 ;;		_delay
  6107 ;;		_main
  6108 ;; This function uses a non-reentrant model
  6109 ;;
  6110                           
  6111                           	psect	text11
  6112  0052E6                     __ptext11:
  6113                           	opt stack 0
  6114  0052E6                     _verificaUSB:
  6115                           	opt stack 18
  6116                           
  6117                           ;UT.c: 15: if ((USBDeviceState == DETACHED_STATE) && (PORTCbits.RC2 == 1))
  6118                           
  6119                           ; BSR set to: 0
  6120                           ;incstack = 0
  6121  0052E6  5058               	movf	_USBDeviceState,w,c	;volatile
  6122  0052E8  B4D8               	btfsc	status,2,c
  6123  0052EA  A482               	btfss	3970,2,c	;volatile
  6124  0052EC  D003               	goto	l1042
  6125                           
  6126                           ;UT.c: 16: {
  6127                           ;UT.c: 17: USBDeviceAttach();
  6128  0052EE  EC59  F029         	call	_USBDeviceAttach	;wreg free
  6129                           
  6130                           ;UT.c: 18: }
  6131  0052F2  D006               	goto	l1044
  6132  0052F4                     l1042:
  6133                           
  6134                           ;UT.c: 19: else if ((USBDeviceState == ATTACHED_STATE) && (PORTCbits.RC2 != 1))
  6135  0052F4  0458               	decf	_USBDeviceState,w,c	;volatile
  6136  0052F6  B4D8               	btfsc	status,2,c
  6137  0052F8  B482               	btfsc	3970,2,c	;volatile
  6138  0052FA  D002               	goto	l1044
  6139                           
  6140                           ;UT.c: 20: {
  6141                           ;UT.c: 21: USBDeviceDetach();
  6142  0052FC  EC99  F02A         	call	_USBDeviceDetach	;wreg free
  6143  005300                     l1044:
  6144                           
  6145                           ;UT.c: 22: }
  6146                           ;UT.c: 24: if ((USBDeviceState < CONFIGURED_STATE) || (UCONbits.SUSPND))
  6147  005300  0E1F               	movlw	31
  6148  005302  6458               	cpfsgt	_USBDeviceState,c	;volatile
  6149  005304  D002               	goto	u7810
  6150  005306  A26D               	btfss	3949,1,c	;volatile
  6151  005308  D002               	goto	l1045
  6152  00530A                     u7810:
  6153                           
  6154                           ;UT.c: 25: {
  6155                           ;UT.c: 26: return 0;
  6156  00530A  0E00               	movlw	0
  6157  00530C  0012               	return	
  6158  00530E                     l1045:
  6159                           
  6160                           ;UT.c: 27: }
  6161                           ;UT.c: 29: CDCTxService();
  6162  00530E  EC09  F019         	call	_CDCTxService	;wreg free
  6163                           
  6164                           ;UT.c: 30: return 1;
  6165  005312  0E01               	movlw	1
  6166  005314  0012               	return	
  6167  005316                     __end_of_verificaUSB:
  6168                           	opt stack 0
  6169                           tblptru	equ	0xFF8
  6170                           tblptrh	equ	0xFF7
  6171                           tblptrl	equ	0xFF6
  6172                           tablat	equ	0xFF5
  6173                           intcon	equ	0xFF2
  6174                           postinc0	equ	0xFEE
  6175                           wreg	equ	0xFE8
  6176                           postdec1	equ	0xFE5
  6177                           fsr1l	equ	0xFE1
  6178                           indf2	equ	0xFDF
  6179                           fsr2h	equ	0xFDA
  6180                           fsr2l	equ	0xFD9
  6181                           status	equ	0xFD8
  6182                           
  6183 ;; *************** function _USBDeviceDetach *****************
  6184 ;; Defined at:
  6185 ;;		line 1247 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
  6186 ;; Parameters:    Size  Location     Type
  6187 ;;		None
  6188 ;; Auto vars:     Size  Location     Type
  6189 ;;		None
  6190 ;; Return value:  Size  Location     Type
  6191 ;;                  1    wreg      void 
  6192 ;; Registers used:
  6193 ;;		wreg, status,2
  6194 ;; Tracked objects:
  6195 ;;		On entry : 0/0
  6196 ;;		On exit  : 0/0
  6197 ;;		Unchanged: 0/0
  6198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6199 ;;      Params:         0       0       0       0       0       0       0       0       0
  6200 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6201 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6202 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6203 ;;Total ram usage:        0 bytes
  6204 ;; Hardware stack levels used:    1
  6205 ;; Hardware stack levels required when called:   10
  6206 ;; This function calls:
  6207 ;;		Nothing
  6208 ;; This function is called by:
  6209 ;;		_verificaUSB
  6210 ;; This function uses a non-reentrant model
  6211 ;;
  6212                           
  6213                           	psect	text12
  6214  005532                     __ptext12:
  6215                           	opt stack 0
  6216  005532                     _USBDeviceDetach:
  6217                           	opt stack 19
  6218                           
  6219                           ;usb_device.c: 1255: {
  6220                           ;usb_device.c: 1257: UCON = 0;
  6221                           
  6222                           ;incstack = 0
  6223  005532  0E00               	movlw	0
  6224  005534  6E6D               	movwf	3949,c	;volatile
  6225                           
  6226                           ;usb_device.c: 1260: UIE = 0;
  6227  005536  0E00               	movlw	0
  6228  005538  6E69               	movwf	3945,c	;volatile
  6229                           
  6230                           ;usb_device.c: 1263: USBDeviceState = DETACHED_STATE;
  6231  00553A  0E00               	movlw	0
  6232  00553C  6E58               	movwf	_USBDeviceState,c	;volatile
  6233  00553E  0012               	return	
  6234  005540                     __end_of_USBDeviceDetach:
  6235                           	opt stack 0
  6236                           tblptru	equ	0xFF8
  6237                           tblptrh	equ	0xFF7
  6238                           tblptrl	equ	0xFF6
  6239                           tablat	equ	0xFF5
  6240                           intcon	equ	0xFF2
  6241                           postinc0	equ	0xFEE
  6242                           wreg	equ	0xFE8
  6243                           postdec1	equ	0xFE5
  6244                           fsr1l	equ	0xFE1
  6245                           indf2	equ	0xFDF
  6246                           fsr2h	equ	0xFDA
  6247                           fsr2l	equ	0xFD9
  6248                           status	equ	0xFD8
  6249                           
  6250 ;; *************** function _USBDeviceAttach *****************
  6251 ;; Defined at:
  6252 ;;		line 1352 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
  6253 ;; Parameters:    Size  Location     Type
  6254 ;;		None
  6255 ;; Auto vars:     Size  Location     Type
  6256 ;;		None
  6257 ;; Return value:  Size  Location     Type
  6258 ;;                  1    wreg      void 
  6259 ;; Registers used:
  6260 ;;		wreg, status,2
  6261 ;; Tracked objects:
  6262 ;;		On entry : 0/0
  6263 ;;		On exit  : 0/0
  6264 ;;		Unchanged: 0/0
  6265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6266 ;;      Params:         0       0       0       0       0       0       0       0       0
  6267 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6268 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6269 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6270 ;;Total ram usage:        0 bytes
  6271 ;; Hardware stack levels used:    1
  6272 ;; Hardware stack levels required when called:   10
  6273 ;; This function calls:
  6274 ;;		Nothing
  6275 ;; This function is called by:
  6276 ;;		_verificaUSB
  6277 ;; This function uses a non-reentrant model
  6278 ;;
  6279                           
  6280                           	psect	text13
  6281  0052B2                     __ptext13:
  6282                           	opt stack 0
  6283  0052B2                     _USBDeviceAttach:
  6284                           	opt stack 19
  6285                           
  6286                           ;usb_device.c: 1355: if(USBDeviceState == DETACHED_STATE)
  6287                           
  6288                           ;incstack = 0
  6289  0052B2  5058               	movf	_USBDeviceState,w,c	;volatile
  6290  0052B4  A4D8               	btfss	status,2,c
  6291  0052B6  0012               	return	
  6292                           
  6293                           ;usb_device.c: 1356: {
  6294                           ;usb_device.c: 1357: if(PORTCbits.RC2 == 1)
  6295  0052B8  A482               	btfss	3970,2,c	;volatile
  6296  0052BA  0012               	return	
  6297                           
  6298                           ;usb_device.c: 1358: {
  6299                           ;usb_device.c: 1360: UCON = 0;
  6300  0052BC  0E00               	movlw	0
  6301  0052BE  6E6D               	movwf	3949,c	;volatile
  6302                           
  6303                           ;usb_device.c: 1363: UIE = 0;
  6304  0052C0  0E00               	movlw	0
  6305  0052C2  6E69               	movwf	3945,c	;volatile
  6306                           
  6307                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  6308  0052C4  0E16               	movlw	22
  6309  0052C6  6E6F               	movwf	3951,c	;volatile
  6310  0052C8  0E9F               	movlw	159
  6311  0052CA  6E6B               	movwf	3947,c	;volatile
  6312  0052CC  0E7B               	movlw	123
  6313  0052CE  6E69               	movwf	3945,c	;volatile
  6314                           
  6315                           ;usb_device.c: 1369: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
  6316  0052D0  8ED0               	bsf	4048,7,c	;volatile
  6317  0052D2  8AA2               	bsf	4002,5,c	;volatile
  6318  0052D4  8AA0               	bsf	4000,5,c	;volatile
  6319  0052D6  8EF2               	bsf	intcon,7,c	;volatile
  6320                           
  6321                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  6322  0052D8  D001               	goto	l459
  6323  0052DA                     l460:
  6324  0052DA  866D               	bsf	3949,3,c	;volatile
  6325  0052DC                     l459:
  6326  0052DC  A66D               	btfss	3949,3,c	;volatile
  6327  0052DE  D7FD               	goto	l460
  6328                           
  6329                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
  6330  0052E0  0E01               	movlw	1
  6331  0052E2  6E58               	movwf	_USBDeviceState,c	;volatile
  6332  0052E4  0012               	return	
  6333  0052E6                     __end_of_USBDeviceAttach:
  6334                           	opt stack 0
  6335                           tblptru	equ	0xFF8
  6336                           tblptrh	equ	0xFF7
  6337                           tblptrl	equ	0xFF6
  6338                           tablat	equ	0xFF5
  6339                           intcon	equ	0xFF2
  6340                           postinc0	equ	0xFEE
  6341                           wreg	equ	0xFE8
  6342                           postdec1	equ	0xFE5
  6343                           fsr1l	equ	0xFE1
  6344                           indf2	equ	0xFDF
  6345                           fsr2h	equ	0xFDA
  6346                           fsr2l	equ	0xFD9
  6347                           status	equ	0xFD8
  6348                           
  6349 ;; *************** function _CDCTxService *****************
  6350 ;; Defined at:
  6351 ;;		line 836 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device_cdc.c"
  6352 ;; Parameters:    Size  Location     Type
  6353 ;;		None
  6354 ;; Auto vars:     Size  Location     Type
  6355 ;;  byte_to_send    1   12[BANK0 ] unsigned char 
  6356 ;;  i               1   11[BANK0 ] unsigned char 
  6357 ;; Return value:  Size  Location     Type
  6358 ;;                  1    wreg      void 
  6359 ;; Registers used:
  6360 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6361 ;; Tracked objects:
  6362 ;;		On entry : 0/0
  6363 ;;		On exit  : 0/0
  6364 ;;		Unchanged: 0/0
  6365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6366 ;;      Params:         0       0       0       0       0       0       0       0       0
  6367 ;;      Locals:         0       2       0       0       0       0       0       0       0
  6368 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6369 ;;      Totals:         0       2       0       0       0       0       0       0       0
  6370 ;;Total ram usage:        2 bytes
  6371 ;; Hardware stack levels used:    1
  6372 ;; Hardware stack levels required when called:   11
  6373 ;; This function calls:
  6374 ;;		_USBTransferOnePacket
  6375 ;; This function is called by:
  6376 ;;		_verificaUSB
  6377 ;; This function uses a non-reentrant model
  6378 ;;
  6379                           
  6380                           	psect	text14
  6381  003212                     __ptext14:
  6382                           	opt stack 0
  6383  003212                     _CDCTxService:
  6384                           	opt stack 18
  6385                           
  6386                           ;usb_device_cdc.c: 838: uint8_t byte_to_send;
  6387                           ;usb_device_cdc.c: 839: uint8_t i;
  6388                           ;usb_device_cdc.c: 841: {PIE2bits.USBIE = 0;};
  6389                           
  6390                           ;incstack = 0
  6391  003212  9AA0               	bcf	4000,5,c	;volatile
  6392                           
  6393                           ;usb_device_cdc.c: 843: {};
  6394                           ;usb_device_cdc.c: 845: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
  6395  003214  0102               	movlb	2	; () banked
  6396  003216  51D8               	movf	_CDCDataInHandle& (0+255),w,b
  6397  003218  11D9               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
  6398  00321A  B4D8               	btfsc	status,2,c
  6399  00321C  D008               	goto	l852
  6400                           
  6401                           ; BSR set to: 2
  6402  00321E  C2D8  FFD9         	movff	_CDCDataInHandle,fsr2l
  6403  003222  C2D9  FFDA         	movff	_CDCDataInHandle+1,fsr2h
  6404  003226  AEDF               	btfss	indf2,7,c
  6405  003228  D002               	goto	l852
  6406                           
  6407                           ; BSR set to: 2
  6408                           ;usb_device_cdc.c: 846: {
  6409                           ;usb_device_cdc.c: 847: {PIE2bits.USBIE = 1;};
  6410  00322A  8AA0               	bsf	4000,5,c	;volatile
  6411                           
  6412                           ;usb_device_cdc.c: 848: return;
  6413  00322C  0012               	return	
  6414  00322E                     l852:
  6415                           
  6416                           ; BSR set to: 2
  6417                           ;usb_device_cdc.c: 849: }
  6418                           ;usb_device_cdc.c: 856: if(cdc_trf_state == 3)
  6419                           
  6420                           ; BSR set to: 2
  6421  00322E  0E03               	movlw	3
  6422  003230  0100               	movlb	0	; () banked
  6423  003232  19FF               	xorwf	_cdc_trf_state& (0+255),w,b
  6424  003234  A4D8               	btfss	status,2,c
  6425  003236  D002               	goto	l854
  6426                           
  6427                           ; BSR set to: 0
  6428                           ;usb_device_cdc.c: 857: cdc_trf_state = 0;
  6429  003238  0E00               	movlw	0
  6430  00323A  6FFF               	movwf	_cdc_trf_state& (0+255),b
  6431  00323C                     l854:
  6432                           
  6433                           ; BSR set to: 0
  6434                           ;usb_device_cdc.c: 862: if(cdc_trf_state == 0)
  6435  00323C  51FF               	movf	_cdc_trf_state& (0+255),w,b
  6436  00323E  A4D8               	btfss	status,2,c
  6437  003240  D002               	goto	l855
  6438                           
  6439                           ; BSR set to: 0
  6440                           ;usb_device_cdc.c: 863: {
  6441                           ;usb_device_cdc.c: 864: {PIE2bits.USBIE = 1;};
  6442  003242  8AA0               	bsf	4000,5,c	;volatile
  6443                           
  6444                           ;usb_device_cdc.c: 865: return;
  6445  003244  0012               	return	
  6446  003246                     l855:
  6447                           
  6448                           ; BSR set to: 0
  6449                           ;usb_device_cdc.c: 866: }
  6450                           ;usb_device_cdc.c: 871: if(cdc_trf_state == 2)
  6451                           
  6452                           ; BSR set to: 0
  6453  003246  0E02               	movlw	2
  6454  003248  19FF               	xorwf	_cdc_trf_state& (0+255),w,b
  6455  00324A  A4D8               	btfss	status,2,c
  6456  00324C  D013               	goto	l856
  6457                           
  6458                           ; BSR set to: 0
  6459                           ;usb_device_cdc.c: 872: {
  6460                           ;usb_device_cdc.c: 873: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
  6461  00324E  0E01               	movlw	1
  6462  003250  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
  6463  003252  0E00               	movlw	0
  6464  003254  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
  6465  003256  0E00               	movlw	0
  6466  003258  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  6467  00325A  0E00               	movlw	0
  6468  00325C  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
  6469  00325E  0E02               	movlw	2
  6470  003260  EC22  F01A         	call	_USBTransferOnePacket
  6471  003264  C060  F2D8         	movff	?_USBTransferOnePacket,_CDCDataInHandle
  6472  003268  C061  F2D9         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
  6473                           
  6474                           ;usb_device_cdc.c: 875: cdc_trf_state = 3;
  6475  00326C  0E03               	movlw	3
  6476  00326E  0100               	movlb	0	; () banked
  6477  003270  6FFF               	movwf	_cdc_trf_state& (0+255),b
  6478                           
  6479                           ;usb_device_cdc.c: 876: }
  6480  003272  D060               	goto	l858
  6481  003274                     l856:
  6482                           
  6483                           ; BSR set to: 0
  6484                           ;usb_device_cdc.c: 877: else if(cdc_trf_state == 1)
  6485                           
  6486                           ; BSR set to: 0
  6487  003274  05FF               	decf	_cdc_trf_state& (0+255),w,b
  6488  003276  A4D8               	btfss	status,2,c
  6489  003278  D05D               	goto	l858
  6490                           
  6491                           ; BSR set to: 0
  6492                           ;usb_device_cdc.c: 878: {
  6493                           ;usb_device_cdc.c: 882: if(cdc_tx_len > sizeof(cdc_data_tx))
  6494  00327A  0E40               	movlw	64
  6495  00327C  6451               	cpfsgt	_cdc_tx_len,c
  6496  00327E  D003               	goto	l859
  6497                           
  6498                           ; BSR set to: 0
  6499                           ;usb_device_cdc.c: 883: byte_to_send = sizeof(cdc_data_tx);
  6500  003280  0E40               	movlw	64
  6501  003282  6F6C               	movwf	CDCTxService@byte_to_send& (0+255),b
  6502  003284  D002               	goto	l860
  6503  003286                     l859:
  6504                           
  6505                           ; BSR set to: 0
  6506                           ;usb_device_cdc.c: 884: else
  6507                           ;usb_device_cdc.c: 885: byte_to_send = cdc_tx_len;
  6508  003286  C051  F06C         	movff	_cdc_tx_len,CDCTxService@byte_to_send
  6509  00328A                     l860:
  6510                           
  6511                           ; BSR set to: 0
  6512                           ;usb_device_cdc.c: 890: cdc_tx_len = cdc_tx_len - byte_to_send;
  6513                           
  6514                           ; BSR set to: 0
  6515  00328A  516C               	movf	CDCTxService@byte_to_send& (0+255),w,b
  6516  00328C  0800               	sublw	0
  6517  00328E  2451               	addwf	_cdc_tx_len,w,c
  6518  003290  6E51               	movwf	_cdc_tx_len,c
  6519                           
  6520                           ;usb_device_cdc.c: 892: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
  6521  003292  0E00               	movlw	0
  6522  003294  0103               	movlb	3	; () banked
  6523  003296  6F46               	movwf	_pCDCDst& (0+255),b
  6524  003298  0E05               	movlw	5
  6525  00329A  6F47               	movwf	(_pCDCDst+1)& (0+255),b
  6526                           
  6527                           ; BSR set to: 3
  6528                           ;usb_device_cdc.c: 894: i = byte_to_send;
  6529  00329C  C06C  F06B         	movff	CDCTxService@byte_to_send,CDCTxService@i
  6530                           
  6531                           ; BSR set to: 3
  6532                           ;usb_device_cdc.c: 895: if(cdc_mem_type == 0x00)
  6533  0032A0  0102               	movlb	2	; () banked
  6534  0032A2  51E4               	movf	_cdc_mem_type& (0+255),w,b
  6535  0032A4  B4D8               	btfsc	status,2,c
  6536  0032A6  D012               	goto	l862
  6537  0032A8  D027               	goto	l866
  6538  0032AA                     
  6539                           ;usb_device_cdc.c: 898: {
  6540                           ;usb_device_cdc.c: 899: *pCDCDst.bRam = *pCDCSrc.bRom;
  6541                           
  6542                           ; BSR set to: 2
  6543  0032AA  C349  FFD9         	movff	_pCDCSrc,fsr2l
  6544  0032AE  C34A  FFDA         	movff	_pCDCSrc+1,fsr2h
  6545  0032B2  C346  FFE1         	movff	_pCDCDst,fsr1l
  6546  0032B6  C347  FFE2         	movff	_pCDCDst+1,fsr1h
  6547  0032BA  CFDF FFE7          	movff	indf2,indf1
  6548                           
  6549                           ;usb_device_cdc.c: 900: pCDCDst.bRam++;
  6550  0032BE  0103               	movlb	3	; () banked
  6551  0032C0  4B46               	infsnz	_pCDCDst& (0+255),f,b
  6552  0032C2  2B47               	incf	(_pCDCDst+1)& (0+255),f,b
  6553                           
  6554                           ; BSR set to: 3
  6555                           ;usb_device_cdc.c: 901: pCDCSrc.bRom++;
  6556  0032C4  4B49               	infsnz	_pCDCSrc& (0+255),f,b
  6557  0032C6  2B4A               	incf	(_pCDCSrc+1)& (0+255),f,b
  6558                           
  6559                           ; BSR set to: 3
  6560                           ;usb_device_cdc.c: 902: i--;
  6561  0032C8  0100               	movlb	0	; () banked
  6562  0032CA  076B               	decf	CDCTxService@i& (0+255),f,b
  6563  0032CC                     l862:
  6564                           
  6565                           ; BSR set to: 0
  6566  0032CC  0100               	movlb	0	; () banked
  6567  0032CE  516B               	movf	CDCTxService@i& (0+255),w,b
  6568  0032D0  B4D8               	btfsc	status,2,c
  6569  0032D2  D016               	goto	u7120
  6570  0032D4  D7EA               	goto	l863
  6571  0032D6                     
  6572                           ; BSR set to: 0
  6573                           ;usb_device_cdc.c: 908: {
  6574                           ;usb_device_cdc.c: 909: *pCDCDst.bRam = *pCDCSrc.bRam;
  6575                           
  6576                           ; BSR set to: 0
  6577  0032D6  C349  FFD9         	movff	_pCDCSrc,fsr2l
  6578  0032DA  C34A  FFDA         	movff	_pCDCSrc+1,fsr2h
  6579  0032DE  C346  FFE1         	movff	_pCDCDst,fsr1l
  6580  0032E2  C347  FFE2         	movff	_pCDCDst+1,fsr1h
  6581  0032E6  CFDF FFE7          	movff	indf2,indf1
  6582                           
  6583                           ; BSR set to: 0
  6584                           ;usb_device_cdc.c: 910: pCDCDst.bRam++;
  6585  0032EA  0103               	movlb	3	; () banked
  6586  0032EC  4B46               	infsnz	_pCDCDst& (0+255),f,b
  6587  0032EE  2B47               	incf	(_pCDCDst+1)& (0+255),f,b
  6588                           
  6589                           ; BSR set to: 3
  6590                           ;usb_device_cdc.c: 911: pCDCSrc.bRam++;
  6591  0032F0  4B49               	infsnz	_pCDCSrc& (0+255),f,b
  6592  0032F2  2B4A               	incf	(_pCDCSrc+1)& (0+255),f,b
  6593                           
  6594                           ; BSR set to: 3
  6595                           ;usb_device_cdc.c: 912: i--;
  6596  0032F4  0100               	movlb	0	; () banked
  6597  0032F6  076B               	decf	CDCTxService@i& (0+255),f,b
  6598  0032F8                     l866:
  6599                           
  6600                           ; BSR set to: 0
  6601  0032F8  0100               	movlb	0	; () banked
  6602  0032FA  516B               	movf	CDCTxService@i& (0+255),w,b
  6603  0032FC  A4D8               	btfss	status,2,c
  6604  0032FE  D7EB               	goto	l867
  6605  003300                     u7120:
  6606                           
  6607                           ; BSR set to: 0
  6608                           ;usb_device_cdc.c: 913: }
  6609                           ;usb_device_cdc.c: 914: }
  6610                           ;usb_device_cdc.c: 920: if(cdc_tx_len == 0)
  6611                           
  6612                           ; BSR set to: 0
  6613                           
  6614                           ; BSR set to: 0
  6615  003300  5051               	movf	_cdc_tx_len,w,c
  6616  003302  A4D8               	btfss	status,2,c
  6617  003304  D008               	goto	l871
  6618                           
  6619                           ; BSR set to: 0
  6620                           ;usb_device_cdc.c: 921: {
  6621                           ;usb_device_cdc.c: 922: if(byte_to_send == 64)
  6622  003306  0E40               	movlw	64
  6623  003308  196C               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
  6624  00330A  A4D8               	btfss	status,2,c
  6625  00330C  D002               	goto	l870
  6626                           
  6627                           ; BSR set to: 0
  6628                           ;usb_device_cdc.c: 923: cdc_trf_state = 2;
  6629  00330E  0E02               	movlw	2
  6630  003310  D001               	goto	L1
  6631  003312                     l870:
  6632                           
  6633                           ; BSR set to: 0
  6634                           ;usb_device_cdc.c: 924: else
  6635                           ;usb_device_cdc.c: 925: cdc_trf_state = 3;
  6636                           
  6637                           ; BSR set to: 0
  6638  003312  0E03               	movlw	3
  6639  003314                     L1:
  6640  003314  6FFF               	movwf	_cdc_trf_state& (0+255),b
  6641  003316                     l871:
  6642                           
  6643                           ; BSR set to: 0
  6644                           ;usb_device_cdc.c: 926: }
  6645                           ;usb_device_cdc.c: 927: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
  6646                           
  6647                           ; BSR set to: 0
  6648                           
  6649                           ; BSR set to: 0
  6650  003316  0E01               	movlw	1
  6651  003318  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
  6652  00331A  0E00               	movlw	0
  6653  00331C  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
  6654  00331E  0E05               	movlw	5
  6655  003320  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  6656  003322  C06C  F063         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
  6657  003326  0E02               	movlw	2
  6658  003328  EC22  F01A         	call	_USBTransferOnePacket
  6659  00332C  C060  F2D8         	movff	?_USBTransferOnePacket,_CDCDataInHandle
  6660  003330  C061  F2D9         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
  6661  003334                     l858:
  6662                           
  6663                           ;usb_device_cdc.c: 929: }
  6664                           ;usb_device_cdc.c: 931: {PIE2bits.USBIE = 1;};
  6665  003334  8AA0               	bsf	4000,5,c	;volatile
  6666  003336  0012               	return		;funcret
  6667  003338                     __end_of_CDCTxService:
  6668                           	opt stack 0
  6669                           tblptru	equ	0xFF8
  6670                           tblptrh	equ	0xFF7
  6671                           tblptrl	equ	0xFF6
  6672                           tablat	equ	0xFF5
  6673                           intcon	equ	0xFF2
  6674                           postinc0	equ	0xFEE
  6675                           wreg	equ	0xFE8
  6676                           indf1	equ	0xFE7
  6677                           postdec1	equ	0xFE5
  6678                           fsr1h	equ	0xFE2
  6679                           fsr1l	equ	0xFE1
  6680                           indf2	equ	0xFDF
  6681                           fsr2h	equ	0xFDA
  6682                           fsr2l	equ	0xFD9
  6683                           status	equ	0xFD8
  6684                           
  6685 ;; *************** function _USBTransferOnePacket *****************
  6686 ;; Defined at:
  6687 ;;		line 995 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
  6688 ;; Parameters:    Size  Location     Type
  6689 ;;  ep              1    wreg     unsigned char 
  6690 ;;  dir             1    0[BANK0 ] unsigned char 
  6691 ;;  data            2    1[BANK0 ] PTR unsigned char 
  6692 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
  6693 ;;  len             1    3[BANK0 ] unsigned char 
  6694 ;; Auto vars:     Size  Location     Type
  6695 ;;  ep              1    8[BANK0 ] unsigned char 
  6696 ;;  handle          2    9[BANK0 ] PTR volatile struct __BD
  6697 ;;		 -> RAM(2047), NULL(0), BDT(48), 
  6698 ;; Return value:  Size  Location     Type
  6699 ;;                  2    0[BANK0 ] PTR void 
  6700 ;; Registers used:
  6701 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6702 ;; Tracked objects:
  6703 ;;		On entry : 0/0
  6704 ;;		On exit  : 0/0
  6705 ;;		Unchanged: 0/0
  6706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6707 ;;      Params:         0       4       0       0       0       0       0       0       0
  6708 ;;      Locals:         0       3       0       0       0       0       0       0       0
  6709 ;;      Temps:          0       4       0       0       0       0       0       0       0
  6710 ;;      Totals:         0      11       0       0       0       0       0       0       0
  6711 ;;Total ram usage:       11 bytes
  6712 ;; Hardware stack levels used:    1
  6713 ;; Hardware stack levels required when called:   10
  6714 ;; This function calls:
  6715 ;;		Nothing
  6716 ;; This function is called by:
  6717 ;;		_CDCTxService
  6718 ;;		_USBCDCEventHandler
  6719 ;;		_getsUSBUSART
  6720 ;; This function uses a non-reentrant model
  6721 ;;
  6722                           
  6723                           	psect	text15
  6724  003444                     __ptext15:
  6725                           	opt stack 0
  6726  003444                     _USBTransferOnePacket:
  6727                           	opt stack 18
  6728                           
  6729                           ;incstack = 0
  6730                           ;USBTransferOnePacket@ep stored from wreg
  6731  003444  0100               	movlb	0	; () banked
  6732  003446  6F68               	movwf	USBTransferOnePacket@ep& (0+255),b
  6733                           
  6734                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  6735                           ;usb_device.c: 1000: if(dir != 0)
  6736  003448  0100               	movlb	0	; () banked
  6737  00344A  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
  6738  00344C  B4D8               	btfsc	status,2,c
  6739  00344E  D007               	goto	l437
  6740                           
  6741                           ; BSR set to: 0
  6742                           ;usb_device.c: 1001: {
  6743                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  6744  003450  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
  6745  003452  0D02               	mullw	2
  6746  003454  0E40               	movlw	low _pBDTEntryIn
  6747  003456  24F3               	addwf	prodl,w,c
  6748  003458  6ED9               	movwf	fsr2l,c
  6749  00345A  0E00               	movlw	high _pBDTEntryIn
  6750  00345C  D006               	goto	L2
  6751  00345E                     l437:
  6752                           
  6753                           ; BSR set to: 0
  6754                           ;usb_device.c: 1005: else
  6755                           ;usb_device.c: 1006: {
  6756                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  6757                           
  6758                           ; BSR set to: 0
  6759  00345E  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
  6760  003460  0D02               	mullw	2
  6761  003462  0EC8               	movlw	low _pBDTEntryOut
  6762  003464  24F3               	addwf	prodl,w,c
  6763  003466  6ED9               	movwf	fsr2l,c
  6764  003468  0E02               	movlw	high _pBDTEntryOut
  6765  00346A                     L2:
  6766  00346A  20F4               	addwfc	prodh,w,c
  6767  00346C  6EDA               	movwf	fsr2h,c
  6768  00346E  CFDE F069          	movff	postinc2,USBTransferOnePacket@handle
  6769  003472  CFDD F06A          	movff	postdec2,USBTransferOnePacket@handle+1
  6770                           
  6771                           ; BSR set to: 0
  6772                           ;usb_device.c: 1009: }
  6773                           ;usb_device.c: 1013: if(handle == 0)
  6774                           
  6775                           ; BSR set to: 0
  6776  003476  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
  6777  003478  116A               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  6778  00347A  A4D8               	btfss	status,2,c
  6779  00347C  D005               	goto	l439
  6780                           
  6781                           ; BSR set to: 0
  6782                           ;usb_device.c: 1014: {
  6783                           ;usb_device.c: 1015: return 0;
  6784  00347E  0E00               	movlw	0
  6785  003480  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
  6786  003482  0E00               	movlw	0
  6787  003484  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
  6788                           
  6789                           ; BSR set to: 0
  6790  003486  0012               	return	
  6791  003488                     l439:
  6792                           
  6793                           ; BSR set to: 0
  6794                           ;usb_device.c: 1016: }
  6795                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
  6796                           
  6797                           ; BSR set to: 0
  6798  003488  EE20 F002          	lfsr	2,2
  6799  00348C  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
  6800  00348E  26D9               	addwf	fsr2l,f,c
  6801  003490  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  6802  003492  22DA               	addwfc	fsr2h,f,c
  6803  003494  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
  6804  003498  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
  6805                           
  6806                           ;usb_device.c: 1030: handle->CNT = len;
  6807  00349C  EE20 F001          	lfsr	2,1
  6808  0034A0  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
  6809  0034A2  26D9               	addwf	fsr2l,f,c
  6810  0034A4  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  6811  0034A6  22DA               	addwfc	fsr2h,f,c
  6812  0034A8  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
  6813                           
  6814                           ; BSR set to: 0
  6815                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  6816  0034AC  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  6817  0034B0  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  6818  0034B4  0E40               	movlw	64
  6819  0034B6  16DF               	andwf	indf2,f,c
  6820                           
  6821                           ; BSR set to: 0
  6822                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  6823  0034B8  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  6824  0034BC  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  6825  0034C0  0E00               	movlw	0
  6826  0034C2  86DB               	bsf	plusw2,3,c
  6827                           
  6828                           ; BSR set to: 0
  6829                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  6830  0034C4  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  6831  0034C8  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  6832  0034CC  0E00               	movlw	0
  6833  0034CE  8EDB               	bsf	plusw2,7,c
  6834                           
  6835                           ; BSR set to: 0
  6836                           ;usb_device.c: 1036: if(dir != 0)
  6837  0034D0  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
  6838  0034D2  B4D8               	btfsc	status,2,c
  6839  0034D4  D018               	goto	l441
  6840                           
  6841                           ; BSR set to: 0
  6842                           ;usb_device.c: 1037: {
  6843                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
  6844  0034D6  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
  6845  0034D8  0D02               	mullw	2
  6846  0034DA  0E40               	movlw	low _pBDTEntryIn
  6847  0034DC  24F3               	addwf	prodl,w,c
  6848  0034DE  6ED9               	movwf	fsr2l,c
  6849  0034E0  0E00               	movlw	high _pBDTEntryIn
  6850  0034E2  20F4               	addwfc	prodh,w,c
  6851  0034E4  6EDA               	movwf	fsr2h,c
  6852  0034E6  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
  6853  0034EA  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
  6854  0034EE  0E04               	movlw	4
  6855  0034F0  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
  6856  0034F2  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
  6857  0034F4  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
  6858  0034F6  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
  6859  0034F8  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
  6860  0034FA  0D02               	mullw	2
  6861  0034FC  0E40               	movlw	low _pBDTEntryIn
  6862  0034FE  24F3               	addwf	prodl,w,c
  6863  003500  6ED9               	movwf	fsr2l,c
  6864  003502  0E00               	movlw	high _pBDTEntryIn
  6865  003504  D017               	goto	L3
  6866  003506                     l441:
  6867                           
  6868                           ; BSR set to: 0
  6869                           ;usb_device.c: 1041: else
  6870                           ;usb_device.c: 1042: {
  6871                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
  6872                           
  6873                           ; BSR set to: 0
  6874  003506  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
  6875  003508  0D02               	mullw	2
  6876  00350A  0EC8               	movlw	low _pBDTEntryOut
  6877  00350C  24F3               	addwf	prodl,w,c
  6878  00350E  6ED9               	movwf	fsr2l,c
  6879  003510  0E02               	movlw	high _pBDTEntryOut
  6880  003512  20F4               	addwfc	prodh,w,c
  6881  003514  6EDA               	movwf	fsr2h,c
  6882  003516  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
  6883  00351A  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
  6884  00351E  0E04               	movlw	4
  6885  003520  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
  6886  003522  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
  6887  003524  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
  6888  003526  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
  6889  003528  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
  6890  00352A  0D02               	mullw	2
  6891  00352C  0EC8               	movlw	low _pBDTEntryOut
  6892  00352E  24F3               	addwf	prodl,w,c
  6893  003530  6ED9               	movwf	fsr2l,c
  6894  003532  0E02               	movlw	high _pBDTEntryOut
  6895  003534                     L3:
  6896  003534  20F4               	addwfc	prodh,w,c
  6897  003536  6EDA               	movwf	fsr2h,c
  6898  003538  C066  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
  6899  00353C  C067  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
  6900                           
  6901                           ; BSR set to: 0
  6902                           ;usb_device.c: 1045: }
  6903                           ;usb_device.c: 1046: return (void*)handle;
  6904                           
  6905                           ; BSR set to: 0
  6906  003540  C069  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
  6907  003544  C06A  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
  6908  003548  0012               	return	
  6909  00354A                     __end_of_USBTransferOnePacket:
  6910                           	opt stack 0
  6911                           tblptru	equ	0xFF8
  6912                           tblptrh	equ	0xFF7
  6913                           tblptrl	equ	0xFF6
  6914                           tablat	equ	0xFF5
  6915                           prodh	equ	0xFF4
  6916                           prodl	equ	0xFF3
  6917                           intcon	equ	0xFF2
  6918                           postinc0	equ	0xFEE
  6919                           wreg	equ	0xFE8
  6920                           indf1	equ	0xFE7
  6921                           postdec1	equ	0xFE5
  6922                           fsr1h	equ	0xFE2
  6923                           fsr1l	equ	0xFE1
  6924                           indf2	equ	0xFDF
  6925                           postinc2	equ	0xFDE
  6926                           postdec2	equ	0xFDD
  6927                           plusw2	equ	0xFDB
  6928                           fsr2h	equ	0xFDA
  6929                           fsr2l	equ	0xFD9
  6930                           status	equ	0xFD8
  6931                           
  6932 ;; *************** function _USBDeviceInit *****************
  6933 ;; Defined at:
  6934 ;;		line 277 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
  6935 ;; Parameters:    Size  Location     Type
  6936 ;;		None
  6937 ;; Auto vars:     Size  Location     Type
  6938 ;;  i               1    8[BANK0 ] unsigned char 
  6939 ;; Return value:  Size  Location     Type
  6940 ;;                  1    wreg      void 
  6941 ;; Registers used:
  6942 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6943 ;; Tracked objects:
  6944 ;;		On entry : 0/0
  6945 ;;		On exit  : 0/0
  6946 ;;		Unchanged: 0/0
  6947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6948 ;;      Params:         0       0       0       0       0       0       0       0       0
  6949 ;;      Locals:         0       1       0       0       0       0       0       0       0
  6950 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6951 ;;      Totals:         0       1       0       0       0       0       0       0       0
  6952 ;;Total ram usage:        1 bytes
  6953 ;; Hardware stack levels used:    1
  6954 ;; Hardware stack levels required when called:   11
  6955 ;; This function calls:
  6956 ;;		_memset
  6957 ;; This function is called by:
  6958 ;;		_main
  6959 ;; This function uses a non-reentrant model
  6960 ;;
  6961                           
  6962                           	psect	text16
  6963  0029A8                     __ptext16:
  6964                           	opt stack 0
  6965  0029A8                     _USBDeviceInit:
  6966                           	opt stack 19
  6967                           
  6968                           ;usb_device.c: 279: uint8_t i;
  6969                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
  6970                           
  6971                           ; BSR set to: 0
  6972                           ;incstack = 0
  6973  0029A8  9AA0               	bcf	4000,5,c	;volatile
  6974                           
  6975                           ;usb_device.c: 285: ;
  6976                           ;usb_device.c: 288: {UEIR = 0;};
  6977  0029AA  0E00               	movlw	0
  6978  0029AC  6E6A               	movwf	3946,c	;volatile
  6979                           
  6980                           ;usb_device.c: 291: {UIR = 0;};
  6981  0029AE  0E00               	movlw	0
  6982  0029B0  6E68               	movwf	3944,c	;volatile
  6983                           
  6984                           ;usb_device.c: 294: UEP0 = 0;
  6985  0029B2  0E00               	movlw	0
  6986  0029B4  6E70               	movwf	3952,c	;volatile
  6987                           
  6988                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
  6989  0029B6  0E71               	movlw	113
  6990  0029B8  0100               	movlb	0	; () banked
  6991  0029BA  6F60               	movwf	memset@p1& (0+255),b
  6992  0029BC  0E0F               	movlw	15
  6993  0029BE  6F61               	movwf	(memset@p1+1)& (0+255),b
  6994  0029C0  0E00               	movlw	0
  6995  0029C2  6F63               	movwf	(memset@c+1)& (0+255),b
  6996  0029C4  0E00               	movlw	0
  6997  0029C6  6F62               	movwf	memset@c& (0+255),b
  6998  0029C8  0E00               	movlw	0
  6999  0029CA  6F65               	movwf	(memset@n+1)& (0+255),b
  7000  0029CC  0E02               	movlw	2
  7001  0029CE  6F64               	movwf	memset@n& (0+255),b
  7002  0029D0  EC8B  F029         	call	_memset	;wreg free
  7003                           
  7004                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  7005  0029D4  0E16               	movlw	22
  7006  0029D6  6E6F               	movwf	3951,c	;volatile
  7007  0029D8  0E9F               	movlw	159
  7008  0029DA  6E6B               	movwf	3947,c	;volatile
  7009  0029DC  0E7B               	movlw	123
  7010  0029DE  6E69               	movwf	3945,c	;volatile
  7011                           
  7012                           ;usb_device.c: 301: ;
  7013                           ;usb_device.c: 304: ;
  7014                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  7015  0029E0  0E00               	movlw	0
  7016  0029E2  0100               	movlb	0	; () banked
  7017  0029E4  6F68               	movwf	USBDeviceInit@i& (0+255),b
  7018  0029E6                     l9792:
  7019                           
  7020                           ; BSR set to: 0
  7021  0029E6  0E0B               	movlw	11
  7022  0029E8  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
  7023  0029EA  D001               	goto	l398
  7024  0029EC  D00E               	goto	u9250
  7025  0029EE                     l398:
  7026                           
  7027                           ; BSR set to: 0
  7028                           ;usb_device.c: 308: {
  7029                           ;usb_device.c: 309: BDT[i].Val = 0x00;
  7030                           
  7031                           ; BSR set to: 0
  7032  0029EE  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7033  0029F0  0D04               	mullw	4
  7034  0029F2  0E00               	movlw	0
  7035  0029F4  24F3               	addwf	prodl,w,c
  7036  0029F6  6ED9               	movwf	fsr2l,c
  7037  0029F8  0E04               	movlw	4
  7038  0029FA  20F4               	addwfc	prodh,w,c
  7039  0029FC  6EDA               	movwf	fsr2h,c
  7040  0029FE  6ADE               	clrf	postinc2,c
  7041  002A00  6ADE               	clrf	postinc2,c
  7042  002A02  6ADE               	clrf	postinc2,c
  7043  002A04  6ADD               	clrf	postdec2,c
  7044                           
  7045                           ; BSR set to: 0
  7046  002A06  2B68               	incf	USBDeviceInit@i& (0+255),f,b
  7047  002A08  D7EE               	goto	l9792
  7048  002A0A                     u9250:
  7049                           
  7050                           ; BSR set to: 0
  7051                           ;usb_device.c: 310: }
  7052                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
  7053  002A0A  8C6D               	bsf	3949,6,c	;volatile
  7054                           
  7055                           ; BSR set to: 0
  7056                           ;usb_device.c: 316: UADDR = 0x00;
  7057  002A0C  0E00               	movlw	0
  7058  002A0E  6E6E               	movwf	3950,c	;volatile
  7059                           
  7060                           ; BSR set to: 0
  7061                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
  7062  002A10  986D               	bcf	3949,4,c	;volatile
  7063                           
  7064                           ; BSR set to: 0
  7065                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
  7066  002A12  9C6D               	bcf	3949,6,c	;volatile
  7067  002A14                     
  7068                           ; BSR set to: 0
  7069                           ;usb_device.c: 326: {
  7070                           ;usb_device.c: 327: (UIR &= 0xF7);
  7071                           
  7072                           ; BSR set to: 0
  7073  002A14  9668               	bcf	3944,3,c	;volatile
  7074                           
  7075                           ; BSR set to: 0
  7076                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
  7077  002A16  0E00               	movlw	0
  7078  002A18  6FFC               	movwf	(_inPipes+3)& (0+255),b	;volatile
  7079                           
  7080                           ; BSR set to: 0
  7081                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
  7082  002A1A  0E00               	movlw	0
  7083  002A1C  6E3B               	movwf	_outPipes+3,c	;volatile
  7084                           
  7085                           ; BSR set to: 0
  7086                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
  7087  002A1E  0E00               	movlw	0
  7088  002A20  6E3D               	movwf	_outPipes+5,c	;volatile
  7089  002A22  0E00               	movlw	0
  7090  002A24  6E3C               	movwf	_outPipes+4,c	;volatile
  7091                           
  7092                           ; BSR set to: 0
  7093                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
  7094  002A26  B668               	btfsc	3944,3,c	;volatile
  7095  002A28  D7F5               	goto	l400
  7096                           
  7097                           ; BSR set to: 0
  7098                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
  7099                           
  7100                           ; BSR set to: 0
  7101  002A2A  0E01               	movlw	1
  7102  002A2C  0102               	movlb	2	; () banked
  7103  002A2E  6FE9               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  7104                           
  7105                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
  7106  002A30  0E01               	movlw	1
  7107  002A32  6FE8               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
  7108                           
  7109                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
  7110  002A34  0E00               	movlw	0
  7111  002A36  6FE7               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
  7112                           
  7113                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
  7114  002A38  0E00               	movlw	0
  7115  002A3A  6FE6               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  7116                           
  7117                           ;usb_device.c: 341: USBBusIsSuspended = 0;
  7118  002A3C  0E00               	movlw	0
  7119  002A3E  0101               	movlb	1	; () banked
  7120  002A40  6FF9               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
  7121                           
  7122                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
  7123  002A42  0E00               	movlw	0
  7124  002A44  0100               	movlb	0	; () banked
  7125  002A46  6F68               	movwf	USBDeviceInit@i& (0+255),b
  7126  002A48                     l9820:
  7127                           
  7128                           ; BSR set to: 0
  7129  002A48  0E02               	movlw	2
  7130  002A4A  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
  7131  002A4C  D001               	goto	l402
  7132  002A4E  D02E               	goto	u9280
  7133  002A50                     l402:
  7134                           
  7135                           ; BSR set to: 0
  7136                           ;usb_device.c: 346: {
  7137                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
  7138                           
  7139                           ; BSR set to: 0
  7140  002A50  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7141  002A52  0D02               	mullw	2
  7142  002A54  0E40               	movlw	low _pBDTEntryIn
  7143  002A56  24F3               	addwf	prodl,w,c
  7144  002A58  6ED9               	movwf	fsr2l,c
  7145  002A5A  0E00               	movlw	high _pBDTEntryIn
  7146  002A5C  20F4               	addwfc	prodh,w,c
  7147  002A5E  6EDA               	movwf	fsr2h,c
  7148  002A60  0E00               	movlw	0
  7149  002A62  6EDE               	movwf	postinc2,c
  7150  002A64  0E00               	movlw	0
  7151  002A66  6EDD               	movwf	postdec2,c
  7152                           
  7153                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
  7154  002A68  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7155  002A6A  0D02               	mullw	2
  7156  002A6C  0EC8               	movlw	low _pBDTEntryOut
  7157  002A6E  24F3               	addwf	prodl,w,c
  7158  002A70  6ED9               	movwf	fsr2l,c
  7159  002A72  0E02               	movlw	high _pBDTEntryOut
  7160  002A74  20F4               	addwfc	prodh,w,c
  7161  002A76  6EDA               	movwf	fsr2h,c
  7162  002A78  0E00               	movlw	0
  7163  002A7A  6EDE               	movwf	postinc2,c
  7164  002A7C  0E00               	movlw	0
  7165  002A7E  6EDD               	movwf	postdec2,c
  7166                           
  7167                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
  7168  002A80  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7169  002A82  0D01               	mullw	1
  7170  002A84  0ED5               	movlw	low _ep_data_in
  7171  002A86  24F3               	addwf	prodl,w,c
  7172  002A88  6ED9               	movwf	fsr2l,c
  7173  002A8A  0E02               	movlw	high _ep_data_in
  7174  002A8C  20F4               	addwfc	prodh,w,c
  7175  002A8E  6EDA               	movwf	fsr2h,c
  7176  002A90  0E00               	movlw	0
  7177  002A92  6EDF               	movwf	indf2,c
  7178                           
  7179                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
  7180  002A94  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7181  002A96  0D01               	mullw	1
  7182  002A98  0ED2               	movlw	low _ep_data_out
  7183  002A9A  24F3               	addwf	prodl,w,c
  7184  002A9C  6ED9               	movwf	fsr2l,c
  7185  002A9E  0E02               	movlw	high _ep_data_out
  7186  002AA0  20F4               	addwfc	prodh,w,c
  7187  002AA2  6EDA               	movwf	fsr2h,c
  7188  002AA4  0E00               	movlw	0
  7189  002AA6  6EDF               	movwf	indf2,c
  7190                           
  7191                           ; BSR set to: 0
  7192  002AA8  2B68               	incf	USBDeviceInit@i& (0+255),f,b
  7193  002AAA  D7CE               	goto	l9820
  7194  002AAC                     u9280:
  7195                           
  7196                           ; BSR set to: 0
  7197                           ;usb_device.c: 351: }
  7198                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  7199                           
  7200                           ; BSR set to: 0
  7201  002AAC  0E08               	movlw	8
  7202  002AAE  6E40               	movwf	_pBDTEntryIn,c
  7203  002AB0  0E04               	movlw	4
  7204  002AB2  6E41               	movwf	_pBDTEntryIn+1,c
  7205                           
  7206                           ; BSR set to: 0
  7207                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
  7208  002AB4  0E16               	movlw	22
  7209  002AB6  6E70               	movwf	3952,c	;volatile
  7210                           
  7211                           ; BSR set to: 0
  7212                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  7213  002AB8  0E04               	movlw	4
  7214  002ABA  0104               	movlb	4	; () banked
  7215  002ABC  6F03               	movwf	3,b	;volatile
  7216  002ABE  0E30               	movlw	48
  7217  002AC0  6F02               	movwf	2,b	;volatile
  7218                           
  7219                           ; BSR set to: 4
  7220                           ;usb_device.c: 359: BDT[0].CNT = 8;
  7221  002AC2  0E08               	movlw	8
  7222  002AC4  6F01               	movwf	1,b	;volatile
  7223                           
  7224                           ; BSR set to: 4
  7225                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
  7226  002AC6  0E04               	movlw	4
  7227  002AC8  6F00               	movwf	0,b	;volatile
  7228                           
  7229                           ; BSR set to: 4
  7230                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
  7231  002ACA  8F00               	bsf	0,7,b	;volatile
  7232                           
  7233                           ; BSR set to: 4
  7234                           ;usb_device.c: 364: USBActiveConfiguration = 0;
  7235  002ACC  0E00               	movlw	0
  7236  002ACE  6E5E               	movwf	_USBActiveConfiguration,c	;volatile
  7237                           
  7238                           ; BSR set to: 4
  7239                           ;usb_device.c: 366: USB1msTickCount = 0;
  7240  002AD0  0E00               	movlw	0
  7241  002AD2  0102               	movlb	2	; () banked
  7242  002AD4  6FCE               	movwf	_USB1msTickCount& (0+255),b	;volatile
  7243  002AD6  0E00               	movlw	0
  7244  002AD8  6FCF               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
  7245  002ADA  0E00               	movlw	0
  7246  002ADC  6FD0               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
  7247  002ADE  0E00               	movlw	0
  7248  002AE0  6FD1               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
  7249                           
  7250                           ; BSR set to: 2
  7251                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
  7252  002AE2  0E00               	movlw	0
  7253  002AE4  6FE5               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
  7254                           
  7255                           ; BSR set to: 2
  7256                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
  7257  002AE6  0E00               	movlw	0
  7258  002AE8  6E58               	movwf	_USBDeviceState,c	;volatile
  7259                           
  7260                           ; BSR set to: 2
  7261  002AEA  0012               	return		;funcret
  7262  002AEC                     __end_of_USBDeviceInit:
  7263                           	opt stack 0
  7264                           tblptru	equ	0xFF8
  7265                           tblptrh	equ	0xFF7
  7266                           tblptrl	equ	0xFF6
  7267                           tablat	equ	0xFF5
  7268                           prodh	equ	0xFF4
  7269                           prodl	equ	0xFF3
  7270                           intcon	equ	0xFF2
  7271                           postinc0	equ	0xFEE
  7272                           wreg	equ	0xFE8
  7273                           indf1	equ	0xFE7
  7274                           postdec1	equ	0xFE5
  7275                           fsr1h	equ	0xFE2
  7276                           fsr1l	equ	0xFE1
  7277                           indf2	equ	0xFDF
  7278                           postinc2	equ	0xFDE
  7279                           postdec2	equ	0xFDD
  7280                           plusw2	equ	0xFDB
  7281                           fsr2h	equ	0xFDA
  7282                           fsr2l	equ	0xFD9
  7283                           status	equ	0xFD8
  7284                           
  7285 ;; *************** function _memset *****************
  7286 ;; Defined at:
  7287 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\memset.c"
  7288 ;; Parameters:    Size  Location     Type
  7289 ;;  p1              2    0[BANK0 ] PTR void 
  7290 ;;		 -> frameBuffer(150), USBAlternateInterface(2), BDT(48), UEP1(1), 
  7291 ;;  c               2    2[BANK0 ] int 
  7292 ;;  n               2    4[BANK0 ] unsigned int 
  7293 ;; Auto vars:     Size  Location     Type
  7294 ;;  p               2    6[BANK0 ] PTR unsigned char 
  7295 ;;		 -> frameBuffer(150), USBAlternateInterface(2), BDT(48), UEP1(1), 
  7296 ;; Return value:  Size  Location     Type
  7297 ;;                  2    0[BANK0 ] PTR void 
  7298 ;; Registers used:
  7299 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7300 ;; Tracked objects:
  7301 ;;		On entry : 0/0
  7302 ;;		On exit  : 0/0
  7303 ;;		Unchanged: 0/0
  7304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7305 ;;      Params:         0       6       0       0       0       0       0       0       0
  7306 ;;      Locals:         0       2       0       0       0       0       0       0       0
  7307 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7308 ;;      Totals:         0       8       0       0       0       0       0       0       0
  7309 ;;Total ram usage:        8 bytes
  7310 ;; Hardware stack levels used:    1
  7311 ;; Hardware stack levels required when called:   10
  7312 ;; This function calls:
  7313 ;;		Nothing
  7314 ;; This function is called by:
  7315 ;;		_USBDeviceInit
  7316 ;;		_sendError
  7317 ;; This function uses a non-reentrant model
  7318 ;;
  7319                           
  7320                           	psect	text17
  7321  005316                     __ptext17:
  7322                           	opt stack 0
  7323  005316                     _memset:
  7324                           	opt stack 19
  7325                           
  7326                           ; BSR set to: 2
  7327                           ;incstack = 0
  7328  005316  C060  F066         	movff	memset@p1,memset@p
  7329  00531A  C061  F067         	movff	memset@p1+1,memset@p+1
  7330  00531E  D009               	goto	l3240
  7331  005320                     l8798:
  7332  005320  C066  FFD9         	movff	memset@p,fsr2l
  7333  005324  C067  FFDA         	movff	memset@p+1,fsr2h
  7334  005328  C062  FFDF         	movff	memset@c,indf2
  7335  00532C  0100               	movlb	0	; () banked
  7336  00532E  4B66               	infsnz	memset@p& (0+255),f,b
  7337  005330  2B67               	incf	(memset@p+1)& (0+255),f,b
  7338  005332                     l3240:
  7339                           
  7340                           ; BSR set to: 0
  7341  005332  0100               	movlb	0	; () banked
  7342  005334  0764               	decf	memset@n& (0+255),f,b
  7343  005336  A0D8               	btfss	status,0,c
  7344  005338  0765               	decf	(memset@n+1)& (0+255),f,b
  7345  00533A  2964               	incf	memset@n& (0+255),w,b
  7346  00533C  E1F1               	bnz	l8798
  7347  00533E  2965               	incf	(memset@n+1)& (0+255),w,b
  7348  005340  B4D8               	btfsc	status,2,c
  7349  005342  0012               	return	
  7350  005344  D7ED               	goto	l3241
  7351  005346                     __end_of_memset:
  7352                           	opt stack 0
  7353                           tblptru	equ	0xFF8
  7354                           tblptrh	equ	0xFF7
  7355                           tblptrl	equ	0xFF6
  7356                           tablat	equ	0xFF5
  7357                           prodh	equ	0xFF4
  7358                           prodl	equ	0xFF3
  7359                           intcon	equ	0xFF2
  7360                           postinc0	equ	0xFEE
  7361                           wreg	equ	0xFE8
  7362                           indf1	equ	0xFE7
  7363                           postdec1	equ	0xFE5
  7364                           fsr1h	equ	0xFE2
  7365                           fsr1l	equ	0xFE1
  7366                           indf2	equ	0xFDF
  7367                           postinc2	equ	0xFDE
  7368                           postdec2	equ	0xFDD
  7369                           plusw2	equ	0xFDB
  7370                           fsr2h	equ	0xFDA
  7371                           fsr2l	equ	0xFD9
  7372                           status	equ	0xFD8
  7373                           
  7374 ;; *************** function _TxLoRaWan *****************
  7375 ;; Defined at:
  7376 ;;		line 171 in file "LoRaWanCore.c"
  7377 ;; Parameters:    Size  Location     Type
  7378 ;;  conf            1    wreg     unsigned char 
  7379 ;;  porta           1  145[BANK0 ] unsigned char 
  7380 ;;  data            2  146[BANK0 ] PTR const unsigned char 
  7381 ;;		 -> main@dadoPoco(22), 
  7382 ;;  tamData         1  148[BANK0 ] unsigned char 
  7383 ;; Auto vars:     Size  Location     Type
  7384 ;;  conf            1  230[BANK1 ] unsigned char 
  7385 ;;  status          1  231[BANK1 ] unsigned char 
  7386 ;;  i               1  236[BANK1 ] unsigned char 
  7387 ;;  comando       200   30[BANK1 ] unsigned char [200]
  7388 ;;  hex             4  232[BANK1 ] unsigned char [4]
  7389 ;; Return value:  Size  Location     Type
  7390 ;;                  1    wreg      unsigned char 
  7391 ;; Registers used:
  7392 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7393 ;; Tracked objects:
  7394 ;;		On entry : 0/0
  7395 ;;		On exit  : 0/0
  7396 ;;		Unchanged: 0/0
  7397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7398 ;;      Params:         0       4       0       0       0       0       0       0       0
  7399 ;;      Locals:         0       0     207       0       0       0       0       0       0
  7400 ;;      Temps:          0       1       0       0       0       0       0       0       0
  7401 ;;      Totals:         0       5     207       0       0       0       0       0       0
  7402 ;;Total ram usage:      212 bytes
  7403 ;; Hardware stack levels used:    1
  7404 ;; Hardware stack levels required when called:   14
  7405 ;; This function calls:
  7406 ;;		_JoinLoRaWan
  7407 ;;		_ResetModuloLoRaWan
  7408 ;;		_enviaComando
  7409 ;;		_parseLoRaWan
  7410 ;;		_retornaDado
  7411 ;;		_sprintf
  7412 ;;		_strcat
  7413 ;; This function is called by:
  7414 ;;		_main
  7415 ;; This function uses a non-reentrant model
  7416 ;;
  7417                           
  7418                           	psect	text18
  7419  001ADE                     __ptext18:
  7420                           	opt stack 0
  7421  001ADE                     _TxLoRaWan:
  7422                           	opt stack 16
  7423                           
  7424                           ; BSR set to: 0
  7425                           ;incstack = 0
  7426                           ;TxLoRaWan@conf stored from wreg
  7427  001ADE  0101               	movlb	1	; () banked
  7428  001AE0  6FE6               	movwf	TxLoRaWan@conf& (0+255),b
  7429                           
  7430                           ;LoRaWanCore.c: 173: char comando[200];
  7431                           ;LoRaWanCore.c: 174: char hex[4];
  7432                           ;LoRaWanCore.c: 176: if (conf)
  7433  001AE2  0101               	movlb	1	; () banked
  7434  001AE4  51E6               	movf	TxLoRaWan@conf& (0+255),w,b
  7435  001AE6  B4D8               	btfsc	status,2,c
  7436  001AE8  D013               	goto	l2312
  7437                           
  7438                           ; BSR set to: 1
  7439                           ;LoRaWanCore.c: 177: sprintf(comando, "%s %d ", MAC_TX_CNF, porta);
  7440  001AEA  0E1E               	movlw	low TxLoRaWan@comando
  7441  001AEC  0100               	movlb	0	; () banked
  7442  001AEE  6FBF               	movwf	sprintf@sp& (0+255),b
  7443  001AF0  0E01               	movlw	high TxLoRaWan@comando
  7444  001AF2  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  7445  001AF4  0EBA               	movlw	low STR_39
  7446  001AF6  6FC1               	movwf	sprintf@f& (0+255),b
  7447  001AF8  0E7F               	movlw	high STR_39
  7448  001AFA  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  7449  001AFC  0EE4               	movlw	low _MAC_TX_CNF
  7450  001AFE  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  7451  001B00  0E7D               	movlw	high _MAC_TX_CNF
  7452  001B02  6FC4               	movwf	(?_sprintf+5)& (0+255),b
  7453  001B04  C0F1  F0C5         	movff	TxLoRaWan@porta,?_sprintf+6
  7454  001B08  6BC6               	clrf	(?_sprintf+7)& (0+255),b
  7455  001B0A  EC09  F000         	call	_sprintf	;wreg free
  7456  001B0E  D012               	goto	l2313
  7457  001B10                     l2312:
  7458                           
  7459                           ;LoRaWanCore.c: 178: else
  7460                           ;LoRaWanCore.c: 179: sprintf(comando, "%s %d ", MAC_TX_UNCNF, porta);
  7461  001B10  0E1E               	movlw	low TxLoRaWan@comando
  7462  001B12  0100               	movlb	0	; () banked
  7463  001B14  6FBF               	movwf	sprintf@sp& (0+255),b
  7464  001B16  0E01               	movlw	high TxLoRaWan@comando
  7465  001B18  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  7466  001B1A  0EBA               	movlw	low STR_39
  7467  001B1C  6FC1               	movwf	sprintf@f& (0+255),b
  7468  001B1E  0E7F               	movlw	high STR_39
  7469  001B20  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  7470  001B22  0EC4               	movlw	low _MAC_TX_UNCNF
  7471  001B24  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  7472  001B26  0E7D               	movlw	high _MAC_TX_UNCNF
  7473  001B28  6FC4               	movwf	(?_sprintf+5)& (0+255),b
  7474  001B2A  C0F1  F0C5         	movff	TxLoRaWan@porta,?_sprintf+6
  7475  001B2E  6BC6               	clrf	(?_sprintf+7)& (0+255),b
  7476  001B30  EC09  F000         	call	_sprintf	;wreg free
  7477  001B34                     l2313:
  7478                           
  7479                           ;LoRaWanCore.c: 181: for (uint8_t i=0;i<tamData;i++)
  7480  001B34  0E00               	movlw	0
  7481  001B36  0101               	movlb	1	; () banked
  7482  001B38  6FEC               	movwf	TxLoRaWan@i& (0+255),b
  7483  001B3A  D183               	goto	l2314
  7484  001B3C                     
  7485                           ; BSR set to: 1
  7486                           ;LoRaWanCore.c: 182: {
  7487                           ;LoRaWanCore.c: 183: if (i == 2 || i == 3) {
  7488                           
  7489                           ; BSR set to: 1
  7490  001B3C  0E02               	movlw	2
  7491  001B3E  19EC               	xorwf	TxLoRaWan@i& (0+255),w,b
  7492  001B40  B4D8               	btfsc	status,2,c
  7493  001B42  D004               	goto	u9510
  7494                           
  7495                           ; BSR set to: 1
  7496  001B44  0E03               	movlw	3
  7497  001B46  19EC               	xorwf	TxLoRaWan@i& (0+255),w,b
  7498  001B48  A4D8               	btfss	status,2,c
  7499  001B4A  D00E               	goto	l2316
  7500  001B4C                     u9510:
  7501                           
  7502                           ; BSR set to: 1
  7503                           ;LoRaWanCore.c: 184: if (retornaDado(1,4) == 1 || nivel1 == 0) {
  7504                           
  7505                           ; BSR set to: 1
  7506  001B4C  0E04               	movlw	4
  7507  001B4E  0100               	movlb	0	; () banked
  7508  001B50  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7509  001B52  0E01               	movlw	1
  7510  001B54  ECE5  F025         	call	_retornaDado
  7511  001B58  06E8               	decf	wreg,f,c
  7512  001B5A  B4D8               	btfsc	status,2,c
  7513  001B5C  D170               	goto	l2322
  7514  001B5E  0102               	movlb	2	; () banked
  7515  001B60  51ED               	movf	_nivel1& (0+255),w,b
  7516  001B62                     L4:
  7517  001B62  B4D8               	btfsc	status,2,c
  7518  001B64  D16C               	goto	l2322
  7519  001B66  D146               	goto	l2413
  7520  001B68                     l2316:
  7521                           
  7522                           ;LoRaWanCore.c: 186: else if (i == 4 || i == 5 ){
  7523                           
  7524                           ; BSR set to: 2
  7525  001B68  0E04               	movlw	4
  7526  001B6A  0101               	movlb	1	; () banked
  7527  001B6C  19EC               	xorwf	TxLoRaWan@i& (0+255),w,b
  7528  001B6E  B4D8               	btfsc	status,2,c
  7529  001B70  D004               	goto	u9550
  7530                           
  7531                           ; BSR set to: 1
  7532  001B72  0E05               	movlw	5
  7533  001B74  19EC               	xorwf	TxLoRaWan@i& (0+255),w,b
  7534  001B76  A4D8               	btfss	status,2,c
  7535  001B78  D00C               	goto	l2324
  7536  001B7A                     u9550:
  7537                           
  7538                           ; BSR set to: 1
  7539                           ;LoRaWanCore.c: 187: if (retornaDado(1,5) == 1 || nivel2 == 0) {
  7540                           
  7541                           ; BSR set to: 1
  7542  001B7A  0E05               	movlw	5
  7543  001B7C  0100               	movlb	0	; () banked
  7544  001B7E  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7545  001B80  0E01               	movlw	1
  7546  001B82  ECE5  F025         	call	_retornaDado
  7547  001B86  06E8               	decf	wreg,f,c
  7548  001B88  B4D8               	btfsc	status,2,c
  7549  001B8A  D159               	goto	l2322
  7550  001B8C  0102               	movlb	2	; () banked
  7551  001B8E  51EC               	movf	_nivel2& (0+255),w,b
  7552  001B90  D7E8               	goto	L4
  7553  001B92                     l2324:
  7554                           
  7555                           ;LoRaWanCore.c: 190: else if (i == 9){
  7556                           
  7557                           ; BSR set to: 2
  7558  001B92  0E09               	movlw	9
  7559  001B94  0101               	movlb	1	; () banked
  7560  001B96  19EC               	xorwf	TxLoRaWan@i& (0+255),w,b
  7561  001B98  A4D8               	btfss	status,2,c
  7562  001B9A  D010               	goto	l2331
  7563                           
  7564                           ; BSR set to: 1
  7565                           ;LoRaWanCore.c: 191: if((retornaDado(5,0) == 1) || (retornaDado(5,1) == 1) || pulsos1== 
      +                          0){
  7566  001B9C  0E00               	movlw	0
  7567  001B9E  0100               	movlb	0	; () banked
  7568  001BA0  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7569  001BA2  0E05               	movlw	5
  7570  001BA4  ECE5  F025         	call	_retornaDado
  7571  001BA8  06E8               	decf	wreg,f,c
  7572  001BAA  B4D8               	btfsc	status,2,c
  7573  001BAC  D148               	goto	l2322
  7574  001BAE  0E01               	movlw	1
  7575  001BB0  0100               	movlb	0	; () banked
  7576  001BB2  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7577  001BB4  0E05               	movlw	5
  7578  001BB6  ECE5  F025         	call	_retornaDado
  7579  001BBA  D032               	goto	L31
  7580  001BBC                     l2331:
  7581                           
  7582                           ; BSR set to: 1
  7583                           ;LoRaWanCore.c: 193: else if (i == 8){
  7584                           
  7585                           ; BSR set to: 1
  7586  001BBC  0E08               	movlw	8
  7587  001BBE  19EC               	xorwf	TxLoRaWan@i& (0+255),w,b
  7588  001BC0  A4D8               	btfss	status,2,c
  7589  001BC2  D010               	goto	l2336
  7590                           
  7591                           ; BSR set to: 1
  7592                           ;LoRaWanCore.c: 194: if((retornaDado(5,0) == 1) || (retornaDado(5,1) == 1) || pulsos1 ==
      +                           0){
  7593  001BC4  0E00               	movlw	0
  7594  001BC6  0100               	movlb	0	; () banked
  7595  001BC8  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7596  001BCA  0E05               	movlw	5
  7597  001BCC  ECE5  F025         	call	_retornaDado
  7598  001BD0  06E8               	decf	wreg,f,c
  7599  001BD2  B4D8               	btfsc	status,2,c
  7600  001BD4  D134               	goto	l2322
  7601  001BD6  0E01               	movlw	1
  7602  001BD8  0100               	movlb	0	; () banked
  7603  001BDA  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7604  001BDC  0E05               	movlw	5
  7605  001BDE  ECE5  F025         	call	_retornaDado
  7606  001BE2  D01E               	goto	L31
  7607  001BE4                     l2336:
  7608                           
  7609                           ; BSR set to: 1
  7610                           ;LoRaWanCore.c: 196: else if (i == 7){
  7611                           
  7612                           ; BSR set to: 1
  7613  001BE4  0E07               	movlw	7
  7614  001BE6  19EC               	xorwf	TxLoRaWan@i& (0+255),w,b
  7615  001BE8  A4D8               	btfss	status,2,c
  7616  001BEA  D007               	goto	l2341
  7617                           
  7618                           ; BSR set to: 1
  7619                           ;LoRaWanCore.c: 197: if((retornaDado(5,0) == 1) || pulsos1 == 0){
  7620  001BEC  0E00               	movlw	0
  7621  001BEE  0100               	movlb	0	; () banked
  7622  001BF0  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7623  001BF2  0E05               	movlw	5
  7624  001BF4  ECE5  F025         	call	_retornaDado
  7625  001BF8  D013               	goto	L31
  7626  001BFA                     l2341:
  7627                           
  7628                           ; BSR set to: 1
  7629                           ;LoRaWanCore.c: 199: else if (i == 6){
  7630                           
  7631                           ; BSR set to: 1
  7632  001BFA  0E06               	movlw	6
  7633  001BFC  19EC               	xorwf	TxLoRaWan@i& (0+255),w,b
  7634  001BFE  A4D8               	btfss	status,2,c
  7635  001C00  D015               	goto	l2346
  7636                           
  7637                           ; BSR set to: 1
  7638                           ;LoRaWanCore.c: 200: if((retornaDado(5,0) == 1) && (retornaDado(5,1) == 1) || pulsos1 ==
      +                           0){
  7639  001C02  0E00               	movlw	0
  7640  001C04  0100               	movlb	0	; () banked
  7641  001C06  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7642  001C08  0E05               	movlw	5
  7643  001C0A  ECE5  F025         	call	_retornaDado
  7644  001C0E  06E8               	decf	wreg,f,c
  7645  001C10  A4D8               	btfss	status,2,c
  7646  001C12  D009               	goto	u9710
  7647  001C14  0E01               	movlw	1
  7648  001C16  0100               	movlb	0	; () banked
  7649  001C18  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7650  001C1A  0E05               	movlw	5
  7651  001C1C  ECE5  F025         	call	_retornaDado
  7652  001C20                     L31:
  7653  001C20  06E8               	decf	wreg,f,c
  7654  001C22  B4D8               	btfsc	status,2,c
  7655  001C24  D10C               	goto	l2322
  7656  001C26                     u9710:
  7657  001C26  0101               	movlb	1	; () banked
  7658  001C28  51FE               	movf	_pulsos1& (0+255),w,b
  7659  001C2A  D79B               	goto	L4
  7660  001C2C                     l2346:
  7661                           
  7662                           ; BSR set to: 1
  7663                           ;LoRaWanCore.c: 203: else if (i == 13){
  7664                           
  7665                           ; BSR set to: 1
  7666  001C2C  0E0D               	movlw	13
  7667  001C2E  19EC               	xorwf	TxLoRaWan@i& (0+255),w,b
  7668  001C30  A4D8               	btfss	status,2,c
  7669  001C32  D010               	goto	l2353
  7670                           
  7671                           ; BSR set to: 1
  7672                           ;LoRaWanCore.c: 204: if((retornaDado(5,2) == 1) || (retornaDado(5,3) == 1) || pulsos2 ==
      +                           0){
  7673  001C34  0E02               	movlw	2
  7674  001C36  0100               	movlb	0	; () banked
  7675  001C38  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7676  001C3A  0E05               	movlw	5
  7677  001C3C  ECE5  F025         	call	_retornaDado
  7678  001C40  06E8               	decf	wreg,f,c
  7679  001C42  B4D8               	btfsc	status,2,c
  7680  001C44  D0FC               	goto	l2322
  7681  001C46  0E03               	movlw	3
  7682  001C48  0100               	movlb	0	; () banked
  7683  001C4A  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7684  001C4C  0E05               	movlw	5
  7685  001C4E  ECE5  F025         	call	_retornaDado
  7686  001C52  D032               	goto	L32
  7687  001C54                     l2353:
  7688                           
  7689                           ; BSR set to: 1
  7690                           ;LoRaWanCore.c: 206: else if (i == 12){
  7691                           
  7692                           ; BSR set to: 1
  7693  001C54  0E0C               	movlw	12
  7694  001C56  19EC               	xorwf	TxLoRaWan@i& (0+255),w,b
  7695  001C58  A4D8               	btfss	status,2,c
  7696  001C5A  D010               	goto	l2358
  7697                           
  7698                           ; BSR set to: 1
  7699                           ;LoRaWanCore.c: 207: if((retornaDado(5,2) == 1) || (retornaDado(5,3) == 1) || pulsos2 ==
      +                           0){
  7700  001C5C  0E02               	movlw	2
  7701  001C5E  0100               	movlb	0	; () banked
  7702  001C60  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7703  001C62  0E05               	movlw	5
  7704  001C64  ECE5  F025         	call	_retornaDado
  7705  001C68  06E8               	decf	wreg,f,c
  7706  001C6A  B4D8               	btfsc	status,2,c
  7707  001C6C  D0E8               	goto	l2322
  7708  001C6E  0E03               	movlw	3
  7709  001C70  0100               	movlb	0	; () banked
  7710  001C72  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7711  001C74  0E05               	movlw	5
  7712  001C76  ECE5  F025         	call	_retornaDado
  7713  001C7A  D01E               	goto	L32
  7714  001C7C                     l2358:
  7715                           
  7716                           ; BSR set to: 1
  7717                           ;LoRaWanCore.c: 209: else if (i == 11){
  7718                           
  7719                           ; BSR set to: 1
  7720  001C7C  0E0B               	movlw	11
  7721  001C7E  19EC               	xorwf	TxLoRaWan@i& (0+255),w,b
  7722  001C80  A4D8               	btfss	status,2,c
  7723  001C82  D007               	goto	l2363
  7724                           
  7725                           ; BSR set to: 1
  7726                           ;LoRaWanCore.c: 210: if((retornaDado(5,2) == 1) || pulsos2 == 0){
  7727  001C84  0E02               	movlw	2
  7728  001C86  0100               	movlb	0	; () banked
  7729  001C88  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7730  001C8A  0E05               	movlw	5
  7731  001C8C  ECE5  F025         	call	_retornaDado
  7732  001C90  D013               	goto	L32
  7733  001C92                     l2363:
  7734                           
  7735                           ; BSR set to: 1
  7736                           ;LoRaWanCore.c: 212: else if (i == 10){
  7737                           
  7738                           ; BSR set to: 1
  7739  001C92  0E0A               	movlw	10
  7740  001C94  19EC               	xorwf	TxLoRaWan@i& (0+255),w,b
  7741  001C96  A4D8               	btfss	status,2,c
  7742  001C98  D015               	goto	l2368
  7743                           
  7744                           ; BSR set to: 1
  7745                           ;LoRaWanCore.c: 213: if((retornaDado(5,2) == 1) && (retornaDado(5,3) == 1) || pulsos2 ==
      +                           0){
  7746  001C9A  0E02               	movlw	2
  7747  001C9C  0100               	movlb	0	; () banked
  7748  001C9E  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7749  001CA0  0E05               	movlw	5
  7750  001CA2  ECE5  F025         	call	_retornaDado
  7751  001CA6  06E8               	decf	wreg,f,c
  7752  001CA8  A4D8               	btfss	status,2,c
  7753  001CAA  D009               	goto	u9860
  7754  001CAC  0E03               	movlw	3
  7755  001CAE  0100               	movlb	0	; () banked
  7756  001CB0  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7757  001CB2  0E05               	movlw	5
  7758  001CB4  ECE5  F025         	call	_retornaDado
  7759  001CB8                     L32:
  7760  001CB8  06E8               	decf	wreg,f,c
  7761  001CBA  B4D8               	btfsc	status,2,c
  7762  001CBC  D0C0               	goto	l2322
  7763  001CBE                     u9860:
  7764  001CBE  0101               	movlb	1	; () banked
  7765  001CC0  51FD               	movf	_pulsos2& (0+255),w,b
  7766  001CC2  D74F               	goto	L4
  7767  001CC4                     l2368:
  7768                           
  7769                           ; BSR set to: 1
  7770                           ;LoRaWanCore.c: 216: else if (i == 17){
  7771                           
  7772                           ; BSR set to: 1
  7773  001CC4  0E11               	movlw	17
  7774  001CC6  19EC               	xorwf	TxLoRaWan@i& (0+255),w,b
  7775  001CC8  A4D8               	btfss	status,2,c
  7776  001CCA  D010               	goto	l2375
  7777                           
  7778                           ; BSR set to: 1
  7779                           ;LoRaWanCore.c: 217: if((retornaDado(5,4) == 1) || (retornaDado(5,5) == 1) || pulsos3 ==
      +                           0){
  7780  001CCC  0E04               	movlw	4
  7781  001CCE  0100               	movlb	0	; () banked
  7782  001CD0  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7783  001CD2  0E05               	movlw	5
  7784  001CD4  ECE5  F025         	call	_retornaDado
  7785  001CD8  06E8               	decf	wreg,f,c
  7786  001CDA  B4D8               	btfsc	status,2,c
  7787  001CDC  D0B0               	goto	l2322
  7788  001CDE  0E05               	movlw	5
  7789  001CE0  0100               	movlb	0	; () banked
  7790  001CE2  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7791  001CE4  0E05               	movlw	5
  7792  001CE6  ECE5  F025         	call	_retornaDado
  7793  001CEA  D032               	goto	L33
  7794  001CEC                     l2375:
  7795                           
  7796                           ; BSR set to: 1
  7797                           ;LoRaWanCore.c: 219: else if (i == 16){
  7798                           
  7799                           ; BSR set to: 1
  7800  001CEC  0E10               	movlw	16
  7801  001CEE  19EC               	xorwf	TxLoRaWan@i& (0+255),w,b
  7802  001CF0  A4D8               	btfss	status,2,c
  7803  001CF2  D010               	goto	l2380
  7804                           
  7805                           ; BSR set to: 1
  7806                           ;LoRaWanCore.c: 220: if((retornaDado(5,4) == 1) || (retornaDado(5,5) == 1) || pulsos3 ==
      +                           0){
  7807  001CF4  0E04               	movlw	4
  7808  001CF6  0100               	movlb	0	; () banked
  7809  001CF8  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7810  001CFA  0E05               	movlw	5
  7811  001CFC  ECE5  F025         	call	_retornaDado
  7812  001D00  06E8               	decf	wreg,f,c
  7813  001D02  B4D8               	btfsc	status,2,c
  7814  001D04  D09C               	goto	l2322
  7815  001D06  0E05               	movlw	5
  7816  001D08  0100               	movlb	0	; () banked
  7817  001D0A  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7818  001D0C  0E05               	movlw	5
  7819  001D0E  ECE5  F025         	call	_retornaDado
  7820  001D12  D01E               	goto	L33
  7821  001D14                     l2380:
  7822                           
  7823                           ; BSR set to: 1
  7824                           ;LoRaWanCore.c: 222: else if (i == 15){
  7825                           
  7826                           ; BSR set to: 1
  7827  001D14  0E0F               	movlw	15
  7828  001D16  19EC               	xorwf	TxLoRaWan@i& (0+255),w,b
  7829  001D18  A4D8               	btfss	status,2,c
  7830  001D1A  D007               	goto	l2385
  7831                           
  7832                           ; BSR set to: 1
  7833                           ;LoRaWanCore.c: 223: if((retornaDado(5,4) == 1) || pulsos3 == 0){
  7834  001D1C  0E04               	movlw	4
  7835  001D1E  0100               	movlb	0	; () banked
  7836  001D20  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7837  001D22  0E05               	movlw	5
  7838  001D24  ECE5  F025         	call	_retornaDado
  7839  001D28  D013               	goto	L33
  7840  001D2A                     l2385:
  7841                           
  7842                           ; BSR set to: 1
  7843                           ;LoRaWanCore.c: 225: else if (i == 14){
  7844                           
  7845                           ; BSR set to: 1
  7846  001D2A  0E0E               	movlw	14
  7847  001D2C  19EC               	xorwf	TxLoRaWan@i& (0+255),w,b
  7848  001D2E  A4D8               	btfss	status,2,c
  7849  001D30  D015               	goto	l2390
  7850                           
  7851                           ; BSR set to: 1
  7852                           ;LoRaWanCore.c: 226: if((retornaDado(5,4) == 1) && (retornaDado(5,5) == 1) || pulsos3 ==
      +                           0){
  7853  001D32  0E04               	movlw	4
  7854  001D34  0100               	movlb	0	; () banked
  7855  001D36  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7856  001D38  0E05               	movlw	5
  7857  001D3A  ECE5  F025         	call	_retornaDado
  7858  001D3E  06E8               	decf	wreg,f,c
  7859  001D40  A4D8               	btfss	status,2,c
  7860  001D42  D009               	goto	u10010
  7861  001D44  0E05               	movlw	5
  7862  001D46  0100               	movlb	0	; () banked
  7863  001D48  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7864  001D4A  0E05               	movlw	5
  7865  001D4C  ECE5  F025         	call	_retornaDado
  7866  001D50                     L33:
  7867  001D50  06E8               	decf	wreg,f,c
  7868  001D52  B4D8               	btfsc	status,2,c
  7869  001D54  D074               	goto	l2322
  7870  001D56                     u10010:
  7871  001D56  0101               	movlb	1	; () banked
  7872  001D58  51FC               	movf	_pulsos3& (0+255),w,b
  7873  001D5A  D703               	goto	L4
  7874  001D5C                     l2390:
  7875                           
  7876                           ; BSR set to: 1
  7877                           ;LoRaWanCore.c: 229: else if (i == 21){
  7878                           
  7879                           ; BSR set to: 1
  7880  001D5C  0E15               	movlw	21
  7881  001D5E  19EC               	xorwf	TxLoRaWan@i& (0+255),w,b
  7882  001D60  A4D8               	btfss	status,2,c
  7883  001D62  D010               	goto	l2397
  7884                           
  7885                           ; BSR set to: 1
  7886                           ;LoRaWanCore.c: 230: if((retornaDado(5,6) == 1) || (retornaDado(5,7) == 1) || pulsos4 ==
      +                           0){
  7887  001D64  0E06               	movlw	6
  7888  001D66  0100               	movlb	0	; () banked
  7889  001D68  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7890  001D6A  0E05               	movlw	5
  7891  001D6C  ECE5  F025         	call	_retornaDado
  7892  001D70  06E8               	decf	wreg,f,c
  7893  001D72  B4D8               	btfsc	status,2,c
  7894  001D74  D064               	goto	l2322
  7895  001D76  0E07               	movlw	7
  7896  001D78  0100               	movlb	0	; () banked
  7897  001D7A  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7898  001D7C  0E05               	movlw	5
  7899  001D7E  ECE5  F025         	call	_retornaDado
  7900  001D82  D032               	goto	L34
  7901  001D84                     l2397:
  7902                           
  7903                           ; BSR set to: 1
  7904                           ;LoRaWanCore.c: 232: else if (i == 20){
  7905                           
  7906                           ; BSR set to: 1
  7907  001D84  0E14               	movlw	20
  7908  001D86  19EC               	xorwf	TxLoRaWan@i& (0+255),w,b
  7909  001D88  A4D8               	btfss	status,2,c
  7910  001D8A  D010               	goto	l2402
  7911                           
  7912                           ; BSR set to: 1
  7913                           ;LoRaWanCore.c: 233: if((retornaDado(5,6) == 1) || (retornaDado(5,7) == 1) || pulsos4 ==
      +                           0){
  7914  001D8C  0E06               	movlw	6
  7915  001D8E  0100               	movlb	0	; () banked
  7916  001D90  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7917  001D92  0E05               	movlw	5
  7918  001D94  ECE5  F025         	call	_retornaDado
  7919  001D98  06E8               	decf	wreg,f,c
  7920  001D9A  B4D8               	btfsc	status,2,c
  7921  001D9C  D050               	goto	l2322
  7922  001D9E  0E07               	movlw	7
  7923  001DA0  0100               	movlb	0	; () banked
  7924  001DA2  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7925  001DA4  0E05               	movlw	5
  7926  001DA6  ECE5  F025         	call	_retornaDado
  7927  001DAA  D01E               	goto	L34
  7928  001DAC                     l2402:
  7929                           
  7930                           ; BSR set to: 1
  7931                           ;LoRaWanCore.c: 235: else if (i == 19){
  7932                           
  7933                           ; BSR set to: 1
  7934  001DAC  0E13               	movlw	19
  7935  001DAE  19EC               	xorwf	TxLoRaWan@i& (0+255),w,b
  7936  001DB0  A4D8               	btfss	status,2,c
  7937  001DB2  D007               	goto	l2407
  7938                           
  7939                           ; BSR set to: 1
  7940                           ;LoRaWanCore.c: 236: if((retornaDado(5,6) == 1) || pulsos4 == 0){
  7941  001DB4  0E06               	movlw	6
  7942  001DB6  0100               	movlb	0	; () banked
  7943  001DB8  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7944  001DBA  0E05               	movlw	5
  7945  001DBC  ECE5  F025         	call	_retornaDado
  7946  001DC0  D013               	goto	L34
  7947  001DC2                     l2407:
  7948                           
  7949                           ; BSR set to: 1
  7950                           ;LoRaWanCore.c: 238: else if (i == 18){
  7951                           
  7952                           ; BSR set to: 1
  7953  001DC2  0E12               	movlw	18
  7954  001DC4  19EC               	xorwf	TxLoRaWan@i& (0+255),w,b
  7955  001DC6  A4D8               	btfss	status,2,c
  7956  001DC8  D015               	goto	l2413
  7957                           
  7958                           ; BSR set to: 1
  7959                           ;LoRaWanCore.c: 239: if((retornaDado(5,6) == 1) && (retornaDado(5,7) == 1) || pulsos4 ==
      +                           0){
  7960  001DCA  0E06               	movlw	6
  7961  001DCC  0100               	movlb	0	; () banked
  7962  001DCE  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7963  001DD0  0E05               	movlw	5
  7964  001DD2  ECE5  F025         	call	_retornaDado
  7965  001DD6  06E8               	decf	wreg,f,c
  7966  001DD8  A4D8               	btfss	status,2,c
  7967  001DDA  D009               	goto	u10160
  7968  001DDC  0E07               	movlw	7
  7969  001DDE  0100               	movlb	0	; () banked
  7970  001DE0  6F60               	movwf	retornaDado@dadoBit& (0+255),b
  7971  001DE2  0E05               	movlw	5
  7972  001DE4  ECE5  F025         	call	_retornaDado
  7973  001DE8                     L34:
  7974  001DE8  06E8               	decf	wreg,f,c
  7975  001DEA  B4D8               	btfsc	status,2,c
  7976  001DEC  D028               	goto	l2322
  7977  001DEE                     u10160:
  7978  001DEE  0101               	movlb	1	; () banked
  7979  001DF0  51FB               	movf	_pulsos4& (0+255),w,b
  7980  001DF2  D6B7               	goto	L4
  7981  001DF4                     l2413:
  7982                           
  7983                           ;LoRaWanCore.c: 242: sprintf(hex, "%02X", data[i]);
  7984                           
  7985                           ; BSR set to: 1
  7986                           
  7987                           ; BSR set to: 1
  7988                           
  7989                           ; BSR set to: 1
  7990                           
  7991                           ; BSR set to: 1
  7992                           
  7993                           ; BSR set to: 1
  7994                           
  7995                           ; BSR set to: 1
  7996                           
  7997                           ; BSR set to: 1
  7998                           
  7999                           ; BSR set to: 1
  8000                           
  8001                           ; BSR set to: 1
  8002                           
  8003                           ; BSR set to: 1
  8004                           
  8005                           ; BSR set to: 1
  8006                           
  8007                           ; BSR set to: 1
  8008                           
  8009                           ; BSR set to: 1
  8010                           
  8011                           ; BSR set to: 1
  8012                           
  8013                           ; BSR set to: 1
  8014                           
  8015                           ; BSR set to: 1
  8016                           
  8017                           ; BSR set to: 1
  8018                           
  8019                           ; BSR set to: 1
  8020                           
  8021                           ; BSR set to: 1
  8022  001DF4  0EE8               	movlw	low TxLoRaWan@hex
  8023  001DF6  0100               	movlb	0	; () banked
  8024  001DF8  6FBF               	movwf	sprintf@sp& (0+255),b
  8025  001DFA  0E01               	movlw	high TxLoRaWan@hex
  8026  001DFC  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  8027  001DFE  0EF0               	movlw	low STR_41
  8028  001E00  6FC1               	movwf	sprintf@f& (0+255),b
  8029  001E02  0E7F               	movlw	high STR_41
  8030  001E04  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  8031  001E06  0101               	movlb	1	; () banked
  8032  001E08  51EC               	movf	TxLoRaWan@i& (0+255),w,b
  8033  001E0A  0D01               	mullw	1
  8034  001E0C  50F3               	movf	prodl,w,c
  8035  001E0E  0100               	movlb	0	; () banked
  8036  001E10  25F2               	addwf	TxLoRaWan@data& (0+255),w,b
  8037  001E12  6ED9               	movwf	fsr2l,c
  8038  001E14  50F4               	movf	prodh,w,c
  8039  001E16  21F3               	addwfc	(TxLoRaWan@data+1)& (0+255),w,b
  8040  001E18  6EDA               	movwf	fsr2h,c
  8041  001E1A  50DF               	movf	indf2,w,c
  8042  001E1C  6FF5               	movwf	??_TxLoRaWan& (0+255),b
  8043  001E1E  51F5               	movf	??_TxLoRaWan& (0+255),w,b
  8044  001E20  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  8045  001E22  6BC4               	clrf	(?_sprintf+5)& (0+255),b
  8046  001E24  EC09  F000         	call	_sprintf	;wreg free
  8047                           
  8048                           ;LoRaWanCore.c: 243: strcat(comando,hex);
  8049  001E28  0E1E               	movlw	low TxLoRaWan@comando
  8050  001E2A  0100               	movlb	0	; () banked
  8051  001E2C  6F60               	movwf	strcat@to& (0+255),b
  8052  001E2E  0E01               	movlw	high TxLoRaWan@comando
  8053  001E30  6F61               	movwf	(strcat@to+1)& (0+255),b
  8054  001E32  0EE8               	movlw	low TxLoRaWan@hex
  8055  001E34  6F62               	movwf	strcat@from& (0+255),b
  8056  001E36  0E01               	movlw	high TxLoRaWan@hex
  8057  001E38  6F63               	movwf	(strcat@from+1)& (0+255),b
  8058  001E3A  EC41  F027         	call	_strcat	;wreg free
  8059  001E3E                     l2322:
  8060  001E3E  0101               	movlb	1	; () banked
  8061  001E40  2BEC               	incf	TxLoRaWan@i& (0+255),f,b
  8062  001E42                     l2314:
  8063                           
  8064                           ; BSR set to: 1
  8065                           
  8066                           ; BSR set to: 1
  8067  001E42  0100               	movlb	0	; () banked
  8068  001E44  51F4               	movf	TxLoRaWan@tamData& (0+255),w,b
  8069  001E46  0101               	movlb	1	; () banked
  8070  001E48  5DEC               	subwf	TxLoRaWan@i& (0+255),w,b
  8071  001E4A  A0D8               	btfss	status,0,c
  8072  001E4C  D677               	goto	l2315
  8073  001E4E                     u10180:
  8074                           
  8075                           ;LoRaWanCore.c: 248: {
  8076                           ;LoRaWanCore.c: 249: uint8_t status=enviaComando(comando,0);
  8077                           
  8078                           ; BSR set to: 1
  8079                           
  8080                           ;LoRaWanCore.c: 244: }
  8081                           ;LoRaWanCore.c: 247: while (1)
  8082                           
  8083                           ; BSR set to: 1
  8084  001E4E  0E1E               	movlw	low TxLoRaWan@comando
  8085  001E50  0100               	movlb	0	; () banked
  8086  001E52  6F7C               	movwf	enviaComando@cmd& (0+255),b
  8087  001E54  0E01               	movlw	high TxLoRaWan@comando
  8088  001E56  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  8089  001E58  0E00               	movlw	0
  8090  001E5A  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  8091  001E5C  ECA5  F01A         	call	_enviaComando	;wreg free
  8092  001E60  0101               	movlb	1	; () banked
  8093  001E62  6FE7               	movwf	TxLoRaWan@status& (0+255),b
  8094                           
  8095                           ;LoRaWanCore.c: 250: switch (status)
  8096  001E64  D015               	goto	l2420
  8097  001E66                     
  8098                           ; BSR set to: 1
  8099                           ;LoRaWanCore.c: 253: return (parseLoRaWan()==9);
  8100                           
  8101                           ; BSR set to: 1
  8102  001E66  ECBA  F020         	call	_parseLoRaWan	;wreg free
  8103  001E6A  0A09               	xorlw	9
  8104  001E6C  A4D8               	btfss	status,2,c
  8105  001E6E  D002               	goto	u10190
  8106  001E70  0E01               	movlw	1
  8107  001E72  0012               	return	
  8108  001E74                     u10190:
  8109  001E74  0E00               	movlw	0
  8110  001E76  0012               	return	
  8111  001E78                     
  8112                           ;LoRaWanCore.c: 255: case 5:
  8113                           ;LoRaWanCore.c: 256: {
  8114                           ;LoRaWanCore.c: 257: if (!JoinLoRaWan())
  8115  001E78  EC06  F029         	call	_JoinLoRaWan	;wreg free
  8116  001E7C  D002               	goto	L9
  8117  001E7E                     
  8118                           ;LoRaWanCore.c: 262: {
  8119                           ;LoRaWanCore.c: 263: if (!ResetModuloLoRaWan())
  8120  001E7E  ECFC  F029         	call	_ResetModuloLoRaWan	;wreg free
  8121  001E82                     L9:
  8122  001E82  0900               	iorlw	0
  8123  001E84  A4D8               	btfss	status,2,c
  8124  001E86  D7E3               	goto	u10180
  8125                           
  8126                           ;LoRaWanCore.c: 264: return 0;
  8127  001E88  0E00               	movlw	0
  8128  001E8A  0012               	return	
  8129  001E8C                     
  8130                           ;LoRaWanCore.c: 269: return 0;
  8131  001E8C  0E00               	movlw	0
  8132  001E8E  0012               	return	
  8133  001E90                     l2420:
  8134  001E90  0101               	movlb	1	; () banked
  8135  001E92  51E7               	movf	TxLoRaWan@status& (0+255),w,b
  8136                           
  8137                           ; Switch size 1, requested type "space"
  8138                           ; Number of cases is 4, Range of values is 0 to 6
  8139                           ; switch strategies available:
  8140                           ; Name         Instructions Cycles
  8141                           ; simple_byte           13     7 (average)
  8142                           ;	Chosen strategy is simple_byte
  8143  001E94  0A00               	xorlw	0	; case 0
  8144  001E96  B4D8               	btfsc	status,2,c
  8145  001E98  D7E6               	goto	l2421
  8146  001E9A  0A02               	xorlw	2	; case 2
  8147  001E9C  B4D8               	btfsc	status,2,c
  8148  001E9E  D7EC               	goto	l2423
  8149  001EA0  0A07               	xorlw	7	; case 5
  8150  001EA2  B4D8               	btfsc	status,2,c
  8151  001EA4  D7E9               	goto	l2423
  8152  001EA6  0A03               	xorlw	3	; case 6
  8153  001EA8  B4D8               	btfsc	status,2,c
  8154  001EAA  D7E9               	goto	l2427
  8155  001EAC  D7EF               	goto	l2429
  8156  001EAE                     __end_of_TxLoRaWan:
  8157                           	opt stack 0
  8158                           tblptru	equ	0xFF8
  8159                           tblptrh	equ	0xFF7
  8160                           tblptrl	equ	0xFF6
  8161                           tablat	equ	0xFF5
  8162                           prodh	equ	0xFF4
  8163                           prodl	equ	0xFF3
  8164                           intcon	equ	0xFF2
  8165                           postinc0	equ	0xFEE
  8166                           wreg	equ	0xFE8
  8167                           indf1	equ	0xFE7
  8168                           postdec1	equ	0xFE5
  8169                           fsr1h	equ	0xFE2
  8170                           fsr1l	equ	0xFE1
  8171                           indf2	equ	0xFDF
  8172                           postinc2	equ	0xFDE
  8173                           postdec2	equ	0xFDD
  8174                           plusw2	equ	0xFDB
  8175                           fsr2h	equ	0xFDA
  8176                           fsr2l	equ	0xFD9
  8177                           status	equ	0xFD8
  8178                           
  8179 ;; *************** function _strcat *****************
  8180 ;; Defined at:
  8181 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strcat.c"
  8182 ;; Parameters:    Size  Location     Type
  8183 ;;  to              2    0[BANK0 ] PTR unsigned char 
  8184 ;;		 -> TxLoRaWan@comando(200), frameBuffer(150), 
  8185 ;;  from            2    2[BANK0 ] PTR const unsigned char 
  8186 ;;		 -> TxLoRaWan@hex(4), sendError@f(30), addSensorInt@f(30), addSensorStr@f(30), 
  8187 ;;		 -> addSensorPulso@f(50), addSensorNivel@f(18), 
  8188 ;; Auto vars:     Size  Location     Type
  8189 ;;  cp              2    4[BANK0 ] PTR unsigned char 
  8190 ;;		 -> TxLoRaWan@comando(200), frameBuffer(150), 
  8191 ;; Return value:  Size  Location     Type
  8192 ;;                  2    0[BANK0 ] PTR unsigned char 
  8193 ;; Registers used:
  8194 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8195 ;; Tracked objects:
  8196 ;;		On entry : 0/0
  8197 ;;		On exit  : 0/0
  8198 ;;		Unchanged: 0/0
  8199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8200 ;;      Params:         0       4       0       0       0       0       0       0       0
  8201 ;;      Locals:         0       2       0       0       0       0       0       0       0
  8202 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8203 ;;      Totals:         0       6       0       0       0       0       0       0       0
  8204 ;;Total ram usage:        6 bytes
  8205 ;; Hardware stack levels used:    1
  8206 ;; Hardware stack levels required when called:   10
  8207 ;; This function calls:
  8208 ;;		Nothing
  8209 ;; This function is called by:
  8210 ;;		_TxLoRaWan
  8211 ;;		_addSensorNivel
  8212 ;;		_addSensorPulso
  8213 ;;		_addSensorStr
  8214 ;;		_addSensorInt
  8215 ;;		_sendError
  8216 ;; This function uses a non-reentrant model
  8217 ;;
  8218                           
  8219                           	psect	text19
  8220  004E82                     __ptext19:
  8221                           	opt stack 0
  8222  004E82                     _strcat:
  8223                           	opt stack 19
  8224                           
  8225                           ;incstack = 0
  8226  004E82  C060  F064         	movff	strcat@to,strcat@cp
  8227  004E86  C061  F065         	movff	strcat@to+1,strcat@cp+1
  8228  004E8A  D003               	goto	l3378
  8229  004E8C  0100               	movlb	0	; () banked
  8230  004E8E  4B64               	infsnz	strcat@cp& (0+255),f,b
  8231  004E90  2B65               	incf	(strcat@cp+1)& (0+255),f,b
  8232  004E92                     l3378:
  8233                           
  8234                           ; BSR set to: 0
  8235  004E92  C064  FFD9         	movff	strcat@cp,fsr2l
  8236  004E96  C065  FFDA         	movff	strcat@cp+1,fsr2h
  8237  004E9A  50DF               	movf	indf2,w,c
  8238  004E9C  B4D8               	btfsc	status,2,c
  8239  004E9E  D006               	goto	l3381
  8240  004EA0  D7F5               	goto	l3379
  8241  004EA2  0100               	movlb	0	; () banked
  8242  004EA4  4B64               	infsnz	strcat@cp& (0+255),f,b
  8243  004EA6  2B65               	incf	(strcat@cp+1)& (0+255),f,b
  8244  004EA8  4B62               	infsnz	strcat@from& (0+255),f,b
  8245  004EAA  2B63               	incf	(strcat@from+1)& (0+255),f,b
  8246  004EAC                     l3381:
  8247                           
  8248                           ; BSR set to: 0
  8249  004EAC  C062  FFD9         	movff	strcat@from,fsr2l
  8250  004EB0  C063  FFDA         	movff	strcat@from+1,fsr2h
  8251  004EB4  C064  FFE1         	movff	strcat@cp,fsr1l
  8252  004EB8  C065  FFE2         	movff	strcat@cp+1,fsr1h
  8253  004EBC  CFDF FFE7          	movff	indf2,indf1
  8254  004EC0  50E7               	movf	indf1,w,c
  8255  004EC2  B4D8               	btfsc	status,2,c
  8256  004EC4  0012               	return	
  8257  004EC6  D7ED               	goto	l3382
  8258  004EC8                     __end_of_strcat:
  8259                           	opt stack 0
  8260                           tblptru	equ	0xFF8
  8261                           tblptrh	equ	0xFF7
  8262                           tblptrl	equ	0xFF6
  8263                           tablat	equ	0xFF5
  8264                           prodh	equ	0xFF4
  8265                           prodl	equ	0xFF3
  8266                           intcon	equ	0xFF2
  8267                           postinc0	equ	0xFEE
  8268                           wreg	equ	0xFE8
  8269                           indf1	equ	0xFE7
  8270                           postdec1	equ	0xFE5
  8271                           fsr1h	equ	0xFE2
  8272                           fsr1l	equ	0xFE1
  8273                           indf2	equ	0xFDF
  8274                           postinc2	equ	0xFDE
  8275                           postdec2	equ	0xFDD
  8276                           plusw2	equ	0xFDB
  8277                           fsr2h	equ	0xFDA
  8278                           fsr2l	equ	0xFD9
  8279                           status	equ	0xFD8
  8280                           
  8281 ;; *************** function _retornaDado *****************
  8282 ;; Defined at:
  8283 ;;		line 51 in file "LoRaWanCore.c"
  8284 ;; Parameters:    Size  Location     Type
  8285 ;;  dadoByte        1    wreg     unsigned char 
  8286 ;;  dadoBit         1    0[BANK0 ] unsigned char 
  8287 ;; Auto vars:     Size  Location     Type
  8288 ;;  dadoByte        1    4[BANK0 ] unsigned char 
  8289 ;;  selectDado      1    3[BANK0 ] unsigned char 
  8290 ;; Return value:  Size  Location     Type
  8291 ;;                  1    wreg      unsigned char 
  8292 ;; Registers used:
  8293 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8294 ;; Tracked objects:
  8295 ;;		On entry : 0/0
  8296 ;;		On exit  : 0/0
  8297 ;;		Unchanged: 0/0
  8298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8299 ;;      Params:         0       1       0       0       0       0       0       0       0
  8300 ;;      Locals:         0       2       0       0       0       0       0       0       0
  8301 ;;      Temps:          0       2       0       0       0       0       0       0       0
  8302 ;;      Totals:         0       5       0       0       0       0       0       0       0
  8303 ;;Total ram usage:        5 bytes
  8304 ;; Hardware stack levels used:    1
  8305 ;; Hardware stack levels required when called:   10
  8306 ;; This function calls:
  8307 ;;		Nothing
  8308 ;; This function is called by:
  8309 ;;		_main
  8310 ;;		_TxLoRaWan
  8311 ;; This function uses a non-reentrant model
  8312 ;;
  8313                           
  8314                           	psect	text20
  8315  004BCA                     __ptext20:
  8316                           	opt stack 0
  8317  004BCA                     _retornaDado:
  8318                           	opt stack 20
  8319                           
  8320                           ;incstack = 0
  8321                           ;retornaDado@dadoByte stored from wreg
  8322  004BCA  0100               	movlb	0	; () banked
  8323  004BCC  6F64               	movwf	retornaDado@dadoByte& (0+255),b
  8324                           
  8325                           ;LoRaWanCore.c: 52: uint8_t selectDado;
  8326                           ;LoRaWanCore.c: 53: if (dadoBit){
  8327  004BCE  0100               	movlb	0	; () banked
  8328  004BD0  5160               	movf	retornaDado@dadoBit& (0+255),w,b
  8329  004BD2  B4D8               	btfsc	status,2,c
  8330  004BD4  D019               	goto	l2262
  8331                           
  8332                           ; BSR set to: 0
  8333                           ;LoRaWanCore.c: 54: selectDado = (dadosRecebidos[dadoByte].data >> dadoBit) & 1;
  8334  004BD6  C060  F061         	movff	retornaDado@dadoBit,??_retornaDado
  8335  004BDA  5164               	movf	retornaDado@dadoByte& (0+255),w,b
  8336  004BDC  0D02               	mullw	2
  8337  004BDE  0E01               	movlw	1
  8338  004BE0  26F3               	addwf	prodl,f,c
  8339  004BE2  0E00               	movlw	0
  8340  004BE4  22F4               	addwfc	prodh,f,c
  8341  004BE6  0E00               	movlw	low _dadosRecebidos
  8342  004BE8  24F3               	addwf	prodl,w,c
  8343  004BEA  6ED9               	movwf	fsr2l,c
  8344  004BEC  0E03               	movlw	high _dadosRecebidos
  8345  004BEE  20F4               	addwfc	prodh,w,c
  8346  004BF0  6EDA               	movwf	fsr2h,c
  8347  004BF2  50DF               	movf	indf2,w,c
  8348  004BF4  6F62               	movwf	(??_retornaDado+1)& (0+255),b
  8349  004BF6  2B61               	incf	??_retornaDado& (0+255),f,b
  8350  004BF8  D002               	goto	u7834
  8351  004BFA                     u7835:
  8352  004BFA  90D8               	bcf	status,0,c
  8353  004BFC  3362               	rrcf	(??_retornaDado+1)& (0+255),f,b
  8354  004BFE                     u7834:
  8355  004BFE  2F61               	decfsz	??_retornaDado& (0+255),f,b
  8356  004C00  D7FC               	goto	u7835
  8357  004C02  0100               	movlb	0	; () banked
  8358  004C04  5162               	movf	(??_retornaDado+1)& (0+255),w,b
  8359  004C06  D00D               	goto	L10
  8360  004C08                     l2262:
  8361                           
  8362                           ; BSR set to: 0
  8363                           ;LoRaWanCore.c: 56: selectDado = (dadosRecebidos[dadoByte].data) & 1;}
  8364                           
  8365                           ; BSR set to: 0
  8366  004C08  5164               	movf	retornaDado@dadoByte& (0+255),w,b
  8367  004C0A  0D02               	mullw	2
  8368  004C0C  0E01               	movlw	1
  8369  004C0E  26F3               	addwf	prodl,f,c
  8370  004C10  0E00               	movlw	0
  8371  004C12  22F4               	addwfc	prodh,f,c
  8372  004C14  0E00               	movlw	low _dadosRecebidos
  8373  004C16  24F3               	addwf	prodl,w,c
  8374  004C18  6ED9               	movwf	fsr2l,c
  8375  004C1A  0E03               	movlw	high _dadosRecebidos
  8376  004C1C  20F4               	addwfc	prodh,w,c
  8377  004C1E  6EDA               	movwf	fsr2h,c
  8378  004C20  50DF               	movf	indf2,w,c
  8379  004C22                     L10:
  8380  004C22  0B01               	andlw	1
  8381  004C24  6F63               	movwf	retornaDado@selectDado& (0+255),b
  8382                           
  8383                           ; BSR set to: 0
  8384                           ;LoRaWanCore.c: 57: return selectDado;
  8385                           
  8386                           ; BSR set to: 0
  8387  004C26  5163               	movf	retornaDado@selectDado& (0+255),w,b
  8388  004C28  0012               	return	
  8389  004C2A                     __end_of_retornaDado:
  8390                           	opt stack 0
  8391                           tblptru	equ	0xFF8
  8392                           tblptrh	equ	0xFF7
  8393                           tblptrl	equ	0xFF6
  8394                           tablat	equ	0xFF5
  8395                           prodh	equ	0xFF4
  8396                           prodl	equ	0xFF3
  8397                           intcon	equ	0xFF2
  8398                           postinc0	equ	0xFEE
  8399                           wreg	equ	0xFE8
  8400                           indf1	equ	0xFE7
  8401                           postdec1	equ	0xFE5
  8402                           fsr1h	equ	0xFE2
  8403                           fsr1l	equ	0xFE1
  8404                           indf2	equ	0xFDF
  8405                           postinc2	equ	0xFDE
  8406                           postdec2	equ	0xFDD
  8407                           plusw2	equ	0xFDB
  8408                           fsr2h	equ	0xFDA
  8409                           fsr2l	equ	0xFD9
  8410                           status	equ	0xFD8
  8411                           
  8412 ;; *************** function _ResetModuloLoRaWan *****************
  8413 ;; Defined at:
  8414 ;;		line 90 in file "LoRaWanCore.c"
  8415 ;; Parameters:    Size  Location     Type
  8416 ;;		None
  8417 ;; Auto vars:     Size  Location     Type
  8418 ;;  status          1   39[BANK0 ] unsigned char 
  8419 ;; Return value:  Size  Location     Type
  8420 ;;                  1    wreg      unsigned char 
  8421 ;; Registers used:
  8422 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8423 ;; Tracked objects:
  8424 ;;		On entry : 0/0
  8425 ;;		On exit  : 0/0
  8426 ;;		Unchanged: 0/0
  8427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8428 ;;      Params:         0       0       0       0       0       0       0       0       0
  8429 ;;      Locals:         0       1       0       0       0       0       0       0       0
  8430 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8431 ;;      Totals:         0       1       0       0       0       0       0       0       0
  8432 ;;Total ram usage:        1 bytes
  8433 ;; Hardware stack levels used:    1
  8434 ;; Hardware stack levels required when called:   13
  8435 ;; This function calls:
  8436 ;;		_enviaComando
  8437 ;; This function is called by:
  8438 ;;		_TxLoRaWan
  8439 ;; This function uses a non-reentrant model
  8440 ;;
  8441                           
  8442                           	psect	text21
  8443  0053F8                     __ptext21:
  8444                           	opt stack 0
  8445  0053F8                     _ResetModuloLoRaWan:
  8446                           	opt stack 16
  8447                           
  8448                           ;LoRaWanCore.c: 92: uint8_t status;
  8449                           ;LoRaWanCore.c: 94: status=enviaComando(SYS_RESET,1);
  8450                           
  8451                           ; BSR set to: 0
  8452                           ;incstack = 0
  8453  0053F8  0EEB               	movlw	low _SYS_RESET
  8454  0053FA  0100               	movlb	0	; () banked
  8455  0053FC  6F7C               	movwf	enviaComando@cmd& (0+255),b
  8456  0053FE  0E7D               	movlw	high _SYS_RESET
  8457  005400  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  8458  005402  0E01               	movlw	1
  8459  005404  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  8460  005406  ECA5  F01A         	call	_enviaComando	;wreg free
  8461  00540A  0100               	movlb	0	; () banked
  8462  00540C  6F87               	movwf	ResetModuloLoRaWan@status& (0+255),b
  8463                           
  8464                           ; BSR set to: 0
  8465                           ;LoRaWanCore.c: 95: return (status==15);
  8466  00540E  0E0F               	movlw	15
  8467  005410  1987               	xorwf	ResetModuloLoRaWan@status& (0+255),w,b
  8468  005412  A4D8               	btfss	status,2,c
  8469  005414  D002               	goto	u8600
  8470  005416  0E01               	movlw	1
  8471  005418  0012               	return	
  8472  00541A                     u8600:
  8473  00541A  0E00               	movlw	0
  8474  00541C  0012               	return	
  8475  00541E                     __end_of_ResetModuloLoRaWan:
  8476                           	opt stack 0
  8477                           tblptru	equ	0xFF8
  8478                           tblptrh	equ	0xFF7
  8479                           tblptrl	equ	0xFF6
  8480                           tablat	equ	0xFF5
  8481                           prodh	equ	0xFF4
  8482                           prodl	equ	0xFF3
  8483                           intcon	equ	0xFF2
  8484                           postinc0	equ	0xFEE
  8485                           wreg	equ	0xFE8
  8486                           indf1	equ	0xFE7
  8487                           postdec1	equ	0xFE5
  8488                           fsr1h	equ	0xFE2
  8489                           fsr1l	equ	0xFE1
  8490                           indf2	equ	0xFDF
  8491                           postinc2	equ	0xFDE
  8492                           postdec2	equ	0xFDD
  8493                           plusw2	equ	0xFDB
  8494                           fsr2h	equ	0xFDA
  8495                           fsr2l	equ	0xFD9
  8496                           status	equ	0xFD8
  8497                           
  8498 ;; *************** function _JoinLoRaWan *****************
  8499 ;; Defined at:
  8500 ;;		line 98 in file "LoRaWanCore.c"
  8501 ;; Parameters:    Size  Location     Type
  8502 ;;		None
  8503 ;; Auto vars:     Size  Location     Type
  8504 ;;  status          1   39[BANK0 ] unsigned char 
  8505 ;; Return value:  Size  Location     Type
  8506 ;;                  1    wreg      unsigned char 
  8507 ;; Registers used:
  8508 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8509 ;; Tracked objects:
  8510 ;;		On entry : 0/0
  8511 ;;		On exit  : 0/0
  8512 ;;		Unchanged: 0/0
  8513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8514 ;;      Params:         0       0       0       0       0       0       0       0       0
  8515 ;;      Locals:         0       1       0       0       0       0       0       0       0
  8516 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8517 ;;      Totals:         0       1       0       0       0       0       0       0       0
  8518 ;;Total ram usage:        1 bytes
  8519 ;; Hardware stack levels used:    1
  8520 ;; Hardware stack levels required when called:   13
  8521 ;; This function calls:
  8522 ;;		_enviaComando
  8523 ;;		_parseLoRaWan
  8524 ;; This function is called by:
  8525 ;;		_TxLoRaWan
  8526 ;; This function uses a non-reentrant model
  8527 ;;
  8528                           
  8529                           	psect	text22
  8530  00520C                     __ptext22:
  8531                           	opt stack 0
  8532  00520C                     _JoinLoRaWan:
  8533                           	opt stack 16
  8534                           
  8535                           ;LoRaWanCore.c: 100: uint8_t status;
  8536                           ;LoRaWanCore.c: 102: status=enviaComando(MAC_JOIN_OTAA,0);
  8537                           
  8538                           ; BSR set to: 0
  8539                           ;incstack = 0
  8540  00520C  0EBA               	movlw	low _MAC_JOIN_OTAA
  8541  00520E  0100               	movlb	0	; () banked
  8542  005210  6F7C               	movwf	enviaComando@cmd& (0+255),b
  8543  005212  0E7D               	movlw	high _MAC_JOIN_OTAA
  8544  005214  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  8545  005216  0E00               	movlw	0
  8546  005218  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  8547  00521A  ECA5  F01A         	call	_enviaComando	;wreg free
  8548  00521E  0100               	movlb	0	; () banked
  8549  005220  6F87               	movwf	JoinLoRaWan@status& (0+255),b
  8550                           
  8551                           ;LoRaWanCore.c: 103: switch (status)
  8552  005222  D00B               	goto	l2282
  8553  005224                     
  8554                           ; BSR set to: 0
  8555                           ;LoRaWanCore.c: 106: return (parseLoRaWan()==0);
  8556                           
  8557                           ; BSR set to: 0
  8558  005224  ECBA  F020         	call	_parseLoRaWan	;wreg free
  8559  005228  0900               	iorlw	0
  8560  00522A  A4D8               	btfss	status,2,c
  8561  00522C  D002               	goto	u8620
  8562  00522E  0E01               	movlw	1
  8563  005230  0012               	return	
  8564  005232                     u8620:
  8565  005232  0E00               	movlw	0
  8566  005234  0012               	return	
  8567  005236                     
  8568                           ;LoRaWanCore.c: 108: return 0;
  8569  005236  0E00               	movlw	0
  8570                           
  8571                           ;LoRaWanCore.c: 109: }
  8572  005238  0012               	return	
  8573  00523A                     l2282:
  8574  00523A  0100               	movlb	0	; () banked
  8575  00523C  5187               	movf	JoinLoRaWan@status& (0+255),w,b
  8576                           
  8577                           ; Switch size 1, requested type "space"
  8578                           ; Number of cases is 1, Range of values is 0 to 0
  8579                           ; switch strategies available:
  8580                           ; Name         Instructions Cycles
  8581                           ; simple_byte            4     3 (average)
  8582                           ;	Chosen strategy is simple_byte
  8583  00523E  0A00               	xorlw	0	; case 0
  8584  005240  B4D8               	btfsc	status,2,c
  8585  005242  D7F0               	goto	l2283
  8586  005244  D7F8               	goto	l2285
  8587  005246                     __end_of_JoinLoRaWan:
  8588                           	opt stack 0
  8589                           tblptru	equ	0xFF8
  8590                           tblptrh	equ	0xFF7
  8591                           tblptrl	equ	0xFF6
  8592                           tablat	equ	0xFF5
  8593                           prodh	equ	0xFF4
  8594                           prodl	equ	0xFF3
  8595                           intcon	equ	0xFF2
  8596                           postinc0	equ	0xFEE
  8597                           wreg	equ	0xFE8
  8598                           indf1	equ	0xFE7
  8599                           postdec1	equ	0xFE5
  8600                           fsr1h	equ	0xFE2
  8601                           fsr1l	equ	0xFE1
  8602                           indf2	equ	0xFDF
  8603                           postinc2	equ	0xFDE
  8604                           postdec2	equ	0xFDD
  8605                           plusw2	equ	0xFDB
  8606                           fsr2h	equ	0xFDA
  8607                           fsr2l	equ	0xFD9
  8608                           status	equ	0xFD8
  8609                           
  8610 ;; *************** function _SetSpreadingFactor *****************
  8611 ;; Defined at:
  8612 ;;		line 147 in file "LoRaWanCore.c"
  8613 ;; Parameters:    Size  Location     Type
  8614 ;;  sf              1    wreg     unsigned char 
  8615 ;; Auto vars:     Size  Location     Type
  8616 ;;  sf              1   51[BANK1 ] unsigned char 
  8617 ;;  comando        20   30[BANK1 ] unsigned char [20]
  8618 ;;  status          1   50[BANK1 ] unsigned char 
  8619 ;; Return value:  Size  Location     Type
  8620 ;;                  1    wreg      unsigned char 
  8621 ;; Registers used:
  8622 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8623 ;; Tracked objects:
  8624 ;;		On entry : 0/0
  8625 ;;		On exit  : 0/0
  8626 ;;		Unchanged: 0/0
  8627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8628 ;;      Params:         0       0       0       0       0       0       0       0       0
  8629 ;;      Locals:         0       0      22       0       0       0       0       0       0
  8630 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8631 ;;      Totals:         0       0      22       0       0       0       0       0       0
  8632 ;;Total ram usage:       22 bytes
  8633 ;; Hardware stack levels used:    1
  8634 ;; Hardware stack levels required when called:   14
  8635 ;; This function calls:
  8636 ;;		_enviaComando
  8637 ;;		_sprintf
  8638 ;; This function is called by:
  8639 ;;		_main
  8640 ;; This function uses a non-reentrant model
  8641 ;;
  8642                           
  8643                           	psect	text23
  8644  00505E                     __ptext23:
  8645                           	opt stack 0
  8646  00505E                     _SetSpreadingFactor:
  8647                           	opt stack 16
  8648                           
  8649                           ;incstack = 0
  8650                           ;SetSpreadingFactor@sf stored from wreg
  8651  00505E  0101               	movlb	1	; () banked
  8652  005060  6F33               	movwf	SetSpreadingFactor@sf& (0+255),b
  8653                           
  8654                           ;LoRaWanCore.c: 148: char comando[20];
  8655                           ;LoRaWanCore.c: 150: sprintf(comando, "%s%d", MAC_SET_SF, sf);
  8656  005062  0E1E               	movlw	low SetSpreadingFactor@comando
  8657  005064  0100               	movlb	0	; () banked
  8658  005066  6FBF               	movwf	sprintf@sp& (0+255),b
  8659  005068  0E01               	movlw	high SetSpreadingFactor@comando
  8660  00506A  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  8661  00506C  0EF5               	movlw	low STR_36
  8662  00506E  6FC1               	movwf	sprintf@f& (0+255),b
  8663  005070  0E7F               	movlw	high STR_36
  8664  005072  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  8665  005074  0E64               	movlw	low _MAC_SET_SF
  8666  005076  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  8667  005078  0E7D               	movlw	high _MAC_SET_SF
  8668  00507A  6FC4               	movwf	(?_sprintf+5)& (0+255),b
  8669  00507C  C133  F0C5         	movff	SetSpreadingFactor@sf,?_sprintf+6
  8670  005080  6BC6               	clrf	(?_sprintf+7)& (0+255),b
  8671  005082  EC09  F000         	call	_sprintf	;wreg free
  8672                           
  8673                           ;LoRaWanCore.c: 151: uint8_t status=enviaComando(comando,0);
  8674  005086  0E1E               	movlw	low SetSpreadingFactor@comando
  8675  005088  0100               	movlb	0	; () banked
  8676  00508A  6F7C               	movwf	enviaComando@cmd& (0+255),b
  8677  00508C  0E01               	movlw	high SetSpreadingFactor@comando
  8678  00508E  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  8679  005090  0E00               	movlw	0
  8680  005092  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  8681  005094  ECA5  F01A         	call	_enviaComando	;wreg free
  8682  005098  0101               	movlb	1	; () banked
  8683  00509A  6F32               	movwf	SetSpreadingFactor@status& (0+255),b
  8684  00509C  0012               	return	
  8685  00509E                     __end_of_SetSpreadingFactor:
  8686                           	opt stack 0
  8687                           tblptru	equ	0xFF8
  8688                           tblptrh	equ	0xFF7
  8689                           tblptrl	equ	0xFF6
  8690                           tablat	equ	0xFF5
  8691                           prodh	equ	0xFF4
  8692                           prodl	equ	0xFF3
  8693                           intcon	equ	0xFF2
  8694                           postinc0	equ	0xFEE
  8695                           wreg	equ	0xFE8
  8696                           indf1	equ	0xFE7
  8697                           postdec1	equ	0xFE5
  8698                           fsr1h	equ	0xFE2
  8699                           fsr1l	equ	0xFE1
  8700                           indf2	equ	0xFDF
  8701                           postinc2	equ	0xFDE
  8702                           postdec2	equ	0xFDD
  8703                           plusw2	equ	0xFDB
  8704                           fsr2h	equ	0xFDA
  8705                           fsr2l	equ	0xFD9
  8706                           status	equ	0xFD8
  8707                           
  8708 ;; *************** function _SetDevEUI *****************
  8709 ;; Defined at:
  8710 ;;		line 68 in file "LoRaWanCore.c"
  8711 ;; Parameters:    Size  Location     Type
  8712 ;;  state           2  145[BANK0 ] PTR const unsigned char 
  8713 ;;		 -> STR_1(17), 
  8714 ;; Auto vars:     Size  Location     Type
  8715 ;;  comando        32   30[BANK1 ] unsigned char [32]
  8716 ;;  status          1   62[BANK1 ] unsigned char 
  8717 ;; Return value:  Size  Location     Type
  8718 ;;                  1    wreg      unsigned char 
  8719 ;; Registers used:
  8720 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8721 ;; Tracked objects:
  8722 ;;		On entry : 0/0
  8723 ;;		On exit  : 0/0
  8724 ;;		Unchanged: 0/0
  8725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8726 ;;      Params:         0       2       0       0       0       0       0       0       0
  8727 ;;      Locals:         0       0      33       0       0       0       0       0       0
  8728 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8729 ;;      Totals:         0       2      33       0       0       0       0       0       0
  8730 ;;Total ram usage:       35 bytes
  8731 ;; Hardware stack levels used:    1
  8732 ;; Hardware stack levels required when called:   14
  8733 ;; This function calls:
  8734 ;;		_enviaComando
  8735 ;;		_sprintf
  8736 ;; This function is called by:
  8737 ;;		_main
  8738 ;; This function uses a non-reentrant model
  8739 ;;
  8740                           
  8741                           	psect	text24
  8742  00509E                     __ptext24:
  8743                           	opt stack 0
  8744  00509E                     _SetDevEUI:
  8745                           	opt stack 16
  8746                           
  8747                           ;LoRaWanCore.c: 70: char comando[32];
  8748                           ;LoRaWanCore.c: 71: sprintf(comando, "%s %s", MAC_SET_DEVEUI, state );
  8749                           
  8750                           ; BSR set to: 1
  8751                           ;incstack = 0
  8752  00509E  0E1E               	movlw	low SetDevEUI@comando
  8753  0050A0  0100               	movlb	0	; () banked
  8754  0050A2  6FBF               	movwf	sprintf@sp& (0+255),b
  8755  0050A4  0E01               	movlw	high SetDevEUI@comando
  8756  0050A6  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  8757  0050A8  0EEA               	movlw	low STR_28
  8758  0050AA  6FC1               	movwf	sprintf@f& (0+255),b
  8759  0050AC  0E7F               	movlw	high STR_28
  8760  0050AE  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  8761  0050B0  0EA5               	movlw	low _MAC_SET_DEVEUI
  8762  0050B2  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  8763  0050B4  0E7D               	movlw	high _MAC_SET_DEVEUI
  8764  0050B6  6FC4               	movwf	(?_sprintf+5)& (0+255),b
  8765  0050B8  C0F1  F0C5         	movff	SetDevEUI@state,?_sprintf+6
  8766  0050BC  C0F2  F0C6         	movff	SetDevEUI@state+1,?_sprintf+7
  8767  0050C0  EC09  F000         	call	_sprintf	;wreg free
  8768                           
  8769                           ;LoRaWanCore.c: 72: uint8_t status=enviaComando(comando,0);
  8770  0050C4  0E1E               	movlw	low SetDevEUI@comando
  8771  0050C6  0100               	movlb	0	; () banked
  8772  0050C8  6F7C               	movwf	enviaComando@cmd& (0+255),b
  8773  0050CA  0E01               	movlw	high SetDevEUI@comando
  8774  0050CC  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  8775  0050CE  0E00               	movlw	0
  8776  0050D0  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  8777  0050D2  ECA5  F01A         	call	_enviaComando	;wreg free
  8778  0050D6  0101               	movlb	1	; () banked
  8779  0050D8  6F3E               	movwf	SetDevEUI@status& (0+255),b
  8780  0050DA  0012               	return	
  8781  0050DC                     __end_of_SetDevEUI:
  8782                           	opt stack 0
  8783                           tblptru	equ	0xFF8
  8784                           tblptrh	equ	0xFF7
  8785                           tblptrl	equ	0xFF6
  8786                           tablat	equ	0xFF5
  8787                           prodh	equ	0xFF4
  8788                           prodl	equ	0xFF3
  8789                           intcon	equ	0xFF2
  8790                           postinc0	equ	0xFEE
  8791                           wreg	equ	0xFE8
  8792                           indf1	equ	0xFE7
  8793                           postdec1	equ	0xFE5
  8794                           fsr1h	equ	0xFE2
  8795                           fsr1l	equ	0xFE1
  8796                           indf2	equ	0xFDF
  8797                           postinc2	equ	0xFDE
  8798                           postdec2	equ	0xFDD
  8799                           plusw2	equ	0xFDB
  8800                           fsr2h	equ	0xFDA
  8801                           fsr2l	equ	0xFD9
  8802                           status	equ	0xFD8
  8803                           
  8804 ;; *************** function _SetChannelLoRaWan *****************
  8805 ;; Defined at:
  8806 ;;		line 112 in file "LoRaWanCore.c"
  8807 ;; Parameters:    Size  Location     Type
  8808 ;;  canal           1    wreg     unsigned char 
  8809 ;;  ligado          1  145[BANK0 ] unsigned char 
  8810 ;; Auto vars:     Size  Location     Type
  8811 ;;  canal           1   56[BANK1 ] unsigned char 
  8812 ;;  comando        25   30[BANK1 ] unsigned char [25]
  8813 ;;  status          1   55[BANK1 ] unsigned char 
  8814 ;; Return value:  Size  Location     Type
  8815 ;;                  1    wreg      unsigned char 
  8816 ;; Registers used:
  8817 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8818 ;; Tracked objects:
  8819 ;;		On entry : 0/0
  8820 ;;		On exit  : 0/0
  8821 ;;		Unchanged: 0/0
  8822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8823 ;;      Params:         0       1       0       0       0       0       0       0       0
  8824 ;;      Locals:         0       0      27       0       0       0       0       0       0
  8825 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8826 ;;      Totals:         0       1      27       0       0       0       0       0       0
  8827 ;;Total ram usage:       28 bytes
  8828 ;; Hardware stack levels used:    1
  8829 ;; Hardware stack levels required when called:   14
  8830 ;; This function calls:
  8831 ;;		_enviaComando
  8832 ;;		_sprintf
  8833 ;; This function is called by:
  8834 ;;		_main
  8835 ;; This function uses a non-reentrant model
  8836 ;;
  8837                           
  8838                           	psect	text25
  8839  004A90                     __ptext25:
  8840                           	opt stack 0
  8841  004A90                     _SetChannelLoRaWan:
  8842                           	opt stack 16
  8843                           
  8844                           ; BSR set to: 1
  8845                           ;incstack = 0
  8846                           ;SetChannelLoRaWan@canal stored from wreg
  8847  004A90  0101               	movlb	1	; () banked
  8848  004A92  6F38               	movwf	SetChannelLoRaWan@canal& (0+255),b
  8849                           
  8850                           ;LoRaWanCore.c: 114: char comando[25];
  8851                           ;LoRaWanCore.c: 115: if (ligado)
  8852  004A94  0100               	movlb	0	; () banked
  8853  004A96  51F1               	movf	SetChannelLoRaWan@ligado& (0+255),w,b
  8854  004A98  B4D8               	btfsc	status,2,c
  8855  004A9A  D012               	goto	l2289
  8856                           
  8857                           ; BSR set to: 0
  8858                           ;LoRaWanCore.c: 116: sprintf(comando, "%s %d on", MAC_SET_CH_STATUS, canal);
  8859  004A9C  0E1E               	movlw	low SetChannelLoRaWan@comando
  8860  004A9E  6FBF               	movwf	sprintf@sp& (0+255),b
  8861  004AA0  0E01               	movlw	high SetChannelLoRaWan@comando
  8862  004AA2  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  8863  004AA4  0E92               	movlw	low STR_31
  8864  004AA6  6FC1               	movwf	sprintf@f& (0+255),b
  8865  004AA8  0E7F               	movlw	high STR_31
  8866  004AAA  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  8867  004AAC  0E74               	movlw	low _MAC_SET_CH_STATUS
  8868  004AAE  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  8869  004AB0  0E7D               	movlw	high _MAC_SET_CH_STATUS
  8870  004AB2  6FC4               	movwf	(?_sprintf+5)& (0+255),b
  8871  004AB4  C138  F0C5         	movff	SetChannelLoRaWan@canal,?_sprintf+6
  8872  004AB8  6BC6               	clrf	(?_sprintf+7)& (0+255),b
  8873  004ABA  EC09  F000         	call	_sprintf	;wreg free
  8874  004ABE  D012               	goto	l2290
  8875  004AC0                     l2289:
  8876                           
  8877                           ;LoRaWanCore.c: 117: else
  8878                           ;LoRaWanCore.c: 118: sprintf(comando, "%s %d off", MAC_SET_CH_STATUS, canal);
  8879  004AC0  0E1E               	movlw	low SetChannelLoRaWan@comando
  8880  004AC2  0100               	movlb	0	; () banked
  8881  004AC4  6FBF               	movwf	sprintf@sp& (0+255),b
  8882  004AC6  0E01               	movlw	high SetChannelLoRaWan@comando
  8883  004AC8  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  8884  004ACA  0E74               	movlw	low STR_32
  8885  004ACC  6FC1               	movwf	sprintf@f& (0+255),b
  8886  004ACE  0E7F               	movlw	high STR_32
  8887  004AD0  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  8888  004AD2  0E74               	movlw	low _MAC_SET_CH_STATUS
  8889  004AD4  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  8890  004AD6  0E7D               	movlw	high _MAC_SET_CH_STATUS
  8891  004AD8  6FC4               	movwf	(?_sprintf+5)& (0+255),b
  8892  004ADA  C138  F0C5         	movff	SetChannelLoRaWan@canal,?_sprintf+6
  8893  004ADE  6BC6               	clrf	(?_sprintf+7)& (0+255),b
  8894  004AE0  EC09  F000         	call	_sprintf	;wreg free
  8895  004AE4                     l2290:
  8896                           
  8897                           ;LoRaWanCore.c: 119: uint8_t status=enviaComando(comando,0);
  8898  004AE4  0E1E               	movlw	low SetChannelLoRaWan@comando
  8899  004AE6  0100               	movlb	0	; () banked
  8900  004AE8  6F7C               	movwf	enviaComando@cmd& (0+255),b
  8901  004AEA  0E01               	movlw	high SetChannelLoRaWan@comando
  8902  004AEC  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  8903  004AEE  0E00               	movlw	0
  8904  004AF0  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  8905  004AF2  ECA5  F01A         	call	_enviaComando	;wreg free
  8906  004AF6  0101               	movlb	1	; () banked
  8907  004AF8  6F37               	movwf	SetChannelLoRaWan@status& (0+255),b
  8908  004AFA  0012               	return	
  8909  004AFC                     __end_of_SetChannelLoRaWan:
  8910                           	opt stack 0
  8911                           tblptru	equ	0xFF8
  8912                           tblptrh	equ	0xFF7
  8913                           tblptrl	equ	0xFF6
  8914                           tablat	equ	0xFF5
  8915                           prodh	equ	0xFF4
  8916                           prodl	equ	0xFF3
  8917                           intcon	equ	0xFF2
  8918                           postinc0	equ	0xFEE
  8919                           wreg	equ	0xFE8
  8920                           indf1	equ	0xFE7
  8921                           postdec1	equ	0xFE5
  8922                           fsr1h	equ	0xFE2
  8923                           fsr1l	equ	0xFE1
  8924                           indf2	equ	0xFDF
  8925                           postinc2	equ	0xFDE
  8926                           postdec2	equ	0xFDD
  8927                           plusw2	equ	0xFDB
  8928                           fsr2h	equ	0xFDA
  8929                           fsr2l	equ	0xFD9
  8930                           status	equ	0xFD8
  8931                           
  8932 ;; *************** function _SetBandWidth *****************
  8933 ;; Defined at:
  8934 ;;		line 155 in file "LoRaWanCore.c"
  8935 ;; Parameters:    Size  Location     Type
  8936 ;;  bw              2  145[BANK0 ] unsigned int 
  8937 ;; Auto vars:     Size  Location     Type
  8938 ;;  comando        20   30[BANK1 ] unsigned char [20]
  8939 ;;  status          2   50[BANK1 ] unsigned int 
  8940 ;; Return value:  Size  Location     Type
  8941 ;;                  1    wreg      unsigned char 
  8942 ;; Registers used:
  8943 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8944 ;; Tracked objects:
  8945 ;;		On entry : 0/0
  8946 ;;		On exit  : 0/0
  8947 ;;		Unchanged: 0/0
  8948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8949 ;;      Params:         0       2       0       0       0       0       0       0       0
  8950 ;;      Locals:         0       0      22       0       0       0       0       0       0
  8951 ;;      Temps:          0       1       0       0       0       0       0       0       0
  8952 ;;      Totals:         0       3      22       0       0       0       0       0       0
  8953 ;;Total ram usage:       25 bytes
  8954 ;; Hardware stack levels used:    1
  8955 ;; Hardware stack levels required when called:   14
  8956 ;; This function calls:
  8957 ;;		_enviaComando
  8958 ;;		_sprintf
  8959 ;; This function is called by:
  8960 ;;		_main
  8961 ;; This function uses a non-reentrant model
  8962 ;;
  8963                           
  8964                           	psect	text26
  8965  004EC8                     __ptext26:
  8966                           	opt stack 0
  8967  004EC8                     _SetBandWidth:
  8968                           	opt stack 16
  8969                           
  8970                           ;LoRaWanCore.c: 156: char comando[20];
  8971                           ;LoRaWanCore.c: 158: sprintf(comando, "%s %d", MAC_SET_BW, bw);
  8972                           
  8973                           ; BSR set to: 1
  8974                           ;incstack = 0
  8975  004EC8  0E1E               	movlw	low SetBandWidth@comando
  8976  004ECA  0100               	movlb	0	; () banked
  8977  004ECC  6FBF               	movwf	sprintf@sp& (0+255),b
  8978  004ECE  0E01               	movlw	high SetBandWidth@comando
  8979  004ED0  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  8980  004ED2  0EE4               	movlw	low STR_37
  8981  004ED4  6FC1               	movwf	sprintf@f& (0+255),b
  8982  004ED6  0E7F               	movlw	high STR_37
  8983  004ED8  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  8984  004EDA  0E82               	movlw	low _MAC_SET_BW
  8985  004EDC  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  8986  004EDE  0E7D               	movlw	high _MAC_SET_BW
  8987  004EE0  6FC4               	movwf	(?_sprintf+5)& (0+255),b
  8988  004EE2  C0F1  F0C5         	movff	SetBandWidth@bw,?_sprintf+6
  8989  004EE6  C0F2  F0C6         	movff	SetBandWidth@bw+1,?_sprintf+7
  8990  004EEA  EC09  F000         	call	_sprintf	;wreg free
  8991                           
  8992                           ;LoRaWanCore.c: 159: uint16_t status=enviaComando(comando,0);
  8993  004EEE  0E1E               	movlw	low SetBandWidth@comando
  8994  004EF0  0100               	movlb	0	; () banked
  8995  004EF2  6F7C               	movwf	enviaComando@cmd& (0+255),b
  8996  004EF4  0E01               	movlw	high SetBandWidth@comando
  8997  004EF6  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  8998  004EF8  0E00               	movlw	0
  8999  004EFA  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  9000  004EFC  ECA5  F01A         	call	_enviaComando	;wreg free
  9001  004F00  0100               	movlb	0	; () banked
  9002  004F02  6FF3               	movwf	??_SetBandWidth& (0+255),b
  9003  004F04  51F3               	movf	??_SetBandWidth& (0+255),w,b
  9004  004F06  0101               	movlb	1	; () banked
  9005  004F08  6F32               	movwf	SetBandWidth@status& (0+255),b
  9006  004F0A  6B33               	clrf	(SetBandWidth@status+1)& (0+255),b
  9007  004F0C  0012               	return	
  9008  004F0E                     __end_of_SetBandWidth:
  9009                           	opt stack 0
  9010                           tblptru	equ	0xFF8
  9011                           tblptrh	equ	0xFF7
  9012                           tblptrl	equ	0xFF6
  9013                           tablat	equ	0xFF5
  9014                           prodh	equ	0xFF4
  9015                           prodl	equ	0xFF3
  9016                           intcon	equ	0xFF2
  9017                           postinc0	equ	0xFEE
  9018                           wreg	equ	0xFE8
  9019                           indf1	equ	0xFE7
  9020                           postdec1	equ	0xFE5
  9021                           fsr1h	equ	0xFE2
  9022                           fsr1l	equ	0xFE1
  9023                           indf2	equ	0xFDF
  9024                           postinc2	equ	0xFDE
  9025                           postdec2	equ	0xFDD
  9026                           plusw2	equ	0xFDB
  9027                           fsr2h	equ	0xFDA
  9028                           fsr2l	equ	0xFD9
  9029                           status	equ	0xFD8
  9030                           
  9031 ;; *************** function _SetAppKey *****************
  9032 ;; Defined at:
  9033 ;;		line 82 in file "LoRaWanCore.c"
  9034 ;; Parameters:    Size  Location     Type
  9035 ;;  state           2  145[BANK0 ] PTR const unsigned char 
  9036 ;;		 -> STR_3(33), 
  9037 ;; Auto vars:     Size  Location     Type
  9038 ;;  comando        50   30[BANK1 ] unsigned char [50]
  9039 ;;  status          1   80[BANK1 ] unsigned char 
  9040 ;; Return value:  Size  Location     Type
  9041 ;;                  1    wreg      unsigned char 
  9042 ;; Registers used:
  9043 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9044 ;; Tracked objects:
  9045 ;;		On entry : 0/0
  9046 ;;		On exit  : 0/0
  9047 ;;		Unchanged: 0/0
  9048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9049 ;;      Params:         0       2       0       0       0       0       0       0       0
  9050 ;;      Locals:         0       0      51       0       0       0       0       0       0
  9051 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9052 ;;      Totals:         0       2      51       0       0       0       0       0       0
  9053 ;;Total ram usage:       53 bytes
  9054 ;; Hardware stack levels used:    1
  9055 ;; Hardware stack levels required when called:   14
  9056 ;; This function calls:
  9057 ;;		_enviaComando
  9058 ;;		_sprintf
  9059 ;; This function is called by:
  9060 ;;		_main
  9061 ;; This function uses a non-reentrant model
  9062 ;;
  9063                           
  9064                           	psect	text27
  9065  0050DC                     __ptext27:
  9066                           	opt stack 0
  9067  0050DC                     _SetAppKey:
  9068                           	opt stack 16
  9069                           
  9070                           ;LoRaWanCore.c: 84: char comando[50];
  9071                           ;LoRaWanCore.c: 85: sprintf(comando, "%s %s", MAC_SET_APPKEY,state );
  9072                           
  9073                           ; BSR set to: 1
  9074                           ;incstack = 0
  9075  0050DC  0E1E               	movlw	low SetAppKey@comando
  9076  0050DE  0100               	movlb	0	; () banked
  9077  0050E0  6FBF               	movwf	sprintf@sp& (0+255),b
  9078  0050E2  0E01               	movlw	high SetAppKey@comando
  9079  0050E4  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  9080  0050E6  0EEA               	movlw	low STR_28
  9081  0050E8  6FC1               	movwf	sprintf@f& (0+255),b
  9082  0050EA  0E7F               	movlw	high STR_28
  9083  0050EC  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  9084  0050EE  0E8F               	movlw	low _MAC_SET_APPKEY
  9085  0050F0  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  9086  0050F2  0E7D               	movlw	high _MAC_SET_APPKEY
  9087  0050F4  6FC4               	movwf	(?_sprintf+5)& (0+255),b
  9088  0050F6  C0F1  F0C5         	movff	SetAppKey@state,?_sprintf+6
  9089  0050FA  C0F2  F0C6         	movff	SetAppKey@state+1,?_sprintf+7
  9090  0050FE  EC09  F000         	call	_sprintf	;wreg free
  9091                           
  9092                           ;LoRaWanCore.c: 86: uint8_t status=enviaComando(comando,0);
  9093  005102  0E1E               	movlw	low SetAppKey@comando
  9094  005104  0100               	movlb	0	; () banked
  9095  005106  6F7C               	movwf	enviaComando@cmd& (0+255),b
  9096  005108  0E01               	movlw	high SetAppKey@comando
  9097  00510A  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  9098  00510C  0E00               	movlw	0
  9099  00510E  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  9100  005110  ECA5  F01A         	call	_enviaComando	;wreg free
  9101  005114  0101               	movlb	1	; () banked
  9102  005116  6F50               	movwf	SetAppKey@status& (0+255),b
  9103  005118  0012               	return	
  9104  00511A                     __end_of_SetAppKey:
  9105                           	opt stack 0
  9106                           tblptru	equ	0xFF8
  9107                           tblptrh	equ	0xFF7
  9108                           tblptrl	equ	0xFF6
  9109                           tablat	equ	0xFF5
  9110                           prodh	equ	0xFF4
  9111                           prodl	equ	0xFF3
  9112                           intcon	equ	0xFF2
  9113                           postinc0	equ	0xFEE
  9114                           wreg	equ	0xFE8
  9115                           indf1	equ	0xFE7
  9116                           postdec1	equ	0xFE5
  9117                           fsr1h	equ	0xFE2
  9118                           fsr1l	equ	0xFE1
  9119                           indf2	equ	0xFDF
  9120                           postinc2	equ	0xFDE
  9121                           postdec2	equ	0xFDD
  9122                           plusw2	equ	0xFDB
  9123                           fsr2h	equ	0xFDA
  9124                           fsr2l	equ	0xFD9
  9125                           status	equ	0xFD8
  9126                           
  9127 ;; *************** function _SetAppEUI *****************
  9128 ;; Defined at:
  9129 ;;		line 75 in file "LoRaWanCore.c"
  9130 ;; Parameters:    Size  Location     Type
  9131 ;;  state           2  145[BANK0 ] PTR const unsigned char 
  9132 ;;		 -> STR_2(17), 
  9133 ;; Auto vars:     Size  Location     Type
  9134 ;;  comando        32   30[BANK1 ] unsigned char [32]
  9135 ;;  status          1   62[BANK1 ] unsigned char 
  9136 ;; Return value:  Size  Location     Type
  9137 ;;                  1    wreg      unsigned char 
  9138 ;; Registers used:
  9139 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9140 ;; Tracked objects:
  9141 ;;		On entry : 0/0
  9142 ;;		On exit  : 0/0
  9143 ;;		Unchanged: 0/0
  9144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9145 ;;      Params:         0       2       0       0       0       0       0       0       0
  9146 ;;      Locals:         0       0      33       0       0       0       0       0       0
  9147 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9148 ;;      Totals:         0       2      33       0       0       0       0       0       0
  9149 ;;Total ram usage:       35 bytes
  9150 ;; Hardware stack levels used:    1
  9151 ;; Hardware stack levels required when called:   14
  9152 ;; This function calls:
  9153 ;;		_enviaComando
  9154 ;;		_sprintf
  9155 ;; This function is called by:
  9156 ;;		_main
  9157 ;; This function uses a non-reentrant model
  9158 ;;
  9159                           
  9160                           	psect	text28
  9161  00511A                     __ptext28:
  9162                           	opt stack 0
  9163  00511A                     _SetAppEUI:
  9164                           	opt stack 16
  9165                           
  9166                           ;LoRaWanCore.c: 77: char comando[32];
  9167                           ;LoRaWanCore.c: 78: sprintf(comando, "%s %s", MAC_SET_APPEUI, state );
  9168                           
  9169                           ; BSR set to: 1
  9170                           ;incstack = 0
  9171  00511A  0E1E               	movlw	low SetAppEUI@comando
  9172  00511C  0100               	movlb	0	; () banked
  9173  00511E  6FBF               	movwf	sprintf@sp& (0+255),b
  9174  005120  0E01               	movlw	high SetAppEUI@comando
  9175  005122  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  9176  005124  0EEA               	movlw	low STR_28
  9177  005126  6FC1               	movwf	sprintf@f& (0+255),b
  9178  005128  0E7F               	movlw	high STR_28
  9179  00512A  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  9180  00512C  0E9A               	movlw	low _MAC_SET_APPEUI
  9181  00512E  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  9182  005130  0E7D               	movlw	high _MAC_SET_APPEUI
  9183  005132  6FC4               	movwf	(?_sprintf+5)& (0+255),b
  9184  005134  C0F1  F0C5         	movff	SetAppEUI@state,?_sprintf+6
  9185  005138  C0F2  F0C6         	movff	SetAppEUI@state+1,?_sprintf+7
  9186  00513C  EC09  F000         	call	_sprintf	;wreg free
  9187                           
  9188                           ;LoRaWanCore.c: 79: uint8_t status=enviaComando(comando,0);
  9189  005140  0E1E               	movlw	low SetAppEUI@comando
  9190  005142  0100               	movlb	0	; () banked
  9191  005144  6F7C               	movwf	enviaComando@cmd& (0+255),b
  9192  005146  0E01               	movlw	high SetAppEUI@comando
  9193  005148  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  9194  00514A  0E00               	movlw	0
  9195  00514C  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  9196  00514E  ECA5  F01A         	call	_enviaComando	;wreg free
  9197  005152  0101               	movlb	1	; () banked
  9198  005154  6F3E               	movwf	SetAppEUI@status& (0+255),b
  9199  005156  0012               	return	
  9200  005158                     __end_of_SetAppEUI:
  9201                           	opt stack 0
  9202                           tblptru	equ	0xFF8
  9203                           tblptrh	equ	0xFF7
  9204                           tblptrl	equ	0xFF6
  9205                           tablat	equ	0xFF5
  9206                           prodh	equ	0xFF4
  9207                           prodl	equ	0xFF3
  9208                           intcon	equ	0xFF2
  9209                           postinc0	equ	0xFEE
  9210                           wreg	equ	0xFE8
  9211                           indf1	equ	0xFE7
  9212                           postdec1	equ	0xFE5
  9213                           fsr1h	equ	0xFE2
  9214                           fsr1l	equ	0xFE1
  9215                           indf2	equ	0xFDF
  9216                           postinc2	equ	0xFDE
  9217                           postdec2	equ	0xFDD
  9218                           plusw2	equ	0xFDB
  9219                           fsr2h	equ	0xFDA
  9220                           fsr2l	equ	0xFD9
  9221                           status	equ	0xFD8
  9222                           
  9223 ;; *************** function _SetAdr *****************
  9224 ;; Defined at:
  9225 ;;		line 123 in file "LoRaWanCore.c"
  9226 ;; Parameters:    Size  Location     Type
  9227 ;;  state           2  145[BANK0 ] PTR const unsigned char 
  9228 ;;		 -> STATE_ON(3), STATE_OFF(4), 
  9229 ;; Auto vars:     Size  Location     Type
  9230 ;;  comando        15   30[BANK1 ] unsigned char [15]
  9231 ;;  status          1   45[BANK1 ] unsigned char 
  9232 ;; Return value:  Size  Location     Type
  9233 ;;                  1    wreg      unsigned char 
  9234 ;; Registers used:
  9235 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9236 ;; Tracked objects:
  9237 ;;		On entry : 0/0
  9238 ;;		On exit  : 0/0
  9239 ;;		Unchanged: 0/0
  9240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9241 ;;      Params:         0       2       0       0       0       0       0       0       0
  9242 ;;      Locals:         0       0      16       0       0       0       0       0       0
  9243 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9244 ;;      Totals:         0       2      16       0       0       0       0       0       0
  9245 ;;Total ram usage:       18 bytes
  9246 ;; Hardware stack levels used:    1
  9247 ;; Hardware stack levels required when called:   14
  9248 ;; This function calls:
  9249 ;;		_enviaComando
  9250 ;;		_sprintf
  9251 ;; This function is called by:
  9252 ;;		_main
  9253 ;; This function uses a non-reentrant model
  9254 ;;
  9255                           
  9256                           	psect	text29
  9257  005158                     __ptext29:
  9258                           	opt stack 0
  9259  005158                     _SetAdr:
  9260                           	opt stack 16
  9261                           
  9262                           ;LoRaWanCore.c: 124: char comando[15];
  9263                           ;LoRaWanCore.c: 126: sprintf(comando, "%s %s", MAC_SET_ADR, state);
  9264                           
  9265                           ; BSR set to: 1
  9266                           ;incstack = 0
  9267  005158  0E1E               	movlw	low SetAdr@comando
  9268  00515A  0100               	movlb	0	; () banked
  9269  00515C  6FBF               	movwf	sprintf@sp& (0+255),b
  9270  00515E  0E01               	movlw	high SetAdr@comando
  9271  005160  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  9272  005162  0EEA               	movlw	low STR_28
  9273  005164  6FC1               	movwf	sprintf@f& (0+255),b
  9274  005166  0E7F               	movlw	high STR_28
  9275  005168  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  9276  00516A  0ED5               	movlw	low _MAC_SET_ADR
  9277  00516C  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  9278  00516E  0E7D               	movlw	high _MAC_SET_ADR
  9279  005170  6FC4               	movwf	(?_sprintf+5)& (0+255),b
  9280  005172  C0F1  F0C5         	movff	SetAdr@state,?_sprintf+6
  9281  005176  C0F2  F0C6         	movff	SetAdr@state+1,?_sprintf+7
  9282  00517A  EC09  F000         	call	_sprintf	;wreg free
  9283                           
  9284                           ;LoRaWanCore.c: 127: uint8_t status=enviaComando(comando,0);
  9285  00517E  0E1E               	movlw	low SetAdr@comando
  9286  005180  0100               	movlb	0	; () banked
  9287  005182  6F7C               	movwf	enviaComando@cmd& (0+255),b
  9288  005184  0E01               	movlw	high SetAdr@comando
  9289  005186  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  9290  005188  0E00               	movlw	0
  9291  00518A  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  9292  00518C  ECA5  F01A         	call	_enviaComando	;wreg free
  9293  005190  0101               	movlb	1	; () banked
  9294  005192  6F2D               	movwf	SetAdr@status& (0+255),b
  9295  005194  0012               	return	
  9296  005196                     __end_of_SetAdr:
  9297                           	opt stack 0
  9298                           tblptru	equ	0xFF8
  9299                           tblptrh	equ	0xFF7
  9300                           tblptrl	equ	0xFF6
  9301                           tablat	equ	0xFF5
  9302                           prodh	equ	0xFF4
  9303                           prodl	equ	0xFF3
  9304                           intcon	equ	0xFF2
  9305                           postinc0	equ	0xFEE
  9306                           wreg	equ	0xFE8
  9307                           indf1	equ	0xFE7
  9308                           postdec1	equ	0xFE5
  9309                           fsr1h	equ	0xFE2
  9310                           fsr1l	equ	0xFE1
  9311                           indf2	equ	0xFDF
  9312                           postinc2	equ	0xFDE
  9313                           postdec2	equ	0xFDD
  9314                           plusw2	equ	0xFDB
  9315                           fsr2h	equ	0xFDA
  9316                           fsr2l	equ	0xFD9
  9317                           status	equ	0xFD8
  9318                           
  9319 ;; *************** function _MacSave *****************
  9320 ;; Defined at:
  9321 ;;		line 139 in file "LoRaWanCore.c"
  9322 ;; Parameters:    Size  Location     Type
  9323 ;;		None
  9324 ;; Auto vars:     Size  Location     Type
  9325 ;;  comando         7  146[BANK0 ] unsigned char [7]
  9326 ;;  status          1  145[BANK0 ] unsigned char 
  9327 ;; Return value:  Size  Location     Type
  9328 ;;                  1    wreg      unsigned char 
  9329 ;; Registers used:
  9330 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9331 ;; Tracked objects:
  9332 ;;		On entry : 0/0
  9333 ;;		On exit  : 0/0
  9334 ;;		Unchanged: 0/0
  9335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9336 ;;      Params:         0       0       0       0       0       0       0       0       0
  9337 ;;      Locals:         0       8       0       0       0       0       0       0       0
  9338 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9339 ;;      Totals:         0       8       0       0       0       0       0       0       0
  9340 ;;Total ram usage:        8 bytes
  9341 ;; Hardware stack levels used:    1
  9342 ;; Hardware stack levels required when called:   14
  9343 ;; This function calls:
  9344 ;;		_enviaComando
  9345 ;;		_sprintf
  9346 ;; This function is called by:
  9347 ;;		_main
  9348 ;; This function uses a non-reentrant model
  9349 ;;
  9350                           
  9351                           	psect	text30
  9352  005246                     __ptext30:
  9353                           	opt stack 0
  9354  005246                     _MacSave:
  9355                           	opt stack 16
  9356                           
  9357                           ;LoRaWanCore.c: 140: char comando[7];
  9358                           ;LoRaWanCore.c: 142: sprintf(comando, "%s", MAC_SAVE);
  9359                           
  9360                           ; BSR set to: 1
  9361                           ;incstack = 0
  9362  005246  0EF2               	movlw	low MacSave@comando
  9363  005248  0100               	movlb	0	; () banked
  9364  00524A  6FBF               	movwf	sprintf@sp& (0+255),b
  9365  00524C  0E00               	movlw	high MacSave@comando
  9366  00524E  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  9367  005250  0EED               	movlw	low (STR_28+3)
  9368  005252  6FC1               	movwf	sprintf@f& (0+255),b
  9369  005254  0E7F               	movlw	high (STR_28+3)
  9370  005256  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  9371  005258  0EF6               	movlw	low _MAC_SAVE
  9372  00525A  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  9373  00525C  0E7D               	movlw	high _MAC_SAVE
  9374  00525E  6FC4               	movwf	(?_sprintf+5)& (0+255),b
  9375  005260  EC09  F000         	call	_sprintf	;wreg free
  9376                           
  9377                           ;LoRaWanCore.c: 143: uint8_t status=enviaComando(comando,0);
  9378  005264  0EF2               	movlw	low MacSave@comando
  9379  005266  0100               	movlb	0	; () banked
  9380  005268  6F7C               	movwf	enviaComando@cmd& (0+255),b
  9381  00526A  0E00               	movlw	high MacSave@comando
  9382  00526C  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  9383  00526E  0E00               	movlw	0
  9384  005270  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  9385  005272  ECA5  F01A         	call	_enviaComando	;wreg free
  9386  005276  0100               	movlb	0	; () banked
  9387  005278  6FF1               	movwf	MacSave@status& (0+255),b
  9388  00527A  0012               	return	
  9389  00527C                     __end_of_MacSave:
  9390                           	opt stack 0
  9391                           tblptru	equ	0xFF8
  9392                           tblptrh	equ	0xFF7
  9393                           tblptrl	equ	0xFF6
  9394                           tablat	equ	0xFF5
  9395                           prodh	equ	0xFF4
  9396                           prodl	equ	0xFF3
  9397                           intcon	equ	0xFF2
  9398                           postinc0	equ	0xFEE
  9399                           wreg	equ	0xFE8
  9400                           indf1	equ	0xFE7
  9401                           postdec1	equ	0xFE5
  9402                           fsr1h	equ	0xFE2
  9403                           fsr1l	equ	0xFE1
  9404                           indf2	equ	0xFDF
  9405                           postinc2	equ	0xFDE
  9406                           postdec2	equ	0xFDD
  9407                           plusw2	equ	0xFDB
  9408                           fsr2h	equ	0xFDA
  9409                           fsr2l	equ	0xFD9
  9410                           status	equ	0xFD8
  9411                           
  9412 ;; *************** function _DataRate *****************
  9413 ;; Defined at:
  9414 ;;		line 163 in file "LoRaWanCore.c"
  9415 ;; Parameters:    Size  Location     Type
  9416 ;;  dr              2  145[BANK0 ] unsigned int 
  9417 ;; Auto vars:     Size  Location     Type
  9418 ;;  comando        12   32[BANK1 ] unsigned char [12]
  9419 ;;  status          2   30[BANK1 ] unsigned int 
  9420 ;; Return value:  Size  Location     Type
  9421 ;;                  1    wreg      unsigned char 
  9422 ;; Registers used:
  9423 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9424 ;; Tracked objects:
  9425 ;;		On entry : 0/0
  9426 ;;		On exit  : 0/0
  9427 ;;		Unchanged: 0/0
  9428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9429 ;;      Params:         0       2       0       0       0       0       0       0       0
  9430 ;;      Locals:         0       0      14       0       0       0       0       0       0
  9431 ;;      Temps:          0       1       0       0       0       0       0       0       0
  9432 ;;      Totals:         0       3      14       0       0       0       0       0       0
  9433 ;;Total ram usage:       17 bytes
  9434 ;; Hardware stack levels used:    1
  9435 ;; Hardware stack levels required when called:   14
  9436 ;; This function calls:
  9437 ;;		_enviaComando
  9438 ;;		_sprintf
  9439 ;; This function is called by:
  9440 ;;		_main
  9441 ;; This function uses a non-reentrant model
  9442 ;;
  9443                           
  9444                           	psect	text31
  9445  004F0E                     __ptext31:
  9446                           	opt stack 0
  9447  004F0E                     _DataRate:
  9448                           	opt stack 16
  9449                           
  9450                           ;LoRaWanCore.c: 164: char comando[12];
  9451                           ;LoRaWanCore.c: 166: sprintf(comando, "%s %d", MAC_SET_DR, dr);
  9452                           
  9453                           ; BSR set to: 0
  9454                           ;incstack = 0
  9455  004F0E  0E20               	movlw	low DataRate@comando
  9456  004F10  0100               	movlb	0	; () banked
  9457  004F12  6FBF               	movwf	sprintf@sp& (0+255),b
  9458  004F14  0E01               	movlw	high DataRate@comando
  9459  004F16  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  9460  004F18  0EE4               	movlw	low STR_37
  9461  004F1A  6FC1               	movwf	sprintf@f& (0+255),b
  9462  004F1C  0E7F               	movlw	high STR_37
  9463  004F1E  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  9464  004F20  0EDD               	movlw	low _MAC_SET_DR
  9465  004F22  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  9466  004F24  0E7D               	movlw	high _MAC_SET_DR
  9467  004F26  6FC4               	movwf	(?_sprintf+5)& (0+255),b
  9468  004F28  C0F1  F0C5         	movff	DataRate@dr,?_sprintf+6
  9469  004F2C  C0F2  F0C6         	movff	DataRate@dr+1,?_sprintf+7
  9470  004F30  EC09  F000         	call	_sprintf	;wreg free
  9471                           
  9472                           ;LoRaWanCore.c: 167: uint16_t status=enviaComando(comando,0);
  9473  004F34  0E20               	movlw	low DataRate@comando
  9474  004F36  0100               	movlb	0	; () banked
  9475  004F38  6F7C               	movwf	enviaComando@cmd& (0+255),b
  9476  004F3A  0E01               	movlw	high DataRate@comando
  9477  004F3C  6F7D               	movwf	(enviaComando@cmd+1)& (0+255),b
  9478  004F3E  0E00               	movlw	0
  9479  004F40  6F7E               	movwf	enviaComando@tipoComando& (0+255),b
  9480  004F42  ECA5  F01A         	call	_enviaComando	;wreg free
  9481  004F46  0100               	movlb	0	; () banked
  9482  004F48  6FF3               	movwf	??_DataRate& (0+255),b
  9483  004F4A  51F3               	movf	??_DataRate& (0+255),w,b
  9484  004F4C  0101               	movlb	1	; () banked
  9485  004F4E  6F1E               	movwf	DataRate@status& (0+255),b
  9486  004F50  6B1F               	clrf	(DataRate@status+1)& (0+255),b
  9487  004F52  0012               	return	
  9488  004F54                     __end_of_DataRate:
  9489                           	opt stack 0
  9490                           tblptru	equ	0xFF8
  9491                           tblptrh	equ	0xFF7
  9492                           tblptrl	equ	0xFF6
  9493                           tablat	equ	0xFF5
  9494                           prodh	equ	0xFF4
  9495                           prodl	equ	0xFF3
  9496                           intcon	equ	0xFF2
  9497                           postinc0	equ	0xFEE
  9498                           wreg	equ	0xFE8
  9499                           indf1	equ	0xFE7
  9500                           postdec1	equ	0xFE5
  9501                           fsr1h	equ	0xFE2
  9502                           fsr1l	equ	0xFE1
  9503                           indf2	equ	0xFDF
  9504                           postinc2	equ	0xFDE
  9505                           postdec2	equ	0xFDD
  9506                           plusw2	equ	0xFDB
  9507                           fsr2h	equ	0xFDA
  9508                           fsr2l	equ	0xFD9
  9509                           status	equ	0xFD8
  9510                           
  9511 ;; *************** function _sprintf *****************
  9512 ;; Defined at:
  9513 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\doprnt.c"
  9514 ;; Parameters:    Size  Location     Type
  9515 ;;  sp              2   95[BANK0 ] PTR unsigned char 
  9516 ;;		 -> TxLoRaWan@hex(4), TxLoRaWan@comando(200), DataRate@comando(12), SetBandWidth@comando(20), 
  9517 ;;		 -> SetSpreadingFactor@comando(20), MacSave@comando(7), GetAdr@comando(10), SetAdr@comando(15), 
  9518 ;;		 -> SetChannelLoRaWan@comando(25), SetAppKey@comando(50), SetAppEUI@comando(32), SetDevEUI@comando(32), 
  9519 ;;		 -> GetDnctr@comando(100), sendError@f(30), addSensorFloat@f(30), addSensorInt@f(30), 
  9520 ;;		 -> addSensorStr@f(30), addSensorPulso@f(50), addSensorNivel@f(18), frameBuffer(150), 
  9521 ;;		 -> main@data(150), 
  9522 ;;  f               2   97[BANK0 ] PTR const unsigned char 
  9523 ;;		 -> STR_41(5), STR_40(7), STR_39(7), STR_38(6), 
  9524 ;;		 -> STR_37(6), STR_36(5), STR_35(3), STR_34(3), 
  9525 ;;		 -> STR_33(6), STR_32(10), STR_31(9), STR_30(6), 
  9526 ;;		 -> STR_29(6), STR_28(6), STR_27(3), STR_11(7), 
  9527 ;;		 -> STR_10(7), STR_9(8), STR_8(7), STR_7(20), 
  9528 ;;		 -> STR_6(10), STR_5(17), STR_4(92), 
  9529 ;; Auto vars:     Size  Location     Type
  9530 ;;  idx             1    3[BANK1 ] unsigned char 
  9531 ;;  val             4   18[BANK1 ] unsigned long 
  9532 ;;  tmpval          4   12[BANK1 ] struct .
  9533 ;;  fval            3   22[BANK1 ] struct .
  9534 ;;  flag            2   27[BANK1 ] unsigned short 
  9535 ;;  width           2   25[BANK1 ] int 
  9536 ;;  exp             2   16[BANK1 ] int 
  9537 ;;  prec            2   10[BANK1 ] int 
  9538 ;;  ap              2    8[BANK1 ] PTR void [1]
  9539 ;;		 -> ?_sprintf(2), 
  9540 ;;  len             2    6[BANK1 ] unsigned int 
  9541 ;;  cp              2    4[BANK1 ] PTR const unsigned char 
  9542 ;;		 -> STR_42(7), MAC_TX_UNCNF(9), MAC_TX_CNF(7), MAC_SET_DR(7), 
  9543 ;;		 -> MAC_SET_BW(13), MAC_SET_SF(16), MAC_SAVE(5), MAC_GET_ADR(8), 
  9544 ;;		 -> MAC_SET_ADR(8), MAC_SET_CH_STATUS(14), MAC_SET_APPKEY(11), MAC_SET_APPEUI(11), 
  9545 ;;		 -> MAC_SET_DEVEUI(11), MAC_GET_DNCTR(10), STATE_ON(3), STR_3(33), 
  9546 ;;		 -> STR_2(17), STR_1(17), STATE_OFF(4), 
  9547 ;;  c               1   29[BANK1 ] char 
  9548 ;;  d               1    0        unsigned char 
  9549 ;; Return value:  Size  Location     Type
  9550 ;;                  2   95[BANK0 ] int 
  9551 ;; Registers used:
  9552 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9553 ;; Tracked objects:
  9554 ;;		On entry : 0/0
  9555 ;;		On exit  : 0/0
  9556 ;;		Unchanged: 0/0
  9557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9558 ;;      Params:         0      44       0       0       0       0       0       0       0
  9559 ;;      Locals:         0       0      30       0       0       0       0       0       0
  9560 ;;      Temps:          0       6       0       0       0       0       0       0       0
  9561 ;;      Totals:         0      50      30       0       0       0       0       0       0
  9562 ;;Total ram usage:       80 bytes
  9563 ;; Hardware stack levels used:    1
  9564 ;; Hardware stack levels required when called:   13
  9565 ;; This function calls:
  9566 ;;		___awdiv
  9567 ;;		___ftadd
  9568 ;;		___ftge
  9569 ;;		___ftmul
  9570 ;;		___ftneg
  9571 ;;		___ftsub
  9572 ;;		___fttol
  9573 ;;		___lldiv
  9574 ;;		___llmod
  9575 ;;		___lltoft
  9576 ;;		___wmul
  9577 ;;		__div_to_l_
  9578 ;;		__tdiv_to_l_
  9579 ;;		_fround
  9580 ;;		_isdigit
  9581 ;;		_scale
  9582 ;; This function is called by:
  9583 ;;		_main
  9584 ;;		_SetDevEUI
  9585 ;;		_SetAppEUI
  9586 ;;		_SetAppKey
  9587 ;;		_SetChannelLoRaWan
  9588 ;;		_SetAdr
  9589 ;;		_MacSave
  9590 ;;		_SetSpreadingFactor
  9591 ;;		_SetBandWidth
  9592 ;;		_DataRate
  9593 ;;		_TxLoRaWan
  9594 ;;		_createFrameHeader
  9595 ;;		_addSensorNivel
  9596 ;;		_addSensorPulso
  9597 ;;		_addSensorStr
  9598 ;;		_addSensorInt
  9599 ;;		_addSensorFloat
  9600 ;;		_sendError
  9601 ;;		_GetDnctr
  9602 ;;		_GetAdr
  9603 ;; This function uses a non-reentrant model
  9604 ;;
  9605                           
  9606                           	psect	text32
  9607  000012                     __ptext32:
  9608                           	opt stack 0
  9609  000012                     _sprintf:
  9610                           	opt stack 17
  9611                           
  9612                           ;doprnt.c: 494: va_list ap;
  9613                           ;doprnt.c: 499: signed char c;
  9614                           ;doprnt.c: 501: int width;
  9615                           ;doprnt.c: 504: int prec;
  9616                           ;doprnt.c: 508: unsigned short flag;
  9617                           ;doprnt.c: 515: char d;
  9618                           ;doprnt.c: 516: double fval;
  9619                           ;doprnt.c: 517: int exp;
  9620                           ;doprnt.c: 523: union {
  9621                           ;doprnt.c: 524: unsigned long vd;
  9622                           ;doprnt.c: 525: double integ;
  9623                           ;doprnt.c: 526: } tmpval;
  9624                           ;doprnt.c: 528: unsigned long val;
  9625                           ;doprnt.c: 529: unsigned len;
  9626                           ;doprnt.c: 530: const char * cp;
  9627                           ;doprnt.c: 533: *ap = __va_start();
  9628                           
  9629                           ; BSR set to: 1
  9630                           ;incstack = 0
  9631  000012  0EC3               	movlw	low (?_sprintf+4)
  9632  000014  0101               	movlb	1	; () banked
  9633  000016  6F08               	movwf	sprintf@ap& (0+255),b
  9634  000018  0E00               	movlw	high (?_sprintf+4)
  9635  00001A  6F09               	movwf	(sprintf@ap+1)& (0+255),b
  9636                           
  9637                           ;doprnt.c: 536: while(c = *f++) {
  9638  00001C  EF45  F006         	goto	u8410
  9639  000020                     
  9640                           ; BSR set to: 1
  9641                           ;doprnt.c: 538: if(c != '%')
  9642                           
  9643                           ; BSR set to: 1
  9644  000020  0E25               	movlw	37
  9645  000022  191D               	xorwf	sprintf@c& (0+255),w,b
  9646  000024  B4D8               	btfsc	status,2,c
  9647  000026  D00B               	goto	l2643
  9648                           
  9649                           ; BSR set to: 1
  9650                           ;doprnt.c: 540: {
  9651                           ;doprnt.c: 541: ((*sp++ = (c)));
  9652  000028  C0BF  FFD9         	movff	sprintf@sp,fsr2l
  9653  00002C  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
  9654  000030  C11D  FFDF         	movff	sprintf@c,indf2
  9655                           
  9656                           ; BSR set to: 1
  9657  000034  0100               	movlb	0	; () banked
  9658  000036  4BBF               	infsnz	sprintf@sp& (0+255),f,b
  9659  000038  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
  9660                           
  9661                           ;doprnt.c: 542: continue;
  9662  00003A  EF45  F006         	goto	u8410
  9663  00003E                     l2643:
  9664                           
  9665                           ;doprnt.c: 543: }
  9666                           ;doprnt.c: 546: width = 0;
  9667                           
  9668                           ; BSR set to: 0
  9669  00003E  0E00               	movlw	0
  9670  000040  0101               	movlb	1	; () banked
  9671  000042  6F1A               	movwf	(sprintf@width+1)& (0+255),b
  9672  000044  0E00               	movlw	0
  9673  000046  6F19               	movwf	sprintf@width& (0+255),b
  9674                           
  9675                           ;doprnt.c: 548: flag = 0;
  9676  000048  0E00               	movlw	0
  9677  00004A  6F1C               	movwf	(sprintf@flag+1)& (0+255),b
  9678  00004C  0E00               	movlw	0
  9679  00004E  6F1B               	movwf	sprintf@flag& (0+255),b
  9680                           
  9681                           ; BSR set to: 1
  9682                           ;doprnt.c: 551: switch(*f) {
  9683                           
  9684                           ;doprnt.c: 550: for(;;) {
  9685  000050  D005               	goto	l2645
  9686  000052                     
  9687                           ;doprnt.c: 580: flag |= 0x04;
  9688                           
  9689                           ; BSR set to: 1
  9690  000052  0101               	movlb	1	; () banked
  9691  000054  851B               	bsf	sprintf@flag& (0+255),2,b
  9692                           
  9693                           ;doprnt.c: 581: f++;
  9694  000056  0100               	movlb	0	; () banked
  9695  000058  4BC1               	infsnz	sprintf@f& (0+255),f,b
  9696  00005A  2BC2               	incf	(sprintf@f+1)& (0+255),f,b
  9697  00005C                     l2645:
  9698                           
  9699                           ; BSR set to: 0
  9700  00005C  C0C1  FFF6         	movff	sprintf@f,tblptrl
  9701  000060  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
  9702  000064                     	if	0	;tblptru may be non-zero
  9703  000064                     	endif
  9704  000064                     	if	0	;tblptru may be non-zero
  9705  000064                     	endif
  9706  000064  0008               	tblrd		*
  9707  000066  50F5               	movf	tablat,w,c
  9708                           
  9709                           ; Switch size 1, requested type "space"
  9710                           ; Number of cases is 1, Range of values is 48 to 48
  9711                           ; switch strategies available:
  9712                           ; Name         Instructions Cycles
  9713                           ; simple_byte            4     3 (average)
  9714                           ;	Chosen strategy is simple_byte
  9715  000068  0A30               	xorlw	48	; case 48
  9716  00006A  B4D8               	btfsc	status,2,c
  9717  00006C  D7F2               	goto	l2646
  9718                           
  9719                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  9720                           
  9721                           ;doprnt.c: 586: }
  9722                           
  9723                           ;doprnt.c: 585: break;
  9724  00006E  C0C1  FFF6         	movff	sprintf@f,tblptrl
  9725  000072  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
  9726  000076                     	if	0	;tblptru may be non-zero
  9727  000076                     	endif
  9728  000076                     	if	0	;tblptru may be non-zero
  9729  000076                     	endif
  9730  000076  0008               	tblrd		*
  9731  000078  50F5               	movf	tablat,w,c
  9732  00007A  EC6B  F02A         	call	_isdigit
  9733  00007E  A0D8               	btfss	status,0,c
  9734  000080  D0B1               	goto	l2654
  9735                           
  9736                           ;doprnt.c: 598: width = 0;
  9737  000082  0E00               	movlw	0
  9738  000084  0101               	movlb	1	; () banked
  9739  000086  6F1A               	movwf	(sprintf@width+1)& (0+255),b
  9740  000088  0E00               	movlw	0
  9741  00008A  6F19               	movwf	sprintf@width& (0+255),b
  9742  00008C                     
  9743                           ;doprnt.c: 600: width *= 10;
  9744                           
  9745                           ; BSR set to: 1
  9746  00008C  C119  F06E         	movff	sprintf@width,___wmul@multiplier
  9747  000090  C11A  F06F         	movff	sprintf@width+1,___wmul@multiplier+1
  9748  000094  0E00               	movlw	0
  9749  000096  0100               	movlb	0	; () banked
  9750  000098  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9751  00009A  0E0A               	movlw	10
  9752  00009C  6F70               	movwf	___wmul@multiplicand& (0+255),b
  9753  00009E  ECE8  F029         	call	___wmul	;wreg free
  9754  0000A2  C06E  F119         	movff	?___wmul,sprintf@width
  9755  0000A6  C06F  F11A         	movff	?___wmul+1,sprintf@width+1
  9756                           
  9757                           ;doprnt.c: 601: width += *f++ - '0';
  9758  0000AA  0ED0               	movlw	208
  9759  0000AC  0100               	movlb	0	; () banked
  9760  0000AE  6FEB               	movwf	??_sprintf& (0+255),b
  9761  0000B0  0EFF               	movlw	255
  9762  0000B2  6FEC               	movwf	(??_sprintf+1)& (0+255),b
  9763  0000B4  C0C1  FFF6         	movff	sprintf@f,tblptrl
  9764  0000B8  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
  9765  0000BC                     	if	0	;tblptru may be non-zero
  9766  0000BC                     	endif
  9767  0000BC                     	if	0	;tblptru may be non-zero
  9768  0000BC                     	endif
  9769  0000BC  0008               	tblrd		*
  9770  0000BE  50F5               	movf	tablat,w,c
  9771  0000C0  6FED               	movwf	(??_sprintf+2)& (0+255),b
  9772  0000C2  6BEE               	clrf	(??_sprintf+3)& (0+255),b
  9773  0000C4  51EB               	movf	??_sprintf& (0+255),w,b
  9774  0000C6  27ED               	addwf	(??_sprintf+2)& (0+255),f,b
  9775  0000C8  51EC               	movf	(??_sprintf+1)& (0+255),w,b
  9776  0000CA  23EE               	addwfc	(??_sprintf+3)& (0+255),f,b
  9777  0000CC  51ED               	movf	(??_sprintf+2)& (0+255),w,b
  9778  0000CE  0101               	movlb	1	; () banked
  9779  0000D0  2719               	addwf	sprintf@width& (0+255),f,b
  9780  0000D2  0100               	movlb	0	; () banked
  9781  0000D4  51EE               	movf	(??_sprintf+3)& (0+255),w,b
  9782  0000D6  0101               	movlb	1	; () banked
  9783  0000D8  231A               	addwfc	(sprintf@width+1)& (0+255),f,b
  9784                           
  9785                           ; BSR set to: 1
  9786  0000DA  0100               	movlb	0	; () banked
  9787  0000DC  4BC1               	infsnz	sprintf@f& (0+255),f,b
  9788  0000DE  2BC2               	incf	(sprintf@f+1)& (0+255),f,b
  9789                           
  9790                           ; BSR set to: 0
  9791                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  9792  0000E0  C0C1  FFF6         	movff	sprintf@f,tblptrl
  9793  0000E4  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
  9794  0000E8                     	if	0	;tblptru may be non-zero
  9795  0000E8                     	endif
  9796  0000E8                     	if	0	;tblptru may be non-zero
  9797  0000E8                     	endif
  9798  0000E8  0008               	tblrd		*
  9799  0000EA  50F5               	movf	tablat,w,c
  9800  0000EC  EC6B  F02A         	call	_isdigit
  9801  0000F0  A0D8               	btfss	status,0,c
  9802  0000F2  D078               	goto	l2654
  9803  0000F4  D7CB               	goto	l2651
  9804  0000F6                     
  9805                           ;doprnt.c: 643: flag |= 0x10;
  9806  0000F6  0101               	movlb	1	; () banked
  9807  0000F8  891B               	bsf	sprintf@flag& (0+255),4,b
  9808                           
  9809                           ;doprnt.c: 644: goto loop;
  9810  0000FA  D074               	goto	l2654
  9811  0000FC                     
  9812                           ; BSR set to: 1
  9813                           ;doprnt.c: 663: flag |= 0x400;
  9814                           
  9815                           ; BSR set to: 1
  9816  0000FC  851C               	bsf	(sprintf@flag+1)& (0+255),2,b
  9817                           
  9818                           ; BSR set to: 1
  9819                           ;doprnt.c: 698: case 'i':
  9820                           ;doprnt.c: 699: break;
  9821                           
  9822                           ; BSR set to: 1
  9823                           
  9824                           ;doprnt.c: 697: case 'd':
  9825                           
  9826                           ;doprnt.c: 664: break;
  9827  0000FE  D09C               	goto	l2659
  9828  000100                     
  9829                           ; BSR set to: 1
  9830                           ;doprnt.c: 718: case 'x':
  9831                           ;doprnt.c: 721: flag |= 0x80;
  9832                           
  9833                           ; BSR set to: 1
  9834                           
  9835                           ; BSR set to: 1
  9836  000100  8F1B               	bsf	sprintf@flag& (0+255),7,b
  9837                           
  9838                           ;doprnt.c: 723: break;
  9839  000102  D09A               	goto	l2659
  9840  000104                     
  9841                           ; BSR set to: 1
  9842                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  9843                           
  9844                           ; BSR set to: 1
  9845  000104  C108  FFD9         	movff	sprintf@ap,fsr2l
  9846  000108  C109  FFDA         	movff	sprintf@ap+1,fsr2h
  9847  00010C  CFDE F104          	movff	postinc2,sprintf@cp
  9848  000110  CFDD F105          	movff	postdec2,sprintf@cp+1
  9849                           
  9850                           ; BSR set to: 1
  9851  000114  0E02               	movlw	2
  9852  000116  2708               	addwf	sprintf@ap& (0+255),f,b
  9853  000118  0E00               	movlw	0
  9854  00011A  2309               	addwfc	(sprintf@ap+1)& (0+255),f,b
  9855                           
  9856                           ; BSR set to: 1
  9857                           ;doprnt.c: 740: if(!cp)
  9858  00011C  5104               	movf	sprintf@cp& (0+255),w,b
  9859  00011E  1105               	iorwf	(sprintf@cp+1)& (0+255),w,b
  9860  000120  A4D8               	btfss	status,2,c
  9861  000122  D004               	goto	l2665
  9862                           
  9863                           ; BSR set to: 1
  9864                           ;doprnt.c: 741: cp = "(null)";
  9865  000124  0EB3               	movlw	low STR_42
  9866  000126  6F04               	movwf	sprintf@cp& (0+255),b
  9867  000128  0E7F               	movlw	high STR_42
  9868  00012A  6F05               	movwf	(sprintf@cp+1)& (0+255),b
  9869  00012C                     l2665:
  9870                           
  9871                           ; BSR set to: 1
  9872                           ;doprnt.c: 745: len = 0;
  9873                           
  9874                           ; BSR set to: 1
  9875  00012C  0E00               	movlw	0
  9876  00012E  6F07               	movwf	(sprintf@len+1)& (0+255),b
  9877  000130  0E00               	movlw	0
  9878  000132  6F06               	movwf	sprintf@len& (0+255),b
  9879                           
  9880                           ;doprnt.c: 746: while(cp[len])
  9881  000134  D003               	goto	l2666
  9882  000136                     
  9883                           ;doprnt.c: 747: len++;
  9884                           
  9885                           ; BSR set to: 1
  9886  000136  0101               	movlb	1	; () banked
  9887  000138  4B06               	infsnz	sprintf@len& (0+255),f,b
  9888  00013A  2B07               	incf	(sprintf@len+1)& (0+255),f,b
  9889  00013C                     l2666:
  9890                           
  9891                           ; BSR set to: 1
  9892                           
  9893                           ; BSR set to: 1
  9894  00013C  5106               	movf	sprintf@len& (0+255),w,b
  9895  00013E  2504               	addwf	sprintf@cp& (0+255),w,b
  9896  000140  0100               	movlb	0	; () banked
  9897  000142  6FEB               	movwf	??_sprintf& (0+255),b
  9898  000144  0101               	movlb	1	; () banked
  9899  000146  5107               	movf	(sprintf@len+1)& (0+255),w,b
  9900  000148  2105               	addwfc	(sprintf@cp+1)& (0+255),w,b
  9901  00014A  0100               	movlb	0	; () banked
  9902  00014C  6FEC               	movwf	(??_sprintf+1)& (0+255),b
  9903  00014E  C0EB  FFF6         	movff	??_sprintf,tblptrl
  9904  000152  C0EC  FFF7         	movff	??_sprintf+1,tblptrh
  9905  000156                     	if	0	;tblptru may be non-zero
  9906  000156                     	endif
  9907  000156                     	if	0	;tblptru may be non-zero
  9908  000156                     	endif
  9909  000156  0008               	tblrd		*
  9910  000158  50F5               	movf	tablat,w,c
  9911  00015A  0900               	iorlw	0
  9912  00015C  A4D8               	btfss	status,2,c
  9913  00015E  D7EB               	goto	l2667
  9914                           
  9915                           ; BSR set to: 0
  9916                           ;doprnt.c: 757: if(width > len)
  9917                           
  9918                           ; BSR set to: 0
  9919  000160  0101               	movlb	1	; () banked
  9920  000162  5119               	movf	sprintf@width& (0+255),w,b
  9921  000164  5D06               	subwf	sprintf@len& (0+255),w,b
  9922  000166  511A               	movf	(sprintf@width+1)& (0+255),w,b
  9923  000168  5907               	subwfb	(sprintf@len+1)& (0+255),w,b
  9924  00016A  B0D8               	btfsc	status,0,c
  9925  00016C  D005               	goto	l2669
  9926                           
  9927                           ; BSR set to: 1
  9928                           ;doprnt.c: 758: width -= len;
  9929  00016E  5106               	movf	sprintf@len& (0+255),w,b
  9930  000170  5F19               	subwf	sprintf@width& (0+255),f,b
  9931  000172  5107               	movf	(sprintf@len+1)& (0+255),w,b
  9932  000174  5B1A               	subwfb	(sprintf@width+1)& (0+255),f,b
  9933  000176  D00E               	goto	l2671
  9934  000178                     l2669:
  9935                           
  9936                           ; BSR set to: 1
  9937                           ;doprnt.c: 759: else
  9938                           ;doprnt.c: 760: width = 0;
  9939                           
  9940                           ; BSR set to: 1
  9941  000178  0E00               	movlw	0
  9942  00017A  6F1A               	movwf	(sprintf@width+1)& (0+255),b
  9943  00017C  0E00               	movlw	0
  9944  00017E  6F19               	movwf	sprintf@width& (0+255),b
  9945                           
  9946                           ; BSR set to: 1
  9947                           ;doprnt.c: 764: while(width--)
  9948  000180  D009               	goto	l2671
  9949  000182                     l8964:
  9950                           
  9951                           ; BSR set to: 1
  9952                           ;doprnt.c: 765: ((*sp++ = (' ')));
  9953  000182  C0BF  FFD9         	movff	sprintf@sp,fsr2l
  9954  000186  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
  9955  00018A  0E20               	movlw	32
  9956  00018C  6EDF               	movwf	indf2,c
  9957                           
  9958                           ; BSR set to: 1
  9959  00018E  0100               	movlb	0	; () banked
  9960  000190  4BBF               	infsnz	sprintf@sp& (0+255),f,b
  9961  000192  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
  9962  000194                     l2671:
  9963                           
  9964                           ; BSR set to: 0
  9965  000194  0101               	movlb	1	; () banked
  9966  000196  0719               	decf	sprintf@width& (0+255),f,b
  9967  000198  A0D8               	btfss	status,0,c
  9968  00019A  071A               	decf	(sprintf@width+1)& (0+255),f,b
  9969  00019C  2919               	incf	sprintf@width& (0+255),w,b
  9970  00019E  E1F1               	bnz	l8964
  9971  0001A0  291A               	incf	(sprintf@width+1)& (0+255),w,b
  9972  0001A2  B4D8               	btfsc	status,2,c
  9973  0001A4  D011               	goto	l2674
  9974  0001A6  D7ED               	goto	l2672
  9975  0001A8                     l8970:
  9976                           
  9977                           ; BSR set to: 1
  9978                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
  9979  0001A8  C104  FFF6         	movff	sprintf@cp,tblptrl
  9980  0001AC  C105  FFF7         	movff	sprintf@cp+1,tblptrh
  9981  0001B0                     	if	0	;tblptru may be non-zero
  9982  0001B0                     	endif
  9983  0001B0                     	if	0	;tblptru may be non-zero
  9984  0001B0                     	endif
  9985  0001B0  C0BF  FFD9         	movff	sprintf@sp,fsr2l
  9986  0001B4  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
  9987  0001B8  0008               	tblrd		*
  9988  0001BA  CFF5 FFDF          	movff	tablat,indf2
  9989                           
  9990                           ; BSR set to: 1
  9991  0001BE  4B04               	infsnz	sprintf@cp& (0+255),f,b
  9992  0001C0  2B05               	incf	(sprintf@cp+1)& (0+255),f,b
  9993                           
  9994                           ; BSR set to: 1
  9995  0001C2  0100               	movlb	0	; () banked
  9996  0001C4  4BBF               	infsnz	sprintf@sp& (0+255),f,b
  9997  0001C6  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
  9998  0001C8                     l2674:
  9999                           
 10000                           ; BSR set to: 0
 10001  0001C8  0101               	movlb	1	; () banked
 10002  0001CA  0706               	decf	sprintf@len& (0+255),f,b
 10003  0001CC  A0D8               	btfss	status,0,c
 10004  0001CE  0707               	decf	(sprintf@len+1)& (0+255),f,b
 10005  0001D0  2906               	incf	sprintf@len& (0+255),w,b
 10006  0001D2  E1EA               	bnz	l8970
 10007  0001D4  2907               	incf	(sprintf@len+1)& (0+255),w,b
 10008  0001D6  B4D8               	btfsc	status,2,c
 10009  0001D8  EF45  F006         	goto	u8410
 10010  0001DC  D7E5               	goto	l2675
 10011  0001DE                     
 10012                           ; BSR set to: 1
 10013                           ;doprnt.c: 818: flag |= 0xC0;
 10014                           
 10015                           ; BSR set to: 1
 10016  0001DE  0EC0               	movlw	192
 10017  0001E0  131B               	iorwf	sprintf@flag& (0+255),f,b
 10018                           
 10019                           ; BSR set to: 1
 10020                           ;doprnt.c: 822: }
 10021                           
 10022                           ;doprnt.c: 819: break;
 10023  0001E2  D02A               	goto	l2659
 10024  0001E4                     l2654:
 10025                           
 10026                           ; BSR set to: 1
 10027  0001E4  C0C1  FFF6         	movff	sprintf@f,tblptrl
 10028  0001E8  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
 10029  0001EC  0100               	movlb	0	; () banked
 10030  0001EE  4BC1               	infsnz	sprintf@f& (0+255),f,b
 10031  0001F0  2BC2               	incf	(sprintf@f+1)& (0+255),f,b
 10032  0001F2                     	if	0	;tblptru may be non-zero
 10033  0001F2                     	endif
 10034  0001F2                     	if	0	;tblptru may be non-zero
 10035  0001F2                     	endif
 10036  0001F2  0008               	tblrd		*
 10037  0001F4  CFF5 F11D          	movff	tablat,sprintf@c
 10038  0001F8  0101               	movlb	1	; () banked
 10039  0001FA  511D               	movf	sprintf@c& (0+255),w,b
 10040                           
 10041                           ; Switch size 1, requested type "space"
 10042                           ; Number of cases is 9, Range of values is 0 to 120
 10043                           ; switch strategies available:
 10044                           ; Name         Instructions Cycles
 10045                           ; simple_byte           28    15 (average)
 10046                           ;	Chosen strategy is simple_byte
 10047  0001FC  0A00               	xorlw	0	; case 0
 10048  0001FE  B4D8               	btfsc	status,2,c
 10049  000200  EF54  F006         	goto	u8420
 10050  000204  0A58               	xorlw	88	; case 88
 10051  000206  B4D8               	btfsc	status,2,c
 10052  000208  D77B               	goto	l2662
 10053  00020A  0A3C               	xorlw	60	; case 100
 10054  00020C  B4D8               	btfsc	status,2,c
 10055  00020E  D014               	goto	l2659
 10056  000210  0A02               	xorlw	2	; case 102
 10057  000212  B4D8               	btfsc	status,2,c
 10058  000214  D773               	goto	l2658
 10059  000216  0A0F               	xorlw	15	; case 105
 10060  000218  B4D8               	btfsc	status,2,c
 10061  00021A  D00E               	goto	l2659
 10062  00021C  0A05               	xorlw	5	; case 108
 10063  00021E  B4D8               	btfsc	status,2,c
 10064  000220  D76A               	goto	l2657
 10065  000222  0A1F               	xorlw	31	; case 115
 10066  000224  B4D8               	btfsc	status,2,c
 10067  000226  D76E               	goto	l2664
 10068  000228  0A06               	xorlw	6	; case 117
 10069  00022A  B4D8               	btfsc	status,2,c
 10070  00022C  D7D8               	goto	l2678
 10071  00022E  0A0D               	xorlw	13	; case 120
 10072  000230  B4D8               	btfsc	status,2,c
 10073  000232  D766               	goto	l2662
 10074  000234  EF45  F006         	goto	u8410
 10075  000238                     l2659:
 10076                           
 10077                           ; BSR set to: 1
 10078                           ;doprnt.c: 825: if(flag & (0x700)) {
 10079                           
 10080                           ; BSR set to: 1
 10081  000238  0E07               	movlw	7
 10082  00023A  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 10083  00023C  B4D8               	btfsc	status,2,c
 10084  00023E  D35D               	goto	l2679
 10085                           
 10086                           ; BSR set to: 1
 10087                           ;doprnt.c: 829: prec = 6;
 10088  000240  0E00               	movlw	0
 10089  000242  6F0B               	movwf	(sprintf@prec+1)& (0+255),b
 10090  000244  0E06               	movlw	6
 10091  000246  6F0A               	movwf	sprintf@prec& (0+255),b
 10092                           
 10093                           ; BSR set to: 1
 10094                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 10095  000248  C108  FFD9         	movff	sprintf@ap,fsr2l
 10096  00024C  C109  FFDA         	movff	sprintf@ap+1,fsr2h
 10097  000250  CFDE F116          	movff	postinc2,sprintf@fval
 10098  000254  CFDE F117          	movff	postinc2,sprintf@fval+1
 10099  000258  CFDD F118          	movff	postdec2,sprintf@fval+2
 10100                           
 10101                           ; BSR set to: 1
 10102  00025C  0E03               	movlw	3
 10103  00025E  2708               	addwf	sprintf@ap& (0+255),f,b
 10104  000260  0E00               	movlw	0
 10105  000262  2309               	addwfc	(sprintf@ap+1)& (0+255),f,b
 10106                           
 10107                           ; BSR set to: 1
 10108                           ;doprnt.c: 831: if(fval < 0.0) {
 10109  000264  AF18               	btfss	(sprintf@fval+2)& (0+255),7,b
 10110  000266  D011               	goto	l2680
 10111                           
 10112                           ; BSR set to: 1
 10113                           ;doprnt.c: 832: fval = -fval;
 10114  000268  C116  F060         	movff	sprintf@fval,___ftneg@f1
 10115  00026C  C117  F061         	movff	sprintf@fval+1,___ftneg@f1+1
 10116  000270  C118  F062         	movff	sprintf@fval+2,___ftneg@f1+2
 10117  000274  EC0F  F02A         	call	___ftneg	;wreg free
 10118  000278  C060  F116         	movff	?___ftneg,sprintf@fval
 10119  00027C  C061  F117         	movff	?___ftneg+1,sprintf@fval+1
 10120  000280  C062  F118         	movff	?___ftneg+2,sprintf@fval+2
 10121                           
 10122                           ;doprnt.c: 833: flag |= 0x03;
 10123  000284  0E03               	movlw	3
 10124  000286  0101               	movlb	1	; () banked
 10125  000288  131B               	iorwf	sprintf@flag& (0+255),f,b
 10126  00028A                     l2680:
 10127                           
 10128                           ; BSR set to: 1
 10129                           ;doprnt.c: 834: }
 10130                           ;doprnt.c: 835: exp = 0;
 10131                           
 10132                           ; BSR set to: 1
 10133  00028A  0E00               	movlw	0
 10134  00028C  6F11               	movwf	(sprintf@exp+1)& (0+255),b
 10135  00028E  0E00               	movlw	0
 10136  000290  6F10               	movwf	sprintf@exp& (0+255),b
 10137                           
 10138                           ; BSR set to: 1
 10139                           ;doprnt.c: 836: if( fval!=0) {
 10140  000292  5116               	movf	sprintf@fval& (0+255),w,b
 10141  000294  1117               	iorwf	(sprintf@fval+1)& (0+255),w,b
 10142  000296  1118               	iorwf	(sprintf@fval+2)& (0+255),w,b
 10143  000298  B4D8               	btfsc	status,2,c
 10144  00029A  D090               	goto	l2685
 10145                           
 10146                           ; BSR set to: 1
 10147                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 10148  00029C  0E82               	movlw	130
 10149  00029E  0100               	movlb	0	; () banked
 10150  0002A0  6FEB               	movwf	??_sprintf& (0+255),b
 10151  0002A2  0EFF               	movlw	255
 10152  0002A4  6FEC               	movwf	(??_sprintf+1)& (0+255),b
 10153  0002A6  C116  F0ED         	movff	sprintf@fval,??_sprintf+2
 10154  0002AA  C117  F0EE         	movff	sprintf@fval+1,??_sprintf+3
 10155  0002AE  C118  F0EF         	movff	sprintf@fval+2,??_sprintf+4
 10156  0002B2  C119  F0F0         	movff	sprintf@fval+3,??_sprintf+5
 10157  0002B6  0E10               	movlw	16
 10158  0002B8  D005               	goto	u7950
 10159  0002BA                     u7955:
 10160  0002BA  90D8               	bcf	status,0,c
 10161  0002BC  33F0               	rrcf	(??_sprintf+5)& (0+255),f,b
 10162  0002BE  33EF               	rrcf	(??_sprintf+4)& (0+255),f,b
 10163  0002C0  33EE               	rrcf	(??_sprintf+3)& (0+255),f,b
 10164  0002C2  33ED               	rrcf	(??_sprintf+2)& (0+255),f,b
 10165  0002C4                     u7950:
 10166  0002C4  2EE8               	decfsz	wreg,f,c
 10167  0002C6  D7F9               	goto	u7955
 10168  0002C8  51ED               	movf	(??_sprintf+2)& (0+255),w,b
 10169  0002CA  25EB               	addwf	??_sprintf& (0+255),w,b
 10170  0002CC  0101               	movlb	1	; () banked
 10171  0002CE  6F10               	movwf	sprintf@exp& (0+255),b
 10172  0002D0  0E00               	movlw	0
 10173  0002D2  0100               	movlb	0	; () banked
 10174  0002D4  21EC               	addwfc	(??_sprintf+1)& (0+255),w,b
 10175  0002D6  0101               	movlb	1	; () banked
 10176  0002D8  6F11               	movwf	(sprintf@exp+1)& (0+255),b
 10177                           
 10178                           ; BSR set to: 1
 10179                           ;doprnt.c: 838: exp--;
 10180  0002DA  0710               	decf	sprintf@exp& (0+255),f,b
 10181  0002DC  A0D8               	btfss	status,0,c
 10182  0002DE  0711               	decf	(sprintf@exp+1)& (0+255),f,b
 10183                           
 10184                           ; BSR set to: 1
 10185                           ;doprnt.c: 839: exp *= 3;
 10186  0002E0  C110  F06E         	movff	sprintf@exp,___wmul@multiplier
 10187  0002E4  C111  F06F         	movff	sprintf@exp+1,___wmul@multiplier+1
 10188  0002E8  0E00               	movlw	0
 10189  0002EA  0100               	movlb	0	; () banked
 10190  0002EC  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10191  0002EE  0E03               	movlw	3
 10192  0002F0  6F70               	movwf	___wmul@multiplicand& (0+255),b
 10193  0002F2  ECE8  F029         	call	___wmul	;wreg free
 10194  0002F6  C06E  F110         	movff	?___wmul,sprintf@exp
 10195  0002FA  C06F  F111         	movff	?___wmul+1,sprintf@exp+1
 10196                           
 10197                           ;doprnt.c: 840: exp /= 10;
 10198  0002FE  C110  F066         	movff	sprintf@exp,___awdiv@dividend
 10199  000302  C111  F067         	movff	sprintf@exp+1,___awdiv@dividend+1
 10200  000306  0E00               	movlw	0
 10201  000308  0100               	movlb	0	; () banked
 10202  00030A  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 10203  00030C  0E0A               	movlw	10
 10204  00030E  6F68               	movwf	___awdiv@divisor& (0+255),b
 10205  000310  ECCD  F023         	call	___awdiv	;wreg free
 10206  000314  C066  F110         	movff	?___awdiv,sprintf@exp
 10207  000318  C067  F111         	movff	?___awdiv+1,sprintf@exp+1
 10208                           
 10209                           ;doprnt.c: 841: if(exp < 0)
 10210  00031C  0101               	movlb	1	; () banked
 10211  00031E  AF11               	btfss	(sprintf@exp+1)& (0+255),7,b
 10212  000320  D003               	goto	l2682
 10213                           
 10214                           ; BSR set to: 1
 10215                           ;doprnt.c: 842: exp--;
 10216  000322  0710               	decf	sprintf@exp& (0+255),f,b
 10217  000324  A0D8               	btfss	status,0,c
 10218  000326  0711               	decf	(sprintf@exp+1)& (0+255),f,b
 10219  000328                     l2682:
 10220                           
 10221                           ; BSR set to: 1
 10222                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 10223                           
 10224                           ; BSR set to: 1
 10225  000328  5110               	movf	sprintf@exp& (0+255),w,b
 10226  00032A  0800               	sublw	0
 10227  00032C  EC53  F00B         	call	_scale
 10228  000330  C08F  F10C         	movff	?_scale,sprintf@tmpval
 10229  000334  C090  F10D         	movff	?_scale+1,sprintf@tmpval+1
 10230  000338  C091  F10E         	movff	?_scale+2,sprintf@tmpval+2
 10231                           
 10232                           ;doprnt.c: 847: tmpval.integ *= fval;
 10233  00033C  C10C  F080         	movff	sprintf@tmpval,___ftmul@f1
 10234  000340  C10D  F081         	movff	sprintf@tmpval+1,___ftmul@f1+1
 10235  000344  C10E  F082         	movff	sprintf@tmpval+2,___ftmul@f1+2
 10236  000348  C116  F083         	movff	sprintf@fval,___ftmul@f2
 10237  00034C  C117  F084         	movff	sprintf@fval+1,___ftmul@f2+1
 10238  000350  C118  F085         	movff	sprintf@fval+2,___ftmul@f2+2
 10239  000354  ECA2  F01C         	call	___ftmul	;wreg free
 10240  000358  C080  F10C         	movff	?___ftmul,sprintf@tmpval
 10241  00035C  C081  F10D         	movff	?___ftmul+1,sprintf@tmpval+1
 10242  000360  C082  F10E         	movff	?___ftmul+2,sprintf@tmpval+2
 10243                           
 10244                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 10245  000364  C10C  F060         	movff	sprintf@tmpval,___ftge@ff1
 10246  000368  C10D  F061         	movff	sprintf@tmpval+1,___ftge@ff1+1
 10247  00036C  C10E  F062         	movff	sprintf@tmpval+2,___ftge@ff1+2
 10248  000370  0E00               	movlw	0
 10249  000372  0100               	movlb	0	; () banked
 10250  000374  6F63               	movwf	___ftge@ff2& (0+255),b
 10251  000376  0E80               	movlw	128
 10252  000378  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 10253  00037A  0E3F               	movlw	63
 10254  00037C  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 10255  00037E  EC3B  F023         	call	___ftge	;wreg free
 10256  000382  0100               	movlb	0	; () banked
 10257  000384  B0D8               	btfsc	status,0,c
 10258  000386  D005               	goto	l2683
 10259                           
 10260                           ; BSR set to: 0
 10261                           ;doprnt.c: 849: exp--;
 10262  000388  0101               	movlb	1	; () banked
 10263  00038A  0710               	decf	sprintf@exp& (0+255),f,b
 10264  00038C  A0D8               	btfss	status,0,c
 10265  00038E  0711               	decf	(sprintf@exp+1)& (0+255),f,b
 10266  000390  D015               	goto	l2685
 10267  000392                     l2683:
 10268                           
 10269                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 10270                           
 10271                           ; BSR set to: 1
 10272  000392  C10C  F060         	movff	sprintf@tmpval,___ftge@ff1
 10273  000396  C10D  F061         	movff	sprintf@tmpval+1,___ftge@ff1+1
 10274  00039A  C10E  F062         	movff	sprintf@tmpval+2,___ftge@ff1+2
 10275  00039E  0E00               	movlw	0
 10276  0003A0  0100               	movlb	0	; () banked
 10277  0003A2  6F63               	movwf	___ftge@ff2& (0+255),b
 10278  0003A4  0E20               	movlw	32
 10279  0003A6  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 10280  0003A8  0E41               	movlw	65
 10281  0003AA  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 10282  0003AC  EC3B  F023         	call	___ftge	;wreg free
 10283  0003B0  0100               	movlb	0	; () banked
 10284  0003B2  A0D8               	btfss	status,0,c
 10285  0003B4  D003               	goto	l2685
 10286                           
 10287                           ; BSR set to: 0
 10288                           ;doprnt.c: 851: exp++;
 10289  0003B6  0101               	movlb	1	; () banked
 10290  0003B8  4B10               	infsnz	sprintf@exp& (0+255),f,b
 10291  0003BA  2B11               	incf	(sprintf@exp+1)& (0+255),f,b
 10292  0003BC                     l2685:
 10293                           
 10294                           ;doprnt.c: 852: }
 10295                           ;doprnt.c: 1112: if(prec <= 12)
 10296                           
 10297                           ; BSR set to: 1
 10298                           
 10299                           ; BSR set to: 1
 10300                           
 10301                           ; BSR set to: 1
 10302  0003BC  0101               	movlb	1	; () banked
 10303  0003BE  BF0B               	btfsc	(sprintf@prec+1)& (0+255),7,b
 10304  0003C0  D006               	goto	u7990
 10305  0003C2  510B               	movf	(sprintf@prec+1)& (0+255),w,b
 10306  0003C4  E11B               	bnz	l9030
 10307  0003C6  0E0D               	movlw	13
 10308  0003C8  5D0A               	subwf	sprintf@prec& (0+255),w,b
 10309  0003CA  B0D8               	btfsc	status,0,c
 10310  0003CC  D017               	goto	l2686
 10311  0003CE                     u7990:
 10312                           
 10313                           ; BSR set to: 1
 10314                           ;doprnt.c: 1113: fval += fround(prec);
 10315  0003CE  C116  F074         	movff	sprintf@fval,___ftadd@f1
 10316  0003D2  C117  F075         	movff	sprintf@fval+1,___ftadd@f1+1
 10317  0003D6  C118  F076         	movff	sprintf@fval+2,___ftadd@f1+2
 10318  0003DA  510A               	movf	sprintf@prec& (0+255),w,b
 10319  0003DC  ECE4  F011         	call	_fround
 10320  0003E0  C08F  F077         	movff	?_fround,___ftadd@f2
 10321  0003E4  C090  F078         	movff	?_fround+1,___ftadd@f2+1
 10322  0003E8  C091  F079         	movff	?_fround+2,___ftadd@f2+2
 10323  0003EC  ECFD  F013         	call	___ftadd	;wreg free
 10324  0003F0  C074  F116         	movff	?___ftadd,sprintf@fval
 10325  0003F4  C075  F117         	movff	?___ftadd+1,sprintf@fval+1
 10326  0003F8  C076  F118         	movff	?___ftadd+2,sprintf@fval+2
 10327  0003FC                     l2686:
 10328  0003FC                     l9030:
 10329                           
 10330                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 10331  0003FC  0101               	movlb	1	; () banked
 10332  0003FE  BF11               	btfsc	(sprintf@exp+1)& (0+255),7,b
 10333  000400  D006               	goto	u8000
 10334  000402  5111               	movf	(sprintf@exp+1)& (0+255),w,b
 10335  000404  E121               	bnz	l9038
 10336  000406  0E0A               	movlw	10
 10337  000408  5D10               	subwf	sprintf@exp& (0+255),w,b
 10338  00040A  B0D8               	btfsc	status,0,c
 10339  00040C  D01D               	goto	u8030
 10340  00040E                     u8000:
 10341                           
 10342                           ; BSR set to: 1
 10343  00040E  5116               	movf	sprintf@fval& (0+255),w,b
 10344  000410  1117               	iorwf	(sprintf@fval+1)& (0+255),w,b
 10345  000412  1118               	iorwf	(sprintf@fval+2)& (0+255),w,b
 10346  000414  B4D8               	btfsc	status,2,c
 10347  000416  D059               	goto	l2687
 10348                           
 10349                           ; BSR set to: 1
 10350  000418  C116  F0B0         	movff	sprintf@fval,___fttol@f1
 10351  00041C  C117  F0B1         	movff	sprintf@fval+1,___fttol@f1+1
 10352  000420  C118  F0B2         	movff	sprintf@fval+2,___fttol@f1+2
 10353  000424  EC26  F01C         	call	___fttol	;wreg free
 10354  000428  0100               	movlb	0	; () banked
 10355  00042A  51B0               	movf	?___fttol& (0+255),w,b
 10356  00042C  11B1               	iorwf	(?___fttol+1)& (0+255),w,b
 10357  00042E  11B2               	iorwf	(?___fttol+2)& (0+255),w,b
 10358  000430  11B3               	iorwf	(?___fttol+3)& (0+255),w,b
 10359  000432  A4D8               	btfss	status,2,c
 10360  000434  D04A               	goto	l2687
 10361                           
 10362                           ; BSR set to: 0
 10363  000436  0101               	movlb	1	; () banked
 10364  000438  BF11               	btfsc	(sprintf@exp+1)& (0+255),7,b
 10365  00043A  D047               	goto	l2687
 10366  00043C  5111               	movf	(sprintf@exp+1)& (0+255),w,b
 10367  00043E  E104               	bnz	l9038
 10368  000440  0E02               	movlw	2
 10369  000442  5D10               	subwf	sprintf@exp& (0+255),w,b
 10370  000444  A0D8               	btfss	status,0,c
 10371  000446  D041               	goto	l2687
 10372  000448                     u8030:
 10373  000448                     l9038:
 10374                           
 10375                           ; BSR set to: 1
 10376                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 10377  000448  C10C  F060         	movff	sprintf@tmpval,___ftge@ff1
 10378  00044C  C10D  F061         	movff	sprintf@tmpval+1,___ftge@ff1+1
 10379  000450  C10E  F062         	movff	sprintf@tmpval+2,___ftge@ff1+2
 10380  000454  0E70               	movlw	112
 10381  000456  0100               	movlb	0	; () banked
 10382  000458  6F63               	movwf	___ftge@ff2& (0+255),b
 10383  00045A  0E89               	movlw	137
 10384  00045C  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 10385  00045E  0E40               	movlw	64
 10386  000460  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 10387  000462  EC3B  F023         	call	___ftge	;wreg free
 10388  000466  0100               	movlb	0	; () banked
 10389  000468  B0D8               	btfsc	status,0,c
 10390  00046A  D003               	goto	l2690
 10391                           
 10392                           ; BSR set to: 0
 10393                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 10394  00046C  0101               	movlb	1	; () banked
 10395  00046E  0EF7               	movlw	247
 10396  000470  D002               	goto	L11
 10397  000472                     l2690:
 10398                           
 10399                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 10400                           
 10401                           ; BSR set to: 1
 10402  000472  0101               	movlb	1	; () banked
 10403  000474  0EF8               	movlw	248
 10404  000476                     L11:
 10405  000476  2710               	addwf	sprintf@exp& (0+255),f,b
 10406  000478  0EFF               	movlw	255
 10407  00047A  2311               	addwfc	(sprintf@exp+1)& (0+255),f,b
 10408                           
 10409                           ; BSR set to: 1
 10410                           ;doprnt.c: 1124: }
 10411                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
 10412                           
 10413                           ; BSR set to: 1
 10414  00047C  5110               	movf	sprintf@exp& (0+255),w,b
 10415  00047E  EC53  F00B         	call	_scale
 10416  000482  C08F  F10C         	movff	?_scale,sprintf@tmpval
 10417  000486  C090  F10D         	movff	?_scale+1,sprintf@tmpval+1
 10418  00048A  C091  F10E         	movff	?_scale+2,sprintf@tmpval+2
 10419                           
 10420                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 10421  00048E  C116  F060         	movff	sprintf@fval,__tdiv_to_l_@f1
 10422  000492  C117  F061         	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
 10423  000496  C118  F062         	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
 10424  00049A  C10C  F063         	movff	sprintf@tmpval,__tdiv_to_l_@f2
 10425  00049E  C10D  F064         	movff	sprintf@tmpval+1,__tdiv_to_l_@f2+1
 10426  0004A2  C10E  F065         	movff	sprintf@tmpval+2,__tdiv_to_l_@f2+2
 10427  0004A6  EC16  F016         	call	__tdiv_to_l_	;wreg free
 10428  0004AA  C060  F112         	movff	?__tdiv_to_l_,sprintf@val
 10429  0004AE  C061  F113         	movff	?__tdiv_to_l_+1,sprintf@val+1
 10430  0004B2  C062  F114         	movff	?__tdiv_to_l_+2,sprintf@val+2
 10431  0004B6  C063  F115         	movff	?__tdiv_to_l_+3,sprintf@val+3
 10432                           
 10433                           ;doprnt.c: 1129: fval = 0.0;
 10434  0004BA  0E00               	movlw	0
 10435  0004BC  0101               	movlb	1	; () banked
 10436  0004BE  6F16               	movwf	sprintf@fval& (0+255),b
 10437  0004C0  0E00               	movlw	0
 10438  0004C2  6F17               	movwf	(sprintf@fval+1)& (0+255),b
 10439  0004C4  0E00               	movlw	0
 10440  0004C6  6F18               	movwf	(sprintf@fval+2)& (0+255),b
 10441                           
 10442                           ;doprnt.c: 1130: } else {
 10443  0004C8  D033               	goto	l2696
 10444  0004CA                     l2687:
 10445                           
 10446                           ;doprnt.c: 1131: val = (unsigned long)fval;
 10447                           
 10448                           ; BSR set to: 1
 10449  0004CA  C116  F0B0         	movff	sprintf@fval,___fttol@f1
 10450  0004CE  C117  F0B1         	movff	sprintf@fval+1,___fttol@f1+1
 10451  0004D2  C118  F0B2         	movff	sprintf@fval+2,___fttol@f1+2
 10452  0004D6  EC26  F01C         	call	___fttol	;wreg free
 10453  0004DA  C0B0  F112         	movff	?___fttol,sprintf@val
 10454  0004DE  C0B1  F113         	movff	?___fttol+1,sprintf@val+1
 10455  0004E2  C0B2  F114         	movff	?___fttol+2,sprintf@val+2
 10456  0004E6  C0B3  F115         	movff	?___fttol+3,sprintf@val+3
 10457                           
 10458                           ;doprnt.c: 1132: fval -= (double)val;
 10459  0004EA  C116  F080         	movff	sprintf@fval,___ftsub@f1
 10460  0004EE  C117  F081         	movff	sprintf@fval+1,___ftsub@f1+1
 10461  0004F2  C118  F082         	movff	sprintf@fval+2,___ftsub@f1+2
 10462  0004F6  C112  F068         	movff	sprintf@val,___lltoft@c
 10463  0004FA  C113  F069         	movff	sprintf@val+1,___lltoft@c+1
 10464  0004FE  C114  F06A         	movff	sprintf@val+2,___lltoft@c+2
 10465  000502  C115  F06B         	movff	sprintf@val+3,___lltoft@c+3
 10466  000506  EC15  F026         	call	___lltoft	;wreg free
 10467  00050A  C068  F083         	movff	?___lltoft,___ftsub@f2
 10468  00050E  C069  F084         	movff	?___lltoft+1,___ftsub@f2+1
 10469  000512  C06A  F085         	movff	?___lltoft+2,___ftsub@f2+2
 10470  000516  ECED  F027         	call	___ftsub	;wreg free
 10471  00051A  C080  F116         	movff	?___ftsub,sprintf@fval
 10472  00051E  C081  F117         	movff	?___ftsub+1,sprintf@fval+1
 10473  000522  C082  F118         	movff	?___ftsub+2,sprintf@fval+2
 10474                           
 10475                           ;doprnt.c: 1133: exp = 0;
 10476  000526  0E00               	movlw	0
 10477  000528  0101               	movlb	1	; () banked
 10478  00052A  6F11               	movwf	(sprintf@exp+1)& (0+255),b
 10479  00052C  0E00               	movlw	0
 10480  00052E  6F10               	movwf	sprintf@exp& (0+255),b
 10481  000530                     l2696:
 10482                           
 10483                           ; BSR set to: 1
 10484                           ;doprnt.c: 1134: }
 10485                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 10486                           
 10487                           ; BSR set to: 1
 10488  000530  0E01               	movlw	1
 10489  000532  6F1D               	movwf	sprintf@c& (0+255),b
 10490  000534                     l9058:
 10491                           
 10492                           ; BSR set to: 1
 10493  000534  0E0A               	movlw	10
 10494  000536  191D               	xorwf	sprintf@c& (0+255),w,b
 10495  000538  B4D8               	btfsc	status,2,c
 10496  00053A  D018               	goto	u8070
 10497                           
 10498                           ; BSR set to: 1
 10499                           ;doprnt.c: 1137: if(val < dpowers[c])
 10500                           
 10501                           ; BSR set to: 1
 10502                           
 10503                           ; BSR set to: 1
 10504  00053C  511D               	movf	sprintf@c& (0+255),w,b
 10505  00053E  0D04               	mullw	4
 10506  000540  0E09               	movlw	low _dpowers
 10507  000542  24F3               	addwf	prodl,w,c
 10508  000544  6EF6               	movwf	tblptrl,c
 10509  000546  0E7C               	movlw	high _dpowers
 10510  000548  20F4               	addwfc	prodh,w,c
 10511  00054A  6EF7               	movwf	tblptrh,c
 10512  00054C                     	if	0	;There are less than 3 active tblptr bytes
 10513  00054C                     	endif
 10514  00054C  0009               	tblrd		*+
 10515  00054E  50F5               	movf	tablat,w,c
 10516  000550  5D12               	subwf	sprintf@val& (0+255),w,b
 10517  000552  0009               	tblrd		*+
 10518  000554  50F5               	movf	tablat,w,c
 10519  000556  5913               	subwfb	(sprintf@val+1)& (0+255),w,b
 10520  000558  0009               	tblrd		*+
 10521  00055A  50F5               	movf	tablat,w,c
 10522  00055C  5914               	subwfb	(sprintf@val+2)& (0+255),w,b
 10523  00055E  0009               	tblrd		*+
 10524  000560  50F5               	movf	tablat,w,c
 10525  000562  5915               	subwfb	(sprintf@val+3)& (0+255),w,b
 10526  000564  A0D8               	btfss	status,0,c
 10527  000566  D002               	goto	u8070
 10528                           
 10529                           ; BSR set to: 1
 10530                           
 10531                           ; BSR set to: 1
 10532                           
 10533                           ; BSR set to: 1
 10534                           ;doprnt.c: 1138: break;
 10535  000568  2B1D               	incf	sprintf@c& (0+255),f,b
 10536  00056A  D7E4               	goto	l9058
 10537  00056C                     u8070:
 10538                           
 10539                           ; BSR set to: 1
 10540                           ;doprnt.c: 1142: width -= prec + c + exp;
 10541                           
 10542                           ; BSR set to: 1
 10543  00056C  C11D  F0EB         	movff	sprintf@c,??_sprintf
 10544  000570  0100               	movlb	0	; () banked
 10545  000572  6BEC               	clrf	(??_sprintf+1)& (0+255),b
 10546  000574  BFEB               	btfsc	??_sprintf& (0+255),7,b
 10547  000576  07EC               	decf	(??_sprintf+1)& (0+255),f,b
 10548  000578  0101               	movlb	1	; () banked
 10549  00057A  510A               	movf	sprintf@prec& (0+255),w,b
 10550  00057C  0100               	movlb	0	; () banked
 10551  00057E  27EB               	addwf	??_sprintf& (0+255),f,b
 10552  000580  0101               	movlb	1	; () banked
 10553  000582  510B               	movf	(sprintf@prec+1)& (0+255),w,b
 10554  000584  0100               	movlb	0	; () banked
 10555  000586  23EC               	addwfc	(??_sprintf+1)& (0+255),f,b
 10556  000588  0101               	movlb	1	; () banked
 10557  00058A  5110               	movf	sprintf@exp& (0+255),w,b
 10558  00058C  0100               	movlb	0	; () banked
 10559  00058E  27EB               	addwf	??_sprintf& (0+255),f,b
 10560  000590  0101               	movlb	1	; () banked
 10561  000592  5111               	movf	(sprintf@exp+1)& (0+255),w,b
 10562  000594  0100               	movlb	0	; () banked
 10563  000596  23EC               	addwfc	(??_sprintf+1)& (0+255),f,b
 10564  000598  51EB               	movf	??_sprintf& (0+255),w,b
 10565  00059A  0101               	movlb	1	; () banked
 10566  00059C  5F19               	subwf	sprintf@width& (0+255),f,b
 10567  00059E  0100               	movlb	0	; () banked
 10568  0005A0  51EC               	movf	(??_sprintf+1)& (0+255),w,b
 10569  0005A2  0101               	movlb	1	; () banked
 10570  0005A4  5B1A               	subwfb	(sprintf@width+1)& (0+255),f,b
 10571                           
 10572                           ;doprnt.c: 1143: if(
 10573                           ;doprnt.c: 1147: prec)
 10574  0005A6  510A               	movf	sprintf@prec& (0+255),w,b
 10575  0005A8  110B               	iorwf	(sprintf@prec+1)& (0+255),w,b
 10576  0005AA  B4D8               	btfsc	status,2,c
 10577  0005AC  D003               	goto	l2700
 10578                           
 10579                           ; BSR set to: 1
 10580                           ;doprnt.c: 1148: width--;
 10581  0005AE  0719               	decf	sprintf@width& (0+255),f,b
 10582  0005B0  A0D8               	btfss	status,0,c
 10583  0005B2  071A               	decf	(sprintf@width+1)& (0+255),f,b
 10584  0005B4                     l2700:
 10585                           
 10586                           ; BSR set to: 1
 10587                           ;doprnt.c: 1149: if(flag & 0x03)
 10588                           
 10589                           ; BSR set to: 1
 10590  0005B4  0E03               	movlw	3
 10591  0005B6  151B               	andwf	sprintf@flag& (0+255),w,b
 10592  0005B8  0100               	movlb	0	; () banked
 10593  0005BA  6FEB               	movwf	??_sprintf& (0+255),b
 10594  0005BC  0E00               	movlw	0
 10595  0005BE  0101               	movlb	1	; () banked
 10596  0005C0  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 10597  0005C2  0100               	movlb	0	; () banked
 10598  0005C4  6FEC               	movwf	(??_sprintf+1)& (0+255),b
 10599  0005C6  51EB               	movf	??_sprintf& (0+255),w,b
 10600  0005C8  11EC               	iorwf	(??_sprintf+1)& (0+255),w,b
 10601  0005CA  B4D8               	btfsc	status,2,c
 10602  0005CC  D004               	goto	l2701
 10603                           
 10604                           ; BSR set to: 0
 10605                           ;doprnt.c: 1150: width--;
 10606  0005CE  0101               	movlb	1	; () banked
 10607  0005D0  0719               	decf	sprintf@width& (0+255),f,b
 10608  0005D2  A0D8               	btfss	status,0,c
 10609  0005D4  071A               	decf	(sprintf@width+1)& (0+255),f,b
 10610  0005D6                     l2701:
 10611                           
 10612                           ;doprnt.c: 1153: if(flag & 0x04) {
 10613                           
 10614                           ; BSR set to: 1
 10615  0005D6  0101               	movlb	1	; () banked
 10616  0005D8  A51B               	btfss	sprintf@flag& (0+255),2,b
 10617  0005DA  D039               	goto	l2708
 10618                           
 10619                           ; BSR set to: 1
 10620                           ;doprnt.c: 1157: if(flag & 0x03)
 10621  0005DC  0E03               	movlw	3
 10622  0005DE  151B               	andwf	sprintf@flag& (0+255),w,b
 10623  0005E0  0100               	movlb	0	; () banked
 10624  0005E2  6FEB               	movwf	??_sprintf& (0+255),b
 10625  0005E4  0E00               	movlw	0
 10626  0005E6  0101               	movlb	1	; () banked
 10627  0005E8  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 10628  0005EA  0100               	movlb	0	; () banked
 10629  0005EC  6FEC               	movwf	(??_sprintf+1)& (0+255),b
 10630  0005EE  51EB               	movf	??_sprintf& (0+255),w,b
 10631  0005F0  11EC               	iorwf	(??_sprintf+1)& (0+255),w,b
 10632  0005F2  B4D8               	btfsc	status,2,c
 10633  0005F4  D016               	goto	l2704
 10634                           
 10635                           ; BSR set to: 0
 10636                           ;doprnt.c: 1159: ((*sp++ = ('-')));
 10637  0005F6  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 10638  0005FA  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 10639  0005FE  0E2D               	movlw	45
 10640  000600  6EDF               	movwf	indf2,c
 10641                           
 10642                           ; BSR set to: 0
 10643  000602  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 10644  000604  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 10645                           
 10646                           ; BSR set to: 0
 10647                           ;doprnt.c: 1168: while(width > 0) {
 10648  000606  D00D               	goto	l2704
 10649  000608                     l9086:
 10650                           
 10651                           ;doprnt.c: 1169: ((*sp++ = ('0')));
 10652  000608  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 10653  00060C  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 10654  000610  0E30               	movlw	48
 10655  000612  6EDF               	movwf	indf2,c
 10656  000614  0100               	movlb	0	; () banked
 10657  000616  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 10658  000618  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 10659                           
 10660                           ; BSR set to: 0
 10661                           ;doprnt.c: 1170: width--;
 10662  00061A  0101               	movlb	1	; () banked
 10663  00061C  0719               	decf	sprintf@width& (0+255),f,b
 10664  00061E  A0D8               	btfss	status,0,c
 10665  000620  071A               	decf	(sprintf@width+1)& (0+255),f,b
 10666  000622                     l2704:
 10667                           
 10668                           ; BSR set to: 1
 10669  000622  0101               	movlb	1	; () banked
 10670  000624  BF1A               	btfsc	(sprintf@width+1)& (0+255),7,b
 10671  000626  D07B               	goto	l2712
 10672  000628  511A               	movf	(sprintf@width+1)& (0+255),w,b
 10673  00062A  E1EE               	bnz	l9086
 10674  00062C  0519               	decf	sprintf@width& (0+255),w,b
 10675  00062E  A0D8               	btfss	status,0,c
 10676  000630  D076               	goto	l2712
 10677  000632  D7EA               	goto	l2705
 10678  000634                     l9094:
 10679                           
 10680                           ; BSR set to: 1
 10681                           ;doprnt.c: 1181: ((*sp++ = (' ')));
 10682  000634  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 10683  000638  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 10684  00063C  0E20               	movlw	32
 10685  00063E  6EDF               	movwf	indf2,c
 10686                           
 10687                           ; BSR set to: 1
 10688  000640  0100               	movlb	0	; () banked
 10689  000642  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 10690  000644  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 10691                           
 10692                           ; BSR set to: 0
 10693                           ;doprnt.c: 1182: width--;
 10694  000646  0101               	movlb	1	; () banked
 10695  000648  0719               	decf	sprintf@width& (0+255),f,b
 10696  00064A  A0D8               	btfss	status,0,c
 10697  00064C  071A               	decf	(sprintf@width+1)& (0+255),f,b
 10698  00064E                     l2708:
 10699                           
 10700                           ; BSR set to: 1
 10701                           
 10702                           ; BSR set to: 1
 10703  00064E  BF1A               	btfsc	(sprintf@width+1)& (0+255),7,b
 10704  000650  D005               	goto	u8130
 10705  000652  511A               	movf	(sprintf@width+1)& (0+255),w,b
 10706  000654  E1EF               	bnz	l9094
 10707  000656  0519               	decf	sprintf@width& (0+255),w,b
 10708  000658  B0D8               	btfsc	status,0,c
 10709  00065A  D7EC               	goto	l2709
 10710  00065C                     u8130:
 10711                           
 10712                           ; BSR set to: 1
 10713                           ;doprnt.c: 1183: }
 10714                           ;doprnt.c: 1188: if(flag & 0x03)
 10715                           
 10716                           ; BSR set to: 1
 10717  00065C  0E03               	movlw	3
 10718  00065E  151B               	andwf	sprintf@flag& (0+255),w,b
 10719  000660  0100               	movlb	0	; () banked
 10720  000662  6FEB               	movwf	??_sprintf& (0+255),b
 10721  000664  0E00               	movlw	0
 10722  000666  0101               	movlb	1	; () banked
 10723  000668  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 10724  00066A  0100               	movlb	0	; () banked
 10725  00066C  6FEC               	movwf	(??_sprintf+1)& (0+255),b
 10726  00066E  51EB               	movf	??_sprintf& (0+255),w,b
 10727  000670  11EC               	iorwf	(??_sprintf+1)& (0+255),w,b
 10728  000672  B4D8               	btfsc	status,2,c
 10729  000674  D054               	goto	l2712
 10730                           
 10731                           ; BSR set to: 0
 10732                           ;doprnt.c: 1190: ((*sp++ = ('-')));
 10733  000676  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 10734  00067A  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 10735  00067E  0E2D               	movlw	45
 10736  000680  6EDF               	movwf	indf2,c
 10737  000682  D04B               	goto	L12
 10738  000684                     
 10739                           ;doprnt.c: 1200: {
 10740                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 10741                           
 10742                           ; BSR set to: 0
 10743  000684  C112  F060         	movff	sprintf@val,___lldiv@dividend
 10744  000688  C113  F061         	movff	sprintf@val+1,___lldiv@dividend+1
 10745  00068C  C114  F062         	movff	sprintf@val+2,___lldiv@dividend+2
 10746  000690  C115  F063         	movff	sprintf@val+3,___lldiv@dividend+3
 10747  000694  0101               	movlb	1	; () banked
 10748  000696  511D               	movf	sprintf@c& (0+255),w,b
 10749  000698  0D04               	mullw	4
 10750  00069A  0E09               	movlw	low _dpowers
 10751  00069C  24F3               	addwf	prodl,w,c
 10752  00069E  6EF6               	movwf	tblptrl,c
 10753  0006A0  0E7C               	movlw	high _dpowers
 10754  0006A2  20F4               	addwfc	prodh,w,c
 10755  0006A4  6EF7               	movwf	tblptrh,c
 10756  0006A6                     	if	0	;There are less than 3 active tblptr bytes
 10757  0006A6                     	endif
 10758  0006A6  0009               	tblrd		*+
 10759  0006A8  CFF5 F064          	movff	tablat,___lldiv@divisor
 10760  0006AC  0009               	tblrd		*+
 10761  0006AE  CFF5 F065          	movff	tablat,___lldiv@divisor+1
 10762  0006B2  0009               	tblrd		*+
 10763  0006B4  CFF5 F066          	movff	tablat,___lldiv@divisor+2
 10764  0006B8  000A               	tblrd		*-
 10765  0006BA  CFF5 F067          	movff	tablat,___lldiv@divisor+3
 10766  0006BE  EC53  F024         	call	___lldiv	;wreg free
 10767  0006C2  C060  F10C         	movff	?___lldiv,sprintf@tmpval
 10768  0006C6  C061  F10D         	movff	?___lldiv+1,sprintf@tmpval+1
 10769  0006CA  C062  F10E         	movff	?___lldiv+2,sprintf@tmpval+2
 10770  0006CE  C063  F10F         	movff	?___lldiv+3,sprintf@tmpval+3
 10771                           
 10772                           ;doprnt.c: 1202: tmpval.vd %= 10;
 10773  0006D2  C10C  F06D         	movff	sprintf@tmpval,___llmod@dividend
 10774  0006D6  C10D  F06E         	movff	sprintf@tmpval+1,___llmod@dividend+1
 10775  0006DA  C10E  F06F         	movff	sprintf@tmpval+2,___llmod@dividend+2
 10776  0006DE  C10F  F070         	movff	sprintf@tmpval+3,___llmod@dividend+3
 10777  0006E2  0E0A               	movlw	10
 10778  0006E4  0100               	movlb	0	; () banked
 10779  0006E6  6F71               	movwf	___llmod@divisor& (0+255),b
 10780  0006E8  0E00               	movlw	0
 10781  0006EA  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 10782  0006EC  0E00               	movlw	0
 10783  0006EE  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 10784  0006F0  0E00               	movlw	0
 10785  0006F2  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 10786  0006F4  EC7E  F025         	call	___llmod	;wreg free
 10787  0006F8  C06D  F10C         	movff	?___llmod,sprintf@tmpval
 10788  0006FC  C06E  F10D         	movff	?___llmod+1,sprintf@tmpval+1
 10789  000700  C06F  F10E         	movff	?___llmod+2,sprintf@tmpval+2
 10790  000704  C070  F10F         	movff	?___llmod+3,sprintf@tmpval+3
 10791                           
 10792                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
 10793  000708  0101               	movlb	1	; () banked
 10794  00070A  510C               	movf	sprintf@tmpval& (0+255),w,b
 10795  00070C  0F30               	addlw	48
 10796  00070E  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 10797  000712  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 10798  000716  6EDF               	movwf	indf2,c
 10799                           
 10800                           ; BSR set to: 1
 10801  000718  0100               	movlb	0	; () banked
 10802  00071A                     L12:
 10803  00071A  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 10804  00071C  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 10805  00071E                     l2712:
 10806                           
 10807                           ; BSR set to: 0
 10808  00071E  0101               	movlb	1	; () banked
 10809  000720  071D               	decf	sprintf@c& (0+255),f,b
 10810  000722  291D               	incf	sprintf@c& (0+255),w,b
 10811  000724  B4D8               	btfsc	status,2,c
 10812  000726  D00E               	goto	l2715
 10813  000728  D7AD               	goto	l2713
 10814  00072A                     l9118:
 10815                           
 10816                           ; BSR set to: 1
 10817                           ;doprnt.c: 1208: ((*sp++ = ('0')));
 10818  00072A  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 10819  00072E  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 10820  000732  0E30               	movlw	48
 10821  000734  6EDF               	movwf	indf2,c
 10822                           
 10823                           ; BSR set to: 1
 10824  000736  0100               	movlb	0	; () banked
 10825  000738  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 10826  00073A  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 10827                           
 10828                           ; BSR set to: 0
 10829                           ;doprnt.c: 1209: exp--;
 10830  00073C  0101               	movlb	1	; () banked
 10831  00073E  0710               	decf	sprintf@exp& (0+255),f,b
 10832  000740  A0D8               	btfss	status,0,c
 10833  000742  0711               	decf	(sprintf@exp+1)& (0+255),f,b
 10834  000744                     l2715:
 10835                           
 10836                           ; BSR set to: 1
 10837                           
 10838                           ; BSR set to: 1
 10839  000744  BF11               	btfsc	(sprintf@exp+1)& (0+255),7,b
 10840  000746  D005               	goto	u8160
 10841  000748  5111               	movf	(sprintf@exp+1)& (0+255),w,b
 10842  00074A  E1EF               	bnz	l9118
 10843  00074C  0510               	decf	sprintf@exp& (0+255),w,b
 10844  00074E  B0D8               	btfsc	status,0,c
 10845  000750  D7EC               	goto	l2716
 10846  000752                     u8160:
 10847                           
 10848                           ; BSR set to: 1
 10849                           ;doprnt.c: 1210: }
 10850                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 10851                           
 10852                           ; BSR set to: 1
 10853  000752  BF0B               	btfsc	(sprintf@prec+1)& (0+255),7,b
 10854  000754  D009               	goto	l2718
 10855  000756  510B               	movf	(sprintf@prec+1)& (0+255),w,b
 10856  000758  E104               	bnz	u8170
 10857  00075A  0E09               	movlw	9
 10858  00075C  5D0A               	subwf	sprintf@prec& (0+255),w,b
 10859  00075E  A0D8               	btfss	status,0,c
 10860  000760  D003               	goto	l2718
 10861  000762                     u8170:
 10862                           
 10863                           ; BSR set to: 1
 10864                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 10865  000762  0E08               	movlw	8
 10866  000764  6F1D               	movwf	sprintf@c& (0+255),b
 10867  000766  D002               	goto	l2719
 10868  000768                     l2718:
 10869                           
 10870                           ; BSR set to: 1
 10871                           ;doprnt.c: 1213: else
 10872                           ;doprnt.c: 1214: c = prec;
 10873  000768  C10A  F11D         	movff	sprintf@prec,sprintf@c
 10874  00076C                     l2719:
 10875                           
 10876                           ; BSR set to: 1
 10877                           ;doprnt.c: 1215: prec -= c;
 10878                           
 10879                           ; BSR set to: 1
 10880  00076C  511D               	movf	sprintf@c& (0+255),w,b
 10881  00076E  5F0A               	subwf	sprintf@prec& (0+255),f,b
 10882  000770  0E00               	movlw	0
 10883  000772  BF1D               	btfsc	sprintf@c& (0+255),7,b
 10884  000774  0EFF               	movlw	255
 10885  000776  5B0B               	subwfb	(sprintf@prec+1)& (0+255),f,b
 10886                           
 10887                           ; BSR set to: 1
 10888                           ;doprnt.c: 1219: if(c)
 10889  000778  511D               	movf	sprintf@c& (0+255),w,b
 10890  00077A  B4D8               	btfsc	status,2,c
 10891  00077C  D009               	goto	l2720
 10892                           
 10893                           ; BSR set to: 1
 10894                           ;doprnt.c: 1221: ((*sp++ = ('.')));
 10895  00077E  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 10896  000782  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 10897  000786  0E2E               	movlw	46
 10898  000788  6EDF               	movwf	indf2,c
 10899                           
 10900                           ; BSR set to: 1
 10901  00078A  0100               	movlb	0	; () banked
 10902  00078C  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 10903  00078E  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 10904  000790                     l2720:
 10905                           
 10906                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 10907                           
 10908                           ; BSR set to: 0
 10909  000790  0101               	movlb	1	; () banked
 10910  000792  511D               	movf	sprintf@c& (0+255),w,b
 10911  000794  EC53  F00B         	call	_scale
 10912  000798  C08F  F100         	movff	?_scale,_sprintf$5966
 10913  00079C  C090  F101         	movff	?_scale+1,_sprintf$5966+1
 10914  0007A0  C091  F102         	movff	?_scale+2,_sprintf$5966+2
 10915                           
 10916                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 10917  0007A4  C116  F083         	movff	sprintf@fval,___ftmul@f2
 10918  0007A8  C117  F084         	movff	sprintf@fval+1,___ftmul@f2+1
 10919  0007AC  C118  F085         	movff	sprintf@fval+2,___ftmul@f2+2
 10920  0007B0  C100  F080         	movff	_sprintf$5966,___ftmul@f1
 10921  0007B4  C101  F081         	movff	_sprintf$5966+1,___ftmul@f1+1
 10922  0007B8  C102  F082         	movff	_sprintf$5966+2,___ftmul@f1+2
 10923  0007BC  ECA2  F01C         	call	___ftmul	;wreg free
 10924  0007C0  C080  F0B0         	movff	?___ftmul,___fttol@f1
 10925  0007C4  C081  F0B1         	movff	?___ftmul+1,___fttol@f1+1
 10926  0007C8  C082  F0B2         	movff	?___ftmul+2,___fttol@f1+2
 10927  0007CC  EC26  F01C         	call	___fttol	;wreg free
 10928  0007D0  C0B0  F112         	movff	?___fttol,sprintf@val
 10929  0007D4  C0B1  F113         	movff	?___fttol+1,sprintf@val+1
 10930  0007D8  C0B2  F114         	movff	?___fttol+2,sprintf@val+2
 10931  0007DC  C0B3  F115         	movff	?___fttol+3,sprintf@val+3
 10932                           
 10933                           ;doprnt.c: 1228: while(c--) {
 10934  0007E0  D074               	goto	l2721
 10935  0007E2                     
 10936                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 10937  0007E2  C112  F060         	movff	sprintf@val,___lldiv@dividend
 10938  0007E6  C113  F061         	movff	sprintf@val+1,___lldiv@dividend+1
 10939  0007EA  C114  F062         	movff	sprintf@val+2,___lldiv@dividend+2
 10940  0007EE  C115  F063         	movff	sprintf@val+3,___lldiv@dividend+3
 10941  0007F2  0101               	movlb	1	; () banked
 10942  0007F4  511D               	movf	sprintf@c& (0+255),w,b
 10943  0007F6  0D04               	mullw	4
 10944  0007F8  0E09               	movlw	low _dpowers
 10945  0007FA  24F3               	addwf	prodl,w,c
 10946  0007FC  6EF6               	movwf	tblptrl,c
 10947  0007FE  0E7C               	movlw	high _dpowers
 10948  000800  20F4               	addwfc	prodh,w,c
 10949  000802  6EF7               	movwf	tblptrh,c
 10950  000804                     	if	0	;There are less than 3 active tblptr bytes
 10951  000804                     	endif
 10952  000804  0009               	tblrd		*+
 10953  000806  CFF5 F064          	movff	tablat,___lldiv@divisor
 10954  00080A  0009               	tblrd		*+
 10955  00080C  CFF5 F065          	movff	tablat,___lldiv@divisor+1
 10956  000810  0009               	tblrd		*+
 10957  000812  CFF5 F066          	movff	tablat,___lldiv@divisor+2
 10958  000816  000A               	tblrd		*-
 10959  000818  CFF5 F067          	movff	tablat,___lldiv@divisor+3
 10960  00081C  EC53  F024         	call	___lldiv	;wreg free
 10961  000820  C060  F10C         	movff	?___lldiv,sprintf@tmpval
 10962  000824  C061  F10D         	movff	?___lldiv+1,sprintf@tmpval+1
 10963  000828  C062  F10E         	movff	?___lldiv+2,sprintf@tmpval+2
 10964  00082C  C063  F10F         	movff	?___lldiv+3,sprintf@tmpval+3
 10965                           
 10966                           ;doprnt.c: 1230: tmpval.vd %= 10;
 10967  000830  C10C  F06D         	movff	sprintf@tmpval,___llmod@dividend
 10968  000834  C10D  F06E         	movff	sprintf@tmpval+1,___llmod@dividend+1
 10969  000838  C10E  F06F         	movff	sprintf@tmpval+2,___llmod@dividend+2
 10970  00083C  C10F  F070         	movff	sprintf@tmpval+3,___llmod@dividend+3
 10971  000840  0E0A               	movlw	10
 10972  000842  0100               	movlb	0	; () banked
 10973  000844  6F71               	movwf	___llmod@divisor& (0+255),b
 10974  000846  0E00               	movlw	0
 10975  000848  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 10976  00084A  0E00               	movlw	0
 10977  00084C  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 10978  00084E  0E00               	movlw	0
 10979  000850  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 10980  000852  EC7E  F025         	call	___llmod	;wreg free
 10981  000856  C06D  F10C         	movff	?___llmod,sprintf@tmpval
 10982  00085A  C06E  F10D         	movff	?___llmod+1,sprintf@tmpval+1
 10983  00085E  C06F  F10E         	movff	?___llmod+2,sprintf@tmpval+2
 10984  000862  C070  F10F         	movff	?___llmod+3,sprintf@tmpval+3
 10985                           
 10986                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
 10987  000866  0101               	movlb	1	; () banked
 10988  000868  510C               	movf	sprintf@tmpval& (0+255),w,b
 10989  00086A  0F30               	addlw	48
 10990  00086C  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 10991  000870  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 10992  000874  6EDF               	movwf	indf2,c
 10993                           
 10994                           ; BSR set to: 1
 10995  000876  0100               	movlb	0	; () banked
 10996  000878  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 10997  00087A  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 10998                           
 10999                           ; BSR set to: 0
 11000                           ;doprnt.c: 1232: val %= dpowers[c];
 11001  00087C  C112  F06D         	movff	sprintf@val,___llmod@dividend
 11002  000880  C113  F06E         	movff	sprintf@val+1,___llmod@dividend+1
 11003  000884  C114  F06F         	movff	sprintf@val+2,___llmod@dividend+2
 11004  000888  C115  F070         	movff	sprintf@val+3,___llmod@dividend+3
 11005  00088C  0101               	movlb	1	; () banked
 11006  00088E  511D               	movf	sprintf@c& (0+255),w,b
 11007  000890  0D04               	mullw	4
 11008  000892  0E09               	movlw	low _dpowers
 11009  000894  24F3               	addwf	prodl,w,c
 11010  000896  6EF6               	movwf	tblptrl,c
 11011  000898  0E7C               	movlw	high _dpowers
 11012  00089A  20F4               	addwfc	prodh,w,c
 11013  00089C  6EF7               	movwf	tblptrh,c
 11014  00089E                     	if	0	;There are less than 3 active tblptr bytes
 11015  00089E                     	endif
 11016  00089E  0009               	tblrd		*+
 11017  0008A0  CFF5 F071          	movff	tablat,___llmod@divisor
 11018  0008A4  0009               	tblrd		*+
 11019  0008A6  CFF5 F072          	movff	tablat,___llmod@divisor+1
 11020  0008AA  0009               	tblrd		*+
 11021  0008AC  CFF5 F073          	movff	tablat,___llmod@divisor+2
 11022  0008B0  000A               	tblrd		*-
 11023  0008B2  CFF5 F074          	movff	tablat,___llmod@divisor+3
 11024  0008B6  EC7E  F025         	call	___llmod	;wreg free
 11025  0008BA  C06D  F112         	movff	?___llmod,sprintf@val
 11026  0008BE  C06E  F113         	movff	?___llmod+1,sprintf@val+1
 11027  0008C2  C06F  F114         	movff	?___llmod+2,sprintf@val+2
 11028  0008C6  C070  F115         	movff	?___llmod+3,sprintf@val+3
 11029  0008CA                     l2721:
 11030  0008CA  0101               	movlb	1	; () banked
 11031  0008CC  071D               	decf	sprintf@c& (0+255),f,b
 11032  0008CE  291D               	incf	sprintf@c& (0+255),w,b
 11033  0008D0  B4D8               	btfsc	status,2,c
 11034  0008D2  D00E               	goto	l2724
 11035  0008D4  D786               	goto	l2722
 11036  0008D6                     
 11037                           ; BSR set to: 1
 11038                           ;doprnt.c: 1236: ((*sp++ = ('0')));
 11039                           
 11040                           ; BSR set to: 1
 11041  0008D6  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 11042  0008DA  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 11043  0008DE  0E30               	movlw	48
 11044  0008E0  6EDF               	movwf	indf2,c
 11045                           
 11046                           ; BSR set to: 1
 11047  0008E2  0100               	movlb	0	; () banked
 11048  0008E4  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 11049  0008E6  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 11050                           
 11051                           ; BSR set to: 0
 11052                           ;doprnt.c: 1237: prec--;
 11053  0008E8  0101               	movlb	1	; () banked
 11054  0008EA  070A               	decf	sprintf@prec& (0+255),f,b
 11055  0008EC  A0D8               	btfss	status,0,c
 11056  0008EE  070B               	decf	(sprintf@prec+1)& (0+255),f,b
 11057  0008F0                     l2724:
 11058                           
 11059                           ; BSR set to: 1
 11060                           
 11061                           ; BSR set to: 1
 11062  0008F0  510A               	movf	sprintf@prec& (0+255),w,b
 11063  0008F2  110B               	iorwf	(sprintf@prec+1)& (0+255),w,b
 11064  0008F4  B4D8               	btfsc	status,2,c
 11065  0008F6  D1C9               	goto	u8410
 11066  0008F8  D7EE               	goto	l2725
 11067  0008FA                     l2679:
 11068                           
 11069                           ; BSR set to: 1
 11070                           ;doprnt.c: 1246: }
 11071                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 11072                           
 11073                           ; BSR set to: 1
 11074  0008FA  0EC0               	movlw	192
 11075  0008FC  151B               	andwf	sprintf@flag& (0+255),w,b
 11076  0008FE  0100               	movlb	0	; () banked
 11077  000900  6FEB               	movwf	??_sprintf& (0+255),b
 11078  000902  0E00               	movlw	0
 11079  000904  0101               	movlb	1	; () banked
 11080  000906  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 11081  000908  0100               	movlb	0	; () banked
 11082  00090A  6FEC               	movwf	(??_sprintf+1)& (0+255),b
 11083  00090C  51EB               	movf	??_sprintf& (0+255),w,b
 11084  00090E  11EC               	iorwf	(??_sprintf+1)& (0+255),w,b
 11085  000910  A4D8               	btfss	status,2,c
 11086  000912  D02F               	goto	l2727
 11087                           
 11088                           ; BSR set to: 0
 11089                           ;doprnt.c: 1253: {
 11090                           ;doprnt.c: 1255: if(flag & 0x10)
 11091  000914  0101               	movlb	1	; () banked
 11092  000916  A91B               	btfss	sprintf@flag& (0+255),4,b
 11093  000918  D00E               	goto	l2728
 11094                           
 11095                           ; BSR set to: 1
 11096                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 11097  00091A  C108  FFD9         	movff	sprintf@ap,fsr2l
 11098  00091E  C109  FFDA         	movff	sprintf@ap+1,fsr2h
 11099  000922  CFDE F112          	movff	postinc2,sprintf@val
 11100  000926  CFDE F113          	movff	postinc2,sprintf@val+1
 11101  00092A  CFDE F114          	movff	postinc2,sprintf@val+2
 11102  00092E  CFDE F115          	movff	postinc2,sprintf@val+3
 11103                           
 11104                           ; BSR set to: 1
 11105  000932  0E04               	movlw	4
 11106  000934  D00E               	goto	L13
 11107  000936                     l2728:
 11108                           
 11109                           ; BSR set to: 1
 11110                           ;doprnt.c: 1257: else
 11111                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 11112                           
 11113                           ; BSR set to: 1
 11114  000936  C108  FFD9         	movff	sprintf@ap,fsr2l
 11115  00093A  C109  FFDA         	movff	sprintf@ap+1,fsr2h
 11116  00093E  CFDE F112          	movff	postinc2,sprintf@val
 11117  000942  CFDD F113          	movff	postdec2,sprintf@val+1
 11118  000946  0E00               	movlw	0
 11119  000948  BF13               	btfsc	(sprintf@val+1)& (0+255),7,b
 11120  00094A  0EFF               	movlw	-1
 11121  00094C  6F14               	movwf	(sprintf@val+2)& (0+255),b
 11122  00094E  6F15               	movwf	(sprintf@val+3)& (0+255),b
 11123                           
 11124                           ; BSR set to: 1
 11125  000950  0E02               	movlw	2
 11126  000952                     L13:
 11127  000952  2708               	addwf	sprintf@ap& (0+255),f,b
 11128  000954  0E00               	movlw	0
 11129  000956  2309               	addwfc	(sprintf@ap+1)& (0+255),f,b
 11130                           
 11131                           ; BSR set to: 1
 11132                           ;doprnt.c: 1261: if((long)val < 0) {
 11133                           
 11134                           ; BSR set to: 1
 11135  000958  AF15               	btfss	(sprintf@val+3)& (0+255),7,b
 11136  00095A  D06B               	goto	l2734
 11137                           
 11138                           ; BSR set to: 1
 11139                           ;doprnt.c: 1262: flag |= 0x03;
 11140  00095C  0E03               	movlw	3
 11141  00095E  131B               	iorwf	sprintf@flag& (0+255),f,b
 11142                           
 11143                           ; BSR set to: 1
 11144                           ;doprnt.c: 1263: val = -val;
 11145  000960  1F15               	comf	(sprintf@val+3)& (0+255),f,b
 11146  000962  1F14               	comf	(sprintf@val+2)& (0+255),f,b
 11147  000964  1F13               	comf	(sprintf@val+1)& (0+255),f,b
 11148  000966  6D12               	negf	sprintf@val& (0+255),b
 11149  000968  0E00               	movlw	0
 11150  00096A  2313               	addwfc	(sprintf@val+1)& (0+255),f,b
 11151  00096C  2314               	addwfc	(sprintf@val+2)& (0+255),f,b
 11152  00096E  2315               	addwfc	(sprintf@val+3)& (0+255),f,b
 11153                           
 11154                           ; BSR set to: 1
 11155                           ;doprnt.c: 1264: }
 11156                           ;doprnt.c: 1266: }
 11157  000970  D060               	goto	l2734
 11158  000972                     l2727:
 11159                           
 11160                           ; BSR set to: 0
 11161                           ;doprnt.c: 1268: else
 11162                           ;doprnt.c: 1273: {
 11163                           ;doprnt.c: 1281: if(flag & 0x10)
 11164  000972  0101               	movlb	1	; () banked
 11165  000974  A91B               	btfss	sprintf@flag& (0+255),4,b
 11166  000976  D00E               	goto	l2732
 11167                           
 11168                           ; BSR set to: 1
 11169                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
 11170  000978  C108  FFD9         	movff	sprintf@ap,fsr2l
 11171  00097C  C109  FFDA         	movff	sprintf@ap+1,fsr2h
 11172  000980  CFDE F112          	movff	postinc2,sprintf@val
 11173  000984  CFDE F113          	movff	postinc2,sprintf@val+1
 11174  000988  CFDE F114          	movff	postinc2,sprintf@val+2
 11175  00098C  CFDE F115          	movff	postinc2,sprintf@val+3
 11176                           
 11177                           ; BSR set to: 1
 11178  000990  0E04               	movlw	4
 11179  000992  D00F               	goto	L14
 11180  000994                     l2732:
 11181                           
 11182                           ; BSR set to: 1
 11183                           ;doprnt.c: 1283: else
 11184                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 11185                           
 11186                           ; BSR set to: 1
 11187  000994  C108  FFD9         	movff	sprintf@ap,fsr2l
 11188  000998  C109  FFDA         	movff	sprintf@ap+1,fsr2h
 11189  00099C  CFDE F0EB          	movff	postinc2,??_sprintf
 11190  0009A0  CFDD F0EC          	movff	postdec2,??_sprintf+1
 11191  0009A4  C0EB  F112         	movff	??_sprintf,sprintf@val
 11192  0009A8  C0EC  F113         	movff	??_sprintf+1,sprintf@val+1
 11193  0009AC  6B14               	clrf	(sprintf@val+2)& (0+255),b
 11194  0009AE  6B15               	clrf	(sprintf@val+3)& (0+255),b
 11195                           
 11196                           ; BSR set to: 1
 11197  0009B0  0E02               	movlw	2
 11198  0009B2                     L14:
 11199  0009B2  2708               	addwf	sprintf@ap& (0+255),f,b
 11200  0009B4  0E00               	movlw	0
 11201  0009B6  2309               	addwfc	(sprintf@ap+1)& (0+255),f,b
 11202                           
 11203                           ; BSR set to: 1
 11204                           ;doprnt.c: 1287: }
 11205                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 11206                           
 11207                           ; BSR set to: 1
 11208  0009B8  D03C               	goto	l2734
 11209  0009BA                     
 11210                           ; BSR set to: 1
 11211                           ;doprnt.c: 1302: case 0xC0:
 11212                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 11213                           
 11214                           ; BSR set to: 1
 11215                           
 11216                           ; BSR set to: 1
 11217  0009BA  0E01               	movlw	1
 11218  0009BC  6F1D               	movwf	sprintf@c& (0+255),b
 11219  0009BE                     l9190:
 11220                           
 11221                           ; BSR set to: 1
 11222  0009BE  0E0A               	movlw	10
 11223  0009C0  191D               	xorwf	sprintf@c& (0+255),w,b
 11224  0009C2  B4D8               	btfsc	status,2,c
 11225  0009C4  D041               	goto	l2740
 11226                           
 11227                           ; BSR set to: 1
 11228                           ;doprnt.c: 1306: if(val < dpowers[c])
 11229                           
 11230                           ; BSR set to: 1
 11231                           
 11232                           ; BSR set to: 1
 11233  0009C6  511D               	movf	sprintf@c& (0+255),w,b
 11234  0009C8  0D04               	mullw	4
 11235  0009CA  0E09               	movlw	low _dpowers
 11236  0009CC  24F3               	addwf	prodl,w,c
 11237  0009CE  6EF6               	movwf	tblptrl,c
 11238  0009D0  0E7C               	movlw	high _dpowers
 11239  0009D2  20F4               	addwfc	prodh,w,c
 11240  0009D4  6EF7               	movwf	tblptrh,c
 11241  0009D6                     	if	0	;There are less than 3 active tblptr bytes
 11242  0009D6                     	endif
 11243  0009D6  0009               	tblrd		*+
 11244  0009D8  50F5               	movf	tablat,w,c
 11245  0009DA  5D12               	subwf	sprintf@val& (0+255),w,b
 11246  0009DC  0009               	tblrd		*+
 11247  0009DE  50F5               	movf	tablat,w,c
 11248  0009E0  5913               	subwfb	(sprintf@val+1)& (0+255),w,b
 11249  0009E2  0009               	tblrd		*+
 11250  0009E4  50F5               	movf	tablat,w,c
 11251  0009E6  5914               	subwfb	(sprintf@val+2)& (0+255),w,b
 11252  0009E8  0009               	tblrd		*+
 11253  0009EA  50F5               	movf	tablat,w,c
 11254  0009EC  5915               	subwfb	(sprintf@val+3)& (0+255),w,b
 11255  0009EE  A0D8               	btfss	status,0,c
 11256  0009F0  D02B               	goto	l2740
 11257                           
 11258                           ; BSR set to: 1
 11259                           
 11260                           ; BSR set to: 1
 11261                           
 11262                           ; BSR set to: 1
 11263                           ;doprnt.c: 1307: break;
 11264  0009F2  2B1D               	incf	sprintf@c& (0+255),f,b
 11265  0009F4  D7E4               	goto	l9190
 11266  0009F6                     
 11267                           ; BSR set to: 1
 11268                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 11269                           
 11270                           ; BSR set to: 1
 11271  0009F6  0E01               	movlw	1
 11272  0009F8  6F1D               	movwf	sprintf@c& (0+255),b
 11273  0009FA                     l9204:
 11274                           
 11275                           ; BSR set to: 1
 11276  0009FA  0E08               	movlw	8
 11277  0009FC  191D               	xorwf	sprintf@c& (0+255),w,b
 11278  0009FE  B4D8               	btfsc	status,2,c
 11279  000A00  D023               	goto	l2740
 11280                           
 11281                           ; BSR set to: 1
 11282                           ;doprnt.c: 1317: if(val < hexpowers[c])
 11283                           
 11284                           ; BSR set to: 1
 11285                           
 11286                           ; BSR set to: 1
 11287  000A02  511D               	movf	sprintf@c& (0+255),w,b
 11288  000A04  0D04               	mullw	4
 11289  000A06  0E7F               	movlw	low _hexpowers
 11290  000A08  24F3               	addwf	prodl,w,c
 11291  000A0A  6EF6               	movwf	tblptrl,c
 11292  000A0C  0E7C               	movlw	high _hexpowers
 11293  000A0E  20F4               	addwfc	prodh,w,c
 11294  000A10  6EF7               	movwf	tblptrh,c
 11295  000A12                     	if	0	;There are less than 3 active tblptr bytes
 11296  000A12                     	endif
 11297  000A12  0009               	tblrd		*+
 11298  000A14  50F5               	movf	tablat,w,c
 11299  000A16  5D12               	subwf	sprintf@val& (0+255),w,b
 11300  000A18  0009               	tblrd		*+
 11301  000A1A  50F5               	movf	tablat,w,c
 11302  000A1C  5913               	subwfb	(sprintf@val+1)& (0+255),w,b
 11303  000A1E  0009               	tblrd		*+
 11304  000A20  50F5               	movf	tablat,w,c
 11305  000A22  5914               	subwfb	(sprintf@val+2)& (0+255),w,b
 11306  000A24  0009               	tblrd		*+
 11307  000A26  50F5               	movf	tablat,w,c
 11308  000A28  5915               	subwfb	(sprintf@val+3)& (0+255),w,b
 11309  000A2A  A0D8               	btfss	status,0,c
 11310  000A2C  D00D               	goto	l2740
 11311                           
 11312                           ; BSR set to: 1
 11313                           
 11314                           ; BSR set to: 1
 11315                           
 11316                           ; BSR set to: 1
 11317                           ;doprnt.c: 1318: break;
 11318  000A2E  2B1D               	incf	sprintf@c& (0+255),f,b
 11319  000A30  D7E4               	goto	l9204
 11320  000A32                     l2734:
 11321                           
 11322                           ; BSR set to: 1
 11323                           
 11324                           ; BSR set to: 1
 11325  000A32  511B               	movf	sprintf@flag& (0+255),w,b
 11326  000A34  0BC0               	andlw	192
 11327                           
 11328                           ; Switch size 1, requested type "space"
 11329                           ; Number of cases is 3, Range of values is 0 to 192
 11330                           ; switch strategies available:
 11331                           ; Name         Instructions Cycles
 11332                           ; simple_byte           10     6 (average)
 11333                           ;	Chosen strategy is simple_byte
 11334  000A36  0A00               	xorlw	0	; case 0
 11335  000A38  B4D8               	btfsc	status,2,c
 11336  000A3A  D7BF               	goto	l2735
 11337  000A3C  0A80               	xorlw	128	; case 128
 11338  000A3E  B4D8               	btfsc	status,2,c
 11339  000A40  D7DA               	goto	l2741
 11340  000A42  0A40               	xorlw	64	; case 192
 11341  000A44  B4D8               	btfsc	status,2,c
 11342  000A46  D7B9               	goto	l2735
 11343  000A48                     l2740:
 11344                           
 11345                           ; BSR set to: 1
 11346                           ;doprnt.c: 1345: if(width && flag & 0x03)
 11347                           
 11348                           ; BSR set to: 1
 11349  000A48  5119               	movf	sprintf@width& (0+255),w,b
 11350  000A4A  111A               	iorwf	(sprintf@width+1)& (0+255),w,b
 11351  000A4C  B4D8               	btfsc	status,2,c
 11352  000A4E  D011               	goto	l2745
 11353                           
 11354                           ; BSR set to: 1
 11355  000A50  0E03               	movlw	3
 11356  000A52  151B               	andwf	sprintf@flag& (0+255),w,b
 11357  000A54  0100               	movlb	0	; () banked
 11358  000A56  6FEB               	movwf	??_sprintf& (0+255),b
 11359  000A58  0E00               	movlw	0
 11360  000A5A  0101               	movlb	1	; () banked
 11361  000A5C  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 11362  000A5E  0100               	movlb	0	; () banked
 11363  000A60  6FEC               	movwf	(??_sprintf+1)& (0+255),b
 11364  000A62  51EB               	movf	??_sprintf& (0+255),w,b
 11365  000A64  11EC               	iorwf	(??_sprintf+1)& (0+255),w,b
 11366  000A66  B4D8               	btfsc	status,2,c
 11367  000A68  D004               	goto	l2745
 11368                           
 11369                           ; BSR set to: 0
 11370                           ;doprnt.c: 1346: width--;
 11371  000A6A  0101               	movlb	1	; () banked
 11372  000A6C  0719               	decf	sprintf@width& (0+255),f,b
 11373  000A6E  A0D8               	btfss	status,0,c
 11374  000A70  071A               	decf	(sprintf@width+1)& (0+255),f,b
 11375  000A72                     l2745:
 11376                           
 11377                           ;doprnt.c: 1381: if(width > c)
 11378                           
 11379                           ; BSR set to: 1
 11380  000A72  0E80               	movlw	128
 11381  000A74  0101               	movlb	1	; () banked
 11382  000A76  BF1D               	btfsc	sprintf@c& (0+255),7,b
 11383  000A78  0E7F               	movlw	127
 11384  000A7A  0100               	movlb	0	; () banked
 11385  000A7C  6FEB               	movwf	??_sprintf& (0+255),b
 11386  000A7E  0101               	movlb	1	; () banked
 11387  000A80  5119               	movf	sprintf@width& (0+255),w,b
 11388  000A82  5D1D               	subwf	sprintf@c& (0+255),w,b
 11389  000A84  511A               	movf	(sprintf@width+1)& (0+255),w,b
 11390  000A86  0A80               	xorlw	128
 11391  000A88  0100               	movlb	0	; () banked
 11392  000A8A  59EB               	subwfb	??_sprintf& (0+255),w,b
 11393  000A8C  B0D8               	btfsc	status,0,c
 11394  000A8E  D008               	goto	l2746
 11395                           
 11396                           ; BSR set to: 0
 11397                           ;doprnt.c: 1382: width -= c;
 11398  000A90  0101               	movlb	1	; () banked
 11399  000A92  511D               	movf	sprintf@c& (0+255),w,b
 11400  000A94  5F19               	subwf	sprintf@width& (0+255),f,b
 11401  000A96  0E00               	movlw	0
 11402  000A98  BF1D               	btfsc	sprintf@c& (0+255),7,b
 11403  000A9A  0EFF               	movlw	255
 11404  000A9C  5B1A               	subwfb	(sprintf@width+1)& (0+255),f,b
 11405  000A9E  D005               	goto	l2747
 11406  000AA0                     l2746:
 11407                           
 11408                           ;doprnt.c: 1383: else
 11409                           ;doprnt.c: 1384: width = 0;
 11410                           
 11411                           ; BSR set to: 1
 11412  000AA0  0E00               	movlw	0
 11413  000AA2  0101               	movlb	1	; () banked
 11414  000AA4  6F1A               	movwf	(sprintf@width+1)& (0+255),b
 11415  000AA6  0E00               	movlw	0
 11416  000AA8  6F19               	movwf	sprintf@width& (0+255),b
 11417  000AAA                     l2747:
 11418                           
 11419                           ; BSR set to: 1
 11420                           ;doprnt.c: 1387: if(flag & 0x04) {
 11421                           
 11422                           ; BSR set to: 1
 11423  000AAA  A51B               	btfss	sprintf@flag& (0+255),2,b
 11424  000AAC  D028               	goto	l2748
 11425                           
 11426                           ; BSR set to: 1
 11427                           ;doprnt.c: 1392: if(flag & 0x03)
 11428  000AAE  0E03               	movlw	3
 11429  000AB0  151B               	andwf	sprintf@flag& (0+255),w,b
 11430  000AB2  0100               	movlb	0	; () banked
 11431  000AB4  6FEB               	movwf	??_sprintf& (0+255),b
 11432  000AB6  0E00               	movlw	0
 11433  000AB8  0101               	movlb	1	; () banked
 11434  000ABA  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 11435  000ABC  0100               	movlb	0	; () banked
 11436  000ABE  6FEC               	movwf	(??_sprintf+1)& (0+255),b
 11437  000AC0  51EB               	movf	??_sprintf& (0+255),w,b
 11438  000AC2  11EC               	iorwf	(??_sprintf+1)& (0+255),w,b
 11439  000AC4  B4D8               	btfsc	status,2,c
 11440  000AC6  D008               	goto	l2749
 11441                           
 11442                           ; BSR set to: 0
 11443                           ;doprnt.c: 1393: ((*sp++ = ('-')));
 11444  000AC8  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 11445  000ACC  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 11446  000AD0  0E2D               	movlw	45
 11447  000AD2  6EDF               	movwf	indf2,c
 11448                           
 11449                           ; BSR set to: 0
 11450  000AD4  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 11451  000AD6  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 11452  000AD8                     l2749:
 11453                           
 11454                           ; BSR set to: 0
 11455                           ;doprnt.c: 1415: if(width)
 11456                           
 11457                           ; BSR set to: 0
 11458  000AD8  0101               	movlb	1	; () banked
 11459  000ADA  5119               	movf	sprintf@width& (0+255),w,b
 11460  000ADC  111A               	iorwf	(sprintf@width+1)& (0+255),w,b
 11461  000ADE  B4D8               	btfsc	status,2,c
 11462  000AE0  D038               	goto	l2757
 11463                           
 11464                           ; BSR set to: 1
 11465                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 11466                           
 11467                           ; BSR set to: 1
 11468                           
 11469                           ;doprnt.c: 1416: do
 11470  000AE2  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 11471  000AE6  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 11472  000AEA  0E30               	movlw	48
 11473  000AEC  6EDF               	movwf	indf2,c
 11474                           
 11475                           ; BSR set to: 1
 11476  000AEE  0100               	movlb	0	; () banked
 11477  000AF0  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 11478  000AF2  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 11479                           
 11480                           ; BSR set to: 0
 11481                           ;doprnt.c: 1418: while(--width);
 11482  000AF4  0101               	movlb	1	; () banked
 11483  000AF6  0719               	decf	sprintf@width& (0+255),f,b
 11484  000AF8  A0D8               	btfss	status,0,c
 11485  000AFA  071A               	decf	(sprintf@width+1)& (0+255),f,b
 11486  000AFC  D7EE               	goto	L35
 11487  000AFE                     l2748:
 11488                           
 11489                           ; BSR set to: 1
 11490                           ;doprnt.c: 1422: {
 11491                           ;doprnt.c: 1424: if(width
 11492                           ;doprnt.c: 1428: )
 11493                           
 11494                           ; BSR set to: 1
 11495  000AFE  5119               	movf	sprintf@width& (0+255),w,b
 11496  000B00  111A               	iorwf	(sprintf@width+1)& (0+255),w,b
 11497  000B02  B4D8               	btfsc	status,2,c
 11498  000B04  D011               	goto	u8390
 11499  000B06                     u8380:
 11500                           
 11501                           ; BSR set to: 1
 11502                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 11503                           
 11504                           ; BSR set to: 1
 11505                           
 11506                           ;doprnt.c: 1429: do
 11507  000B06  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 11508  000B0A  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 11509  000B0E  0E20               	movlw	32
 11510  000B10  6EDF               	movwf	indf2,c
 11511                           
 11512                           ; BSR set to: 1
 11513  000B12  0100               	movlb	0	; () banked
 11514  000B14  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 11515  000B16  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 11516                           
 11517                           ; BSR set to: 0
 11518                           ;doprnt.c: 1431: while(--width);
 11519  000B18  0101               	movlb	1	; () banked
 11520  000B1A  0719               	decf	sprintf@width& (0+255),f,b
 11521  000B1C  A0D8               	btfss	status,0,c
 11522  000B1E  071A               	decf	(sprintf@width+1)& (0+255),f,b
 11523  000B20  5119               	movf	sprintf@width& (0+255),w,b
 11524  000B22  111A               	iorwf	(sprintf@width+1)& (0+255),w,b
 11525  000B24  A4D8               	btfss	status,2,c
 11526  000B26  D7EF               	goto	u8380
 11527  000B28                     u8390:
 11528                           
 11529                           ; BSR set to: 1
 11530                           ;doprnt.c: 1438: if(flag & 0x03)
 11531                           
 11532                           ; BSR set to: 1
 11533                           
 11534                           ; BSR set to: 1
 11535  000B28  0E03               	movlw	3
 11536  000B2A  151B               	andwf	sprintf@flag& (0+255),w,b
 11537  000B2C  0100               	movlb	0	; () banked
 11538  000B2E  6FEB               	movwf	??_sprintf& (0+255),b
 11539  000B30  0E00               	movlw	0
 11540  000B32  0101               	movlb	1	; () banked
 11541  000B34  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 11542  000B36  0100               	movlb	0	; () banked
 11543  000B38  6FEC               	movwf	(??_sprintf+1)& (0+255),b
 11544  000B3A  51EB               	movf	??_sprintf& (0+255),w,b
 11545  000B3C  11EC               	iorwf	(??_sprintf+1)& (0+255),w,b
 11546  000B3E  B4D8               	btfsc	status,2,c
 11547  000B40  D008               	goto	l2757
 11548                           
 11549                           ; BSR set to: 0
 11550                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 11551  000B42  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 11552  000B46  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 11553  000B4A  0E2D               	movlw	45
 11554  000B4C  6EDF               	movwf	indf2,c
 11555                           
 11556                           ; BSR set to: 0
 11557  000B4E  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 11558  000B50  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 11559  000B52                     l2757:
 11560                           
 11561                           ;doprnt.c: 1469: }
 11562                           ;doprnt.c: 1472: prec = c;
 11563                           
 11564                           ; BSR set to: 0
 11565                           
 11566                           ; BSR set to: 0
 11567  000B52  0101               	movlb	1	; () banked
 11568  000B54  511D               	movf	sprintf@c& (0+255),w,b
 11569  000B56  6F0A               	movwf	sprintf@prec& (0+255),b
 11570  000B58  6B0B               	clrf	(sprintf@prec+1)& (0+255),b
 11571  000B5A  BF0A               	btfsc	sprintf@prec& (0+255),7,b
 11572  000B5C  070B               	decf	(sprintf@prec+1)& (0+255),f,b
 11573                           
 11574                           ;doprnt.c: 1474: while(prec--) {
 11575  000B5E  D08C               	goto	l2758
 11576  000B60                     
 11577                           ; BSR set to: 1
 11578                           ;doprnt.c: 1486: case 0xC0:
 11579                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 11580                           
 11581                           ; BSR set to: 1
 11582                           
 11583                           ; BSR set to: 1
 11584  000B60  C10A  F0EB         	movff	sprintf@prec,??_sprintf
 11585  000B64  C10B  F0EC         	movff	sprintf@prec+1,??_sprintf+1
 11586  000B68  0100               	movlb	0	; () banked
 11587  000B6A  90D8               	bcf	status,0,c
 11588  000B6C  37EB               	rlcf	??_sprintf& (0+255),f,b
 11589  000B6E  37EC               	rlcf	(??_sprintf+1)& (0+255),f,b
 11590  000B70  90D8               	bcf	status,0,c
 11591  000B72  37EB               	rlcf	??_sprintf& (0+255),f,b
 11592  000B74  37EC               	rlcf	(??_sprintf+1)& (0+255),f,b
 11593  000B76  0E09               	movlw	low _dpowers
 11594  000B78  25EB               	addwf	??_sprintf& (0+255),w,b
 11595  000B7A  6EF6               	movwf	tblptrl,c
 11596  000B7C  0E7C               	movlw	high _dpowers
 11597  000B7E  21EC               	addwfc	(??_sprintf+1)& (0+255),w,b
 11598  000B80  6EF7               	movwf	tblptrh,c
 11599  000B82                     	if	0	;There are less than 3 active tblptr bytes
 11600  000B82                     	endif
 11601  000B82  0009               	tblrd		*+
 11602  000B84  CFF5 F064          	movff	tablat,___lldiv@divisor
 11603  000B88  0009               	tblrd		*+
 11604  000B8A  CFF5 F065          	movff	tablat,___lldiv@divisor+1
 11605  000B8E  0009               	tblrd		*+
 11606  000B90  CFF5 F066          	movff	tablat,___lldiv@divisor+2
 11607  000B94  000A               	tblrd		*-
 11608  000B96  CFF5 F067          	movff	tablat,___lldiv@divisor+3
 11609  000B9A  C112  F060         	movff	sprintf@val,___lldiv@dividend
 11610  000B9E  C113  F061         	movff	sprintf@val+1,___lldiv@dividend+1
 11611  000BA2  C114  F062         	movff	sprintf@val+2,___lldiv@dividend+2
 11612  000BA6  C115  F063         	movff	sprintf@val+3,___lldiv@dividend+3
 11613  000BAA  EC53  F024         	call	___lldiv	;wreg free
 11614  000BAE  C060  F06D         	movff	?___lldiv,___llmod@dividend
 11615  000BB2  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
 11616  000BB6  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
 11617  000BBA  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
 11618  000BBE  0E0A               	movlw	10
 11619  000BC0  0100               	movlb	0	; () banked
 11620  000BC2  6F71               	movwf	___llmod@divisor& (0+255),b
 11621  000BC4  0E00               	movlw	0
 11622  000BC6  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 11623  000BC8  0E00               	movlw	0
 11624  000BCA  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 11625  000BCC  0E00               	movlw	0
 11626  000BCE  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 11627  000BD0  EC7E  F025         	call	___llmod	;wreg free
 11628  000BD4  0100               	movlb	0	; () banked
 11629  000BD6  516D               	movf	?___llmod& (0+255),w,b
 11630  000BD8  0F30               	addlw	48
 11631  000BDA  0101               	movlb	1	; () banked
 11632  000BDC  6F1D               	movwf	sprintf@c& (0+255),b
 11633                           
 11634                           ;doprnt.c: 1491: break;
 11635  000BDE  D043               	goto	l2763
 11636  000BE0                     
 11637                           ; BSR set to: 1
 11638                           ;doprnt.c: 1499: {
 11639                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 11640                           
 11641                           ; BSR set to: 1
 11642  000BE0  C112  F060         	movff	sprintf@val,___lldiv@dividend
 11643  000BE4  C113  F061         	movff	sprintf@val+1,___lldiv@dividend+1
 11644  000BE8  C114  F062         	movff	sprintf@val+2,___lldiv@dividend+2
 11645  000BEC  C115  F063         	movff	sprintf@val+3,___lldiv@dividend+3
 11646  000BF0  C10A  F0EB         	movff	sprintf@prec,??_sprintf
 11647  000BF4  C10B  F0EC         	movff	sprintf@prec+1,??_sprintf+1
 11648  000BF8  0100               	movlb	0	; () banked
 11649  000BFA  90D8               	bcf	status,0,c
 11650  000BFC  37EB               	rlcf	??_sprintf& (0+255),f,b
 11651  000BFE  37EC               	rlcf	(??_sprintf+1)& (0+255),f,b
 11652  000C00  90D8               	bcf	status,0,c
 11653  000C02  37EB               	rlcf	??_sprintf& (0+255),f,b
 11654  000C04  37EC               	rlcf	(??_sprintf+1)& (0+255),f,b
 11655  000C06  0E7F               	movlw	low _hexpowers
 11656  000C08  25EB               	addwf	??_sprintf& (0+255),w,b
 11657  000C0A  6EF6               	movwf	tblptrl,c
 11658  000C0C  0E7C               	movlw	high _hexpowers
 11659  000C0E  21EC               	addwfc	(??_sprintf+1)& (0+255),w,b
 11660  000C10  6EF7               	movwf	tblptrh,c
 11661  000C12                     	if	0	;There are less than 3 active tblptr bytes
 11662  000C12                     	endif
 11663  000C12  0009               	tblrd		*+
 11664  000C14  CFF5 F064          	movff	tablat,___lldiv@divisor
 11665  000C18  0009               	tblrd		*+
 11666  000C1A  CFF5 F065          	movff	tablat,___lldiv@divisor+1
 11667  000C1E  0009               	tblrd		*+
 11668  000C20  CFF5 F066          	movff	tablat,___lldiv@divisor+2
 11669  000C24  000A               	tblrd		*-
 11670  000C26  CFF5 F067          	movff	tablat,___lldiv@divisor+3
 11671  000C2A  EC53  F024         	call	___lldiv	;wreg free
 11672  000C2E  0100               	movlb	0	; () banked
 11673  000C30  5160               	movf	?___lldiv& (0+255),w,b
 11674  000C32  0B0F               	andlw	15
 11675  000C34  0101               	movlb	1	; () banked
 11676  000C36  6F03               	movwf	sprintf@idx& (0+255),b
 11677                           
 11678                           ; BSR set to: 1
 11679                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 11680  000C38  5103               	movf	sprintf@idx& (0+255),w,b
 11681  000C3A  0D01               	mullw	1
 11682  000C3C  0ED2               	movlw	low STR_43
 11683  000C3E  24F3               	addwf	prodl,w,c
 11684  000C40  6EF6               	movwf	tblptrl,c
 11685  000C42  0E7E               	movlw	high STR_43
 11686  000C44  20F4               	addwfc	prodh,w,c
 11687  000C46  6EF7               	movwf	tblptrh,c
 11688  000C48                     	if	0	;There are less than 3 active tblptr bytes
 11689  000C48                     	endif
 11690  000C48  0008               	tblrd		*
 11691  000C4A  CFF5 F11D          	movff	tablat,sprintf@c
 11692                           
 11693                           ; BSR set to: 1
 11694                           ;doprnt.c: 1523: }
 11695                           
 11696                           ;doprnt.c: 1508: }
 11697                           ;doprnt.c: 1510: break;
 11698  000C4E  D00B               	goto	l2763
 11699  000C50                     l9272:
 11700                           
 11701                           ; BSR set to: 1
 11702  000C50  511B               	movf	sprintf@flag& (0+255),w,b
 11703  000C52  0BC0               	andlw	192
 11704                           
 11705                           ; Switch size 1, requested type "space"
 11706                           ; Number of cases is 3, Range of values is 0 to 192
 11707                           ; switch strategies available:
 11708                           ; Name         Instructions Cycles
 11709                           ; simple_byte           10     6 (average)
 11710                           ;	Chosen strategy is simple_byte
 11711  000C54  0A00               	xorlw	0	; case 0
 11712  000C56  B4D8               	btfsc	status,2,c
 11713  000C58  D783               	goto	l2761
 11714  000C5A  0A80               	xorlw	128	; case 128
 11715  000C5C  B4D8               	btfsc	status,2,c
 11716  000C5E  D7C0               	goto	l2764
 11717  000C60  0A40               	xorlw	64	; case 192
 11718  000C62  B4D8               	btfsc	status,2,c
 11719  000C64  D77D               	goto	l2761
 11720  000C66                     l2763:
 11721                           
 11722                           ; BSR set to: 1
 11723                           ;doprnt.c: 1524: ((*sp++ = (c)));
 11724                           
 11725                           ; BSR set to: 1
 11726  000C66  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 11727  000C6A  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 11728  000C6E  C11D  FFDF         	movff	sprintf@c,indf2
 11729                           
 11730                           ; BSR set to: 1
 11731  000C72  0100               	movlb	0	; () banked
 11732  000C74  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 11733  000C76  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 11734  000C78                     l2758:
 11735                           
 11736                           ; BSR set to: 0
 11737  000C78  0101               	movlb	1	; () banked
 11738  000C7A  070A               	decf	sprintf@prec& (0+255),f,b
 11739  000C7C  A0D8               	btfss	status,0,c
 11740  000C7E  070B               	decf	(sprintf@prec+1)& (0+255),f,b
 11741  000C80  290A               	incf	sprintf@prec& (0+255),w,b
 11742  000C82  E1E6               	bnz	l9272
 11743  000C84  290B               	incf	(sprintf@prec+1)& (0+255),w,b
 11744  000C86  A4D8               	btfss	status,2,c
 11745  000C88  D7E3               	goto	l2760
 11746  000C8A                     u8410:
 11747                           
 11748                           ; BSR set to: 1
 11749                           
 11750                           ; BSR set to: 1
 11751  000C8A  C0C1  FFF6         	movff	sprintf@f,tblptrl
 11752  000C8E  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
 11753  000C92  0100               	movlb	0	; () banked
 11754  000C94  4BC1               	infsnz	sprintf@f& (0+255),f,b
 11755  000C96  2BC2               	incf	(sprintf@f+1)& (0+255),f,b
 11756  000C98                     	if	0	;tblptru may be non-zero
 11757  000C98                     	endif
 11758  000C98                     	if	0	;tblptru may be non-zero
 11759  000C98                     	endif
 11760  000C98  0008               	tblrd		*
 11761  000C9A  CFF5 F11D          	movff	tablat,sprintf@c
 11762  000C9E  0101               	movlb	1	; () banked
 11763  000CA0  511D               	movf	sprintf@c& (0+255),w,b
 11764  000CA2  A4D8               	btfss	status,2,c
 11765  000CA4  EF10  F000         	goto	l2642
 11766  000CA8                     u8420:
 11767                           
 11768                           ;doprnt.c: 1538: *sp = 0;
 11769                           
 11770                           ; BSR set to: 1
 11771                           
 11772                           ;doprnt.c: 1525: }
 11773                           ;doprnt.c: 1533: }
 11774                           ;doprnt.c: 1535: alldone:
 11775                           
 11776                           ; BSR set to: 1
 11777  000CA8  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 11778  000CAC  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 11779  000CB0  0E00               	movlw	0
 11780  000CB2  6EDF               	movwf	indf2,c
 11781  000CB4  0012               	return	
 11782  000CB6                     __end_of_sprintf:
 11783                           	opt stack 0
 11784                           tblptru	equ	0xFF8
 11785                           tblptrh	equ	0xFF7
 11786                           tblptrl	equ	0xFF6
 11787                           tablat	equ	0xFF5
 11788                           prodh	equ	0xFF4
 11789                           prodl	equ	0xFF3
 11790                           intcon	equ	0xFF2
 11791                           postinc0	equ	0xFEE
 11792                           wreg	equ	0xFE8
 11793                           indf1	equ	0xFE7
 11794                           postdec1	equ	0xFE5
 11795                           fsr1h	equ	0xFE2
 11796                           fsr1l	equ	0xFE1
 11797                           indf2	equ	0xFDF
 11798                           postinc2	equ	0xFDE
 11799                           postdec2	equ	0xFDD
 11800                           plusw2	equ	0xFDB
 11801                           fsr2h	equ	0xFDA
 11802                           fsr2l	equ	0xFD9
 11803                           status	equ	0xFD8
 11804                           
 11805 ;; *************** function _scale *****************
 11806 ;; Defined at:
 11807 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\doprnt.c"
 11808 ;; Parameters:    Size  Location     Type
 11809 ;;  scl             1    wreg     char 
 11810 ;; Auto vars:     Size  Location     Type
 11811 ;;  scl             1   53[BANK0 ] char 
 11812 ;; Return value:  Size  Location     Type
 11813 ;;                  3   47[BANK0 ] char 
 11814 ;; Registers used:
 11815 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11816 ;; Tracked objects:
 11817 ;;		On entry : 0/0
 11818 ;;		On exit  : 0/0
 11819 ;;		Unchanged: 0/0
 11820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11821 ;;      Params:         0       3       0       0       0       0       0       0       0
 11822 ;;      Locals:         0       4       0       0       0       0       0       0       0
 11823 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11824 ;;      Totals:         0       7       0       0       0       0       0       0       0
 11825 ;;Total ram usage:        7 bytes
 11826 ;; Hardware stack levels used:    1
 11827 ;; Hardware stack levels required when called:   12
 11828 ;; This function calls:
 11829 ;;		___awdiv
 11830 ;;		___awmod
 11831 ;;		___ftmul
 11832 ;;		___wmul
 11833 ;; This function is called by:
 11834 ;;		_sprintf
 11835 ;; This function uses a non-reentrant model
 11836 ;;
 11837                           
 11838                           	psect	text33
 11839  0016A6                     __ptext33:
 11840                           	opt stack 0
 11841  0016A6                     _scale:
 11842                           	opt stack 17
 11843                           
 11844                           ;incstack = 0
 11845                           ;scale@scl stored from wreg
 11846  0016A6  0100               	movlb	0	; () banked
 11847  0016A8  6F95               	movwf	scale@scl& (0+255),b
 11848                           
 11849                           ;doprnt.c: 428: if(scl < 0) {
 11850  0016AA  0100               	movlb	0	; () banked
 11851  0016AC  AF95               	btfss	scale@scl& (0+255),7,b
 11852  0016AE  D10C               	goto	l2631
 11853                           
 11854                           ; BSR set to: 0
 11855                           ;doprnt.c: 429: scl = -scl;
 11856  0016B0  6D95               	negf	scale@scl& (0+255),b
 11857                           
 11858                           ;doprnt.c: 430: if(scl>=110)
 11859  0016B2  5195               	movf	scale@scl& (0+255),w,b
 11860  0016B4  0A80               	xorlw	128
 11861  0016B6  0F12               	addlw	-238
 11862  0016B8  A0D8               	btfss	status,0,c
 11863  0016BA  D097               	goto	l2632
 11864                           
 11865                           ; BSR set to: 0
 11866                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 11867  0016BC  0E00               	movlw	0
 11868  0016BE  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11869  0016C0  0E03               	movlw	3
 11870  0016C2  6F70               	movwf	___wmul@multiplicand& (0+255),b
 11871  0016C4  0E00               	movlw	0
 11872  0016C6  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 11873  0016C8  0E0A               	movlw	10
 11874  0016CA  6F68               	movwf	___awdiv@divisor& (0+255),b
 11875  0016CC  0E00               	movlw	0
 11876  0016CE  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 11877  0016D0  0E64               	movlw	100
 11878  0016D2  6F62               	movwf	___awmod@divisor& (0+255),b
 11879  0016D4  5195               	movf	scale@scl& (0+255),w,b
 11880  0016D6  6F60               	movwf	___awmod@dividend& (0+255),b
 11881  0016D8  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 11882  0016DA  BF60               	btfsc	___awmod@dividend& (0+255),7,b
 11883  0016DC  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
 11884  0016DE  EC0F  F025         	call	___awmod	;wreg free
 11885  0016E2  C060  F066         	movff	?___awmod,___awdiv@dividend
 11886  0016E6  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
 11887  0016EA  ECCD  F023         	call	___awdiv	;wreg free
 11888  0016EE  0E09               	movlw	9
 11889  0016F0  0100               	movlb	0	; () banked
 11890  0016F2  2566               	addwf	?___awdiv& (0+255),w,b
 11891  0016F4  6F6E               	movwf	___wmul@multiplier& (0+255),b
 11892  0016F6  0E00               	movlw	0
 11893  0016F8  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 11894  0016FA  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 11895  0016FC  ECE8  F029         	call	___wmul	;wreg free
 11896  001700  0E58               	movlw	low __npowers_
 11897  001702  0100               	movlb	0	; () banked
 11898  001704  256E               	addwf	?___wmul& (0+255),w,b
 11899  001706  6EF6               	movwf	tblptrl,c
 11900  001708  0E7C               	movlw	high __npowers_
 11901  00170A  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 11902  00170C  6EF7               	movwf	tblptrh,c
 11903  00170E                     	if	0	;There are less than 3 active tblptr bytes
 11904  00170E                     	endif
 11905  00170E  0009               	tblrd		*+
 11906  001710  CFF5 F083          	movff	tablat,___ftmul@f2
 11907  001714  0009               	tblrd		*+
 11908  001716  CFF5 F084          	movff	tablat,___ftmul@f2+1
 11909  00171A  000A               	tblrd		*-
 11910  00171C  CFF5 F085          	movff	tablat,___ftmul@f2+2
 11911  001720  0E00               	movlw	0
 11912  001722  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 11913  001724  0E64               	movlw	100
 11914  001726  6F68               	movwf	___awdiv@divisor& (0+255),b
 11915  001728  5195               	movf	scale@scl& (0+255),w,b
 11916  00172A  6F66               	movwf	___awdiv@dividend& (0+255),b
 11917  00172C  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
 11918  00172E  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
 11919  001730  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
 11920  001732  ECCD  F023         	call	___awdiv	;wreg free
 11921  001736  0E12               	movlw	18
 11922  001738  0100               	movlb	0	; () banked
 11923  00173A  2566               	addwf	?___awdiv& (0+255),w,b
 11924  00173C  6F6E               	movwf	___wmul@multiplier& (0+255),b
 11925  00173E  0E00               	movlw	0
 11926  001740  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 11927  001742  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 11928  001744  0E00               	movlw	0
 11929  001746  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11930  001748  0E03               	movlw	3
 11931  00174A  6F70               	movwf	___wmul@multiplicand& (0+255),b
 11932  00174C  ECE8  F029         	call	___wmul	;wreg free
 11933  001750  0E58               	movlw	low __npowers_
 11934  001752  0100               	movlb	0	; () banked
 11935  001754  256E               	addwf	?___wmul& (0+255),w,b
 11936  001756  6EF6               	movwf	tblptrl,c
 11937  001758  0E7C               	movlw	high __npowers_
 11938  00175A  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 11939  00175C  6EF7               	movwf	tblptrh,c
 11940  00175E                     	if	0	;There are less than 3 active tblptr bytes
 11941  00175E                     	endif
 11942  00175E  0009               	tblrd		*+
 11943  001760  CFF5 F080          	movff	tablat,___ftmul@f1
 11944  001764  0009               	tblrd		*+
 11945  001766  CFF5 F081          	movff	tablat,___ftmul@f1+1
 11946  00176A  000A               	tblrd		*-
 11947  00176C  CFF5 F082          	movff	tablat,___ftmul@f1+2
 11948  001770  ECA2  F01C         	call	___ftmul	;wreg free
 11949  001774  C080  F092         	movff	?___ftmul,_scale$5965
 11950  001778  C081  F093         	movff	?___ftmul+1,_scale$5965+1
 11951  00177C  C082  F094         	movff	?___ftmul+2,_scale$5965+2
 11952                           
 11953                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 11954  001780  C092  F080         	movff	_scale$5965,___ftmul@f1
 11955  001784  C093  F081         	movff	_scale$5965+1,___ftmul@f1+1
 11956  001788  C094  F082         	movff	_scale$5965+2,___ftmul@f1+2
 11957  00178C  0E00               	movlw	0
 11958  00178E  0100               	movlb	0	; () banked
 11959  001790  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11960  001792  0E03               	movlw	3
 11961  001794  6F70               	movwf	___wmul@multiplicand& (0+255),b
 11962  001796  0E00               	movlw	0
 11963  001798  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 11964  00179A  0E0A               	movlw	10
 11965  00179C  6F62               	movwf	___awmod@divisor& (0+255),b
 11966  00179E  5195               	movf	scale@scl& (0+255),w,b
 11967  0017A0  6F60               	movwf	___awmod@dividend& (0+255),b
 11968  0017A2  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 11969  0017A4  BF60               	btfsc	___awmod@dividend& (0+255),7,b
 11970  0017A6  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
 11971  0017A8  EC0F  F025         	call	___awmod	;wreg free
 11972  0017AC  C060  F06E         	movff	?___awmod,___wmul@multiplier
 11973  0017B0  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
 11974  0017B4  ECE8  F029         	call	___wmul	;wreg free
 11975  0017B8  0E58               	movlw	low __npowers_
 11976  0017BA  0100               	movlb	0	; () banked
 11977  0017BC  256E               	addwf	?___wmul& (0+255),w,b
 11978  0017BE  6EF6               	movwf	tblptrl,c
 11979  0017C0  0E7C               	movlw	high __npowers_
 11980  0017C2  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 11981  0017C4  6EF7               	movwf	tblptrh,c
 11982  0017C6                     	if	0	;There are less than 3 active tblptr bytes
 11983  0017C6                     	endif
 11984  0017C6  0009               	tblrd		*+
 11985  0017C8  CFF5 F083          	movff	tablat,___ftmul@f2
 11986  0017CC  0009               	tblrd		*+
 11987  0017CE  CFF5 F084          	movff	tablat,___ftmul@f2+1
 11988  0017D2  000A               	tblrd		*-
 11989  0017D4  CFF5 F085          	movff	tablat,___ftmul@f2+2
 11990  0017D8  ECA2  F01C         	call	___ftmul	;wreg free
 11991  0017DC  C080  F08F         	movff	?___ftmul,?_scale
 11992  0017E0  C081  F090         	movff	?___ftmul+1,?_scale+1
 11993  0017E4  C082  F091         	movff	?___ftmul+2,?_scale+2
 11994  0017E8  0012               	return	
 11995  0017EA                     l2632:
 11996                           
 11997                           ;doprnt.c: 432: else if(scl > 10)
 11998  0017EA  0100               	movlb	0	; () banked
 11999  0017EC  5195               	movf	scale@scl& (0+255),w,b
 12000  0017EE  0A80               	xorlw	128
 12001  0017F0  0F75               	addlw	-139
 12002  0017F2  A0D8               	btfss	status,0,c
 12003  0017F4  D056               	goto	l2635
 12004                           
 12005                           ; BSR set to: 0
 12006                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 12007  0017F6  0E00               	movlw	0
 12008  0017F8  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 12009  0017FA  0E0A               	movlw	10
 12010  0017FC  6F68               	movwf	___awdiv@divisor& (0+255),b
 12011  0017FE  5195               	movf	scale@scl& (0+255),w,b
 12012  001800  6F66               	movwf	___awdiv@dividend& (0+255),b
 12013  001802  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
 12014  001804  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
 12015  001806  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
 12016  001808  ECCD  F023         	call	___awdiv	;wreg free
 12017  00180C  0E09               	movlw	9
 12018  00180E  0100               	movlb	0	; () banked
 12019  001810  2566               	addwf	?___awdiv& (0+255),w,b
 12020  001812  6F6E               	movwf	___wmul@multiplier& (0+255),b
 12021  001814  0E00               	movlw	0
 12022  001816  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 12023  001818  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 12024  00181A  0E00               	movlw	0
 12025  00181C  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12026  00181E  0E03               	movlw	3
 12027  001820  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12028  001822  ECE8  F029         	call	___wmul	;wreg free
 12029  001826  0E58               	movlw	low __npowers_
 12030  001828  0100               	movlb	0	; () banked
 12031  00182A  256E               	addwf	?___wmul& (0+255),w,b
 12032  00182C  6EF6               	movwf	tblptrl,c
 12033  00182E  0E7C               	movlw	high __npowers_
 12034  001830  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12035  001832  6EF7               	movwf	tblptrh,c
 12036  001834                     	if	0	;There are less than 3 active tblptr bytes
 12037  001834                     	endif
 12038  001834  0009               	tblrd		*+
 12039  001836  CFF5 F080          	movff	tablat,___ftmul@f1
 12040  00183A  0009               	tblrd		*+
 12041  00183C  CFF5 F081          	movff	tablat,___ftmul@f1+1
 12042  001840  000A               	tblrd		*-
 12043  001842  CFF5 F082          	movff	tablat,___ftmul@f1+2
 12044  001846  0E00               	movlw	0
 12045  001848  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12046  00184A  0E03               	movlw	3
 12047  00184C  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12048  00184E  0E00               	movlw	0
 12049  001850  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12050  001852  0E0A               	movlw	10
 12051  001854  6F62               	movwf	___awmod@divisor& (0+255),b
 12052  001856  5195               	movf	scale@scl& (0+255),w,b
 12053  001858  6F60               	movwf	___awmod@dividend& (0+255),b
 12054  00185A  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12055  00185C  BF60               	btfsc	___awmod@dividend& (0+255),7,b
 12056  00185E  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
 12057  001860  EC0F  F025         	call	___awmod	;wreg free
 12058  001864  C060  F06E         	movff	?___awmod,___wmul@multiplier
 12059  001868  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
 12060  00186C  ECE8  F029         	call	___wmul	;wreg free
 12061  001870  0E58               	movlw	low __npowers_
 12062  001872  0100               	movlb	0	; () banked
 12063  001874  256E               	addwf	?___wmul& (0+255),w,b
 12064  001876  6EF6               	movwf	tblptrl,c
 12065  001878  0E7C               	movlw	high __npowers_
 12066  00187A  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12067  00187C  6EF7               	movwf	tblptrh,c
 12068  00187E                     	if	0	;There are less than 3 active tblptr bytes
 12069  00187E                     	endif
 12070  00187E  0009               	tblrd		*+
 12071  001880  CFF5 F083          	movff	tablat,___ftmul@f2
 12072  001884  0009               	tblrd		*+
 12073  001886  CFF5 F084          	movff	tablat,___ftmul@f2+1
 12074  00188A  000A               	tblrd		*-
 12075  00188C  CFF5 F085          	movff	tablat,___ftmul@f2+2
 12076  001890  ECA2  F01C         	call	___ftmul	;wreg free
 12077  001894  C080  F08F         	movff	?___ftmul,?_scale
 12078  001898  C081  F090         	movff	?___ftmul+1,?_scale+1
 12079  00189C  C082  F091         	movff	?___ftmul+2,?_scale+2
 12080  0018A0  0012               	return	
 12081  0018A2                     l2635:
 12082                           
 12083                           ;doprnt.c: 434: return _npowers_[scl];
 12084  0018A2  0100               	movlb	0	; () banked
 12085  0018A4  5195               	movf	scale@scl& (0+255),w,b
 12086  0018A6  0D03               	mullw	3
 12087  0018A8  0E58               	movlw	low __npowers_
 12088  0018AA  24F3               	addwf	prodl,w,c
 12089  0018AC  6EF6               	movwf	tblptrl,c
 12090  0018AE  0E7C               	movlw	high __npowers_
 12091  0018B0  20F4               	addwfc	prodh,w,c
 12092  0018B2  6EF7               	movwf	tblptrh,c
 12093  0018B4                     	if	0	;There are less than 3 active tblptr bytes
 12094  0018B4                     	endif
 12095  0018B4  0009               	tblrd		*+
 12096  0018B6  CFF5 F08F          	movff	tablat,?_scale
 12097  0018BA  0009               	tblrd		*+
 12098  0018BC  CFF5 F090          	movff	tablat,?_scale+1
 12099  0018C0  000A               	tblrd		*-
 12100  0018C2  CFF5 F091          	movff	tablat,?_scale+2
 12101                           
 12102                           ; BSR set to: 0
 12103  0018C6  0012               	return	
 12104  0018C8                     l2631:
 12105                           
 12106                           ; BSR set to: 0
 12107                           ;doprnt.c: 435: }
 12108                           ;doprnt.c: 436: if(scl>=110)
 12109                           
 12110                           ; BSR set to: 0
 12111  0018C8  5195               	movf	scale@scl& (0+255),w,b
 12112  0018CA  0A80               	xorlw	128
 12113  0018CC  0F12               	addlw	-238
 12114  0018CE  A0D8               	btfss	status,0,c
 12115  0018D0  D097               	goto	l2636
 12116                           
 12117                           ; BSR set to: 0
 12118                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 12119  0018D2  0E00               	movlw	0
 12120  0018D4  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12121  0018D6  0E03               	movlw	3
 12122  0018D8  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12123  0018DA  0E00               	movlw	0
 12124  0018DC  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 12125  0018DE  0E0A               	movlw	10
 12126  0018E0  6F68               	movwf	___awdiv@divisor& (0+255),b
 12127  0018E2  0E00               	movlw	0
 12128  0018E4  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12129  0018E6  0E64               	movlw	100
 12130  0018E8  6F62               	movwf	___awmod@divisor& (0+255),b
 12131  0018EA  5195               	movf	scale@scl& (0+255),w,b
 12132  0018EC  6F60               	movwf	___awmod@dividend& (0+255),b
 12133  0018EE  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12134  0018F0  BF60               	btfsc	___awmod@dividend& (0+255),7,b
 12135  0018F2  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
 12136  0018F4  EC0F  F025         	call	___awmod	;wreg free
 12137  0018F8  C060  F066         	movff	?___awmod,___awdiv@dividend
 12138  0018FC  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
 12139  001900  ECCD  F023         	call	___awdiv	;wreg free
 12140  001904  0E09               	movlw	9
 12141  001906  0100               	movlb	0	; () banked
 12142  001908  2566               	addwf	?___awdiv& (0+255),w,b
 12143  00190A  6F6E               	movwf	___wmul@multiplier& (0+255),b
 12144  00190C  0E00               	movlw	0
 12145  00190E  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 12146  001910  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 12147  001912  ECE8  F029         	call	___wmul	;wreg free
 12148  001916  0E31               	movlw	low __powers_
 12149  001918  0100               	movlb	0	; () banked
 12150  00191A  256E               	addwf	?___wmul& (0+255),w,b
 12151  00191C  6EF6               	movwf	tblptrl,c
 12152  00191E  0E7C               	movlw	high __powers_
 12153  001920  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12154  001922  6EF7               	movwf	tblptrh,c
 12155  001924                     	if	0	;There are less than 3 active tblptr bytes
 12156  001924                     	endif
 12157  001924  0009               	tblrd		*+
 12158  001926  CFF5 F083          	movff	tablat,___ftmul@f2
 12159  00192A  0009               	tblrd		*+
 12160  00192C  CFF5 F084          	movff	tablat,___ftmul@f2+1
 12161  001930  000A               	tblrd		*-
 12162  001932  CFF5 F085          	movff	tablat,___ftmul@f2+2
 12163  001936  0E00               	movlw	0
 12164  001938  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 12165  00193A  0E64               	movlw	100
 12166  00193C  6F68               	movwf	___awdiv@divisor& (0+255),b
 12167  00193E  5195               	movf	scale@scl& (0+255),w,b
 12168  001940  6F66               	movwf	___awdiv@dividend& (0+255),b
 12169  001942  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
 12170  001944  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
 12171  001946  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
 12172  001948  ECCD  F023         	call	___awdiv	;wreg free
 12173  00194C  0E12               	movlw	18
 12174  00194E  0100               	movlb	0	; () banked
 12175  001950  2566               	addwf	?___awdiv& (0+255),w,b
 12176  001952  6F6E               	movwf	___wmul@multiplier& (0+255),b
 12177  001954  0E00               	movlw	0
 12178  001956  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 12179  001958  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 12180  00195A  0E00               	movlw	0
 12181  00195C  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12182  00195E  0E03               	movlw	3
 12183  001960  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12184  001962  ECE8  F029         	call	___wmul	;wreg free
 12185  001966  0E31               	movlw	low __powers_
 12186  001968  0100               	movlb	0	; () banked
 12187  00196A  256E               	addwf	?___wmul& (0+255),w,b
 12188  00196C  6EF6               	movwf	tblptrl,c
 12189  00196E  0E7C               	movlw	high __powers_
 12190  001970  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12191  001972  6EF7               	movwf	tblptrh,c
 12192  001974                     	if	0	;There are less than 3 active tblptr bytes
 12193  001974                     	endif
 12194  001974  0009               	tblrd		*+
 12195  001976  CFF5 F080          	movff	tablat,___ftmul@f1
 12196  00197A  0009               	tblrd		*+
 12197  00197C  CFF5 F081          	movff	tablat,___ftmul@f1+1
 12198  001980  000A               	tblrd		*-
 12199  001982  CFF5 F082          	movff	tablat,___ftmul@f1+2
 12200  001986  ECA2  F01C         	call	___ftmul	;wreg free
 12201  00198A  C080  F092         	movff	?___ftmul,_scale$5965
 12202  00198E  C081  F093         	movff	?___ftmul+1,_scale$5965+1
 12203  001992  C082  F094         	movff	?___ftmul+2,_scale$5965+2
 12204                           
 12205                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 12206  001996  C092  F080         	movff	_scale$5965,___ftmul@f1
 12207  00199A  C093  F081         	movff	_scale$5965+1,___ftmul@f1+1
 12208  00199E  C094  F082         	movff	_scale$5965+2,___ftmul@f1+2
 12209  0019A2  0E00               	movlw	0
 12210  0019A4  0100               	movlb	0	; () banked
 12211  0019A6  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12212  0019A8  0E03               	movlw	3
 12213  0019AA  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12214  0019AC  0E00               	movlw	0
 12215  0019AE  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12216  0019B0  0E0A               	movlw	10
 12217  0019B2  6F62               	movwf	___awmod@divisor& (0+255),b
 12218  0019B4  5195               	movf	scale@scl& (0+255),w,b
 12219  0019B6  6F60               	movwf	___awmod@dividend& (0+255),b
 12220  0019B8  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12221  0019BA  BF60               	btfsc	___awmod@dividend& (0+255),7,b
 12222  0019BC  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
 12223  0019BE  EC0F  F025         	call	___awmod	;wreg free
 12224  0019C2  C060  F06E         	movff	?___awmod,___wmul@multiplier
 12225  0019C6  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
 12226  0019CA  ECE8  F029         	call	___wmul	;wreg free
 12227  0019CE  0E31               	movlw	low __powers_
 12228  0019D0  0100               	movlb	0	; () banked
 12229  0019D2  256E               	addwf	?___wmul& (0+255),w,b
 12230  0019D4  6EF6               	movwf	tblptrl,c
 12231  0019D6  0E7C               	movlw	high __powers_
 12232  0019D8  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12233  0019DA  6EF7               	movwf	tblptrh,c
 12234  0019DC                     	if	0	;There are less than 3 active tblptr bytes
 12235  0019DC                     	endif
 12236  0019DC  0009               	tblrd		*+
 12237  0019DE  CFF5 F083          	movff	tablat,___ftmul@f2
 12238  0019E2  0009               	tblrd		*+
 12239  0019E4  CFF5 F084          	movff	tablat,___ftmul@f2+1
 12240  0019E8  000A               	tblrd		*-
 12241  0019EA  CFF5 F085          	movff	tablat,___ftmul@f2+2
 12242  0019EE  ECA2  F01C         	call	___ftmul	;wreg free
 12243  0019F2  C080  F08F         	movff	?___ftmul,?_scale
 12244  0019F6  C081  F090         	movff	?___ftmul+1,?_scale+1
 12245  0019FA  C082  F091         	movff	?___ftmul+2,?_scale+2
 12246  0019FE  0012               	return	
 12247  001A00                     l2636:
 12248                           
 12249                           ;doprnt.c: 438: else if(scl > 10)
 12250  001A00  0100               	movlb	0	; () banked
 12251  001A02  5195               	movf	scale@scl& (0+255),w,b
 12252  001A04  0A80               	xorlw	128
 12253  001A06  0F75               	addlw	-139
 12254  001A08  A0D8               	btfss	status,0,c
 12255  001A0A  D056               	goto	l2638
 12256                           
 12257                           ; BSR set to: 0
 12258                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 12259  001A0C  0E00               	movlw	0
 12260  001A0E  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 12261  001A10  0E0A               	movlw	10
 12262  001A12  6F68               	movwf	___awdiv@divisor& (0+255),b
 12263  001A14  5195               	movf	scale@scl& (0+255),w,b
 12264  001A16  6F66               	movwf	___awdiv@dividend& (0+255),b
 12265  001A18  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
 12266  001A1A  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
 12267  001A1C  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
 12268  001A1E  ECCD  F023         	call	___awdiv	;wreg free
 12269  001A22  0E09               	movlw	9
 12270  001A24  0100               	movlb	0	; () banked
 12271  001A26  2566               	addwf	?___awdiv& (0+255),w,b
 12272  001A28  6F6E               	movwf	___wmul@multiplier& (0+255),b
 12273  001A2A  0E00               	movlw	0
 12274  001A2C  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 12275  001A2E  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 12276  001A30  0E00               	movlw	0
 12277  001A32  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12278  001A34  0E03               	movlw	3
 12279  001A36  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12280  001A38  ECE8  F029         	call	___wmul	;wreg free
 12281  001A3C  0E31               	movlw	low __powers_
 12282  001A3E  0100               	movlb	0	; () banked
 12283  001A40  256E               	addwf	?___wmul& (0+255),w,b
 12284  001A42  6EF6               	movwf	tblptrl,c
 12285  001A44  0E7C               	movlw	high __powers_
 12286  001A46  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12287  001A48  6EF7               	movwf	tblptrh,c
 12288  001A4A                     	if	0	;There are less than 3 active tblptr bytes
 12289  001A4A                     	endif
 12290  001A4A  0009               	tblrd		*+
 12291  001A4C  CFF5 F080          	movff	tablat,___ftmul@f1
 12292  001A50  0009               	tblrd		*+
 12293  001A52  CFF5 F081          	movff	tablat,___ftmul@f1+1
 12294  001A56  000A               	tblrd		*-
 12295  001A58  CFF5 F082          	movff	tablat,___ftmul@f1+2
 12296  001A5C  0E00               	movlw	0
 12297  001A5E  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12298  001A60  0E03               	movlw	3
 12299  001A62  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12300  001A64  0E00               	movlw	0
 12301  001A66  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12302  001A68  0E0A               	movlw	10
 12303  001A6A  6F62               	movwf	___awmod@divisor& (0+255),b
 12304  001A6C  5195               	movf	scale@scl& (0+255),w,b
 12305  001A6E  6F60               	movwf	___awmod@dividend& (0+255),b
 12306  001A70  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12307  001A72  BF60               	btfsc	___awmod@dividend& (0+255),7,b
 12308  001A74  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
 12309  001A76  EC0F  F025         	call	___awmod	;wreg free
 12310  001A7A  C060  F06E         	movff	?___awmod,___wmul@multiplier
 12311  001A7E  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
 12312  001A82  ECE8  F029         	call	___wmul	;wreg free
 12313  001A86  0E31               	movlw	low __powers_
 12314  001A88  0100               	movlb	0	; () banked
 12315  001A8A  256E               	addwf	?___wmul& (0+255),w,b
 12316  001A8C  6EF6               	movwf	tblptrl,c
 12317  001A8E  0E7C               	movlw	high __powers_
 12318  001A90  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12319  001A92  6EF7               	movwf	tblptrh,c
 12320  001A94                     	if	0	;There are less than 3 active tblptr bytes
 12321  001A94                     	endif
 12322  001A94  0009               	tblrd		*+
 12323  001A96  CFF5 F083          	movff	tablat,___ftmul@f2
 12324  001A9A  0009               	tblrd		*+
 12325  001A9C  CFF5 F084          	movff	tablat,___ftmul@f2+1
 12326  001AA0  000A               	tblrd		*-
 12327  001AA2  CFF5 F085          	movff	tablat,___ftmul@f2+2
 12328  001AA6  ECA2  F01C         	call	___ftmul	;wreg free
 12329  001AAA  C080  F08F         	movff	?___ftmul,?_scale
 12330  001AAE  C081  F090         	movff	?___ftmul+1,?_scale+1
 12331  001AB2  C082  F091         	movff	?___ftmul+2,?_scale+2
 12332  001AB6  0012               	return	
 12333  001AB8                     l2638:
 12334                           
 12335                           ;doprnt.c: 440: return _powers_[scl];
 12336  001AB8  0100               	movlb	0	; () banked
 12337  001ABA  5195               	movf	scale@scl& (0+255),w,b
 12338  001ABC  0D03               	mullw	3
 12339  001ABE  0E31               	movlw	low __powers_
 12340  001AC0  24F3               	addwf	prodl,w,c
 12341  001AC2  6EF6               	movwf	tblptrl,c
 12342  001AC4  0E7C               	movlw	high __powers_
 12343  001AC6  20F4               	addwfc	prodh,w,c
 12344  001AC8  6EF7               	movwf	tblptrh,c
 12345  001ACA                     	if	0	;There are less than 3 active tblptr bytes
 12346  001ACA                     	endif
 12347  001ACA  0009               	tblrd		*+
 12348  001ACC  CFF5 F08F          	movff	tablat,?_scale
 12349  001AD0  0009               	tblrd		*+
 12350  001AD2  CFF5 F090          	movff	tablat,?_scale+1
 12351  001AD6  000A               	tblrd		*-
 12352  001AD8  CFF5 F091          	movff	tablat,?_scale+2
 12353  001ADC  0012               	return	
 12354  001ADE                     __end_of_scale:
 12355                           	opt stack 0
 12356                           tblptru	equ	0xFF8
 12357                           tblptrh	equ	0xFF7
 12358                           tblptrl	equ	0xFF6
 12359                           tablat	equ	0xFF5
 12360                           prodh	equ	0xFF4
 12361                           prodl	equ	0xFF3
 12362                           intcon	equ	0xFF2
 12363                           postinc0	equ	0xFEE
 12364                           wreg	equ	0xFE8
 12365                           indf1	equ	0xFE7
 12366                           postdec1	equ	0xFE5
 12367                           fsr1h	equ	0xFE2
 12368                           fsr1l	equ	0xFE1
 12369                           indf2	equ	0xFDF
 12370                           postinc2	equ	0xFDE
 12371                           postdec2	equ	0xFDD
 12372                           plusw2	equ	0xFDB
 12373                           fsr2h	equ	0xFDA
 12374                           fsr2l	equ	0xFD9
 12375                           status	equ	0xFD8
 12376                           
 12377 ;; *************** function _isdigit *****************
 12378 ;; Defined at:
 12379 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\isdigit.c"
 12380 ;; Parameters:    Size  Location     Type
 12381 ;;  c               1    wreg     unsigned char 
 12382 ;; Auto vars:     Size  Location     Type
 12383 ;;  c               1    2[BANK0 ] unsigned char 
 12384 ;; Return value:  Size  Location     Type
 12385 ;;		None               void
 12386 ;; Registers used:
 12387 ;;		wreg, status,2, status,0
 12388 ;; Tracked objects:
 12389 ;;		On entry : 0/0
 12390 ;;		On exit  : 0/0
 12391 ;;		Unchanged: 0/0
 12392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12393 ;;      Params:         0       0       0       0       0       0       0       0       0
 12394 ;;      Locals:         0       2       0       0       0       0       0       0       0
 12395 ;;      Temps:          0       1       0       0       0       0       0       0       0
 12396 ;;      Totals:         0       3       0       0       0       0       0       0       0
 12397 ;;Total ram usage:        3 bytes
 12398 ;; Hardware stack levels used:    1
 12399 ;; Hardware stack levels required when called:   10
 12400 ;; This function calls:
 12401 ;;		Nothing
 12402 ;; This function is called by:
 12403 ;;		_sprintf
 12404 ;; This function uses a non-reentrant model
 12405 ;;
 12406                           
 12407                           	psect	text34
 12408  0054D6                     __ptext34:
 12409                           	opt stack 0
 12410  0054D6                     _isdigit:
 12411                           	opt stack 19
 12412                           
 12413                           ;incstack = 0
 12414                           ;isdigit@c stored from wreg
 12415  0054D6  0100               	movlb	0	; () banked
 12416  0054D8  6F62               	movwf	isdigit@c& (0+255),b
 12417  0054DA  0E00               	movlw	0
 12418  0054DC  0100               	movlb	0	; () banked
 12419  0054DE  6F61               	movwf	_isdigit$5386& (0+255),b
 12420                           
 12421                           ; BSR set to: 0
 12422  0054E0  0E3A               	movlw	58
 12423  0054E2  6162               	cpfslt	isdigit@c& (0+255),b
 12424  0054E4  D005               	goto	l3131
 12425                           
 12426                           ; BSR set to: 0
 12427  0054E6  0E2F               	movlw	47
 12428  0054E8  6562               	cpfsgt	isdigit@c& (0+255),b
 12429  0054EA  D002               	goto	l3131
 12430                           
 12431                           ; BSR set to: 0
 12432  0054EC  0E01               	movlw	1
 12433  0054EE  6F61               	movwf	_isdigit$5386& (0+255),b
 12434  0054F0                     l3131:
 12435                           
 12436                           ; BSR set to: 0
 12437                           
 12438                           ; BSR set to: 0
 12439  0054F0  C061  F060         	movff	_isdigit$5386,??_isdigit
 12440  0054F4  3160               	rrcf	??_isdigit& (0+255),w,b
 12441  0054F6  0012               	return	
 12442  0054F8                     __end_of_isdigit:
 12443                           	opt stack 0
 12444                           tblptru	equ	0xFF8
 12445                           tblptrh	equ	0xFF7
 12446                           tblptrl	equ	0xFF6
 12447                           tablat	equ	0xFF5
 12448                           prodh	equ	0xFF4
 12449                           prodl	equ	0xFF3
 12450                           intcon	equ	0xFF2
 12451                           postinc0	equ	0xFEE
 12452                           wreg	equ	0xFE8
 12453                           indf1	equ	0xFE7
 12454                           postdec1	equ	0xFE5
 12455                           fsr1h	equ	0xFE2
 12456                           fsr1l	equ	0xFE1
 12457                           indf2	equ	0xFDF
 12458                           postinc2	equ	0xFDE
 12459                           postdec2	equ	0xFDD
 12460                           plusw2	equ	0xFDB
 12461                           fsr2h	equ	0xFDA
 12462                           fsr2l	equ	0xFD9
 12463                           status	equ	0xFD8
 12464                           
 12465 ;; *************** function _fround *****************
 12466 ;; Defined at:
 12467 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\doprnt.c"
 12468 ;; Parameters:    Size  Location     Type
 12469 ;;  prec            1    wreg     unsigned char 
 12470 ;; Auto vars:     Size  Location     Type
 12471 ;;  prec            1   56[BANK0 ] unsigned char 
 12472 ;; Return value:  Size  Location     Type
 12473 ;;                  3   47[BANK0 ] unsigned char 
 12474 ;; Registers used:
 12475 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12476 ;; Tracked objects:
 12477 ;;		On entry : 0/0
 12478 ;;		On exit  : 0/0
 12479 ;;		Unchanged: 0/0
 12480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12481 ;;      Params:         0       3       0       0       0       0       0       0       0
 12482 ;;      Locals:         0       7       0       0       0       0       0       0       0
 12483 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12484 ;;      Totals:         0      10       0       0       0       0       0       0       0
 12485 ;;Total ram usage:       10 bytes
 12486 ;; Hardware stack levels used:    1
 12487 ;; Hardware stack levels required when called:   12
 12488 ;; This function calls:
 12489 ;;		___awdiv
 12490 ;;		___awmod
 12491 ;;		___ftmul
 12492 ;;		___wmul
 12493 ;; This function is called by:
 12494 ;;		_sprintf
 12495 ;; This function uses a non-reentrant model
 12496 ;;
 12497                           
 12498                           	psect	text35
 12499  0023C8                     __ptext35:
 12500                           	opt stack 0
 12501  0023C8                     _fround:
 12502                           	opt stack 17
 12503                           
 12504                           ; BSR set to: 0
 12505                           ;incstack = 0
 12506                           ;fround@prec stored from wreg
 12507  0023C8  0100               	movlb	0	; () banked
 12508  0023CA  6F98               	movwf	fround@prec& (0+255),b
 12509                           
 12510                           ;doprnt.c: 413: if(prec>=110)
 12511  0023CC  0E6D               	movlw	109
 12512  0023CE  0100               	movlb	0	; () banked
 12513  0023D0  6598               	cpfsgt	fround@prec& (0+255),b
 12514  0023D2  D0A6               	goto	l2625
 12515                           
 12516                           ; BSR set to: 0
 12517                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 12518  0023D4  0E00               	movlw	0
 12519  0023D6  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12520  0023D8  0E03               	movlw	3
 12521  0023DA  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12522  0023DC  0E00               	movlw	0
 12523  0023DE  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 12524  0023E0  0E0A               	movlw	10
 12525  0023E2  6F68               	movwf	___awdiv@divisor& (0+255),b
 12526  0023E4  0E00               	movlw	0
 12527  0023E6  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12528  0023E8  0E64               	movlw	100
 12529  0023EA  6F62               	movwf	___awmod@divisor& (0+255),b
 12530  0023EC  C098  F060         	movff	fround@prec,___awmod@dividend
 12531  0023F0  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12532  0023F2  EC0F  F025         	call	___awmod	;wreg free
 12533  0023F6  C060  F066         	movff	?___awmod,___awdiv@dividend
 12534  0023FA  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
 12535  0023FE  ECCD  F023         	call	___awdiv	;wreg free
 12536  002402  0E09               	movlw	9
 12537  002404  0100               	movlb	0	; () banked
 12538  002406  2566               	addwf	?___awdiv& (0+255),w,b
 12539  002408  6F6E               	movwf	___wmul@multiplier& (0+255),b
 12540  00240A  0E00               	movlw	0
 12541  00240C  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 12542  00240E  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 12543  002410  ECE8  F029         	call	___wmul	;wreg free
 12544  002414  0E58               	movlw	low __npowers_
 12545  002416  0100               	movlb	0	; () banked
 12546  002418  256E               	addwf	?___wmul& (0+255),w,b
 12547  00241A  6EF6               	movwf	tblptrl,c
 12548  00241C  0E7C               	movlw	high __npowers_
 12549  00241E  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12550  002420  6EF7               	movwf	tblptrh,c
 12551  002422                     	if	0	;There are less than 3 active tblptr bytes
 12552  002422                     	endif
 12553  002422  0009               	tblrd		*+
 12554  002424  CFF5 F083          	movff	tablat,___ftmul@f2
 12555  002428  0009               	tblrd		*+
 12556  00242A  CFF5 F084          	movff	tablat,___ftmul@f2+1
 12557  00242E  000A               	tblrd		*-
 12558  002430  CFF5 F085          	movff	tablat,___ftmul@f2+2
 12559  002434  0E00               	movlw	0
 12560  002436  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 12561  002438  0E64               	movlw	100
 12562  00243A  6F68               	movwf	___awdiv@divisor& (0+255),b
 12563  00243C  C098  F066         	movff	fround@prec,___awdiv@dividend
 12564  002440  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
 12565  002442  ECCD  F023         	call	___awdiv	;wreg free
 12566  002446  0E12               	movlw	18
 12567  002448  0100               	movlb	0	; () banked
 12568  00244A  2566               	addwf	?___awdiv& (0+255),w,b
 12569  00244C  6F6E               	movwf	___wmul@multiplier& (0+255),b
 12570  00244E  0E00               	movlw	0
 12571  002450  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 12572  002452  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 12573  002454  0E00               	movlw	0
 12574  002456  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12575  002458  0E03               	movlw	3
 12576  00245A  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12577  00245C  ECE8  F029         	call	___wmul	;wreg free
 12578  002460  0E58               	movlw	low __npowers_
 12579  002462  0100               	movlb	0	; () banked
 12580  002464  256E               	addwf	?___wmul& (0+255),w,b
 12581  002466  6EF6               	movwf	tblptrl,c
 12582  002468  0E7C               	movlw	high __npowers_
 12583  00246A  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12584  00246C  6EF7               	movwf	tblptrh,c
 12585  00246E                     	if	0	;There are less than 3 active tblptr bytes
 12586  00246E                     	endif
 12587  00246E  0009               	tblrd		*+
 12588  002470  CFF5 F080          	movff	tablat,___ftmul@f1
 12589  002474  0009               	tblrd		*+
 12590  002476  CFF5 F081          	movff	tablat,___ftmul@f1+1
 12591  00247A  000A               	tblrd		*-
 12592  00247C  CFF5 F082          	movff	tablat,___ftmul@f1+2
 12593  002480  ECA2  F01C         	call	___ftmul	;wreg free
 12594  002484  C080  F095         	movff	?___ftmul,_fround$5963
 12595  002488  C081  F096         	movff	?___ftmul+1,_fround$5963+1
 12596  00248C  C082  F097         	movff	?___ftmul+2,_fround$5963+2
 12597                           
 12598                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 12599  002490  0E00               	movlw	0
 12600  002492  0100               	movlb	0	; () banked
 12601  002494  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12602  002496  0E03               	movlw	3
 12603  002498  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12604  00249A  0E00               	movlw	0
 12605  00249C  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12606  00249E  0E0A               	movlw	10
 12607  0024A0  6F62               	movwf	___awmod@divisor& (0+255),b
 12608  0024A2  C098  F060         	movff	fround@prec,___awmod@dividend
 12609  0024A6  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12610  0024A8  EC0F  F025         	call	___awmod	;wreg free
 12611  0024AC  C060  F06E         	movff	?___awmod,___wmul@multiplier
 12612  0024B0  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
 12613  0024B4  ECE8  F029         	call	___wmul	;wreg free
 12614  0024B8  0E58               	movlw	low __npowers_
 12615  0024BA  0100               	movlb	0	; () banked
 12616  0024BC  256E               	addwf	?___wmul& (0+255),w,b
 12617  0024BE  6EF6               	movwf	tblptrl,c
 12618  0024C0  0E7C               	movlw	high __npowers_
 12619  0024C2  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12620  0024C4  6EF7               	movwf	tblptrh,c
 12621  0024C6                     	if	0	;There are less than 3 active tblptr bytes
 12622  0024C6                     	endif
 12623  0024C6  0009               	tblrd		*+
 12624  0024C8  CFF5 F083          	movff	tablat,___ftmul@f2
 12625  0024CC  0009               	tblrd		*+
 12626  0024CE  CFF5 F084          	movff	tablat,___ftmul@f2+1
 12627  0024D2  000A               	tblrd		*-
 12628  0024D4  CFF5 F085          	movff	tablat,___ftmul@f2+2
 12629  0024D8  C095  F080         	movff	_fround$5963,___ftmul@f1
 12630  0024DC  C096  F081         	movff	_fround$5963+1,___ftmul@f1+1
 12631  0024E0  C097  F082         	movff	_fround$5963+2,___ftmul@f1+2
 12632  0024E4  ECA2  F01C         	call	___ftmul	;wreg free
 12633  0024E8  C080  F092         	movff	?___ftmul,_fround$5964
 12634  0024EC  C081  F093         	movff	?___ftmul+1,_fround$5964+1
 12635  0024F0  C082  F094         	movff	?___ftmul+2,_fround$5964+2
 12636                           
 12637                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 12638  0024F4  C092  F080         	movff	_fround$5964,___ftmul@f1
 12639  0024F8  C093  F081         	movff	_fround$5964+1,___ftmul@f1+1
 12640  0024FC  C094  F082         	movff	_fround$5964+2,___ftmul@f1+2
 12641  002500  0E00               	movlw	0
 12642  002502  0100               	movlb	0	; () banked
 12643  002504  6F83               	movwf	___ftmul@f2& (0+255),b
 12644  002506  0E00               	movlw	0
 12645  002508  6F84               	movwf	(___ftmul@f2+1)& (0+255),b
 12646  00250A  0E3F               	movlw	63
 12647  00250C  6F85               	movwf	(___ftmul@f2+2)& (0+255),b
 12648  00250E  ECA2  F01C         	call	___ftmul	;wreg free
 12649  002512  C080  F08F         	movff	?___ftmul,?_fround
 12650  002516  C081  F090         	movff	?___ftmul+1,?_fround+1
 12651  00251A  C082  F091         	movff	?___ftmul+2,?_fround+2
 12652  00251E  0012               	return	
 12653  002520                     l2625:
 12654                           
 12655                           ;doprnt.c: 415: else if(prec > 10)
 12656  002520  0E0A               	movlw	10
 12657  002522  0100               	movlb	0	; () banked
 12658  002524  6598               	cpfsgt	fround@prec& (0+255),b
 12659  002526  D067               	goto	l2628
 12660                           
 12661                           ; BSR set to: 0
 12662                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 12663  002528  0E00               	movlw	0
 12664  00252A  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12665  00252C  0E03               	movlw	3
 12666  00252E  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12667  002530  0E00               	movlw	0
 12668  002532  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12669  002534  0E0A               	movlw	10
 12670  002536  6F62               	movwf	___awmod@divisor& (0+255),b
 12671  002538  C098  F060         	movff	fround@prec,___awmod@dividend
 12672  00253C  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12673  00253E  EC0F  F025         	call	___awmod	;wreg free
 12674  002542  C060  F06E         	movff	?___awmod,___wmul@multiplier
 12675  002546  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
 12676  00254A  ECE8  F029         	call	___wmul	;wreg free
 12677  00254E  0E58               	movlw	low __npowers_
 12678  002550  0100               	movlb	0	; () banked
 12679  002552  256E               	addwf	?___wmul& (0+255),w,b
 12680  002554  6EF6               	movwf	tblptrl,c
 12681  002556  0E7C               	movlw	high __npowers_
 12682  002558  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12683  00255A  6EF7               	movwf	tblptrh,c
 12684  00255C                     	if	0	;There are less than 3 active tblptr bytes
 12685  00255C                     	endif
 12686  00255C  0009               	tblrd		*+
 12687  00255E  CFF5 F083          	movff	tablat,___ftmul@f2
 12688  002562  0009               	tblrd		*+
 12689  002564  CFF5 F084          	movff	tablat,___ftmul@f2+1
 12690  002568  000A               	tblrd		*-
 12691  00256A  CFF5 F085          	movff	tablat,___ftmul@f2+2
 12692  00256E  0E00               	movlw	0
 12693  002570  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 12694  002572  0E0A               	movlw	10
 12695  002574  6F68               	movwf	___awdiv@divisor& (0+255),b
 12696  002576  C098  F066         	movff	fround@prec,___awdiv@dividend
 12697  00257A  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
 12698  00257C  ECCD  F023         	call	___awdiv	;wreg free
 12699  002580  0E09               	movlw	9
 12700  002582  0100               	movlb	0	; () banked
 12701  002584  2566               	addwf	?___awdiv& (0+255),w,b
 12702  002586  6F6E               	movwf	___wmul@multiplier& (0+255),b
 12703  002588  0E00               	movlw	0
 12704  00258A  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 12705  00258C  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 12706  00258E  0E00               	movlw	0
 12707  002590  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12708  002592  0E03               	movlw	3
 12709  002594  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12710  002596  ECE8  F029         	call	___wmul	;wreg free
 12711  00259A  0E58               	movlw	low __npowers_
 12712  00259C  0100               	movlb	0	; () banked
 12713  00259E  256E               	addwf	?___wmul& (0+255),w,b
 12714  0025A0  6EF6               	movwf	tblptrl,c
 12715  0025A2  0E7C               	movlw	high __npowers_
 12716  0025A4  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12717  0025A6  6EF7               	movwf	tblptrh,c
 12718  0025A8                     	if	0	;There are less than 3 active tblptr bytes
 12719  0025A8                     	endif
 12720  0025A8  0009               	tblrd		*+
 12721  0025AA  CFF5 F080          	movff	tablat,___ftmul@f1
 12722  0025AE  0009               	tblrd		*+
 12723  0025B0  CFF5 F081          	movff	tablat,___ftmul@f1+1
 12724  0025B4  000A               	tblrd		*-
 12725  0025B6  CFF5 F082          	movff	tablat,___ftmul@f1+2
 12726  0025BA  ECA2  F01C         	call	___ftmul	;wreg free
 12727  0025BE  C080  F095         	movff	?___ftmul,_fround$5963
 12728  0025C2  C081  F096         	movff	?___ftmul+1,_fround$5963+1
 12729  0025C6  C082  F097         	movff	?___ftmul+2,_fround$5963+2
 12730                           
 12731                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 12732  0025CA  C095  F080         	movff	_fround$5963,___ftmul@f1
 12733  0025CE  C096  F081         	movff	_fround$5963+1,___ftmul@f1+1
 12734  0025D2  C097  F082         	movff	_fround$5963+2,___ftmul@f1+2
 12735  0025D6  0E00               	movlw	0
 12736  0025D8  0100               	movlb	0	; () banked
 12737  0025DA  6F83               	movwf	___ftmul@f2& (0+255),b
 12738  0025DC  0E00               	movlw	0
 12739  0025DE  6F84               	movwf	(___ftmul@f2+1)& (0+255),b
 12740  0025E0  0E3F               	movlw	63
 12741  0025E2  6F85               	movwf	(___ftmul@f2+2)& (0+255),b
 12742  0025E4  ECA2  F01C         	call	___ftmul	;wreg free
 12743  0025E8  C080  F08F         	movff	?___ftmul,?_fround
 12744  0025EC  C081  F090         	movff	?___ftmul+1,?_fround+1
 12745  0025F0  C082  F091         	movff	?___ftmul+2,?_fround+2
 12746  0025F4  0012               	return	
 12747  0025F6                     l2628:
 12748                           
 12749                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 12750  0025F6  0100               	movlb	0	; () banked
 12751  0025F8  5198               	movf	fround@prec& (0+255),w,b
 12752  0025FA  0D03               	mullw	3
 12753  0025FC  0E58               	movlw	low __npowers_
 12754  0025FE  24F3               	addwf	prodl,w,c
 12755  002600  6EF6               	movwf	tblptrl,c
 12756  002602  0E7C               	movlw	high __npowers_
 12757  002604  20F4               	addwfc	prodh,w,c
 12758  002606  6EF7               	movwf	tblptrh,c
 12759  002608                     	if	0	;There are less than 3 active tblptr bytes
 12760  002608                     	endif
 12761  002608  0009               	tblrd		*+
 12762  00260A  CFF5 F080          	movff	tablat,___ftmul@f1
 12763  00260E  0009               	tblrd		*+
 12764  002610  CFF5 F081          	movff	tablat,___ftmul@f1+1
 12765  002614  000A               	tblrd		*-
 12766  002616  CFF5 F082          	movff	tablat,___ftmul@f1+2
 12767  00261A  0E00               	movlw	0
 12768  00261C  6F83               	movwf	___ftmul@f2& (0+255),b
 12769  00261E  0E00               	movlw	0
 12770  002620  6F84               	movwf	(___ftmul@f2+1)& (0+255),b
 12771  002622  0E3F               	movlw	63
 12772  002624  6F85               	movwf	(___ftmul@f2+2)& (0+255),b
 12773  002626  ECA2  F01C         	call	___ftmul	;wreg free
 12774  00262A  C080  F08F         	movff	?___ftmul,?_fround
 12775  00262E  C081  F090         	movff	?___ftmul+1,?_fround+1
 12776  002632  C082  F091         	movff	?___ftmul+2,?_fround+2
 12777  002636  0012               	return	
 12778  002638                     __end_of_fround:
 12779                           	opt stack 0
 12780                           tblptru	equ	0xFF8
 12781                           tblptrh	equ	0xFF7
 12782                           tblptrl	equ	0xFF6
 12783                           tablat	equ	0xFF5
 12784                           prodh	equ	0xFF4
 12785                           prodl	equ	0xFF3
 12786                           intcon	equ	0xFF2
 12787                           postinc0	equ	0xFEE
 12788                           wreg	equ	0xFE8
 12789                           indf1	equ	0xFE7
 12790                           postdec1	equ	0xFE5
 12791                           fsr1h	equ	0xFE2
 12792                           fsr1l	equ	0xFE1
 12793                           indf2	equ	0xFDF
 12794                           postinc2	equ	0xFDE
 12795                           postdec2	equ	0xFDD
 12796                           plusw2	equ	0xFDB
 12797                           fsr2h	equ	0xFDA
 12798                           fsr2l	equ	0xFD9
 12799                           status	equ	0xFD8
 12800                           
 12801 ;; *************** function ___wmul *****************
 12802 ;; Defined at:
 12803 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\Umul16.c"
 12804 ;; Parameters:    Size  Location     Type
 12805 ;;  multiplier      2   14[BANK0 ] unsigned int 
 12806 ;;  multiplicand    2   16[BANK0 ] unsigned int 
 12807 ;; Auto vars:     Size  Location     Type
 12808 ;;  product         2   18[BANK0 ] unsigned int 
 12809 ;; Return value:  Size  Location     Type
 12810 ;;                  2   14[BANK0 ] unsigned int 
 12811 ;; Registers used:
 12812 ;;		wreg, status,2, status,0, prodl, prodh
 12813 ;; Tracked objects:
 12814 ;;		On entry : 0/0
 12815 ;;		On exit  : 0/0
 12816 ;;		Unchanged: 0/0
 12817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12818 ;;      Params:         0       4       0       0       0       0       0       0       0
 12819 ;;      Locals:         0       2       0       0       0       0       0       0       0
 12820 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12821 ;;      Totals:         0       6       0       0       0       0       0       0       0
 12822 ;;Total ram usage:        6 bytes
 12823 ;; Hardware stack levels used:    1
 12824 ;; Hardware stack levels required when called:   10
 12825 ;; This function calls:
 12826 ;;		Nothing
 12827 ;; This function is called by:
 12828 ;;		_fround
 12829 ;;		_scale
 12830 ;;		_sprintf
 12831 ;; This function uses a non-reentrant model
 12832 ;;
 12833                           
 12834                           	psect	text36
 12835  0053D0                     __ptext36:
 12836                           	opt stack 0
 12837  0053D0                     ___wmul:
 12838                           	opt stack 18
 12839                           
 12840                           ;incstack = 0
 12841  0053D0  0100               	movlb	0	; () banked
 12842  0053D2  516E               	movf	___wmul@multiplier& (0+255),w,b
 12843  0053D4  0370               	mulwf	___wmul@multiplicand& (0+255),b
 12844  0053D6  CFF3 F072          	movff	prodl,___wmul@product
 12845  0053DA  CFF4 F073          	movff	prodh,___wmul@product+1
 12846  0053DE  516E               	movf	___wmul@multiplier& (0+255),w,b
 12847  0053E0  0371               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 12848  0053E2  50F3               	movf	prodl,w,c
 12849  0053E4  2773               	addwf	(___wmul@product+1)& (0+255),f,b
 12850  0053E6  516F               	movf	(___wmul@multiplier+1)& (0+255),w,b
 12851  0053E8  0370               	mulwf	___wmul@multiplicand& (0+255),b
 12852  0053EA  50F3               	movf	prodl,w,c
 12853  0053EC  2773               	addwf	(___wmul@product+1)& (0+255),f,b
 12854                           
 12855                           ; BSR set to: 0
 12856  0053EE  C072  F06E         	movff	___wmul@product,?___wmul
 12857  0053F2  C073  F06F         	movff	___wmul@product+1,?___wmul+1
 12858  0053F6  0012               	return	
 12859  0053F8                     __end_of___wmul:
 12860                           	opt stack 0
 12861                           tblptru	equ	0xFF8
 12862                           tblptrh	equ	0xFF7
 12863                           tblptrl	equ	0xFF6
 12864                           tablat	equ	0xFF5
 12865                           prodh	equ	0xFF4
 12866                           prodl	equ	0xFF3
 12867                           intcon	equ	0xFF2
 12868                           postinc0	equ	0xFEE
 12869                           wreg	equ	0xFE8
 12870                           indf1	equ	0xFE7
 12871                           postdec1	equ	0xFE5
 12872                           fsr1h	equ	0xFE2
 12873                           fsr1l	equ	0xFE1
 12874                           indf2	equ	0xFDF
 12875                           postinc2	equ	0xFDE
 12876                           postdec2	equ	0xFDD
 12877                           plusw2	equ	0xFDB
 12878                           fsr2h	equ	0xFDA
 12879                           fsr2l	equ	0xFD9
 12880                           status	equ	0xFD8
 12881                           
 12882 ;; *************** function ___ftmul *****************
 12883 ;; Defined at:
 12884 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftmul.c"
 12885 ;; Parameters:    Size  Location     Type
 12886 ;;  f1              3   32[BANK0 ] float 
 12887 ;;  f2              3   35[BANK0 ] float 
 12888 ;; Auto vars:     Size  Location     Type
 12889 ;;  f3_as_produc    3   42[BANK0 ] unsigned um
 12890 ;;  sign            1   46[BANK0 ] unsigned char 
 12891 ;;  cntr            1   45[BANK0 ] unsigned char 
 12892 ;;  exp             1   41[BANK0 ] unsigned char 
 12893 ;; Return value:  Size  Location     Type
 12894 ;;                  3   32[BANK0 ] float 
 12895 ;; Registers used:
 12896 ;;		wreg, status,2, status,0, cstack
 12897 ;; Tracked objects:
 12898 ;;		On entry : 0/0
 12899 ;;		On exit  : 0/0
 12900 ;;		Unchanged: 0/0
 12901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12902 ;;      Params:         0       6       0       0       0       0       0       0       0
 12903 ;;      Locals:         0       6       0       0       0       0       0       0       0
 12904 ;;      Temps:          0       3       0       0       0       0       0       0       0
 12905 ;;      Totals:         0      15       0       0       0       0       0       0       0
 12906 ;;Total ram usage:       15 bytes
 12907 ;; Hardware stack levels used:    1
 12908 ;; Hardware stack levels required when called:   11
 12909 ;; This function calls:
 12910 ;;		___ftpack
 12911 ;; This function is called by:
 12912 ;;		_main
 12913 ;;		_le_AD
 12914 ;;		_fround
 12915 ;;		_scale
 12916 ;;		_sprintf
 12917 ;; This function uses a non-reentrant model
 12918 ;;
 12919                           
 12920                           	psect	text37
 12921  003944                     __ptext37:
 12922                           	opt stack 0
 12923  003944                     ___ftmul:
 12924                           	opt stack 17
 12925                           
 12926                           ; BSR set to: 0
 12927                           ;incstack = 0
 12928  003944  C082  F086         	movff	___ftmul@f1+2,??___ftmul
 12929  003948  0100               	movlb	0	; () banked
 12930  00394A  6B87               	clrf	(??___ftmul+1)& (0+255),b
 12931  00394C  6B88               	clrf	(??___ftmul+2)& (0+255),b
 12932  00394E  3581               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 12933  003950  3786               	rlcf	??___ftmul& (0+255),f,b
 12934  003952  E301               	bnc	u6731
 12935  003954  8187               	bsf	(??___ftmul+1)& (0+255),0,b
 12936  003956                     u6731:
 12937  003956  5186               	movf	??___ftmul& (0+255),w,b
 12938  003958  6F89               	movwf	___ftmul@exp& (0+255),b
 12939  00395A  5189               	movf	___ftmul@exp& (0+255),w,b
 12940  00395C  A4D8               	btfss	status,2,c
 12941  00395E  D007               	goto	l3095
 12942                           
 12943                           ; BSR set to: 0
 12944  003960  0E00               	movlw	0
 12945  003962  6F80               	movwf	?___ftmul& (0+255),b
 12946  003964  0E00               	movlw	0
 12947  003966  6F81               	movwf	(?___ftmul+1)& (0+255),b
 12948  003968  0E00               	movlw	0
 12949  00396A  6F82               	movwf	(?___ftmul+2)& (0+255),b
 12950                           
 12951                           ; BSR set to: 0
 12952  00396C  0012               	return	
 12953  00396E                     l3095:
 12954                           
 12955                           ; BSR set to: 0
 12956                           
 12957                           ; BSR set to: 0
 12958  00396E  C085  F086         	movff	___ftmul@f2+2,??___ftmul
 12959  003972  6B87               	clrf	(??___ftmul+1)& (0+255),b
 12960  003974  6B88               	clrf	(??___ftmul+2)& (0+255),b
 12961  003976  3584               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 12962  003978  3786               	rlcf	??___ftmul& (0+255),f,b
 12963  00397A  E301               	bnc	u6751
 12964  00397C  8187               	bsf	(??___ftmul+1)& (0+255),0,b
 12965  00397E                     u6751:
 12966  00397E  5186               	movf	??___ftmul& (0+255),w,b
 12967  003980  6F8E               	movwf	___ftmul@sign& (0+255),b
 12968  003982  518E               	movf	___ftmul@sign& (0+255),w,b
 12969  003984  A4D8               	btfss	status,2,c
 12970  003986  D007               	goto	l3097
 12971                           
 12972                           ; BSR set to: 0
 12973  003988  0E00               	movlw	0
 12974  00398A  6F80               	movwf	?___ftmul& (0+255),b
 12975  00398C  0E00               	movlw	0
 12976  00398E  6F81               	movwf	(?___ftmul+1)& (0+255),b
 12977  003990  0E00               	movlw	0
 12978  003992  6F82               	movwf	(?___ftmul+2)& (0+255),b
 12979                           
 12980                           ; BSR set to: 0
 12981  003994  0012               	return	
 12982  003996                     l3097:
 12983                           
 12984                           ; BSR set to: 0
 12985                           
 12986                           ; BSR set to: 0
 12987  003996  518E               	movf	___ftmul@sign& (0+255),w,b
 12988  003998  0F7B               	addlw	123
 12989  00399A  2789               	addwf	___ftmul@exp& (0+255),f,b
 12990                           
 12991                           ; BSR set to: 0
 12992  00399C  C082  F08E         	movff	___ftmul@f1+2,___ftmul@sign
 12993  0039A0  5185               	movf	(___ftmul@f2+2)& (0+255),w,b
 12994  0039A2  1B8E               	xorwf	___ftmul@sign& (0+255),f,b
 12995  0039A4  0E80               	movlw	128
 12996  0039A6  178E               	andwf	___ftmul@sign& (0+255),f,b
 12997                           
 12998                           ; BSR set to: 0
 12999  0039A8  8F81               	bsf	(___ftmul@f1+1)& (0+255),7,b
 13000                           
 13001                           ; BSR set to: 0
 13002  0039AA  8F84               	bsf	(___ftmul@f2+1)& (0+255),7,b
 13003                           
 13004                           ; BSR set to: 0
 13005  0039AC  0EFF               	movlw	255
 13006  0039AE  1783               	andwf	___ftmul@f2& (0+255),f,b
 13007  0039B0  0EFF               	movlw	255
 13008  0039B2  1784               	andwf	(___ftmul@f2+1)& (0+255),f,b
 13009  0039B4  0E00               	movlw	0
 13010  0039B6  1785               	andwf	(___ftmul@f2+2)& (0+255),f,b
 13011                           
 13012                           ; BSR set to: 0
 13013  0039B8  0E00               	movlw	0
 13014  0039BA  6F8A               	movwf	___ftmul@f3_as_product& (0+255),b
 13015  0039BC  0E00               	movlw	0
 13016  0039BE  6F8B               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 13017  0039C0  0E00               	movlw	0
 13018  0039C2  6F8C               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 13019                           
 13020                           ; BSR set to: 0
 13021  0039C4  0E07               	movlw	7
 13022  0039C6  6F8D               	movwf	___ftmul@cntr& (0+255),b
 13023  0039C8                     
 13024                           ; BSR set to: 0
 13025                           
 13026                           ; BSR set to: 0
 13027  0039C8  A180               	btfss	___ftmul@f1& (0+255),0,b
 13028  0039CA  D006               	goto	l3099
 13029                           
 13030                           ; BSR set to: 0
 13031  0039CC  5183               	movf	___ftmul@f2& (0+255),w,b
 13032  0039CE  278A               	addwf	___ftmul@f3_as_product& (0+255),f,b
 13033  0039D0  5184               	movf	(___ftmul@f2+1)& (0+255),w,b
 13034  0039D2  238B               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 13035  0039D4  5185               	movf	(___ftmul@f2+2)& (0+255),w,b
 13036  0039D6  238C               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 13037  0039D8                     l3099:
 13038                           
 13039                           ; BSR set to: 0
 13040                           
 13041                           ; BSR set to: 0
 13042  0039D8  90D8               	bcf	status,0,c
 13043  0039DA  3382               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 13044  0039DC  3381               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 13045  0039DE  3380               	rrcf	___ftmul@f1& (0+255),f,b
 13046  0039E0  90D8               	bcf	status,0,c
 13047  0039E2  3783               	rlcf	___ftmul@f2& (0+255),f,b
 13048  0039E4  3784               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 13049  0039E6  3785               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 13050                           
 13051                           ; BSR set to: 0
 13052  0039E8  2F8D               	decfsz	___ftmul@cntr& (0+255),f,b
 13053  0039EA  D7EE               	goto	l3098
 13054                           
 13055                           ; BSR set to: 0
 13056                           
 13057                           ; BSR set to: 0
 13058  0039EC  0E09               	movlw	9
 13059  0039EE  6F8D               	movwf	___ftmul@cntr& (0+255),b
 13060  0039F0                     
 13061                           ; BSR set to: 0
 13062                           
 13063                           ; BSR set to: 0
 13064  0039F0  A180               	btfss	___ftmul@f1& (0+255),0,b
 13065  0039F2  D006               	goto	l3102
 13066                           
 13067                           ; BSR set to: 0
 13068  0039F4  5183               	movf	___ftmul@f2& (0+255),w,b
 13069  0039F6  278A               	addwf	___ftmul@f3_as_product& (0+255),f,b
 13070  0039F8  5184               	movf	(___ftmul@f2+1)& (0+255),w,b
 13071  0039FA  238B               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 13072  0039FC  5185               	movf	(___ftmul@f2+2)& (0+255),w,b
 13073  0039FE  238C               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 13074  003A00                     l3102:
 13075                           
 13076                           ; BSR set to: 0
 13077                           
 13078                           ; BSR set to: 0
 13079  003A00  90D8               	bcf	status,0,c
 13080  003A02  3382               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 13081  003A04  3381               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 13082  003A06  3380               	rrcf	___ftmul@f1& (0+255),f,b
 13083  003A08  90D8               	bcf	status,0,c
 13084  003A0A  338C               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 13085  003A0C  338B               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 13086  003A0E  338A               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 13087                           
 13088                           ; BSR set to: 0
 13089  003A10  2F8D               	decfsz	___ftmul@cntr& (0+255),f,b
 13090  003A12  D7EE               	goto	l3101
 13091                           
 13092                           ; BSR set to: 0
 13093                           
 13094                           ; BSR set to: 0
 13095  003A14  C08A  F060         	movff	___ftmul@f3_as_product,___ftpack@arg
 13096  003A18  C08B  F061         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 13097  003A1C  C08C  F062         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 13098  003A20  C089  F063         	movff	___ftmul@exp,___ftpack@exp
 13099  003A24  C08E  F064         	movff	___ftmul@sign,___ftpack@sign
 13100  003A28  EC0B  F020         	call	___ftpack	;wreg free
 13101  003A2C  C060  F080         	movff	?___ftpack,?___ftmul
 13102  003A30  C061  F081         	movff	?___ftpack+1,?___ftmul+1
 13103  003A34  C062  F082         	movff	?___ftpack+2,?___ftmul+2
 13104  003A38  0012               	return	
 13105  003A3A                     __end_of___ftmul:
 13106                           	opt stack 0
 13107                           tblptru	equ	0xFF8
 13108                           tblptrh	equ	0xFF7
 13109                           tblptrl	equ	0xFF6
 13110                           tablat	equ	0xFF5
 13111                           prodh	equ	0xFF4
 13112                           prodl	equ	0xFF3
 13113                           intcon	equ	0xFF2
 13114                           postinc0	equ	0xFEE
 13115                           wreg	equ	0xFE8
 13116                           indf1	equ	0xFE7
 13117                           postdec1	equ	0xFE5
 13118                           fsr1h	equ	0xFE2
 13119                           fsr1l	equ	0xFE1
 13120                           indf2	equ	0xFDF
 13121                           postinc2	equ	0xFDE
 13122                           postdec2	equ	0xFDD
 13123                           plusw2	equ	0xFDB
 13124                           fsr2h	equ	0xFDA
 13125                           fsr2l	equ	0xFD9
 13126                           status	equ	0xFD8
 13127                           
 13128 ;; *************** function ___awmod *****************
 13129 ;; Defined at:
 13130 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\awmod.c"
 13131 ;; Parameters:    Size  Location     Type
 13132 ;;  dividend        2    0[BANK0 ] int 
 13133 ;;  divisor         2    2[BANK0 ] int 
 13134 ;; Auto vars:     Size  Location     Type
 13135 ;;  sign            1    5[BANK0 ] unsigned char 
 13136 ;;  counter         1    4[BANK0 ] unsigned char 
 13137 ;; Return value:  Size  Location     Type
 13138 ;;                  2    0[BANK0 ] int 
 13139 ;; Registers used:
 13140 ;;		wreg, status,2, status,0
 13141 ;; Tracked objects:
 13142 ;;		On entry : 0/0
 13143 ;;		On exit  : 0/0
 13144 ;;		Unchanged: 0/0
 13145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13146 ;;      Params:         0       4       0       0       0       0       0       0       0
 13147 ;;      Locals:         0       2       0       0       0       0       0       0       0
 13148 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13149 ;;      Totals:         0       6       0       0       0       0       0       0       0
 13150 ;;Total ram usage:        6 bytes
 13151 ;; Hardware stack levels used:    1
 13152 ;; Hardware stack levels required when called:   10
 13153 ;; This function calls:
 13154 ;;		Nothing
 13155 ;; This function is called by:
 13156 ;;		_fround
 13157 ;;		_scale
 13158 ;; This function uses a non-reentrant model
 13159 ;;
 13160                           
 13161                           	psect	text38
 13162  004A1E                     __ptext38:
 13163                           	opt stack 0
 13164  004A1E                     ___awmod:
 13165                           	opt stack 18
 13166                           
 13167                           ;incstack = 0
 13168  004A1E  0E00               	movlw	0
 13169  004A20  0100               	movlb	0	; () banked
 13170  004A22  6F65               	movwf	___awmod@sign& (0+255),b
 13171                           
 13172                           ; BSR set to: 0
 13173  004A24  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 13174  004A26  D006               	goto	l2948
 13175                           
 13176                           ; BSR set to: 0
 13177  004A28  6D60               	negf	___awmod@dividend& (0+255),b
 13178  004A2A  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 13179  004A2C  B0D8               	btfsc	status,0,c
 13180  004A2E  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 13181                           
 13182                           ; BSR set to: 0
 13183  004A30  0E01               	movlw	1
 13184  004A32  6F65               	movwf	___awmod@sign& (0+255),b
 13185  004A34                     l2948:
 13186                           
 13187                           ; BSR set to: 0
 13188                           
 13189                           ; BSR set to: 0
 13190  004A34  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 13191  004A36  D004               	goto	l2949
 13192                           
 13193                           ; BSR set to: 0
 13194  004A38  6D62               	negf	___awmod@divisor& (0+255),b
 13195  004A3A  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 13196  004A3C  B0D8               	btfsc	status,0,c
 13197  004A3E  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 13198  004A40                     l2949:
 13199                           
 13200                           ; BSR set to: 0
 13201                           
 13202                           ; BSR set to: 0
 13203  004A40  5162               	movf	___awmod@divisor& (0+255),w,b
 13204  004A42  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 13205  004A44  B4D8               	btfsc	status,2,c
 13206  004A46  D018               	goto	l2956
 13207                           
 13208                           ; BSR set to: 0
 13209  004A48  0E01               	movlw	1
 13210  004A4A  6F64               	movwf	___awmod@counter& (0+255),b
 13211  004A4C  D004               	goto	l2951
 13212  004A4E                     
 13213                           ; BSR set to: 0
 13214                           
 13215                           ; BSR set to: 0
 13216  004A4E  90D8               	bcf	status,0,c
 13217  004A50  3762               	rlcf	___awmod@divisor& (0+255),f,b
 13218  004A52  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 13219  004A54  2B64               	incf	___awmod@counter& (0+255),f,b
 13220  004A56                     l2951:
 13221                           
 13222                           ; BSR set to: 0
 13223                           
 13224                           ; BSR set to: 0
 13225  004A56  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 13226  004A58  D7FA               	goto	l2952
 13227  004A5A                     u6880:
 13228                           
 13229                           ; BSR set to: 0
 13230                           
 13231                           ; BSR set to: 0
 13232                           
 13233                           ; BSR set to: 0
 13234  004A5A  5162               	movf	___awmod@divisor& (0+255),w,b
 13235  004A5C  5D60               	subwf	___awmod@dividend& (0+255),w,b
 13236  004A5E  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 13237  004A60  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 13238  004A62  A0D8               	btfss	status,0,c
 13239  004A64  D004               	goto	l2955
 13240                           
 13241                           ; BSR set to: 0
 13242  004A66  5162               	movf	___awmod@divisor& (0+255),w,b
 13243  004A68  5F60               	subwf	___awmod@dividend& (0+255),f,b
 13244  004A6A  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 13245  004A6C  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 13246  004A6E                     l2955:
 13247                           
 13248                           ; BSR set to: 0
 13249                           
 13250                           ; BSR set to: 0
 13251  004A6E  90D8               	bcf	status,0,c
 13252  004A70  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 13253  004A72  3362               	rrcf	___awmod@divisor& (0+255),f,b
 13254                           
 13255                           ; BSR set to: 0
 13256  004A74  2F64               	decfsz	___awmod@counter& (0+255),f,b
 13257  004A76  D7F1               	goto	u6880
 13258  004A78                     l2956:
 13259                           
 13260                           ; BSR set to: 0
 13261                           
 13262                           ; BSR set to: 0
 13263                           
 13264                           ; BSR set to: 0
 13265  004A78  5165               	movf	___awmod@sign& (0+255),w,b
 13266  004A7A  B4D8               	btfsc	status,2,c
 13267  004A7C  D004               	goto	l2957
 13268                           
 13269                           ; BSR set to: 0
 13270  004A7E  6D60               	negf	___awmod@dividend& (0+255),b
 13271  004A80  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 13272  004A82  B0D8               	btfsc	status,0,c
 13273  004A84  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 13274  004A86                     l2957:
 13275                           
 13276                           ; BSR set to: 0
 13277                           
 13278                           ; BSR set to: 0
 13279  004A86  C060  F060         	movff	___awmod@dividend,?___awmod
 13280  004A8A  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 13281  004A8E  0012               	return	
 13282  004A90                     __end_of___awmod:
 13283                           	opt stack 0
 13284                           tblptru	equ	0xFF8
 13285                           tblptrh	equ	0xFF7
 13286                           tblptrl	equ	0xFF6
 13287                           tablat	equ	0xFF5
 13288                           prodh	equ	0xFF4
 13289                           prodl	equ	0xFF3
 13290                           intcon	equ	0xFF2
 13291                           postinc0	equ	0xFEE
 13292                           wreg	equ	0xFE8
 13293                           indf1	equ	0xFE7
 13294                           postdec1	equ	0xFE5
 13295                           fsr1h	equ	0xFE2
 13296                           fsr1l	equ	0xFE1
 13297                           indf2	equ	0xFDF
 13298                           postinc2	equ	0xFDE
 13299                           postdec2	equ	0xFDD
 13300                           plusw2	equ	0xFDB
 13301                           fsr2h	equ	0xFDA
 13302                           fsr2l	equ	0xFD9
 13303                           status	equ	0xFD8
 13304                           
 13305 ;; *************** function ___awdiv *****************
 13306 ;; Defined at:
 13307 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\awdiv.c"
 13308 ;; Parameters:    Size  Location     Type
 13309 ;;  dividend        2    6[BANK0 ] int 
 13310 ;;  divisor         2    8[BANK0 ] int 
 13311 ;; Auto vars:     Size  Location     Type
 13312 ;;  quotient        2   12[BANK0 ] int 
 13313 ;;  sign            1   11[BANK0 ] unsigned char 
 13314 ;;  counter         1   10[BANK0 ] unsigned char 
 13315 ;; Return value:  Size  Location     Type
 13316 ;;                  2    6[BANK0 ] int 
 13317 ;; Registers used:
 13318 ;;		wreg, status,2, status,0
 13319 ;; Tracked objects:
 13320 ;;		On entry : 0/0
 13321 ;;		On exit  : 0/0
 13322 ;;		Unchanged: 0/0
 13323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13324 ;;      Params:         0       4       0       0       0       0       0       0       0
 13325 ;;      Locals:         0       4       0       0       0       0       0       0       0
 13326 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13327 ;;      Totals:         0       8       0       0       0       0       0       0       0
 13328 ;;Total ram usage:        8 bytes
 13329 ;; Hardware stack levels used:    1
 13330 ;; Hardware stack levels required when called:   10
 13331 ;; This function calls:
 13332 ;;		Nothing
 13333 ;; This function is called by:
 13334 ;;		_fround
 13335 ;;		_scale
 13336 ;;		_sprintf
 13337 ;; This function uses a non-reentrant model
 13338 ;;
 13339                           
 13340                           	psect	text39
 13341  00479A                     __ptext39:
 13342                           	opt stack 0
 13343  00479A                     ___awdiv:
 13344                           	opt stack 18
 13345                           
 13346                           ; BSR set to: 0
 13347                           ;incstack = 0
 13348  00479A  0E00               	movlw	0
 13349  00479C  0100               	movlb	0	; () banked
 13350  00479E  6F6B               	movwf	___awdiv@sign& (0+255),b
 13351                           
 13352                           ; BSR set to: 0
 13353  0047A0  AF69               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 13354  0047A2  D006               	goto	l2935
 13355                           
 13356                           ; BSR set to: 0
 13357  0047A4  6D68               	negf	___awdiv@divisor& (0+255),b
 13358  0047A6  1F69               	comf	(___awdiv@divisor+1)& (0+255),f,b
 13359  0047A8  B0D8               	btfsc	status,0,c
 13360  0047AA  2B69               	incf	(___awdiv@divisor+1)& (0+255),f,b
 13361                           
 13362                           ; BSR set to: 0
 13363  0047AC  0E01               	movlw	1
 13364  0047AE  6F6B               	movwf	___awdiv@sign& (0+255),b
 13365  0047B0                     l2935:
 13366                           
 13367                           ; BSR set to: 0
 13368                           
 13369                           ; BSR set to: 0
 13370  0047B0  AF67               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 13371  0047B2  D006               	goto	l2936
 13372                           
 13373                           ; BSR set to: 0
 13374  0047B4  6D66               	negf	___awdiv@dividend& (0+255),b
 13375  0047B6  1F67               	comf	(___awdiv@dividend+1)& (0+255),f,b
 13376  0047B8  B0D8               	btfsc	status,0,c
 13377  0047BA  2B67               	incf	(___awdiv@dividend+1)& (0+255),f,b
 13378                           
 13379                           ; BSR set to: 0
 13380  0047BC  0E01               	movlw	1
 13381  0047BE  1B6B               	xorwf	___awdiv@sign& (0+255),f,b
 13382  0047C0                     l2936:
 13383                           
 13384                           ; BSR set to: 0
 13385                           
 13386                           ; BSR set to: 0
 13387  0047C0  0E00               	movlw	0
 13388  0047C2  6F6D               	movwf	(___awdiv@quotient+1)& (0+255),b
 13389  0047C4  0E00               	movlw	0
 13390  0047C6  6F6C               	movwf	___awdiv@quotient& (0+255),b
 13391                           
 13392                           ; BSR set to: 0
 13393  0047C8  5168               	movf	___awdiv@divisor& (0+255),w,b
 13394  0047CA  1169               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 13395  0047CC  B4D8               	btfsc	status,2,c
 13396  0047CE  D01C               	goto	l2943
 13397                           
 13398                           ; BSR set to: 0
 13399  0047D0  0E01               	movlw	1
 13400  0047D2  6F6A               	movwf	___awdiv@counter& (0+255),b
 13401  0047D4  D004               	goto	l2938
 13402  0047D6                     
 13403                           ; BSR set to: 0
 13404                           
 13405                           ; BSR set to: 0
 13406  0047D6  90D8               	bcf	status,0,c
 13407  0047D8  3768               	rlcf	___awdiv@divisor& (0+255),f,b
 13408  0047DA  3769               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 13409  0047DC  2B6A               	incf	___awdiv@counter& (0+255),f,b
 13410  0047DE                     l2938:
 13411                           
 13412                           ; BSR set to: 0
 13413                           
 13414                           ; BSR set to: 0
 13415  0047DE  AF69               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 13416  0047E0  D7FA               	goto	l2939
 13417  0047E2                     u6820:
 13418                           
 13419                           ; BSR set to: 0
 13420                           
 13421                           ; BSR set to: 0
 13422                           
 13423                           ; BSR set to: 0
 13424  0047E2  90D8               	bcf	status,0,c
 13425  0047E4  376C               	rlcf	___awdiv@quotient& (0+255),f,b
 13426  0047E6  376D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 13427                           
 13428                           ; BSR set to: 0
 13429  0047E8  5168               	movf	___awdiv@divisor& (0+255),w,b
 13430  0047EA  5D66               	subwf	___awdiv@dividend& (0+255),w,b
 13431  0047EC  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
 13432  0047EE  5967               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 13433  0047F0  A0D8               	btfss	status,0,c
 13434  0047F2  D005               	goto	l2942
 13435                           
 13436                           ; BSR set to: 0
 13437  0047F4  5168               	movf	___awdiv@divisor& (0+255),w,b
 13438  0047F6  5F66               	subwf	___awdiv@dividend& (0+255),f,b
 13439  0047F8  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
 13440  0047FA  5B67               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 13441                           
 13442                           ; BSR set to: 0
 13443  0047FC  816C               	bsf	___awdiv@quotient& (0+255),0,b
 13444  0047FE                     l2942:
 13445                           
 13446                           ; BSR set to: 0
 13447                           
 13448                           ; BSR set to: 0
 13449  0047FE  90D8               	bcf	status,0,c
 13450  004800  3369               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 13451  004802  3368               	rrcf	___awdiv@divisor& (0+255),f,b
 13452                           
 13453                           ; BSR set to: 0
 13454  004804  2F6A               	decfsz	___awdiv@counter& (0+255),f,b
 13455  004806  D7ED               	goto	u6820
 13456  004808                     l2943:
 13457                           
 13458                           ; BSR set to: 0
 13459                           
 13460                           ; BSR set to: 0
 13461                           
 13462                           ; BSR set to: 0
 13463  004808  516B               	movf	___awdiv@sign& (0+255),w,b
 13464  00480A  B4D8               	btfsc	status,2,c
 13465  00480C  D004               	goto	l2944
 13466                           
 13467                           ; BSR set to: 0
 13468  00480E  6D6C               	negf	___awdiv@quotient& (0+255),b
 13469  004810  1F6D               	comf	(___awdiv@quotient+1)& (0+255),f,b
 13470  004812  B0D8               	btfsc	status,0,c
 13471  004814  2B6D               	incf	(___awdiv@quotient+1)& (0+255),f,b
 13472  004816                     l2944:
 13473                           
 13474                           ; BSR set to: 0
 13475                           
 13476                           ; BSR set to: 0
 13477  004816  C06C  F066         	movff	___awdiv@quotient,?___awdiv
 13478  00481A  C06D  F067         	movff	___awdiv@quotient+1,?___awdiv+1
 13479  00481E  0012               	return	
 13480  004820                     __end_of___awdiv:
 13481                           	opt stack 0
 13482                           tblptru	equ	0xFF8
 13483                           tblptrh	equ	0xFF7
 13484                           tblptrl	equ	0xFF6
 13485                           tablat	equ	0xFF5
 13486                           prodh	equ	0xFF4
 13487                           prodl	equ	0xFF3
 13488                           intcon	equ	0xFF2
 13489                           postinc0	equ	0xFEE
 13490                           wreg	equ	0xFE8
 13491                           indf1	equ	0xFE7
 13492                           postdec1	equ	0xFE5
 13493                           fsr1h	equ	0xFE2
 13494                           fsr1l	equ	0xFE1
 13495                           indf2	equ	0xFDF
 13496                           postinc2	equ	0xFDE
 13497                           postdec2	equ	0xFDD
 13498                           plusw2	equ	0xFDB
 13499                           fsr2h	equ	0xFDA
 13500                           fsr2l	equ	0xFD9
 13501                           status	equ	0xFD8
 13502                           
 13503 ;; *************** function __tdiv_to_l_ *****************
 13504 ;; Defined at:
 13505 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftdivl.c"
 13506 ;; Parameters:    Size  Location     Type
 13507 ;;  f1              3    0[BANK0 ] float 
 13508 ;;  f2              3    3[BANK0 ] float 
 13509 ;; Auto vars:     Size  Location     Type
 13510 ;;  quot            4    9[BANK0 ] unsigned long 
 13511 ;;  exp1            1   14[BANK0 ] unsigned char 
 13512 ;;  cntr            1   13[BANK0 ] unsigned char 
 13513 ;; Return value:  Size  Location     Type
 13514 ;;                  4    0[BANK0 ] unsigned long 
 13515 ;; Registers used:
 13516 ;;		wreg, status,2, status,0
 13517 ;; Tracked objects:
 13518 ;;		On entry : 0/0
 13519 ;;		On exit  : 0/0
 13520 ;;		Unchanged: 0/0
 13521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13522 ;;      Params:         0       6       0       0       0       0       0       0       0
 13523 ;;      Locals:         0       6       0       0       0       0       0       0       0
 13524 ;;      Temps:          0       3       0       0       0       0       0       0       0
 13525 ;;      Totals:         0      15       0       0       0       0       0       0       0
 13526 ;;Total ram usage:       15 bytes
 13527 ;; Hardware stack levels used:    1
 13528 ;; Hardware stack levels required when called:   10
 13529 ;; This function calls:
 13530 ;;		Nothing
 13531 ;; This function is called by:
 13532 ;;		_sprintf
 13533 ;; This function uses a non-reentrant model
 13534 ;;
 13535                           
 13536                           	psect	text40
 13537  002C2C                     __ptext40:
 13538                           	opt stack 0
 13539  002C2C                     __tdiv_to_l_:
 13540                           	opt stack 19
 13541                           
 13542                           ; BSR set to: 0
 13543                           ;incstack = 0
 13544  002C2C  C062  F066         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 13545  002C30  0100               	movlb	0	; () banked
 13546  002C32  6B67               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 13547  002C34  6B68               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 13548  002C36  3561               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 13549  002C38  3766               	rlcf	??__tdiv_to_l_& (0+255),f,b
 13550  002C3A  E301               	bnc	u7301
 13551  002C3C  8167               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 13552  002C3E                     u7301:
 13553  002C3E  5166               	movf	??__tdiv_to_l_& (0+255),w,b
 13554  002C40  6F6E               	movwf	__tdiv_to_l_@exp1& (0+255),b
 13555  002C42  516E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 13556  002C44  A4D8               	btfss	status,2,c
 13557  002C46  D009               	goto	l3071
 13558                           
 13559                           ; BSR set to: 0
 13560  002C48  0E00               	movlw	0
 13561  002C4A  6F60               	movwf	?__tdiv_to_l_& (0+255),b
 13562  002C4C  0E00               	movlw	0
 13563  002C4E  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 13564  002C50  0E00               	movlw	0
 13565  002C52  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 13566  002C54  0E00               	movlw	0
 13567  002C56  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 13568                           
 13569                           ; BSR set to: 0
 13570  002C58  0012               	return	
 13571  002C5A                     l3071:
 13572                           
 13573                           ; BSR set to: 0
 13574                           
 13575                           ; BSR set to: 0
 13576  002C5A  C065  F066         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 13577  002C5E  6B67               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 13578  002C60  6B68               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 13579  002C62  3564               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 13580  002C64  3766               	rlcf	??__tdiv_to_l_& (0+255),f,b
 13581  002C66  E301               	bnc	u7321
 13582  002C68  8167               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 13583  002C6A                     u7321:
 13584  002C6A  5166               	movf	??__tdiv_to_l_& (0+255),w,b
 13585  002C6C  6F6D               	movwf	__tdiv_to_l_@cntr& (0+255),b
 13586  002C6E  516D               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 13587  002C70  A4D8               	btfss	status,2,c
 13588  002C72  D009               	goto	l3073
 13589                           
 13590                           ; BSR set to: 0
 13591  002C74  0E00               	movlw	0
 13592  002C76  6F60               	movwf	?__tdiv_to_l_& (0+255),b
 13593  002C78  0E00               	movlw	0
 13594  002C7A  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 13595  002C7C  0E00               	movlw	0
 13596  002C7E  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 13597  002C80  0E00               	movlw	0
 13598  002C82  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 13599                           
 13600                           ; BSR set to: 0
 13601  002C84  0012               	return	
 13602  002C86                     l3073:
 13603                           
 13604                           ; BSR set to: 0
 13605                           
 13606                           ; BSR set to: 0
 13607  002C86  8F61               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 13608                           
 13609                           ; BSR set to: 0
 13610  002C88  0EFF               	movlw	255
 13611  002C8A  1760               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 13612  002C8C  0EFF               	movlw	255
 13613  002C8E  1761               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 13614  002C90  0E00               	movlw	0
 13615  002C92  1762               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 13616  002C94  8F64               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 13617                           
 13618                           ; BSR set to: 0
 13619  002C96  0EFF               	movlw	255
 13620  002C98  1763               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 13621  002C9A  0EFF               	movlw	255
 13622  002C9C  1764               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 13623  002C9E  0E00               	movlw	0
 13624  002CA0  1765               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 13625                           
 13626                           ; BSR set to: 0
 13627  002CA2  0E00               	movlw	0
 13628  002CA4  6F69               	movwf	__tdiv_to_l_@quot& (0+255),b
 13629  002CA6  0E00               	movlw	0
 13630  002CA8  6F6A               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 13631  002CAA  0E00               	movlw	0
 13632  002CAC  6F6B               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 13633  002CAE  0E00               	movlw	0
 13634  002CB0  6F6C               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 13635                           
 13636                           ; BSR set to: 0
 13637  002CB2  0E7F               	movlw	127
 13638  002CB4  5F6E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 13639                           
 13640                           ; BSR set to: 0
 13641  002CB6  516D               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 13642  002CB8  0F98               	addlw	152
 13643  002CBA  5F6E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 13644                           
 13645                           ; BSR set to: 0
 13646  002CBC  0E18               	movlw	24
 13647  002CBE  6F6D               	movwf	__tdiv_to_l_@cntr& (0+255),b
 13648  002CC0                     l3074:
 13649                           
 13650                           ; BSR set to: 0
 13651  002CC0  90D8               	bcf	status,0,c
 13652  002CC2  3769               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 13653  002CC4  376A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 13654  002CC6  376B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 13655  002CC8  376C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 13656                           
 13657                           ; BSR set to: 0
 13658  002CCA  5163               	movf	__tdiv_to_l_@f2& (0+255),w,b
 13659  002CCC  5D60               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 13660  002CCE  5164               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 13661  002CD0  5961               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 13662  002CD2  5165               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 13663  002CD4  5962               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 13664  002CD6  A0D8               	btfss	status,0,c
 13665  002CD8  D007               	goto	l3075
 13666                           
 13667                           ; BSR set to: 0
 13668  002CDA  5163               	movf	__tdiv_to_l_@f2& (0+255),w,b
 13669  002CDC  5F60               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 13670  002CDE  5164               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 13671  002CE0  5B61               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 13672  002CE2  5165               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 13673  002CE4  5B62               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 13674                           
 13675                           ; BSR set to: 0
 13676  002CE6  8169               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 13677  002CE8                     l3075:
 13678                           
 13679                           ; BSR set to: 0
 13680  002CE8  90D8               	bcf	status,0,c
 13681  002CEA  3760               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 13682  002CEC  3761               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 13683  002CEE  3762               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 13684                           
 13685                           ; BSR set to: 0
 13686  002CF0  2F6D               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 13687  002CF2  D7E6               	goto	l3074
 13688                           
 13689                           ; BSR set to: 0
 13690                           
 13691                           ; BSR set to: 0
 13692  002CF4  AF6E               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 13693  002CF6  D016               	goto	l3077
 13694                           
 13695                           ; BSR set to: 0
 13696  002CF8  516E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 13697  002CFA  0A80               	xorlw	128
 13698  002CFC  0F97               	addlw	151
 13699  002CFE  B0D8               	btfsc	status,0,c
 13700  002D00  D009               	goto	l3078
 13701                           
 13702                           ; BSR set to: 0
 13703  002D02  0E00               	movlw	0
 13704  002D04  6F60               	movwf	?__tdiv_to_l_& (0+255),b
 13705  002D06  0E00               	movlw	0
 13706  002D08  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 13707  002D0A  0E00               	movlw	0
 13708  002D0C  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 13709  002D0E  0E00               	movlw	0
 13710  002D10  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 13711                           
 13712                           ; BSR set to: 0
 13713  002D12  0012               	return	
 13714  002D14                     l3078:
 13715                           
 13716                           ; BSR set to: 0
 13717                           
 13718                           ; BSR set to: 0
 13719                           
 13720                           ; BSR set to: 0
 13721  002D14  90D8               	bcf	status,0,c
 13722  002D16  336C               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 13723  002D18  336B               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 13724  002D1A  336A               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 13725  002D1C  3369               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 13726                           
 13727                           ; BSR set to: 0
 13728  002D1E  3F6E               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 13729  002D20  D7F9               	goto	l3078
 13730                           
 13731                           ; BSR set to: 0
 13732  002D22  D015               	goto	u7380
 13733  002D24                     l3077:
 13734                           
 13735                           ; BSR set to: 0
 13736                           
 13737                           ; BSR set to: 0
 13738  002D24  0E17               	movlw	23
 13739  002D26  656E               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 13740  002D28  D00F               	goto	l3083
 13741                           
 13742                           ; BSR set to: 0
 13743  002D2A  0E00               	movlw	0
 13744  002D2C  6F60               	movwf	?__tdiv_to_l_& (0+255),b
 13745  002D2E  0E00               	movlw	0
 13746  002D30  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 13747  002D32  0E00               	movlw	0
 13748  002D34  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 13749  002D36  0E00               	movlw	0
 13750  002D38  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 13751                           
 13752                           ; BSR set to: 0
 13753  002D3A  0012               	return	
 13754  002D3C                     
 13755                           ; BSR set to: 0
 13756                           
 13757                           ; BSR set to: 0
 13758  002D3C  90D8               	bcf	status,0,c
 13759  002D3E  3769               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 13760  002D40  376A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 13761  002D42  376B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 13762  002D44  376C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 13763  002D46  076E               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 13764  002D48                     l3083:
 13765                           
 13766                           ; BSR set to: 0
 13767                           
 13768                           ; BSR set to: 0
 13769  002D48  516E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 13770  002D4A  A4D8               	btfss	status,2,c
 13771  002D4C  D7F7               	goto	l3084
 13772  002D4E                     u7380:
 13773                           
 13774                           ; BSR set to: 0
 13775                           
 13776                           ; BSR set to: 0
 13777  002D4E  C069  F060         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 13778  002D52  C06A  F061         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 13779  002D56  C06B  F062         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 13780  002D5A  C06C  F063         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 13781                           
 13782                           ; BSR set to: 0
 13783  002D5E  0012               	return		;funcret
 13784  002D60                     __end_of__tdiv_to_l_:
 13785                           	opt stack 0
 13786                           tblptru	equ	0xFF8
 13787                           tblptrh	equ	0xFF7
 13788                           tblptrl	equ	0xFF6
 13789                           tablat	equ	0xFF5
 13790                           prodh	equ	0xFF4
 13791                           prodl	equ	0xFF3
 13792                           intcon	equ	0xFF2
 13793                           postinc0	equ	0xFEE
 13794                           wreg	equ	0xFE8
 13795                           indf1	equ	0xFE7
 13796                           postdec1	equ	0xFE5
 13797                           fsr1h	equ	0xFE2
 13798                           fsr1l	equ	0xFE1
 13799                           indf2	equ	0xFDF
 13800                           postinc2	equ	0xFDE
 13801                           postdec2	equ	0xFDD
 13802                           plusw2	equ	0xFDB
 13803                           fsr2h	equ	0xFDA
 13804                           fsr2l	equ	0xFD9
 13805                           status	equ	0xFD8
 13806                           
 13807 ;; *************** function __div_to_l_ *****************
 13808 ;; Defined at:
 13809 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\fldivl.c"
 13810 ;; Parameters:    Size  Location     Type
 13811 ;;  f1              3    0[BANK0 ] unsigned long 
 13812 ;;  f2              3    3[BANK0 ] unsigned long 
 13813 ;; Auto vars:     Size  Location     Type
 13814 ;;  quot            4    6[BANK0 ] unsigned long 
 13815 ;;  exp1            1   11[BANK0 ] unsigned char 
 13816 ;;  cntr            1   10[BANK0 ] unsigned char 
 13817 ;; Return value:  Size  Location     Type
 13818 ;;                  4    0[BANK0 ] unsigned long 
 13819 ;; Registers used:
 13820 ;;		wreg, status,2, status,0
 13821 ;; Tracked objects:
 13822 ;;		On entry : 0/0
 13823 ;;		On exit  : 0/0
 13824 ;;		Unchanged: 0/0
 13825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13826 ;;      Params:         0       6       0       0       0       0       0       0       0
 13827 ;;      Locals:         0       6       0       0       0       0       0       0       0
 13828 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13829 ;;      Totals:         0      12       0       0       0       0       0       0       0
 13830 ;;Total ram usage:       12 bytes
 13831 ;; Hardware stack levels used:    1
 13832 ;; Hardware stack levels required when called:   10
 13833 ;; This function calls:
 13834 ;;		Nothing
 13835 ;; This function is called by:
 13836 ;;		_sprintf
 13837 ;; This function uses a non-reentrant model
 13838 ;;
 13839                           
 13840                           	psect	text41
 13841  0030E8                     __ptext41:
 13842                           	opt stack 0
 13843  0030E8                     __div_to_l_:
 13844                           	opt stack 19
 13845                           
 13846                           ; BSR set to: 0
 13847                           ;incstack = 0
 13848  0030E8  0100               	movlb	0	; () banked
 13849  0030EA  3562               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 13850  0030EC  3563               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 13851  0030EE  6F6B               	movwf	__div_to_l_@exp1& (0+255),b
 13852  0030F0  516B               	movf	__div_to_l_@exp1& (0+255),w,b
 13853  0030F2  A4D8               	btfss	status,2,c
 13854  0030F4  D009               	goto	l2967
 13855                           
 13856                           ; BSR set to: 0
 13857  0030F6  0E00               	movlw	0
 13858  0030F8  6F60               	movwf	?__div_to_l_& (0+255),b
 13859  0030FA  0E00               	movlw	0
 13860  0030FC  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
 13861  0030FE  0E00               	movlw	0
 13862  003100  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
 13863  003102  0E00               	movlw	0
 13864  003104  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
 13865                           
 13866                           ; BSR set to: 0
 13867  003106  0012               	return	
 13868  003108                     l2967:
 13869                           
 13870                           ; BSR set to: 0
 13871                           
 13872                           ; BSR set to: 0
 13873  003108  3565               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 13874  00310A  3566               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 13875  00310C  6F6A               	movwf	__div_to_l_@cntr& (0+255),b
 13876  00310E  516A               	movf	__div_to_l_@cntr& (0+255),w,b
 13877  003110  A4D8               	btfss	status,2,c
 13878  003112  D009               	goto	l2969
 13879                           
 13880                           ; BSR set to: 0
 13881  003114  0E00               	movlw	0
 13882  003116  6F60               	movwf	?__div_to_l_& (0+255),b
 13883  003118  0E00               	movlw	0
 13884  00311A  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
 13885  00311C  0E00               	movlw	0
 13886  00311E  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
 13887  003120  0E00               	movlw	0
 13888  003122  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
 13889                           
 13890                           ; BSR set to: 0
 13891  003124  0012               	return	
 13892  003126                     l2969:
 13893                           
 13894                           ; BSR set to: 0
 13895                           
 13896                           ; BSR set to: 0
 13897  003126  8F62               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 13898                           
 13899                           ; BSR set to: 0
 13900  003128  0EFF               	movlw	255
 13901  00312A  1760               	andwf	__div_to_l_@f1& (0+255),f,b
 13902  00312C  0EFF               	movlw	255
 13903  00312E  1761               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 13904  003130  0EFF               	movlw	255
 13905  003132  1762               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 13906  003134  0E00               	movlw	0
 13907  003136  1763               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 13908                           
 13909                           ; BSR set to: 0
 13910  003138  8F65               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 13911  00313A  0EFF               	movlw	255
 13912  00313C  1763               	andwf	__div_to_l_@f2& (0+255),f,b
 13913  00313E  0EFF               	movlw	255
 13914  003140  1764               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 13915  003142  0EFF               	movlw	255
 13916  003144  1765               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 13917  003146  0E00               	movlw	0
 13918  003148  1766               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 13919                           
 13920                           ; BSR set to: 0
 13921  00314A  0E00               	movlw	0
 13922  00314C  6F66               	movwf	__div_to_l_@quot& (0+255),b
 13923  00314E  0E00               	movlw	0
 13924  003150  6F67               	movwf	(__div_to_l_@quot+1)& (0+255),b
 13925  003152  0E00               	movlw	0
 13926  003154  6F68               	movwf	(__div_to_l_@quot+2)& (0+255),b
 13927  003156  0E00               	movlw	0
 13928  003158  6F69               	movwf	(__div_to_l_@quot+3)& (0+255),b
 13929                           
 13930                           ; BSR set to: 0
 13931  00315A  0E7F               	movlw	127
 13932  00315C  5F6B               	subwf	__div_to_l_@exp1& (0+255),f,b
 13933                           
 13934                           ; BSR set to: 0
 13935  00315E  516A               	movf	__div_to_l_@cntr& (0+255),w,b
 13936  003160  0FA0               	addlw	160
 13937  003162  5F6B               	subwf	__div_to_l_@exp1& (0+255),f,b
 13938                           
 13939                           ; BSR set to: 0
 13940  003164  0E20               	movlw	32
 13941  003166  6F6A               	movwf	__div_to_l_@cntr& (0+255),b
 13942  003168                     
 13943                           ; BSR set to: 0
 13944                           
 13945                           ; BSR set to: 0
 13946  003168  90D8               	bcf	status,0,c
 13947  00316A  3766               	rlcf	__div_to_l_@quot& (0+255),f,b
 13948  00316C  3767               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 13949  00316E  3768               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 13950  003170  3769               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 13951                           
 13952                           ; BSR set to: 0
 13953  003172  5163               	movf	__div_to_l_@f2& (0+255),w,b
 13954  003174  5D60               	subwf	__div_to_l_@f1& (0+255),w,b
 13955  003176  5164               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 13956  003178  5961               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 13957  00317A  5165               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 13958  00317C  5962               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 13959  00317E  5166               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 13960  003180  5963               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 13961  003182  A0D8               	btfss	status,0,c
 13962  003184  D009               	goto	l2971
 13963                           
 13964                           ; BSR set to: 0
 13965  003186  5163               	movf	__div_to_l_@f2& (0+255),w,b
 13966  003188  5F60               	subwf	__div_to_l_@f1& (0+255),f,b
 13967  00318A  5164               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 13968  00318C  5B61               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 13969  00318E  5165               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 13970  003190  5B62               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 13971  003192  5166               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 13972  003194  5B63               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 13973                           
 13974                           ; BSR set to: 0
 13975  003196  8166               	bsf	__div_to_l_@quot& (0+255),0,b
 13976  003198                     l2971:
 13977                           
 13978                           ; BSR set to: 0
 13979                           
 13980                           ; BSR set to: 0
 13981  003198  90D8               	bcf	status,0,c
 13982  00319A  3760               	rlcf	__div_to_l_@f1& (0+255),f,b
 13983  00319C  3761               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 13984  00319E  3762               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 13985  0031A0  3763               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 13986                           
 13987                           ; BSR set to: 0
 13988  0031A2  2F6A               	decfsz	__div_to_l_@cntr& (0+255),f,b
 13989  0031A4  D7E1               	goto	l2970
 13990                           
 13991                           ; BSR set to: 0
 13992                           
 13993                           ; BSR set to: 0
 13994  0031A6  AF6B               	btfss	__div_to_l_@exp1& (0+255),7,b
 13995  0031A8  D016               	goto	l2973
 13996                           
 13997                           ; BSR set to: 0
 13998  0031AA  516B               	movf	__div_to_l_@exp1& (0+255),w,b
 13999  0031AC  0A80               	xorlw	128
 14000  0031AE  0F9F               	addlw	159
 14001  0031B0  B0D8               	btfsc	status,0,c
 14002  0031B2  D009               	goto	l2974
 14003                           
 14004                           ; BSR set to: 0
 14005  0031B4  0E00               	movlw	0
 14006  0031B6  6F60               	movwf	?__div_to_l_& (0+255),b
 14007  0031B8  0E00               	movlw	0
 14008  0031BA  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
 14009  0031BC  0E00               	movlw	0
 14010  0031BE  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
 14011  0031C0  0E00               	movlw	0
 14012  0031C2  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
 14013                           
 14014                           ; BSR set to: 0
 14015  0031C4  0012               	return	
 14016  0031C6                     l2974:
 14017                           
 14018                           ; BSR set to: 0
 14019                           
 14020                           ; BSR set to: 0
 14021                           
 14022                           ; BSR set to: 0
 14023  0031C6  90D8               	bcf	status,0,c
 14024  0031C8  3369               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 14025  0031CA  3368               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 14026  0031CC  3367               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 14027  0031CE  3366               	rrcf	__div_to_l_@quot& (0+255),f,b
 14028                           
 14029                           ; BSR set to: 0
 14030  0031D0  3F6B               	incfsz	__div_to_l_@exp1& (0+255),f,b
 14031  0031D2  D7F9               	goto	l2974
 14032                           
 14033                           ; BSR set to: 0
 14034  0031D4  D015               	goto	u7450
 14035  0031D6                     l2973:
 14036                           
 14037                           ; BSR set to: 0
 14038                           
 14039                           ; BSR set to: 0
 14040  0031D6  0E1F               	movlw	31
 14041  0031D8  656B               	cpfsgt	__div_to_l_@exp1& (0+255),b
 14042  0031DA  D00F               	goto	l2979
 14043                           
 14044                           ; BSR set to: 0
 14045  0031DC  0E00               	movlw	0
 14046  0031DE  6F60               	movwf	?__div_to_l_& (0+255),b
 14047  0031E0  0E00               	movlw	0
 14048  0031E2  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
 14049  0031E4  0E00               	movlw	0
 14050  0031E6  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
 14051  0031E8  0E00               	movlw	0
 14052  0031EA  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
 14053                           
 14054                           ; BSR set to: 0
 14055  0031EC  0012               	return	
 14056  0031EE                     
 14057                           ; BSR set to: 0
 14058                           
 14059                           ; BSR set to: 0
 14060  0031EE  90D8               	bcf	status,0,c
 14061  0031F0  3766               	rlcf	__div_to_l_@quot& (0+255),f,b
 14062  0031F2  3767               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 14063  0031F4  3768               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 14064  0031F6  3769               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 14065  0031F8  076B               	decf	__div_to_l_@exp1& (0+255),f,b
 14066  0031FA                     l2979:
 14067                           
 14068                           ; BSR set to: 0
 14069                           
 14070                           ; BSR set to: 0
 14071  0031FA  516B               	movf	__div_to_l_@exp1& (0+255),w,b
 14072  0031FC  A4D8               	btfss	status,2,c
 14073  0031FE  D7F7               	goto	l2980
 14074  003200                     u7450:
 14075                           
 14076                           ; BSR set to: 0
 14077                           
 14078                           ; BSR set to: 0
 14079  003200  C066  F060         	movff	__div_to_l_@quot,?__div_to_l_
 14080  003204  C067  F061         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 14081  003208  C068  F062         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 14082  00320C  C069  F063         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 14083                           
 14084                           ; BSR set to: 0
 14085  003210  0012               	return		;funcret
 14086  003212                     __end_of__div_to_l_:
 14087                           	opt stack 0
 14088                           tblptru	equ	0xFF8
 14089                           tblptrh	equ	0xFF7
 14090                           tblptrl	equ	0xFF6
 14091                           tablat	equ	0xFF5
 14092                           prodh	equ	0xFF4
 14093                           prodl	equ	0xFF3
 14094                           intcon	equ	0xFF2
 14095                           postinc0	equ	0xFEE
 14096                           wreg	equ	0xFE8
 14097                           indf1	equ	0xFE7
 14098                           postdec1	equ	0xFE5
 14099                           fsr1h	equ	0xFE2
 14100                           fsr1l	equ	0xFE1
 14101                           indf2	equ	0xFDF
 14102                           postinc2	equ	0xFDE
 14103                           postdec2	equ	0xFDD
 14104                           plusw2	equ	0xFDB
 14105                           fsr2h	equ	0xFDA
 14106                           fsr2l	equ	0xFD9
 14107                           status	equ	0xFD8
 14108                           
 14109 ;; *************** function ___lltoft *****************
 14110 ;; Defined at:
 14111 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lltoft.c"
 14112 ;; Parameters:    Size  Location     Type
 14113 ;;  c               4    8[BANK0 ] unsigned long 
 14114 ;; Auto vars:     Size  Location     Type
 14115 ;;  exp             1   16[BANK0 ] unsigned char 
 14116 ;; Return value:  Size  Location     Type
 14117 ;;                  3    8[BANK0 ] float 
 14118 ;; Registers used:
 14119 ;;		wreg, status,2, status,0, cstack
 14120 ;; Tracked objects:
 14121 ;;		On entry : 0/0
 14122 ;;		On exit  : 0/0
 14123 ;;		Unchanged: 0/0
 14124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14125 ;;      Params:         0       4       0       0       0       0       0       0       0
 14126 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14127 ;;      Temps:          0       4       0       0       0       0       0       0       0
 14128 ;;      Totals:         0       9       0       0       0       0       0       0       0
 14129 ;;Total ram usage:        9 bytes
 14130 ;; Hardware stack levels used:    1
 14131 ;; Hardware stack levels required when called:   11
 14132 ;; This function calls:
 14133 ;;		___ftpack
 14134 ;; This function is called by:
 14135 ;;		_sprintf
 14136 ;; This function uses a non-reentrant model
 14137 ;;
 14138                           
 14139                           	psect	text42
 14140  004C2A                     __ptext42:
 14141                           	opt stack 0
 14142  004C2A                     ___lltoft:
 14143                           	opt stack 18
 14144                           
 14145                           ; BSR set to: 0
 14146                           ;incstack = 0
 14147  004C2A  0E8E               	movlw	142
 14148  004C2C  0100               	movlb	0	; () banked
 14149  004C2E  6F70               	movwf	___lltoft@exp& (0+255),b
 14150  004C30  D006               	goto	l3178
 14151  004C32                     
 14152                           ; BSR set to: 0
 14153                           
 14154                           ; BSR set to: 0
 14155  004C32  90D8               	bcf	status,0,c
 14156  004C34  336B               	rrcf	(___lltoft@c+3)& (0+255),f,b
 14157  004C36  336A               	rrcf	(___lltoft@c+2)& (0+255),f,b
 14158  004C38  3369               	rrcf	(___lltoft@c+1)& (0+255),f,b
 14159  004C3A  3368               	rrcf	___lltoft@c& (0+255),f,b
 14160  004C3C  2B70               	incf	___lltoft@exp& (0+255),f,b
 14161  004C3E                     l3178:
 14162                           
 14163                           ; BSR set to: 0
 14164                           
 14165                           ; BSR set to: 0
 14166  004C3E  0E00               	movlw	0
 14167  004C40  1568               	andwf	___lltoft@c& (0+255),w,b
 14168  004C42  6F6C               	movwf	??___lltoft& (0+255),b
 14169  004C44  0E00               	movlw	0
 14170  004C46  1569               	andwf	(___lltoft@c+1)& (0+255),w,b
 14171  004C48  6F6D               	movwf	(??___lltoft+1)& (0+255),b
 14172  004C4A  0E00               	movlw	0
 14173  004C4C  156A               	andwf	(___lltoft@c+2)& (0+255),w,b
 14174  004C4E  6F6E               	movwf	(??___lltoft+2)& (0+255),b
 14175  004C50  0EFF               	movlw	255
 14176  004C52  156B               	andwf	(___lltoft@c+3)& (0+255),w,b
 14177  004C54  6F6F               	movwf	(??___lltoft+3)& (0+255),b
 14178  004C56  516C               	movf	??___lltoft& (0+255),w,b
 14179  004C58  116D               	iorwf	(??___lltoft+1)& (0+255),w,b
 14180  004C5A  116E               	iorwf	(??___lltoft+2)& (0+255),w,b
 14181  004C5C  116F               	iorwf	(??___lltoft+3)& (0+255),w,b
 14182  004C5E  A4D8               	btfss	status,2,c
 14183  004C60  D7E8               	goto	l3179
 14184                           
 14185                           ; BSR set to: 0
 14186                           
 14187                           ; BSR set to: 0
 14188  004C62  C068  F060         	movff	___lltoft@c,___ftpack@arg
 14189  004C66  C069  F061         	movff	___lltoft@c+1,___ftpack@arg+1
 14190  004C6A  C06A  F062         	movff	___lltoft@c+2,___ftpack@arg+2
 14191  004C6E  C070  F063         	movff	___lltoft@exp,___ftpack@exp
 14192  004C72  0E00               	movlw	0
 14193  004C74  6F64               	movwf	___ftpack@sign& (0+255),b
 14194  004C76  EC0B  F020         	call	___ftpack	;wreg free
 14195  004C7A  C060  F068         	movff	?___ftpack,?___lltoft
 14196  004C7E  C061  F069         	movff	?___ftpack+1,?___lltoft+1
 14197  004C82  C062  F06A         	movff	?___ftpack+2,?___lltoft+2
 14198  004C86  0012               	return	
 14199  004C88                     __end_of___lltoft:
 14200                           	opt stack 0
 14201                           tblptru	equ	0xFF8
 14202                           tblptrh	equ	0xFF7
 14203                           tblptrl	equ	0xFF6
 14204                           tablat	equ	0xFF5
 14205                           prodh	equ	0xFF4
 14206                           prodl	equ	0xFF3
 14207                           intcon	equ	0xFF2
 14208                           postinc0	equ	0xFEE
 14209                           wreg	equ	0xFE8
 14210                           indf1	equ	0xFE7
 14211                           postdec1	equ	0xFE5
 14212                           fsr1h	equ	0xFE2
 14213                           fsr1l	equ	0xFE1
 14214                           indf2	equ	0xFDF
 14215                           postinc2	equ	0xFDE
 14216                           postdec2	equ	0xFDD
 14217                           plusw2	equ	0xFDB
 14218                           fsr2h	equ	0xFDA
 14219                           fsr2l	equ	0xFD9
 14220                           status	equ	0xFD8
 14221                           
 14222 ;; *************** function ___llmod *****************
 14223 ;; Defined at:
 14224 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\llmod.c"
 14225 ;; Parameters:    Size  Location     Type
 14226 ;;  dividend        4   13[BANK0 ] unsigned long 
 14227 ;;  divisor         4   17[BANK0 ] unsigned long 
 14228 ;; Auto vars:     Size  Location     Type
 14229 ;;  counter         1   21[BANK0 ] unsigned char 
 14230 ;; Return value:  Size  Location     Type
 14231 ;;                  4   13[BANK0 ] unsigned long 
 14232 ;; Registers used:
 14233 ;;		wreg, status,2, status,0
 14234 ;; Tracked objects:
 14235 ;;		On entry : 0/0
 14236 ;;		On exit  : 0/0
 14237 ;;		Unchanged: 0/0
 14238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14239 ;;      Params:         0       8       0       0       0       0       0       0       0
 14240 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14241 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14242 ;;      Totals:         0       9       0       0       0       0       0       0       0
 14243 ;;Total ram usage:        9 bytes
 14244 ;; Hardware stack levels used:    1
 14245 ;; Hardware stack levels required when called:   10
 14246 ;; This function calls:
 14247 ;;		Nothing
 14248 ;; This function is called by:
 14249 ;;		_sprintf
 14250 ;;		_send
 14251 ;; This function uses a non-reentrant model
 14252 ;;
 14253                           
 14254                           	psect	text43
 14255  004AFC                     __ptext43:
 14256                           	opt stack 0
 14257  004AFC                     ___llmod:
 14258                           	opt stack 19
 14259                           
 14260                           ;incstack = 0
 14261  004AFC  0100               	movlb	0	; () banked
 14262  004AFE  5171               	movf	___llmod@divisor& (0+255),w,b
 14263  004B00  1172               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 14264  004B02  1173               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 14265  004B04  1174               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 14266  004B06  B4D8               	btfsc	status,2,c
 14267  004B08  D024               	goto	l3172
 14268                           
 14269                           ; BSR set to: 0
 14270  004B0A  0E01               	movlw	1
 14271  004B0C  6F75               	movwf	___llmod@counter& (0+255),b
 14272  004B0E  D006               	goto	l3167
 14273  004B10                     
 14274                           ; BSR set to: 0
 14275                           
 14276                           ; BSR set to: 0
 14277  004B10  90D8               	bcf	status,0,c
 14278  004B12  3771               	rlcf	___llmod@divisor& (0+255),f,b
 14279  004B14  3772               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 14280  004B16  3773               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 14281  004B18  3774               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 14282  004B1A  2B75               	incf	___llmod@counter& (0+255),f,b
 14283  004B1C                     l3167:
 14284                           
 14285                           ; BSR set to: 0
 14286                           
 14287                           ; BSR set to: 0
 14288  004B1C  AF74               	btfss	(___llmod@divisor+3)& (0+255),7,b
 14289  004B1E  D7F8               	goto	l3168
 14290  004B20                     u7630:
 14291                           
 14292                           ; BSR set to: 0
 14293                           
 14294                           ; BSR set to: 0
 14295                           
 14296                           ; BSR set to: 0
 14297  004B20  5171               	movf	___llmod@divisor& (0+255),w,b
 14298  004B22  5D6D               	subwf	___llmod@dividend& (0+255),w,b
 14299  004B24  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
 14300  004B26  596E               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 14301  004B28  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
 14302  004B2A  596F               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 14303  004B2C  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
 14304  004B2E  5970               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 14305  004B30  A0D8               	btfss	status,0,c
 14306  004B32  D008               	goto	l3171
 14307                           
 14308                           ; BSR set to: 0
 14309  004B34  5171               	movf	___llmod@divisor& (0+255),w,b
 14310  004B36  5F6D               	subwf	___llmod@dividend& (0+255),f,b
 14311  004B38  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
 14312  004B3A  5B6E               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 14313  004B3C  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
 14314  004B3E  5B6F               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 14315  004B40  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
 14316  004B42  5B70               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 14317  004B44                     l3171:
 14318                           
 14319                           ; BSR set to: 0
 14320                           
 14321                           ; BSR set to: 0
 14322  004B44  90D8               	bcf	status,0,c
 14323  004B46  3374               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 14324  004B48  3373               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 14325  004B4A  3372               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 14326  004B4C  3371               	rrcf	___llmod@divisor& (0+255),f,b
 14327                           
 14328                           ; BSR set to: 0
 14329  004B4E  2F75               	decfsz	___llmod@counter& (0+255),f,b
 14330  004B50  D7E7               	goto	u7630
 14331  004B52                     l3172:
 14332                           
 14333                           ; BSR set to: 0
 14334                           
 14335                           ; BSR set to: 0
 14336  004B52  C06D  F06D         	movff	___llmod@dividend,?___llmod
 14337  004B56  C06E  F06E         	movff	___llmod@dividend+1,?___llmod+1
 14338  004B5A  C06F  F06F         	movff	___llmod@dividend+2,?___llmod+2
 14339  004B5E  C070  F070         	movff	___llmod@dividend+3,?___llmod+3
 14340                           
 14341                           ; BSR set to: 0
 14342  004B62  0012               	return		;funcret
 14343  004B64                     __end_of___llmod:
 14344                           	opt stack 0
 14345                           tblptru	equ	0xFF8
 14346                           tblptrh	equ	0xFF7
 14347                           tblptrl	equ	0xFF6
 14348                           tablat	equ	0xFF5
 14349                           prodh	equ	0xFF4
 14350                           prodl	equ	0xFF3
 14351                           intcon	equ	0xFF2
 14352                           postinc0	equ	0xFEE
 14353                           wreg	equ	0xFE8
 14354                           indf1	equ	0xFE7
 14355                           postdec1	equ	0xFE5
 14356                           fsr1h	equ	0xFE2
 14357                           fsr1l	equ	0xFE1
 14358                           indf2	equ	0xFDF
 14359                           postinc2	equ	0xFDE
 14360                           postdec2	equ	0xFDD
 14361                           plusw2	equ	0xFDB
 14362                           fsr2h	equ	0xFDA
 14363                           fsr2l	equ	0xFD9
 14364                           status	equ	0xFD8
 14365                           
 14366 ;; *************** function ___lldiv *****************
 14367 ;; Defined at:
 14368 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lldiv.c"
 14369 ;; Parameters:    Size  Location     Type
 14370 ;;  dividend        4    0[BANK0 ] unsigned long 
 14371 ;;  divisor         4    4[BANK0 ] unsigned long 
 14372 ;; Auto vars:     Size  Location     Type
 14373 ;;  quotient        4    8[BANK0 ] unsigned long 
 14374 ;;  counter         1   12[BANK0 ] unsigned char 
 14375 ;; Return value:  Size  Location     Type
 14376 ;;                  4    0[BANK0 ] unsigned long 
 14377 ;; Registers used:
 14378 ;;		wreg, status,2, status,0
 14379 ;; Tracked objects:
 14380 ;;		On entry : 0/0
 14381 ;;		On exit  : 0/0
 14382 ;;		Unchanged: 0/0
 14383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14384 ;;      Params:         0       8       0       0       0       0       0       0       0
 14385 ;;      Locals:         0       5       0       0       0       0       0       0       0
 14386 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14387 ;;      Totals:         0      13       0       0       0       0       0       0       0
 14388 ;;Total ram usage:       13 bytes
 14389 ;; Hardware stack levels used:    1
 14390 ;; Hardware stack levels required when called:   10
 14391 ;; This function calls:
 14392 ;;		Nothing
 14393 ;; This function is called by:
 14394 ;;		_setup_uart
 14395 ;;		_sprintf
 14396 ;; This function uses a non-reentrant model
 14397 ;;
 14398                           
 14399                           	psect	text44
 14400  0048A6                     __ptext44:
 14401                           	opt stack 0
 14402  0048A6                     ___lldiv:
 14403                           	opt stack 19
 14404                           
 14405                           ; BSR set to: 0
 14406                           ;incstack = 0
 14407  0048A6  0E00               	movlw	0
 14408  0048A8  0100               	movlb	0	; () banked
 14409  0048AA  6F68               	movwf	___lldiv@quotient& (0+255),b
 14410  0048AC  0E00               	movlw	0
 14411  0048AE  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 14412  0048B0  0E00               	movlw	0
 14413  0048B2  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 14414  0048B4  0E00               	movlw	0
 14415  0048B6  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 14416                           
 14417                           ; BSR set to: 0
 14418  0048B8  5164               	movf	___lldiv@divisor& (0+255),w,b
 14419  0048BA  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 14420  0048BC  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 14421  0048BE  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 14422  0048C0  B4D8               	btfsc	status,2,c
 14423  0048C2  D02A               	goto	l3162
 14424                           
 14425                           ; BSR set to: 0
 14426  0048C4  0E01               	movlw	1
 14427  0048C6  6F6C               	movwf	___lldiv@counter& (0+255),b
 14428  0048C8  D006               	goto	l3157
 14429  0048CA                     
 14430                           ; BSR set to: 0
 14431                           
 14432                           ; BSR set to: 0
 14433  0048CA  90D8               	bcf	status,0,c
 14434  0048CC  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 14435  0048CE  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 14436  0048D0  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 14437  0048D2  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 14438  0048D4  2B6C               	incf	___lldiv@counter& (0+255),f,b
 14439  0048D6                     l3157:
 14440                           
 14441                           ; BSR set to: 0
 14442                           
 14443                           ; BSR set to: 0
 14444  0048D6  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 14445  0048D8  D7F8               	goto	l3158
 14446  0048DA                     u7600:
 14447                           
 14448                           ; BSR set to: 0
 14449                           
 14450                           ; BSR set to: 0
 14451                           
 14452                           ; BSR set to: 0
 14453  0048DA  90D8               	bcf	status,0,c
 14454  0048DC  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 14455  0048DE  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 14456  0048E0  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 14457  0048E2  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 14458                           
 14459                           ; BSR set to: 0
 14460  0048E4  5164               	movf	___lldiv@divisor& (0+255),w,b
 14461  0048E6  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 14462  0048E8  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 14463  0048EA  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 14464  0048EC  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 14465  0048EE  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 14466  0048F0  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 14467  0048F2  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 14468  0048F4  A0D8               	btfss	status,0,c
 14469  0048F6  D009               	goto	l3161
 14470                           
 14471                           ; BSR set to: 0
 14472  0048F8  5164               	movf	___lldiv@divisor& (0+255),w,b
 14473  0048FA  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 14474  0048FC  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 14475  0048FE  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 14476  004900  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 14477  004902  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 14478  004904  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 14479  004906  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 14480                           
 14481                           ; BSR set to: 0
 14482  004908  8168               	bsf	___lldiv@quotient& (0+255),0,b
 14483  00490A                     l3161:
 14484                           
 14485                           ; BSR set to: 0
 14486                           
 14487                           ; BSR set to: 0
 14488  00490A  90D8               	bcf	status,0,c
 14489  00490C  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 14490  00490E  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 14491  004910  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 14492  004912  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 14493                           
 14494                           ; BSR set to: 0
 14495  004914  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 14496  004916  D7E1               	goto	u7600
 14497  004918                     l3162:
 14498                           
 14499                           ; BSR set to: 0
 14500                           
 14501                           ; BSR set to: 0
 14502  004918  C068  F060         	movff	___lldiv@quotient,?___lldiv
 14503  00491C  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 14504  004920  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 14505  004924  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 14506                           
 14507                           ; BSR set to: 0
 14508  004928  0012               	return		;funcret
 14509  00492A                     __end_of___lldiv:
 14510                           	opt stack 0
 14511                           tblptru	equ	0xFF8
 14512                           tblptrh	equ	0xFF7
 14513                           tblptrl	equ	0xFF6
 14514                           tablat	equ	0xFF5
 14515                           prodh	equ	0xFF4
 14516                           prodl	equ	0xFF3
 14517                           intcon	equ	0xFF2
 14518                           postinc0	equ	0xFEE
 14519                           wreg	equ	0xFE8
 14520                           indf1	equ	0xFE7
 14521                           postdec1	equ	0xFE5
 14522                           fsr1h	equ	0xFE2
 14523                           fsr1l	equ	0xFE1
 14524                           indf2	equ	0xFDF
 14525                           postinc2	equ	0xFDE
 14526                           postdec2	equ	0xFDD
 14527                           plusw2	equ	0xFDB
 14528                           fsr2h	equ	0xFDA
 14529                           fsr2l	equ	0xFD9
 14530                           status	equ	0xFD8
 14531                           
 14532 ;; *************** function ___fttol *****************
 14533 ;; Defined at:
 14534 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\fttol.c"
 14535 ;; Parameters:    Size  Location     Type
 14536 ;;  f1              3   80[BANK0 ] float 
 14537 ;; Auto vars:     Size  Location     Type
 14538 ;;  lval            4   90[BANK0 ] unsigned long 
 14539 ;;  exp1            1   94[BANK0 ] unsigned char 
 14540 ;;  sign1           1   89[BANK0 ] unsigned char 
 14541 ;; Return value:  Size  Location     Type
 14542 ;;                  4   80[BANK0 ] long 
 14543 ;; Registers used:
 14544 ;;		wreg, status,2, status,0
 14545 ;; Tracked objects:
 14546 ;;		On entry : 0/0
 14547 ;;		On exit  : 0/0
 14548 ;;		Unchanged: 0/0
 14549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14550 ;;      Params:         0       4       0       0       0       0       0       0       0
 14551 ;;      Locals:         0       6       0       0       0       0       0       0       0
 14552 ;;      Temps:          0       5       0       0       0       0       0       0       0
 14553 ;;      Totals:         0      15       0       0       0       0       0       0       0
 14554 ;;Total ram usage:       15 bytes
 14555 ;; Hardware stack levels used:    1
 14556 ;; Hardware stack levels required when called:   10
 14557 ;; This function calls:
 14558 ;;		Nothing
 14559 ;; This function is called by:
 14560 ;;		_main
 14561 ;;		_sprintf
 14562 ;; This function uses a non-reentrant model
 14563 ;;
 14564                           
 14565                           	psect	text45
 14566  00384C                     __ptext45:
 14567                           	opt stack 0
 14568  00384C                     ___fttol:
 14569                           	opt stack 19
 14570                           
 14571                           ; BSR set to: 0
 14572                           ;incstack = 0
 14573  00384C  C0B2  F0B4         	movff	___fttol@f1+2,??___fttol
 14574  003850  0100               	movlb	0	; () banked
 14575  003852  6BB5               	clrf	(??___fttol+1)& (0+255),b
 14576  003854  6BB6               	clrf	(??___fttol+2)& (0+255),b
 14577  003856  35B1               	rlcf	(___fttol@f1+1)& (0+255),w,b
 14578  003858  37B4               	rlcf	??___fttol& (0+255),f,b
 14579  00385A  E301               	bnc	u7511
 14580  00385C  81B5               	bsf	(??___fttol+1)& (0+255),0,b
 14581  00385E                     u7511:
 14582  00385E  51B4               	movf	??___fttol& (0+255),w,b
 14583  003860  6FBE               	movwf	___fttol@exp1& (0+255),b
 14584  003862  51BE               	movf	___fttol@exp1& (0+255),w,b
 14585  003864  A4D8               	btfss	status,2,c
 14586  003866  D009               	goto	l3116
 14587                           
 14588                           ; BSR set to: 0
 14589  003868  0E00               	movlw	0
 14590  00386A  6FB0               	movwf	?___fttol& (0+255),b
 14591  00386C  0E00               	movlw	0
 14592  00386E  6FB1               	movwf	(?___fttol+1)& (0+255),b
 14593  003870  0E00               	movlw	0
 14594  003872  6FB2               	movwf	(?___fttol+2)& (0+255),b
 14595  003874  0E00               	movlw	0
 14596  003876  6FB3               	movwf	(?___fttol+3)& (0+255),b
 14597                           
 14598                           ; BSR set to: 0
 14599  003878  0012               	return	
 14600  00387A                     l3116:
 14601                           
 14602                           ; BSR set to: 0
 14603                           
 14604                           ; BSR set to: 0
 14605  00387A  0E17               	movlw	23
 14606  00387C  6FB4               	movwf	??___fttol& (0+255),b
 14607  00387E  C0B0  F0B5         	movff	___fttol@f1,??___fttol+1
 14608  003882  C0B1  F0B6         	movff	___fttol@f1+1,??___fttol+2
 14609  003886  C0B2  F0B7         	movff	___fttol@f1+2,??___fttol+3
 14610  00388A  29B4               	incf	??___fttol& (0+255),w,b
 14611  00388C  6FB8               	movwf	(??___fttol+4)& (0+255),b
 14612  00388E  D004               	goto	u7530
 14613  003890                     u7535:
 14614  003890  90D8               	bcf	status,0,c
 14615  003892  33B7               	rrcf	(??___fttol+3)& (0+255),f,b
 14616  003894  33B6               	rrcf	(??___fttol+2)& (0+255),f,b
 14617  003896  33B5               	rrcf	(??___fttol+1)& (0+255),f,b
 14618  003898                     u7530:
 14619  003898  2FB8               	decfsz	(??___fttol+4)& (0+255),f,b
 14620  00389A  D7FA               	goto	u7535
 14621  00389C  0100               	movlb	0	; () banked
 14622  00389E  51B5               	movf	(??___fttol+1)& (0+255),w,b
 14623  0038A0  6FB9               	movwf	___fttol@sign1& (0+255),b
 14624                           
 14625                           ; BSR set to: 0
 14626  0038A2  8FB1               	bsf	(___fttol@f1+1)& (0+255),7,b
 14627                           
 14628                           ; BSR set to: 0
 14629  0038A4  0EFF               	movlw	255
 14630  0038A6  17B0               	andwf	___fttol@f1& (0+255),f,b
 14631  0038A8  0EFF               	movlw	255
 14632  0038AA  17B1               	andwf	(___fttol@f1+1)& (0+255),f,b
 14633  0038AC  0E00               	movlw	0
 14634  0038AE  17B2               	andwf	(___fttol@f1+2)& (0+255),f,b
 14635                           
 14636                           ; BSR set to: 0
 14637  0038B0  51B0               	movf	___fttol@f1& (0+255),w,b
 14638  0038B2  6FBA               	movwf	___fttol@lval& (0+255),b
 14639  0038B4  51B1               	movf	(___fttol@f1+1)& (0+255),w,b
 14640  0038B6  6FBB               	movwf	(___fttol@lval+1)& (0+255),b
 14641  0038B8  51B2               	movf	(___fttol@f1+2)& (0+255),w,b
 14642  0038BA  6FBC               	movwf	(___fttol@lval+2)& (0+255),b
 14643  0038BC  6BBD               	clrf	(___fttol@lval+3)& (0+255),b
 14644                           
 14645                           ; BSR set to: 0
 14646  0038BE  0E8E               	movlw	142
 14647  0038C0  5FBE               	subwf	___fttol@exp1& (0+255),f,b
 14648                           
 14649                           ; BSR set to: 0
 14650  0038C2  AFBE               	btfss	___fttol@exp1& (0+255),7,b
 14651  0038C4  D016               	goto	l3118
 14652                           
 14653                           ; BSR set to: 0
 14654  0038C6  51BE               	movf	___fttol@exp1& (0+255),w,b
 14655  0038C8  0A80               	xorlw	128
 14656  0038CA  0F8F               	addlw	143
 14657  0038CC  B0D8               	btfsc	status,0,c
 14658  0038CE  D009               	goto	l3119
 14659                           
 14660                           ; BSR set to: 0
 14661  0038D0  0E00               	movlw	0
 14662  0038D2  6FB0               	movwf	?___fttol& (0+255),b
 14663  0038D4  0E00               	movlw	0
 14664  0038D6  6FB1               	movwf	(?___fttol+1)& (0+255),b
 14665  0038D8  0E00               	movlw	0
 14666  0038DA  6FB2               	movwf	(?___fttol+2)& (0+255),b
 14667  0038DC  0E00               	movlw	0
 14668  0038DE  6FB3               	movwf	(?___fttol+3)& (0+255),b
 14669                           
 14670                           ; BSR set to: 0
 14671  0038E0  0012               	return	
 14672  0038E2                     l3119:
 14673                           
 14674                           ; BSR set to: 0
 14675                           
 14676                           ; BSR set to: 0
 14677                           
 14678                           ; BSR set to: 0
 14679  0038E2  90D8               	bcf	status,0,c
 14680  0038E4  33BD               	rrcf	(___fttol@lval+3)& (0+255),f,b
 14681  0038E6  33BC               	rrcf	(___fttol@lval+2)& (0+255),f,b
 14682  0038E8  33BB               	rrcf	(___fttol@lval+1)& (0+255),f,b
 14683  0038EA  33BA               	rrcf	___fttol@lval& (0+255),f,b
 14684                           
 14685                           ; BSR set to: 0
 14686  0038EC  3FBE               	incfsz	___fttol@exp1& (0+255),f,b
 14687  0038EE  D7F9               	goto	l3119
 14688                           
 14689                           ; BSR set to: 0
 14690  0038F0  D015               	goto	u7570
 14691  0038F2                     l3118:
 14692                           
 14693                           ; BSR set to: 0
 14694                           
 14695                           ; BSR set to: 0
 14696  0038F2  0E17               	movlw	23
 14697  0038F4  65BE               	cpfsgt	___fttol@exp1& (0+255),b
 14698  0038F6  D00F               	goto	l3124
 14699                           
 14700                           ; BSR set to: 0
 14701  0038F8  0E00               	movlw	0
 14702  0038FA  6FB0               	movwf	?___fttol& (0+255),b
 14703  0038FC  0E00               	movlw	0
 14704  0038FE  6FB1               	movwf	(?___fttol+1)& (0+255),b
 14705  003900  0E00               	movlw	0
 14706  003902  6FB2               	movwf	(?___fttol+2)& (0+255),b
 14707  003904  0E00               	movlw	0
 14708  003906  6FB3               	movwf	(?___fttol+3)& (0+255),b
 14709                           
 14710                           ; BSR set to: 0
 14711  003908  0012               	return	
 14712  00390A                     
 14713                           ; BSR set to: 0
 14714                           
 14715                           ; BSR set to: 0
 14716  00390A  90D8               	bcf	status,0,c
 14717  00390C  37BA               	rlcf	___fttol@lval& (0+255),f,b
 14718  00390E  37BB               	rlcf	(___fttol@lval+1)& (0+255),f,b
 14719  003910  37BC               	rlcf	(___fttol@lval+2)& (0+255),f,b
 14720  003912  37BD               	rlcf	(___fttol@lval+3)& (0+255),f,b
 14721  003914  07BE               	decf	___fttol@exp1& (0+255),f,b
 14722  003916                     l3124:
 14723                           
 14724                           ; BSR set to: 0
 14725                           
 14726                           ; BSR set to: 0
 14727  003916  51BE               	movf	___fttol@exp1& (0+255),w,b
 14728  003918  A4D8               	btfss	status,2,c
 14729  00391A  D7F7               	goto	l3125
 14730  00391C                     u7570:
 14731                           
 14732                           ; BSR set to: 0
 14733                           
 14734                           ; BSR set to: 0
 14735                           
 14736                           ; BSR set to: 0
 14737  00391C  51B9               	movf	___fttol@sign1& (0+255),w,b
 14738  00391E  B4D8               	btfsc	status,2,c
 14739  003920  D008               	goto	l3127
 14740                           
 14741                           ; BSR set to: 0
 14742  003922  1FBD               	comf	(___fttol@lval+3)& (0+255),f,b
 14743  003924  1FBC               	comf	(___fttol@lval+2)& (0+255),f,b
 14744  003926  1FBB               	comf	(___fttol@lval+1)& (0+255),f,b
 14745  003928  6DBA               	negf	___fttol@lval& (0+255),b
 14746  00392A  0E00               	movlw	0
 14747  00392C  23BB               	addwfc	(___fttol@lval+1)& (0+255),f,b
 14748  00392E  23BC               	addwfc	(___fttol@lval+2)& (0+255),f,b
 14749  003930  23BD               	addwfc	(___fttol@lval+3)& (0+255),f,b
 14750  003932                     l3127:
 14751                           
 14752                           ; BSR set to: 0
 14753                           
 14754                           ; BSR set to: 0
 14755  003932  C0BA  F0B0         	movff	___fttol@lval,?___fttol
 14756  003936  C0BB  F0B1         	movff	___fttol@lval+1,?___fttol+1
 14757  00393A  C0BC  F0B2         	movff	___fttol@lval+2,?___fttol+2
 14758  00393E  C0BD  F0B3         	movff	___fttol@lval+3,?___fttol+3
 14759  003942  0012               	return	
 14760  003944                     __end_of___fttol:
 14761                           	opt stack 0
 14762                           tblptru	equ	0xFF8
 14763                           tblptrh	equ	0xFF7
 14764                           tblptrl	equ	0xFF6
 14765                           tablat	equ	0xFF5
 14766                           prodh	equ	0xFF4
 14767                           prodl	equ	0xFF3
 14768                           intcon	equ	0xFF2
 14769                           postinc0	equ	0xFEE
 14770                           wreg	equ	0xFE8
 14771                           indf1	equ	0xFE7
 14772                           postdec1	equ	0xFE5
 14773                           fsr1h	equ	0xFE2
 14774                           fsr1l	equ	0xFE1
 14775                           indf2	equ	0xFDF
 14776                           postinc2	equ	0xFDE
 14777                           postdec2	equ	0xFDD
 14778                           plusw2	equ	0xFDB
 14779                           fsr2h	equ	0xFDA
 14780                           fsr2l	equ	0xFD9
 14781                           status	equ	0xFD8
 14782                           
 14783 ;; *************** function ___ftsub *****************
 14784 ;; Defined at:
 14785 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftsub.c"
 14786 ;; Parameters:    Size  Location     Type
 14787 ;;  f1              3   32[BANK0 ] float 
 14788 ;;  f2              3   35[BANK0 ] float 
 14789 ;; Auto vars:     Size  Location     Type
 14790 ;;		None
 14791 ;; Return value:  Size  Location     Type
 14792 ;;                  3   32[BANK0 ] float 
 14793 ;; Registers used:
 14794 ;;		wreg, status,2, status,0, cstack
 14795 ;; Tracked objects:
 14796 ;;		On entry : 0/0
 14797 ;;		On exit  : 0/0
 14798 ;;		Unchanged: 0/0
 14799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14800 ;;      Params:         0       6       0       0       0       0       0       0       0
 14801 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14802 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14803 ;;      Totals:         0       6       0       0       0       0       0       0       0
 14804 ;;Total ram usage:        6 bytes
 14805 ;; Hardware stack levels used:    1
 14806 ;; Hardware stack levels required when called:   12
 14807 ;; This function calls:
 14808 ;;		___ftadd
 14809 ;; This function is called by:
 14810 ;;		_sprintf
 14811 ;; This function uses a non-reentrant model
 14812 ;;
 14813                           
 14814                           	psect	text46
 14815  004FDA                     __ptext46:
 14816                           	opt stack 0
 14817  004FDA                     ___ftsub:
 14818                           	opt stack 17
 14819                           
 14820                           ; BSR set to: 0
 14821                           ;incstack = 0
 14822  004FDA  0100               	movlb	0	; () banked
 14823  004FDC  5183               	movf	___ftsub@f2& (0+255),w,b
 14824  004FDE  1184               	iorwf	(___ftsub@f2+1)& (0+255),w,b
 14825  004FE0  1185               	iorwf	(___ftsub@f2+2)& (0+255),w,b
 14826  004FE2  B4D8               	btfsc	status,2,c
 14827  004FE4  D006               	goto	l3112
 14828                           
 14829                           ; BSR set to: 0
 14830  004FE6  0E00               	movlw	0
 14831  004FE8  1B83               	xorwf	___ftsub@f2& (0+255),f,b
 14832  004FEA  0E00               	movlw	0
 14833  004FEC  1B84               	xorwf	(___ftsub@f2+1)& (0+255),f,b
 14834  004FEE  0E80               	movlw	128
 14835  004FF0  1B85               	xorwf	(___ftsub@f2+2)& (0+255),f,b
 14836  004FF2                     l3112:
 14837                           
 14838                           ; BSR set to: 0
 14839                           
 14840                           ; BSR set to: 0
 14841  004FF2  C080  F074         	movff	___ftsub@f1,___ftadd@f1
 14842  004FF6  C081  F075         	movff	___ftsub@f1+1,___ftadd@f1+1
 14843  004FFA  C082  F076         	movff	___ftsub@f1+2,___ftadd@f1+2
 14844  004FFE  C083  F077         	movff	___ftsub@f2,___ftadd@f2
 14845  005002  C084  F078         	movff	___ftsub@f2+1,___ftadd@f2+1
 14846  005006  C085  F079         	movff	___ftsub@f2+2,___ftadd@f2+2
 14847  00500A  ECFD  F013         	call	___ftadd	;wreg free
 14848  00500E  C074  F080         	movff	?___ftadd,?___ftsub
 14849  005012  C075  F081         	movff	?___ftadd+1,?___ftsub+1
 14850  005016  C076  F082         	movff	?___ftadd+2,?___ftsub+2
 14851  00501A  0012               	return	
 14852  00501C                     __end_of___ftsub:
 14853                           	opt stack 0
 14854                           tblptru	equ	0xFF8
 14855                           tblptrh	equ	0xFF7
 14856                           tblptrl	equ	0xFF6
 14857                           tablat	equ	0xFF5
 14858                           prodh	equ	0xFF4
 14859                           prodl	equ	0xFF3
 14860                           intcon	equ	0xFF2
 14861                           postinc0	equ	0xFEE
 14862                           wreg	equ	0xFE8
 14863                           indf1	equ	0xFE7
 14864                           postdec1	equ	0xFE5
 14865                           fsr1h	equ	0xFE2
 14866                           fsr1l	equ	0xFE1
 14867                           indf2	equ	0xFDF
 14868                           postinc2	equ	0xFDE
 14869                           postdec2	equ	0xFDD
 14870                           plusw2	equ	0xFDB
 14871                           fsr2h	equ	0xFDA
 14872                           fsr2l	equ	0xFD9
 14873                           status	equ	0xFD8
 14874                           
 14875 ;; *************** function ___ftadd *****************
 14876 ;; Defined at:
 14877 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftadd.c"
 14878 ;; Parameters:    Size  Location     Type
 14879 ;;  f1              3   20[BANK0 ] float 
 14880 ;;  f2              3   23[BANK0 ] float 
 14881 ;; Auto vars:     Size  Location     Type
 14882 ;;  exp1            1   31[BANK0 ] unsigned char 
 14883 ;;  exp2            1   30[BANK0 ] unsigned char 
 14884 ;;  sign            1   29[BANK0 ] unsigned char 
 14885 ;; Return value:  Size  Location     Type
 14886 ;;                  3   20[BANK0 ] float 
 14887 ;; Registers used:
 14888 ;;		wreg, status,2, status,0, cstack
 14889 ;; Tracked objects:
 14890 ;;		On entry : 0/0
 14891 ;;		On exit  : 0/0
 14892 ;;		Unchanged: 0/0
 14893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14894 ;;      Params:         0       6       0       0       0       0       0       0       0
 14895 ;;      Locals:         0       3       0       0       0       0       0       0       0
 14896 ;;      Temps:          0       3       0       0       0       0       0       0       0
 14897 ;;      Totals:         0      12       0       0       0       0       0       0       0
 14898 ;;Total ram usage:       12 bytes
 14899 ;; Hardware stack levels used:    1
 14900 ;; Hardware stack levels required when called:   11
 14901 ;; This function calls:
 14902 ;;		___ftpack
 14903 ;; This function is called by:
 14904 ;;		_le_AD
 14905 ;;		_sprintf
 14906 ;;		___ftsub
 14907 ;; This function uses a non-reentrant model
 14908 ;;
 14909                           
 14910                           	psect	text47
 14911  0027FA                     __ptext47:
 14912                           	opt stack 0
 14913  0027FA                     ___ftadd:
 14914                           	opt stack 17
 14915                           
 14916                           ;incstack = 0
 14917  0027FA  C076  F07A         	movff	___ftadd@f1+2,??___ftadd
 14918  0027FE  0100               	movlb	0	; () banked
 14919  002800  6B7B               	clrf	(??___ftadd+1)& (0+255),b
 14920  002802  6B7C               	clrf	(??___ftadd+2)& (0+255),b
 14921  002804  3575               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 14922  002806  377A               	rlcf	??___ftadd& (0+255),f,b
 14923  002808  E301               	bnc	u6521
 14924  00280A  817B               	bsf	(??___ftadd+1)& (0+255),0,b
 14925  00280C                     u6521:
 14926  00280C  517A               	movf	??___ftadd& (0+255),w,b
 14927  00280E  6F7F               	movwf	___ftadd@exp1& (0+255),b
 14928  002810  C079  F07A         	movff	___ftadd@f2+2,??___ftadd
 14929  002814  6B7B               	clrf	(??___ftadd+1)& (0+255),b
 14930  002816  6B7C               	clrf	(??___ftadd+2)& (0+255),b
 14931  002818  3578               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 14932  00281A  377A               	rlcf	??___ftadd& (0+255),f,b
 14933  00281C  E301               	bnc	u6531
 14934  00281E  817B               	bsf	(??___ftadd+1)& (0+255),0,b
 14935  002820                     u6531:
 14936  002820  517A               	movf	??___ftadd& (0+255),w,b
 14937  002822  6F7E               	movwf	___ftadd@exp2& (0+255),b
 14938                           
 14939                           ; BSR set to: 0
 14940  002824  517F               	movf	___ftadd@exp1& (0+255),w,b
 14941  002826  B4D8               	btfsc	status,2,c
 14942  002828  D00B               	goto	u6560
 14943                           
 14944                           ; BSR set to: 0
 14945  00282A  517E               	movf	___ftadd@exp2& (0+255),w,b
 14946  00282C  5D7F               	subwf	___ftadd@exp1& (0+255),w,b
 14947  00282E  B0D8               	btfsc	status,0,c
 14948  002830  D00E               	goto	l3030
 14949                           
 14950                           ; BSR set to: 0
 14951  002832  517F               	movf	___ftadd@exp1& (0+255),w,b
 14952  002834  0800               	sublw	0
 14953  002836  257E               	addwf	___ftadd@exp2& (0+255),w,b
 14954  002838  6F7A               	movwf	??___ftadd& (0+255),b
 14955  00283A  0E18               	movlw	24
 14956  00283C  657A               	cpfsgt	??___ftadd& (0+255),b
 14957  00283E  D007               	goto	l3030
 14958  002840                     u6560:
 14959                           
 14960                           ; BSR set to: 0
 14961  002840  C077  F074         	movff	___ftadd@f2,?___ftadd
 14962  002844  C078  F075         	movff	___ftadd@f2+1,?___ftadd+1
 14963  002848  C079  F076         	movff	___ftadd@f2+2,?___ftadd+2
 14964  00284C  0012               	return	
 14965  00284E                     l3030:
 14966                           
 14967                           ; BSR set to: 0
 14968                           
 14969                           ; BSR set to: 0
 14970  00284E  517E               	movf	___ftadd@exp2& (0+255),w,b
 14971  002850  B4D8               	btfsc	status,2,c
 14972  002852  D00B               	goto	u6590
 14973                           
 14974                           ; BSR set to: 0
 14975  002854  517F               	movf	___ftadd@exp1& (0+255),w,b
 14976  002856  5D7E               	subwf	___ftadd@exp2& (0+255),w,b
 14977  002858  B0D8               	btfsc	status,0,c
 14978  00285A  D00E               	goto	l3034
 14979                           
 14980                           ; BSR set to: 0
 14981  00285C  517E               	movf	___ftadd@exp2& (0+255),w,b
 14982  00285E  0800               	sublw	0
 14983  002860  257F               	addwf	___ftadd@exp1& (0+255),w,b
 14984  002862  6F7A               	movwf	??___ftadd& (0+255),b
 14985  002864  0E18               	movlw	24
 14986  002866  657A               	cpfsgt	??___ftadd& (0+255),b
 14987  002868  D007               	goto	l3034
 14988  00286A                     u6590:
 14989                           
 14990                           ; BSR set to: 0
 14991  00286A  C074  F074         	movff	___ftadd@f1,?___ftadd
 14992  00286E  C075  F075         	movff	___ftadd@f1+1,?___ftadd+1
 14993  002872  C076  F076         	movff	___ftadd@f1+2,?___ftadd+2
 14994  002876  0012               	return	
 14995  002878                     l3034:
 14996                           
 14997                           ; BSR set to: 0
 14998                           
 14999                           ; BSR set to: 0
 15000  002878  0E06               	movlw	6
 15001  00287A  6F7D               	movwf	___ftadd@sign& (0+255),b
 15002                           
 15003                           ; BSR set to: 0
 15004  00287C  BF76               	btfsc	(___ftadd@f1+2)& (0+255),7,b
 15005                           
 15006                           ; BSR set to: 0
 15007  00287E  8F7D               	bsf	___ftadd@sign& (0+255),7,b
 15008                           
 15009                           ; BSR set to: 0
 15010                           
 15011                           ; BSR set to: 0
 15012  002880  BF79               	btfsc	(___ftadd@f2+2)& (0+255),7,b
 15013                           
 15014                           ; BSR set to: 0
 15015  002882  8D7D               	bsf	___ftadd@sign& (0+255),6,b
 15016                           
 15017                           ; BSR set to: 0
 15018  002884  8F75               	bsf	(___ftadd@f1+1)& (0+255),7,b
 15019                           
 15020                           ; BSR set to: 0
 15021  002886  0EFF               	movlw	255
 15022  002888  1774               	andwf	___ftadd@f1& (0+255),f,b
 15023  00288A  0EFF               	movlw	255
 15024  00288C  1775               	andwf	(___ftadd@f1+1)& (0+255),f,b
 15025  00288E  0E00               	movlw	0
 15026  002890  1776               	andwf	(___ftadd@f1+2)& (0+255),f,b
 15027  002892  8F78               	bsf	(___ftadd@f2+1)& (0+255),7,b
 15028                           
 15029                           ; BSR set to: 0
 15030  002894  0EFF               	movlw	255
 15031  002896  1777               	andwf	___ftadd@f2& (0+255),f,b
 15032  002898  0EFF               	movlw	255
 15033  00289A  1778               	andwf	(___ftadd@f2+1)& (0+255),f,b
 15034  00289C  0E00               	movlw	0
 15035  00289E  1779               	andwf	(___ftadd@f2+2)& (0+255),f,b
 15036                           
 15037                           ; BSR set to: 0
 15038  0028A0  517E               	movf	___ftadd@exp2& (0+255),w,b
 15039  0028A2  5D7F               	subwf	___ftadd@exp1& (0+255),w,b
 15040  0028A4  B0D8               	btfsc	status,0,c
 15041  0028A6  D01B               	goto	l3039
 15042  0028A8                     u6620:
 15043                           
 15044                           ; BSR set to: 0
 15045                           
 15046                           ; BSR set to: 0
 15047  0028A8  90D8               	bcf	status,0,c
 15048  0028AA  3777               	rlcf	___ftadd@f2& (0+255),f,b
 15049  0028AC  3778               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 15050  0028AE  3779               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 15051  0028B0  077E               	decf	___ftadd@exp2& (0+255),f,b
 15052                           
 15053                           ; BSR set to: 0
 15054  0028B2  517F               	movf	___ftadd@exp1& (0+255),w,b
 15055  0028B4  197E               	xorwf	___ftadd@exp2& (0+255),w,b
 15056  0028B6  B4D8               	btfsc	status,2,c
 15057  0028B8  D00D               	goto	l3044
 15058                           
 15059                           ; BSR set to: 0
 15060  0028BA  077D               	decf	___ftadd@sign& (0+255),f,b
 15061  0028BC  C07D  F07A         	movff	___ftadd@sign,??___ftadd
 15062  0028C0  0E07               	movlw	7
 15063  0028C2  177A               	andwf	??___ftadd& (0+255),f,b
 15064  0028C4  B4D8               	btfsc	status,2,c
 15065  0028C6  D006               	goto	l3044
 15066  0028C8  D7EF               	goto	u6620
 15067  0028CA                     
 15068                           ; BSR set to: 0
 15069                           
 15070                           ; BSR set to: 0
 15071  0028CA  90D8               	bcf	status,0,c
 15072  0028CC  3376               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 15073  0028CE  3375               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 15074  0028D0  3374               	rrcf	___ftadd@f1& (0+255),f,b
 15075  0028D2  2B7F               	incf	___ftadd@exp1& (0+255),f,b
 15076  0028D4                     l3044:
 15077                           
 15078                           ; BSR set to: 0
 15079                           
 15080                           ; BSR set to: 0
 15081  0028D4  517E               	movf	___ftadd@exp2& (0+255),w,b
 15082  0028D6  197F               	xorwf	___ftadd@exp1& (0+255),w,b
 15083  0028D8  B4D8               	btfsc	status,2,c
 15084  0028DA  D01F               	goto	u6690
 15085  0028DC  D7F6               	goto	l3045
 15086  0028DE                     l3039:
 15087                           
 15088                           ; BSR set to: 0
 15089                           
 15090                           ; BSR set to: 0
 15091  0028DE  517F               	movf	___ftadd@exp1& (0+255),w,b
 15092  0028E0  5D7E               	subwf	___ftadd@exp2& (0+255),w,b
 15093  0028E2  B0D8               	btfsc	status,0,c
 15094  0028E4  D01A               	goto	u6690
 15095  0028E6                     u6660:
 15096                           
 15097                           ; BSR set to: 0
 15098                           
 15099                           ; BSR set to: 0
 15100  0028E6  90D8               	bcf	status,0,c
 15101  0028E8  3774               	rlcf	___ftadd@f1& (0+255),f,b
 15102  0028EA  3775               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 15103  0028EC  3776               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 15104  0028EE  077F               	decf	___ftadd@exp1& (0+255),f,b
 15105                           
 15106                           ; BSR set to: 0
 15107  0028F0  517F               	movf	___ftadd@exp1& (0+255),w,b
 15108  0028F2  197E               	xorwf	___ftadd@exp2& (0+255),w,b
 15109  0028F4  B4D8               	btfsc	status,2,c
 15110  0028F6  D00D               	goto	l3053
 15111                           
 15112                           ; BSR set to: 0
 15113  0028F8  077D               	decf	___ftadd@sign& (0+255),f,b
 15114  0028FA  C07D  F07A         	movff	___ftadd@sign,??___ftadd
 15115  0028FE  0E07               	movlw	7
 15116  002900  177A               	andwf	??___ftadd& (0+255),f,b
 15117  002902  B4D8               	btfsc	status,2,c
 15118  002904  D006               	goto	l3053
 15119  002906  D7EF               	goto	u6660
 15120  002908                     
 15121                           ; BSR set to: 0
 15122                           
 15123                           ; BSR set to: 0
 15124  002908  90D8               	bcf	status,0,c
 15125  00290A  3379               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 15126  00290C  3378               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 15127  00290E  3377               	rrcf	___ftadd@f2& (0+255),f,b
 15128  002910  2B7E               	incf	___ftadd@exp2& (0+255),f,b
 15129  002912                     l3053:
 15130                           
 15131                           ; BSR set to: 0
 15132                           
 15133                           ; BSR set to: 0
 15134  002912  517E               	movf	___ftadd@exp2& (0+255),w,b
 15135  002914  197F               	xorwf	___ftadd@exp1& (0+255),w,b
 15136  002916  A4D8               	btfss	status,2,c
 15137  002918  D7F7               	goto	l3054
 15138  00291A                     u6690:
 15139                           
 15140                           ; BSR set to: 0
 15141                           
 15142                           ; BSR set to: 0
 15143                           
 15144                           ; BSR set to: 0
 15145  00291A  AF7D               	btfss	___ftadd@sign& (0+255),7,b
 15146  00291C  D00C               	goto	l3056
 15147                           
 15148                           ; BSR set to: 0
 15149  00291E  0EFF               	movlw	255
 15150  002920  1B74               	xorwf	___ftadd@f1& (0+255),f,b
 15151  002922  0EFF               	movlw	255
 15152  002924  1B75               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 15153  002926  0EFF               	movlw	255
 15154  002928  1B76               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 15155  00292A  0E01               	movlw	1
 15156  00292C  2774               	addwf	___ftadd@f1& (0+255),f,b
 15157  00292E  0E00               	movlw	0
 15158  002930  2375               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 15159  002932  0E00               	movlw	0
 15160  002934  2376               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 15161  002936                     l3056:
 15162                           
 15163                           ; BSR set to: 0
 15164  002936  AD7D               	btfss	___ftadd@sign& (0+255),6,b
 15165  002938  D00C               	goto	l3057
 15166                           
 15167                           ; BSR set to: 0
 15168  00293A  0EFF               	movlw	255
 15169  00293C  1B77               	xorwf	___ftadd@f2& (0+255),f,b
 15170  00293E  0EFF               	movlw	255
 15171  002940  1B78               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 15172  002942  0EFF               	movlw	255
 15173  002944  1B79               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 15174  002946  0E01               	movlw	1
 15175  002948  2777               	addwf	___ftadd@f2& (0+255),f,b
 15176  00294A  0E00               	movlw	0
 15177  00294C  2378               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 15178  00294E  0E00               	movlw	0
 15179  002950  2379               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 15180  002952                     l3057:
 15181                           
 15182                           ; BSR set to: 0
 15183                           
 15184                           ; BSR set to: 0
 15185  002952  0E00               	movlw	0
 15186  002954  6F7D               	movwf	___ftadd@sign& (0+255),b
 15187                           
 15188                           ; BSR set to: 0
 15189  002956  5174               	movf	___ftadd@f1& (0+255),w,b
 15190  002958  2777               	addwf	___ftadd@f2& (0+255),f,b
 15191  00295A  5175               	movf	(___ftadd@f1+1)& (0+255),w,b
 15192  00295C  2378               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 15193  00295E  5176               	movf	(___ftadd@f1+2)& (0+255),w,b
 15194  002960  2379               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 15195                           
 15196                           ; BSR set to: 0
 15197  002962  AF79               	btfss	(___ftadd@f2+2)& (0+255),7,b
 15198  002964  D00E               	goto	l3058
 15199                           
 15200                           ; BSR set to: 0
 15201  002966  0EFF               	movlw	255
 15202  002968  1B77               	xorwf	___ftadd@f2& (0+255),f,b
 15203  00296A  0EFF               	movlw	255
 15204  00296C  1B78               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 15205  00296E  0EFF               	movlw	255
 15206  002970  1B79               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 15207  002972  0E01               	movlw	1
 15208  002974  2777               	addwf	___ftadd@f2& (0+255),f,b
 15209  002976  0E00               	movlw	0
 15210  002978  2378               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 15211  00297A  0E00               	movlw	0
 15212  00297C  2379               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 15213                           
 15214                           ; BSR set to: 0
 15215  00297E  0E01               	movlw	1
 15216  002980  6F7D               	movwf	___ftadd@sign& (0+255),b
 15217  002982                     l3058:
 15218                           
 15219                           ; BSR set to: 0
 15220                           
 15221                           ; BSR set to: 0
 15222  002982  C077  F060         	movff	___ftadd@f2,___ftpack@arg
 15223  002986  C078  F061         	movff	___ftadd@f2+1,___ftpack@arg+1
 15224  00298A  C079  F062         	movff	___ftadd@f2+2,___ftpack@arg+2
 15225  00298E  C07F  F063         	movff	___ftadd@exp1,___ftpack@exp
 15226  002992  C07D  F064         	movff	___ftadd@sign,___ftpack@sign
 15227  002996  EC0B  F020         	call	___ftpack	;wreg free
 15228  00299A  C060  F074         	movff	?___ftpack,?___ftadd
 15229  00299E  C061  F075         	movff	?___ftpack+1,?___ftadd+1
 15230  0029A2  C062  F076         	movff	?___ftpack+2,?___ftadd+2
 15231  0029A6  0012               	return	
 15232  0029A8                     __end_of___ftadd:
 15233                           	opt stack 0
 15234                           tblptru	equ	0xFF8
 15235                           tblptrh	equ	0xFF7
 15236                           tblptrl	equ	0xFF6
 15237                           tablat	equ	0xFF5
 15238                           prodh	equ	0xFF4
 15239                           prodl	equ	0xFF3
 15240                           intcon	equ	0xFF2
 15241                           postinc0	equ	0xFEE
 15242                           wreg	equ	0xFE8
 15243                           indf1	equ	0xFE7
 15244                           postdec1	equ	0xFE5
 15245                           fsr1h	equ	0xFE2
 15246                           fsr1l	equ	0xFE1
 15247                           indf2	equ	0xFDF
 15248                           postinc2	equ	0xFDE
 15249                           postdec2	equ	0xFDD
 15250                           plusw2	equ	0xFDB
 15251                           fsr2h	equ	0xFDA
 15252                           fsr2l	equ	0xFD9
 15253                           status	equ	0xFD8
 15254                           
 15255 ;; *************** function ___ftpack *****************
 15256 ;; Defined at:
 15257 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\float.c"
 15258 ;; Parameters:    Size  Location     Type
 15259 ;;  arg             3    0[BANK0 ] unsigned um
 15260 ;;  exp             1    3[BANK0 ] unsigned char 
 15261 ;;  sign            1    4[BANK0 ] unsigned char 
 15262 ;; Auto vars:     Size  Location     Type
 15263 ;;		None
 15264 ;; Return value:  Size  Location     Type
 15265 ;;                  3    0[BANK0 ] float 
 15266 ;; Registers used:
 15267 ;;		wreg, status,2, status,0
 15268 ;; Tracked objects:
 15269 ;;		On entry : 0/0
 15270 ;;		On exit  : 0/0
 15271 ;;		Unchanged: 0/0
 15272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15273 ;;      Params:         0       5       0       0       0       0       0       0       0
 15274 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15275 ;;      Temps:          0       3       0       0       0       0       0       0       0
 15276 ;;      Totals:         0       8       0       0       0       0       0       0       0
 15277 ;;Total ram usage:        8 bytes
 15278 ;; Hardware stack levels used:    1
 15279 ;; Hardware stack levels required when called:   10
 15280 ;; This function calls:
 15281 ;;		Nothing
 15282 ;; This function is called by:
 15283 ;;		___awtoft
 15284 ;;		___ftadd
 15285 ;;		___ftdiv
 15286 ;;		___ftmul
 15287 ;;		___lltoft
 15288 ;; This function uses a non-reentrant model
 15289 ;;
 15290                           
 15291                           	psect	text48
 15292  004016                     __ptext48:
 15293                           	opt stack 0
 15294  004016                     ___ftpack:
 15295                           	opt stack 17
 15296                           
 15297                           ;incstack = 0
 15298  004016  0100               	movlb	0	; () banked
 15299  004018  5163               	movf	___ftpack@exp& (0+255),w,b
 15300  00401A  B4D8               	btfsc	status,2,c
 15301  00401C  D005               	goto	u6220
 15302                           
 15303                           ; BSR set to: 0
 15304  00401E  5160               	movf	___ftpack@arg& (0+255),w,b
 15305  004020  1161               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 15306  004022  1162               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 15307  004024  A4D8               	btfss	status,2,c
 15308  004026  D00C               	goto	l2999
 15309  004028                     u6220:
 15310                           
 15311                           ; BSR set to: 0
 15312                           
 15313                           ; BSR set to: 0
 15314  004028  0E00               	movlw	0
 15315  00402A  6F60               	movwf	?___ftpack& (0+255),b
 15316  00402C  0E00               	movlw	0
 15317  00402E  6F61               	movwf	(?___ftpack+1)& (0+255),b
 15318  004030  0E00               	movlw	0
 15319  004032  6F62               	movwf	(?___ftpack+2)& (0+255),b
 15320                           
 15321                           ; BSR set to: 0
 15322  004034  0012               	return	
 15323  004036                     
 15324                           ; BSR set to: 0
 15325                           
 15326                           ; BSR set to: 0
 15327  004036  2B63               	incf	___ftpack@exp& (0+255),f,b
 15328  004038  90D8               	bcf	status,0,c
 15329  00403A  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 15330  00403C  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 15331  00403E  3360               	rrcf	___ftpack@arg& (0+255),f,b
 15332  004040                     l2999:
 15333                           
 15334                           ; BSR set to: 0
 15335                           
 15336                           ; BSR set to: 0
 15337  004040  0E00               	movlw	0
 15338  004042  1560               	andwf	___ftpack@arg& (0+255),w,b
 15339  004044  6F65               	movwf	??___ftpack& (0+255),b
 15340  004046  0E00               	movlw	0
 15341  004048  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 15342  00404A  6F66               	movwf	(??___ftpack+1)& (0+255),b
 15343  00404C  0EFE               	movlw	254
 15344  00404E  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 15345  004050  6F67               	movwf	(??___ftpack+2)& (0+255),b
 15346  004052  5165               	movf	??___ftpack& (0+255),w,b
 15347  004054  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 15348  004056  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 15349  004058  B4D8               	btfsc	status,2,c
 15350  00405A  D00C               	goto	l3002
 15351  00405C  D7EC               	goto	l3000
 15352  00405E                     
 15353                           ; BSR set to: 0
 15354                           
 15355                           ; BSR set to: 0
 15356  00405E  2B63               	incf	___ftpack@exp& (0+255),f,b
 15357                           
 15358                           ; BSR set to: 0
 15359  004060  0E01               	movlw	1
 15360  004062  2760               	addwf	___ftpack@arg& (0+255),f,b
 15361  004064  0E00               	movlw	0
 15362  004066  2361               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 15363  004068  0E00               	movlw	0
 15364  00406A  2362               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 15365  00406C  90D8               	bcf	status,0,c
 15366  00406E  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 15367  004070  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 15368  004072  3360               	rrcf	___ftpack@arg& (0+255),f,b
 15369  004074                     l3002:
 15370                           
 15371                           ; BSR set to: 0
 15372                           
 15373                           ; BSR set to: 0
 15374  004074  0E00               	movlw	0
 15375  004076  1560               	andwf	___ftpack@arg& (0+255),w,b
 15376  004078  6F65               	movwf	??___ftpack& (0+255),b
 15377  00407A  0E00               	movlw	0
 15378  00407C  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 15379  00407E  6F66               	movwf	(??___ftpack+1)& (0+255),b
 15380  004080  0EFF               	movlw	255
 15381  004082  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 15382  004084  6F67               	movwf	(??___ftpack+2)& (0+255),b
 15383  004086  5165               	movf	??___ftpack& (0+255),w,b
 15384  004088  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 15385  00408A  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 15386  00408C  B4D8               	btfsc	status,2,c
 15387  00408E  D006               	goto	l3005
 15388  004090  D7E6               	goto	l3003
 15389  004092                     
 15390                           ; BSR set to: 0
 15391                           
 15392                           ; BSR set to: 0
 15393  004092  0763               	decf	___ftpack@exp& (0+255),f,b
 15394  004094  90D8               	bcf	status,0,c
 15395  004096  3760               	rlcf	___ftpack@arg& (0+255),f,b
 15396  004098  3761               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 15397  00409A  3762               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 15398  00409C                     l3005:
 15399                           
 15400                           ; BSR set to: 0
 15401                           
 15402                           ; BSR set to: 0
 15403  00409C  BF61               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 15404  00409E  D003               	goto	u6260
 15405                           
 15406                           ; BSR set to: 0
 15407  0040A0  0E02               	movlw	2
 15408  0040A2  6163               	cpfslt	___ftpack@exp& (0+255),b
 15409  0040A4  D7F6               	goto	l3006
 15410  0040A6                     u6260:
 15411                           
 15412                           ; BSR set to: 0
 15413                           
 15414                           ; BSR set to: 0
 15415  0040A6  A163               	btfss	___ftpack@exp& (0+255),0,b
 15416                           
 15417                           ; BSR set to: 0
 15418  0040A8  9F61               	bcf	(___ftpack@arg+1)& (0+255),7,b
 15419                           
 15420                           ; BSR set to: 0
 15421                           
 15422                           ; BSR set to: 0
 15423  0040AA  90D8               	bcf	status,0,c
 15424  0040AC  3363               	rrcf	___ftpack@exp& (0+255),f,b
 15425  0040AE  5163               	movf	___ftpack@exp& (0+255),w,b
 15426  0040B0  1362               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 15427                           
 15428                           ; BSR set to: 0
 15429  0040B2  5164               	movf	___ftpack@sign& (0+255),w,b
 15430  0040B4  A4D8               	btfss	status,2,c
 15431                           
 15432                           ; BSR set to: 0
 15433  0040B6  8F62               	bsf	(___ftpack@arg+2)& (0+255),7,b
 15434                           
 15435                           ; BSR set to: 0
 15436                           
 15437                           ; BSR set to: 0
 15438  0040B8  C060  F060         	movff	___ftpack@arg,?___ftpack
 15439  0040BC  C061  F061         	movff	___ftpack@arg+1,?___ftpack+1
 15440  0040C0  C062  F062         	movff	___ftpack@arg+2,?___ftpack+2
 15441  0040C4  0012               	return	
 15442  0040C6                     __end_of___ftpack:
 15443                           	opt stack 0
 15444                           tblptru	equ	0xFF8
 15445                           tblptrh	equ	0xFF7
 15446                           tblptrl	equ	0xFF6
 15447                           tablat	equ	0xFF5
 15448                           prodh	equ	0xFF4
 15449                           prodl	equ	0xFF3
 15450                           intcon	equ	0xFF2
 15451                           postinc0	equ	0xFEE
 15452                           wreg	equ	0xFE8
 15453                           indf1	equ	0xFE7
 15454                           postdec1	equ	0xFE5
 15455                           fsr1h	equ	0xFE2
 15456                           fsr1l	equ	0xFE1
 15457                           indf2	equ	0xFDF
 15458                           postinc2	equ	0xFDE
 15459                           postdec2	equ	0xFDD
 15460                           plusw2	equ	0xFDB
 15461                           fsr2h	equ	0xFDA
 15462                           fsr2l	equ	0xFD9
 15463                           status	equ	0xFD8
 15464                           
 15465 ;; *************** function ___ftneg *****************
 15466 ;; Defined at:
 15467 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftneg.c"
 15468 ;; Parameters:    Size  Location     Type
 15469 ;;  f1              3    0[BANK0 ] float 
 15470 ;; Auto vars:     Size  Location     Type
 15471 ;;		None
 15472 ;; Return value:  Size  Location     Type
 15473 ;;                  3    0[BANK0 ] float 
 15474 ;; Registers used:
 15475 ;;		wreg, status,2, status,0
 15476 ;; Tracked objects:
 15477 ;;		On entry : 0/0
 15478 ;;		On exit  : 0/0
 15479 ;;		Unchanged: 0/0
 15480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15481 ;;      Params:         0       3       0       0       0       0       0       0       0
 15482 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15483 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15484 ;;      Totals:         0       3       0       0       0       0       0       0       0
 15485 ;;Total ram usage:        3 bytes
 15486 ;; Hardware stack levels used:    1
 15487 ;; Hardware stack levels required when called:   10
 15488 ;; This function calls:
 15489 ;;		Nothing
 15490 ;; This function is called by:
 15491 ;;		_sprintf
 15492 ;; This function uses a non-reentrant model
 15493 ;;
 15494                           
 15495                           	psect	text49
 15496  00541E                     __ptext49:
 15497                           	opt stack 0
 15498  00541E                     ___ftneg:
 15499                           	opt stack 19
 15500                           
 15501                           ; BSR set to: 0
 15502                           ;incstack = 0
 15503  00541E  0100               	movlb	0	; () banked
 15504  005420  5160               	movf	___ftneg@f1& (0+255),w,b
 15505  005422  1161               	iorwf	(___ftneg@f1+1)& (0+255),w,b
 15506  005424  1162               	iorwf	(___ftneg@f1+2)& (0+255),w,b
 15507  005426  B4D8               	btfsc	status,2,c
 15508  005428  D006               	goto	l3106
 15509                           
 15510                           ; BSR set to: 0
 15511  00542A  0E00               	movlw	0
 15512  00542C  1B60               	xorwf	___ftneg@f1& (0+255),f,b
 15513  00542E  0E00               	movlw	0
 15514  005430  1B61               	xorwf	(___ftneg@f1+1)& (0+255),f,b
 15515  005432  0E80               	movlw	128
 15516  005434  1B62               	xorwf	(___ftneg@f1+2)& (0+255),f,b
 15517  005436                     l3106:
 15518                           
 15519                           ; BSR set to: 0
 15520  005436  C060  F060         	movff	___ftneg@f1,?___ftneg
 15521  00543A  C061  F061         	movff	___ftneg@f1+1,?___ftneg+1
 15522  00543E  C062  F062         	movff	___ftneg@f1+2,?___ftneg+2
 15523                           
 15524                           ; BSR set to: 0
 15525  005442  0012               	return		;funcret
 15526  005444                     __end_of___ftneg:
 15527                           	opt stack 0
 15528                           tblptru	equ	0xFF8
 15529                           tblptrh	equ	0xFF7
 15530                           tblptrl	equ	0xFF6
 15531                           tablat	equ	0xFF5
 15532                           prodh	equ	0xFF4
 15533                           prodl	equ	0xFF3
 15534                           intcon	equ	0xFF2
 15535                           postinc0	equ	0xFEE
 15536                           wreg	equ	0xFE8
 15537                           indf1	equ	0xFE7
 15538                           postdec1	equ	0xFE5
 15539                           fsr1h	equ	0xFE2
 15540                           fsr1l	equ	0xFE1
 15541                           indf2	equ	0xFDF
 15542                           postinc2	equ	0xFDE
 15543                           postdec2	equ	0xFDD
 15544                           plusw2	equ	0xFDB
 15545                           fsr2h	equ	0xFDA
 15546                           fsr2l	equ	0xFD9
 15547                           status	equ	0xFD8
 15548                           
 15549 ;; *************** function ___ftge *****************
 15550 ;; Defined at:
 15551 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftge.c"
 15552 ;; Parameters:    Size  Location     Type
 15553 ;;  ff1             3    0[BANK0 ] float 
 15554 ;;  ff2             3    3[BANK0 ] float 
 15555 ;; Auto vars:     Size  Location     Type
 15556 ;;		None
 15557 ;; Return value:  Size  Location     Type
 15558 ;;		None               void
 15559 ;; Registers used:
 15560 ;;		wreg, status,2, status,0
 15561 ;; Tracked objects:
 15562 ;;		On entry : 0/0
 15563 ;;		On exit  : 0/0
 15564 ;;		Unchanged: 0/0
 15565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15566 ;;      Params:         0       6       0       0       0       0       0       0       0
 15567 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15568 ;;      Temps:          0       3       0       0       0       0       0       0       0
 15569 ;;      Totals:         0       9       0       0       0       0       0       0       0
 15570 ;;Total ram usage:        9 bytes
 15571 ;; Hardware stack levels used:    1
 15572 ;; Hardware stack levels required when called:   10
 15573 ;; This function calls:
 15574 ;;		Nothing
 15575 ;; This function is called by:
 15576 ;;		_sprintf
 15577 ;; This function uses a non-reentrant model
 15578 ;;
 15579                           
 15580                           	psect	text50
 15581  004676                     __ptext50:
 15582                           	opt stack 0
 15583  004676                     ___ftge:
 15584                           	opt stack 19
 15585                           
 15586                           ; BSR set to: 0
 15587                           ;incstack = 0
 15588  004676  0100               	movlb	0	; () banked
 15589  004678  AF62               	btfss	(___ftge@ff1+2)& (0+255),7,b
 15590  00467A  D016               	goto	l3088
 15591                           
 15592                           ; BSR set to: 0
 15593  00467C  C060  F066         	movff	___ftge@ff1,??___ftge
 15594  004680  C061  F067         	movff	___ftge@ff1+1,??___ftge+1
 15595  004684  C062  F068         	movff	___ftge@ff1+2,??___ftge+2
 15596  004688  1F66               	comf	??___ftge& (0+255),f,b
 15597  00468A  1F67               	comf	(??___ftge+1)& (0+255),f,b
 15598  00468C  1F68               	comf	(??___ftge+2)& (0+255),f,b
 15599  00468E  2B66               	incf	??___ftge& (0+255),f,b
 15600  004690  0E00               	movlw	0
 15601  004692  2367               	addwfc	(??___ftge+1)& (0+255),f,b
 15602  004694  2368               	addwfc	(??___ftge+2)& (0+255),f,b
 15603  004696  0E00               	movlw	0
 15604  004698  2566               	addwf	??___ftge& (0+255),w,b
 15605  00469A  6F60               	movwf	___ftge@ff1& (0+255),b
 15606  00469C  0E00               	movlw	0
 15607  00469E  2167               	addwfc	(??___ftge+1)& (0+255),w,b
 15608  0046A0  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
 15609  0046A2  0E80               	movlw	128
 15610  0046A4  2168               	addwfc	(??___ftge+2)& (0+255),w,b
 15611  0046A6  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
 15612  0046A8                     l3088:
 15613                           
 15614                           ; BSR set to: 0
 15615                           
 15616                           ; BSR set to: 0
 15617  0046A8  AF65               	btfss	(___ftge@ff2+2)& (0+255),7,b
 15618  0046AA  D016               	goto	l3089
 15619                           
 15620                           ; BSR set to: 0
 15621  0046AC  C063  F066         	movff	___ftge@ff2,??___ftge
 15622  0046B0  C064  F067         	movff	___ftge@ff2+1,??___ftge+1
 15623  0046B4  C065  F068         	movff	___ftge@ff2+2,??___ftge+2
 15624  0046B8  1F66               	comf	??___ftge& (0+255),f,b
 15625  0046BA  1F67               	comf	(??___ftge+1)& (0+255),f,b
 15626  0046BC  1F68               	comf	(??___ftge+2)& (0+255),f,b
 15627  0046BE  2B66               	incf	??___ftge& (0+255),f,b
 15628  0046C0  0E00               	movlw	0
 15629  0046C2  2367               	addwfc	(??___ftge+1)& (0+255),f,b
 15630  0046C4  2368               	addwfc	(??___ftge+2)& (0+255),f,b
 15631  0046C6  0E00               	movlw	0
 15632  0046C8  2566               	addwf	??___ftge& (0+255),w,b
 15633  0046CA  6F63               	movwf	___ftge@ff2& (0+255),b
 15634  0046CC  0E00               	movlw	0
 15635  0046CE  2167               	addwfc	(??___ftge+1)& (0+255),w,b
 15636  0046D0  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 15637  0046D2  0E80               	movlw	128
 15638  0046D4  2168               	addwfc	(??___ftge+2)& (0+255),w,b
 15639  0046D6  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 15640  0046D8                     l3089:
 15641                           
 15642                           ; BSR set to: 0
 15643                           
 15644                           ; BSR set to: 0
 15645  0046D8  0E00               	movlw	0
 15646  0046DA  1B60               	xorwf	___ftge@ff1& (0+255),f,b
 15647  0046DC  0E00               	movlw	0
 15648  0046DE  1B61               	xorwf	(___ftge@ff1+1)& (0+255),f,b
 15649  0046E0  0E80               	movlw	128
 15650  0046E2  1B62               	xorwf	(___ftge@ff1+2)& (0+255),f,b
 15651                           
 15652                           ; BSR set to: 0
 15653  0046E4  0E00               	movlw	0
 15654  0046E6  1B63               	xorwf	___ftge@ff2& (0+255),f,b
 15655  0046E8  0E00               	movlw	0
 15656  0046EA  1B64               	xorwf	(___ftge@ff2+1)& (0+255),f,b
 15657  0046EC  0E80               	movlw	128
 15658  0046EE  1B65               	xorwf	(___ftge@ff2+2)& (0+255),f,b
 15659  0046F0  5163               	movf	___ftge@ff2& (0+255),w,b
 15660  0046F2  5D60               	subwf	___ftge@ff1& (0+255),w,b
 15661  0046F4  5164               	movf	(___ftge@ff2+1)& (0+255),w,b
 15662  0046F6  5961               	subwfb	(___ftge@ff1+1)& (0+255),w,b
 15663  0046F8  5165               	movf	(___ftge@ff2+2)& (0+255),w,b
 15664  0046FA  5962               	subwfb	(___ftge@ff1+2)& (0+255),w,b
 15665  0046FC  B0D8               	btfsc	status,0,c
 15666  0046FE  D002               	goto	l7390
 15667                           
 15668                           ; BSR set to: 0
 15669  004700  90D8               	bcf	status,0,c
 15670  004702  0012               	return	
 15671  004704                     l7390:
 15672                           
 15673                           ; BSR set to: 0
 15674                           
 15675                           ; BSR set to: 0
 15676  004704  80D8               	bsf	status,0,c
 15677                           
 15678                           ; BSR set to: 0
 15679  004706  0012               	return	
 15680  004708                     __end_of___ftge:
 15681                           	opt stack 0
 15682                           tblptru	equ	0xFF8
 15683                           tblptrh	equ	0xFF7
 15684                           tblptrl	equ	0xFF6
 15685                           tablat	equ	0xFF5
 15686                           prodh	equ	0xFF4
 15687                           prodl	equ	0xFF3
 15688                           intcon	equ	0xFF2
 15689                           postinc0	equ	0xFEE
 15690                           wreg	equ	0xFE8
 15691                           indf1	equ	0xFE7
 15692                           postdec1	equ	0xFE5
 15693                           fsr1h	equ	0xFE2
 15694                           fsr1l	equ	0xFE1
 15695                           indf2	equ	0xFDF
 15696                           postinc2	equ	0xFDE
 15697                           postdec2	equ	0xFDD
 15698                           plusw2	equ	0xFDB
 15699                           fsr2h	equ	0xFDA
 15700                           fsr2l	equ	0xFD9
 15701                           status	equ	0xFD8
 15702                           
 15703 ;; *************** function _enviaComando *****************
 15704 ;; Defined at:
 15705 ;;		line 275 in file "LoRaWanCore.c"
 15706 ;; Parameters:    Size  Location     Type
 15707 ;;  cmd             2   28[BANK0 ] PTR const unsigned char 
 15708 ;;		 -> TxLoRaWan@comando(200), DataRate@comando(12), SetBandWidth@comando(20), SetSpreadingFactor@comando(20), 
 15709 ;;		 -> MacSave@comando(7), GetAdr@comando(10), SetAdr@comando(15), SetChannelLoRaWan@comando(25), 
 15710 ;;		 -> MAC_JOIN_OTAA(10), SYS_RESET(6), SetAppKey@comando(50), SetAppEUI@comando(32), 
 15711 ;;		 -> SetDevEUI@comando(32), GetDnctr@comando(100), 
 15712 ;;  tipoComando     1   30[BANK0 ] unsigned char 
 15713 ;; Auto vars:     Size  Location     Type
 15714 ;;  i               2   35[BANK0 ] unsigned int 
 15715 ;;  i               2   33[BANK0 ] unsigned int 
 15716 ;;  i               2   37[BANK0 ] unsigned int 
 15717 ;; Return value:  Size  Location     Type
 15718 ;;                  1    wreg      unsigned char 
 15719 ;; Registers used:
 15720 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15721 ;; Tracked objects:
 15722 ;;		On entry : 0/0
 15723 ;;		On exit  : 0/0
 15724 ;;		Unchanged: 0/0
 15725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15726 ;;      Params:         0       3       0       0       0       0       0       0       0
 15727 ;;      Locals:         0       6       0       0       0       0       0       0       0
 15728 ;;      Temps:          0       2       0       0       0       0       0       0       0
 15729 ;;      Totals:         0      11       0       0       0       0       0       0       0
 15730 ;;Total ram usage:       11 bytes
 15731 ;; Hardware stack levels used:    1
 15732 ;; Hardware stack levels required when called:   12
 15733 ;; This function calls:
 15734 ;;		_initRecebeDados
 15735 ;;		_parseLoRaWan
 15736 ;;		_putch
 15737 ;;		_strlen
 15738 ;; This function is called by:
 15739 ;;		_SetDevEUI
 15740 ;;		_SetAppEUI
 15741 ;;		_SetAppKey
 15742 ;;		_ResetModuloLoRaWan
 15743 ;;		_JoinLoRaWan
 15744 ;;		_SetChannelLoRaWan
 15745 ;;		_SetAdr
 15746 ;;		_MacSave
 15747 ;;		_SetSpreadingFactor
 15748 ;;		_SetBandWidth
 15749 ;;		_DataRate
 15750 ;;		_TxLoRaWan
 15751 ;;		_GetDnctr
 15752 ;;		_GetAdr
 15753 ;; This function uses a non-reentrant model
 15754 ;;
 15755                           
 15756                           	psect	text51
 15757  00354A                     __ptext51:
 15758                           	opt stack 0
 15759  00354A                     _enviaComando:
 15760                           	opt stack 17
 15761                           
 15762                           ;LoRaWanCore.c: 277: initRecebeDados();
 15763                           
 15764                           ; BSR set to: 0
 15765                           ;incstack = 0
 15766  00354A  EC7C  F02A         	call	_initRecebeDados	;wreg free
 15767                           
 15768                           ;LoRaWanCore.c: 279: switch (tipoComando)
 15769  00354E  D041               	goto	l2434
 15770  003550                     
 15771                           ;LoRaWanCore.c: 282: {
 15772                           ;LoRaWanCore.c: 283: for (uint16_t i = 0; i < strlen(MAC); i++)
 15773  003550  0E00               	movlw	0
 15774  003552  0100               	movlb	0	; () banked
 15775  003554  6F82               	movwf	(enviaComando@i+1)& (0+255),b
 15776  003556  0E00               	movlw	0
 15777  003558  6F81               	movwf	enviaComando@i& (0+255),b
 15778  00355A  D00D               	goto	l2436
 15779  00355C                     
 15780                           ; BSR set to: 0
 15781                           ;LoRaWanCore.c: 284: {
 15782                           ;LoRaWanCore.c: 285: putch((char)MAC[i]);
 15783                           
 15784                           ; BSR set to: 0
 15785  00355C  0EFB               	movlw	low _MAC
 15786  00355E  2581               	addwf	enviaComando@i& (0+255),w,b
 15787  003560  6EF6               	movwf	tblptrl,c
 15788  003562  0E7D               	movlw	high _MAC
 15789  003564  2182               	addwfc	(enviaComando@i+1)& (0+255),w,b
 15790  003566  6EF7               	movwf	tblptrh,c
 15791  003568                     	if	0	;There are less than 3 active tblptr bytes
 15792  003568                     	endif
 15793  003568  0008               	tblrd		*
 15794  00356A  50F5               	movf	tablat,w,c
 15795  00356C  ECA0  F02A         	call	_putch
 15796  003570  0100               	movlb	0	; () banked
 15797  003572  4B81               	infsnz	enviaComando@i& (0+255),f,b
 15798  003574  2B82               	incf	(enviaComando@i+1)& (0+255),f,b
 15799  003576                     l2436:
 15800                           
 15801                           ; BSR set to: 0
 15802                           
 15803                           ; BSR set to: 0
 15804  003576  0EFB               	movlw	low _MAC
 15805  003578  6F60               	movwf	strlen@s& (0+255),b
 15806  00357A  0E7D               	movlw	high _MAC
 15807  00357C  6F61               	movwf	(strlen@s+1)& (0+255),b
 15808  00357E  ECA1  F026         	call	_strlen	;wreg free
 15809  003582  0100               	movlb	0	; () banked
 15810  003584  5160               	movf	?_strlen& (0+255),w,b
 15811  003586  5D81               	subwf	enviaComando@i& (0+255),w,b
 15812  003588  5161               	movf	(?_strlen+1)& (0+255),w,b
 15813  00358A  5982               	subwfb	(enviaComando@i+1)& (0+255),w,b
 15814  00358C  B0D8               	btfsc	status,0,c
 15815  00358E  D029               	goto	l2439
 15816  003590  D7E5               	goto	l2437
 15817  003592                     
 15818                           ; BSR set to: 0
 15819                           ;LoRaWanCore.c: 289: {
 15820                           ;LoRaWanCore.c: 290: for (uint16_t i = 0; i < strlen(SYS); i++)
 15821                           
 15822                           ; BSR set to: 0
 15823  003592  0E00               	movlw	0
 15824  003594  6F84               	movwf	(enviaComando@i_4915+1)& (0+255),b
 15825  003596  0E00               	movlw	0
 15826  003598  6F83               	movwf	enviaComando@i_4915& (0+255),b
 15827  00359A  D00D               	goto	l2441
 15828  00359C                     
 15829                           ; BSR set to: 0
 15830                           ;LoRaWanCore.c: 291: {
 15831                           ;LoRaWanCore.c: 292: putch((char)SYS[i]);
 15832                           
 15833                           ; BSR set to: 0
 15834  00359C  0EF1               	movlw	low _SYS
 15835  00359E  2583               	addwf	enviaComando@i_4915& (0+255),w,b
 15836  0035A0  6EF6               	movwf	tblptrl,c
 15837  0035A2  0E7D               	movlw	high _SYS
 15838  0035A4  2184               	addwfc	(enviaComando@i_4915+1)& (0+255),w,b
 15839  0035A6  6EF7               	movwf	tblptrh,c
 15840  0035A8                     	if	0	;There are less than 3 active tblptr bytes
 15841  0035A8                     	endif
 15842  0035A8  0008               	tblrd		*
 15843  0035AA  50F5               	movf	tablat,w,c
 15844  0035AC  ECA0  F02A         	call	_putch
 15845  0035B0  0100               	movlb	0	; () banked
 15846  0035B2  4B83               	infsnz	enviaComando@i_4915& (0+255),f,b
 15847  0035B4  2B84               	incf	(enviaComando@i_4915+1)& (0+255),f,b
 15848  0035B6                     l2441:
 15849                           
 15850                           ; BSR set to: 0
 15851                           
 15852                           ; BSR set to: 0
 15853  0035B6  0EF1               	movlw	low _SYS
 15854  0035B8  6F60               	movwf	strlen@s& (0+255),b
 15855  0035BA  0E7D               	movlw	high _SYS
 15856  0035BC  6F61               	movwf	(strlen@s+1)& (0+255),b
 15857  0035BE  ECA1  F026         	call	_strlen	;wreg free
 15858  0035C2  0100               	movlb	0	; () banked
 15859  0035C4  5160               	movf	?_strlen& (0+255),w,b
 15860  0035C6  5D83               	subwf	enviaComando@i_4915& (0+255),w,b
 15861  0035C8  5161               	movf	(?_strlen+1)& (0+255),w,b
 15862  0035CA  5984               	subwfb	(enviaComando@i_4915+1)& (0+255),w,b
 15863  0035CC  B0D8               	btfsc	status,0,c
 15864  0035CE  D009               	goto	l2439
 15865  0035D0  D7E5               	goto	l2442
 15866  0035D2                     l2434:
 15867                           
 15868                           ; BSR set to: 0
 15869  0035D2  0100               	movlb	0	; () banked
 15870  0035D4  517E               	movf	enviaComando@tipoComando& (0+255),w,b
 15871                           
 15872                           ; Switch size 1, requested type "space"
 15873                           ; Number of cases is 2, Range of values is 0 to 1
 15874                           ; switch strategies available:
 15875                           ; Name         Instructions Cycles
 15876                           ; simple_byte            7     4 (average)
 15877                           ;	Chosen strategy is simple_byte
 15878  0035D6  0A00               	xorlw	0	; case 0
 15879  0035D8  B4D8               	btfsc	status,2,c
 15880  0035DA  D7BA               	goto	l2435
 15881  0035DC  0A01               	xorlw	1	; case 1
 15882  0035DE  B4D8               	btfsc	status,2,c
 15883  0035E0  D7D8               	goto	l2440
 15884  0035E2                     l2439:
 15885                           
 15886                           ; BSR set to: 0
 15887                           ;LoRaWanCore.c: 298: for (uint16_t i = 0; i < strlen(cmd); i++)
 15888                           
 15889                           ; BSR set to: 0
 15890  0035E2  0E00               	movlw	0
 15891  0035E4  6F86               	movwf	(enviaComando@i_4916+1)& (0+255),b
 15892  0035E6  0E00               	movlw	0
 15893  0035E8  6F85               	movwf	enviaComando@i_4916& (0+255),b
 15894  0035EA  D01B               	goto	l2444
 15895  0035EC                     
 15896                           ; BSR set to: 0
 15897                           ;LoRaWanCore.c: 299: {
 15898                           ;LoRaWanCore.c: 300: putch((char)cmd[i]);
 15899                           
 15900                           ; BSR set to: 0
 15901  0035EC  5185               	movf	enviaComando@i_4916& (0+255),w,b
 15902  0035EE  257C               	addwf	enviaComando@cmd& (0+255),w,b
 15903  0035F0  6F7F               	movwf	??_enviaComando& (0+255),b
 15904  0035F2  5186               	movf	(enviaComando@i_4916+1)& (0+255),w,b
 15905  0035F4  217D               	addwfc	(enviaComando@cmd+1)& (0+255),w,b
 15906  0035F6  6F80               	movwf	(??_enviaComando+1)& (0+255),b
 15907  0035F8  C07F  FFF6         	movff	??_enviaComando,tblptrl
 15908  0035FC  C080  FFF7         	movff	??_enviaComando+1,tblptrh
 15909  003600  6AF8               	clrf	tblptru,c
 15910  003602  0E07               	movlw	(high __ramtop+-1)
 15911  003604  64F7               	cpfsgt	tblptrh,c
 15912  003606  D003               	bra	u7197
 15913  003608  0008               	tblrd		*
 15914  00360A  50F5               	movf	tablat,w,c
 15915  00360C  D005               	bra	u7190
 15916  00360E                     u7197:
 15917  00360E  CFF6 FFE9          	movff	tblptrl,fsr0l
 15918  003612  CFF7 FFEA          	movff	tblptrh,fsr0h
 15919  003616  50EF               	movf	indf0,w,c
 15920  003618                     u7190:
 15921  003618  ECA0  F02A         	call	_putch
 15922  00361C  0100               	movlb	0	; () banked
 15923  00361E  4B85               	infsnz	enviaComando@i_4916& (0+255),f,b
 15924  003620  2B86               	incf	(enviaComando@i_4916+1)& (0+255),f,b
 15925  003622                     l2444:
 15926                           
 15927                           ; BSR set to: 0
 15928                           
 15929                           ; BSR set to: 0
 15930  003622  C07C  F060         	movff	enviaComando@cmd,strlen@s
 15931  003626  C07D  F061         	movff	enviaComando@cmd+1,strlen@s+1
 15932  00362A  ECA1  F026         	call	_strlen	;wreg free
 15933  00362E  0100               	movlb	0	; () banked
 15934  003630  5160               	movf	?_strlen& (0+255),w,b
 15935  003632  5D85               	subwf	enviaComando@i_4916& (0+255),w,b
 15936  003634  5161               	movf	(?_strlen+1)& (0+255),w,b
 15937  003636  5986               	subwfb	(enviaComando@i_4916+1)& (0+255),w,b
 15938  003638  A0D8               	btfss	status,0,c
 15939  00363A  D7D8               	goto	l2445
 15940                           
 15941                           ; BSR set to: 0
 15942                           ;LoRaWanCore.c: 301: }
 15943                           ;LoRaWanCore.c: 303: putch(0x0D);
 15944                           
 15945                           ; BSR set to: 0
 15946  00363C  0E0D               	movlw	13
 15947  00363E  ECA0  F02A         	call	_putch
 15948                           
 15949                           ;LoRaWanCore.c: 304: putch(0x0A);
 15950  003642  0E0A               	movlw	10
 15951  003644  ECA0  F02A         	call	_putch
 15952                           
 15953                           ;LoRaWanCore.c: 306: return parseLoRaWan();
 15954  003648  ECBA  F020         	call	_parseLoRaWan	;wreg free
 15955  00364C  0012               	return	
 15956  00364E                     __end_of_enviaComando:
 15957                           	opt stack 0
 15958                           tblptru	equ	0xFF8
 15959                           tblptrh	equ	0xFF7
 15960                           tblptrl	equ	0xFF6
 15961                           tablat	equ	0xFF5
 15962                           prodh	equ	0xFF4
 15963                           prodl	equ	0xFF3
 15964                           intcon	equ	0xFF2
 15965                           indf0	equ	0xFEF
 15966                           postinc0	equ	0xFEE
 15967                           fsr0h	equ	0xFEA
 15968                           fsr0l	equ	0xFE9
 15969                           wreg	equ	0xFE8
 15970                           indf1	equ	0xFE7
 15971                           postdec1	equ	0xFE5
 15972                           fsr1h	equ	0xFE2
 15973                           fsr1l	equ	0xFE1
 15974                           indf2	equ	0xFDF
 15975                           postinc2	equ	0xFDE
 15976                           postdec2	equ	0xFDD
 15977                           plusw2	equ	0xFDB
 15978                           fsr2h	equ	0xFDA
 15979                           fsr2l	equ	0xFD9
 15980                           status	equ	0xFD8
 15981                           
 15982 ;; *************** function _strlen *****************
 15983 ;; Defined at:
 15984 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strlen.c"
 15985 ;; Parameters:    Size  Location     Type
 15986 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 15987 ;;		 -> recebeByteLoRaWan@frameData(100), SYS(5), MAC(5), TxLoRaWan@comando(200), 
 15988 ;;		 -> DataRate@comando(12), SetBandWidth@comando(20), SetSpreadingFactor@comando(20), MacSave@comando(7), 
 15989 ;;		 -> GetAdr@comando(10), SetAdr@comando(15), SetChannelLoRaWan@comando(25), MAC_JOIN_OTAA(10), 
 15990 ;;		 -> SYS_RESET(6), SetAppKey@comando(50), SetAppEUI@comando(32), SetDevEUI@comando(32), 
 15991 ;;		 -> GetDnctr@comando(100), STR_26(16), STR_25(7), STR_24(14), 
 15992 ;;		 -> STR_23(8), STR_22(8), STR_21(10), STR_20(17), 
 15993 ;;		 -> STR_19(11), STR_18(5), STR_17(32), STR_16(7), 
 15994 ;;		 -> STR_15(11), STR_14(11), STR_13(14), STR_12(3), 
 15995 ;; Auto vars:     Size  Location     Type
 15996 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
 15997 ;;		 -> recebeByteLoRaWan@frameData(100), SYS(5), MAC(5), TxLoRaWan@comando(200), 
 15998 ;;		 -> DataRate@comando(12), SetBandWidth@comando(20), SetSpreadingFactor@comando(20), MacSave@comando(7), 
 15999 ;;		 -> GetAdr@comando(10), SetAdr@comando(15), SetChannelLoRaWan@comando(25), MAC_JOIN_OTAA(10), 
 16000 ;;		 -> SYS_RESET(6), SetAppKey@comando(50), SetAppEUI@comando(32), SetDevEUI@comando(32), 
 16001 ;;		 -> GetDnctr@comando(100), STR_26(16), STR_25(7), STR_24(14), 
 16002 ;;		 -> STR_23(8), STR_22(8), STR_21(10), STR_20(17), 
 16003 ;;		 -> STR_19(11), STR_18(5), STR_17(32), STR_16(7), 
 16004 ;;		 -> STR_15(11), STR_14(11), STR_13(14), STR_12(3), 
 16005 ;; Return value:  Size  Location     Type
 16006 ;;                  2    0[BANK0 ] unsigned int 
 16007 ;; Registers used:
 16008 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 16009 ;; Tracked objects:
 16010 ;;		On entry : 0/0
 16011 ;;		On exit  : 0/0
 16012 ;;		Unchanged: 0/0
 16013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16014 ;;      Params:         0       2       0       0       0       0       0       0       0
 16015 ;;      Locals:         0       2       0       0       0       0       0       0       0
 16016 ;;      Temps:          0       2       0       0       0       0       0       0       0
 16017 ;;      Totals:         0       6       0       0       0       0       0       0       0
 16018 ;;Total ram usage:        6 bytes
 16019 ;; Hardware stack levels used:    1
 16020 ;; Hardware stack levels required when called:   10
 16021 ;; This function calls:
 16022 ;;		Nothing
 16023 ;; This function is called by:
 16024 ;;		_enviaComando
 16025 ;; This function uses a non-reentrant model
 16026 ;;
 16027                           
 16028                           	psect	text52
 16029  004D42                     __ptext52:
 16030                           	opt stack 0
 16031  004D42                     _strlen:
 16032                           	opt stack 18
 16033                           
 16034                           ;incstack = 0
 16035  004D42  C060  F064         	movff	strlen@s,strlen@cp
 16036  004D46  C061  F065         	movff	strlen@s+1,strlen@cp+1
 16037  004D4A  D003               	goto	l3401
 16038  004D4C  0100               	movlb	0	; () banked
 16039  004D4E  4B64               	infsnz	strlen@cp& (0+255),f,b
 16040  004D50  2B65               	incf	(strlen@cp+1)& (0+255),f,b
 16041  004D52                     l3401:
 16042                           
 16043                           ; BSR set to: 0
 16044  004D52  C064  FFF6         	movff	strlen@cp,tblptrl
 16045  004D56  C065  FFF7         	movff	strlen@cp+1,tblptrh
 16046  004D5A  6AF8               	clrf	tblptru,c
 16047  004D5C  0E07               	movlw	(high __ramtop+-1)
 16048  004D5E  64F7               	cpfsgt	tblptrh,c
 16049  004D60  D003               	bra	u6507
 16050  004D62  0008               	tblrd		*
 16051  004D64  50F5               	movf	tablat,w,c
 16052  004D66  D005               	bra	u6500
 16053  004D68                     u6507:
 16054  004D68  CFF6 FFE9          	movff	tblptrl,fsr0l
 16055  004D6C  CFF7 FFEA          	movff	tblptrh,fsr0h
 16056  004D70  50EF               	movf	indf0,w,c
 16057  004D72                     u6500:
 16058  004D72  0900               	iorlw	0
 16059  004D74  A4D8               	btfss	status,2,c
 16060  004D76  D7EA               	goto	l3402
 16061  004D78  C060  F062         	movff	strlen@s,??_strlen
 16062  004D7C  C061  F063         	movff	strlen@s+1,??_strlen+1
 16063  004D80  0100               	movlb	0	; () banked
 16064  004D82  1F62               	comf	??_strlen& (0+255),f,b
 16065  004D84  1F63               	comf	(??_strlen+1)& (0+255),f,b
 16066  004D86  4B62               	infsnz	??_strlen& (0+255),f,b
 16067  004D88  2B63               	incf	(??_strlen+1)& (0+255),f,b
 16068  004D8A  5164               	movf	strlen@cp& (0+255),w,b
 16069  004D8C  2562               	addwf	??_strlen& (0+255),w,b
 16070  004D8E  6F60               	movwf	?_strlen& (0+255),b
 16071  004D90  5165               	movf	(strlen@cp+1)& (0+255),w,b
 16072  004D92  2163               	addwfc	(??_strlen+1)& (0+255),w,b
 16073  004D94  6F61               	movwf	(?_strlen+1)& (0+255),b
 16074  004D96  0012               	return	
 16075  004D98                     __end_of_strlen:
 16076                           	opt stack 0
 16077                           tblptru	equ	0xFF8
 16078                           tblptrh	equ	0xFF7
 16079                           tblptrl	equ	0xFF6
 16080                           tablat	equ	0xFF5
 16081                           prodh	equ	0xFF4
 16082                           prodl	equ	0xFF3
 16083                           intcon	equ	0xFF2
 16084                           indf0	equ	0xFEF
 16085                           postinc0	equ	0xFEE
 16086                           fsr0h	equ	0xFEA
 16087                           fsr0l	equ	0xFE9
 16088                           wreg	equ	0xFE8
 16089                           indf1	equ	0xFE7
 16090                           postdec1	equ	0xFE5
 16091                           fsr1h	equ	0xFE2
 16092                           fsr1l	equ	0xFE1
 16093                           indf2	equ	0xFDF
 16094                           postinc2	equ	0xFDE
 16095                           postdec2	equ	0xFDD
 16096                           plusw2	equ	0xFDB
 16097                           fsr2h	equ	0xFDA
 16098                           fsr2l	equ	0xFD9
 16099                           status	equ	0xFD8
 16100                           
 16101 ;; *************** function _putch *****************
 16102 ;; Defined at:
 16103 ;;		line 46 in file "uart/uart.c"
 16104 ;; Parameters:    Size  Location     Type
 16105 ;;  data            1    wreg     unsigned char 
 16106 ;; Auto vars:     Size  Location     Type
 16107 ;;  data            1    0[BANK0 ] unsigned char 
 16108 ;; Return value:  Size  Location     Type
 16109 ;;                  1    wreg      void 
 16110 ;; Registers used:
 16111 ;;		wreg
 16112 ;; Tracked objects:
 16113 ;;		On entry : 0/0
 16114 ;;		On exit  : 0/0
 16115 ;;		Unchanged: 0/0
 16116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16117 ;;      Params:         0       0       0       0       0       0       0       0       0
 16118 ;;      Locals:         0       1       0       0       0       0       0       0       0
 16119 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16120 ;;      Totals:         0       1       0       0       0       0       0       0       0
 16121 ;;Total ram usage:        1 bytes
 16122 ;; Hardware stack levels used:    1
 16123 ;; Hardware stack levels required when called:   10
 16124 ;; This function calls:
 16125 ;;		Nothing
 16126 ;; This function is called by:
 16127 ;;		_main
 16128 ;;		_enviaComando
 16129 ;;		_gen_send
 16130 ;;		_sendXBeePriv
 16131 ;; This function uses a non-reentrant model
 16132 ;;
 16133                           
 16134                           	psect	text53
 16135  005540                     __ptext53:
 16136                           	opt stack 0
 16137  005540                     _putch:
 16138                           	opt stack 20
 16139                           
 16140                           ; BSR set to: 0
 16141                           ;incstack = 0
 16142                           ;putch@data stored from wreg
 16143  005540  0100               	movlb	0	; () banked
 16144  005542  6F60               	movwf	putch@data& (0+255),b
 16145  005544                     
 16146                           ;uart.c: 48: while (!TXIF);
 16147  005544  A89E               	btfss	3998,4,c	;volatile
 16148  005546  D7FE               	goto	l8016
 16149                           
 16150                           ;uart.c: 49: TXREG=data;
 16151  005548  C060  FFAD         	movff	putch@data,4013	;volatile
 16152  00554C  0012               	return		;funcret
 16153  00554E                     __end_of_putch:
 16154                           	opt stack 0
 16155                           tblptru	equ	0xFF8
 16156                           tblptrh	equ	0xFF7
 16157                           tblptrl	equ	0xFF6
 16158                           tablat	equ	0xFF5
 16159                           prodh	equ	0xFF4
 16160                           prodl	equ	0xFF3
 16161                           intcon	equ	0xFF2
 16162                           indf0	equ	0xFEF
 16163                           postinc0	equ	0xFEE
 16164                           fsr0h	equ	0xFEA
 16165                           fsr0l	equ	0xFE9
 16166                           wreg	equ	0xFE8
 16167                           indf1	equ	0xFE7
 16168                           postdec1	equ	0xFE5
 16169                           fsr1h	equ	0xFE2
 16170                           fsr1l	equ	0xFE1
 16171                           indf2	equ	0xFDF
 16172                           postinc2	equ	0xFDE
 16173                           postdec2	equ	0xFDD
 16174                           plusw2	equ	0xFDB
 16175                           fsr2h	equ	0xFDA
 16176                           fsr2l	equ	0xFD9
 16177                           status	equ	0xFD8
 16178                           
 16179 ;; *************** function _parseLoRaWan *****************
 16180 ;; Defined at:
 16181 ;;		line 309 in file "LoRaWanCore.c"
 16182 ;; Parameters:    Size  Location     Type
 16183 ;;		None
 16184 ;; Auto vars:     Size  Location     Type
 16185 ;;  previous        4   20[BANK0 ] unsigned long 
 16186 ;;  intervalMAX     2   24[BANK0 ] unsigned int 
 16187 ;;  timeout         1   27[BANK0 ] unsigned char 
 16188 ;;  status          1   26[BANK0 ] unsigned char 
 16189 ;; Return value:  Size  Location     Type
 16190 ;;                  1    wreg      unsigned char 
 16191 ;; Registers used:
 16192 ;;		wreg, status,2, status,0, cstack
 16193 ;; Tracked objects:
 16194 ;;		On entry : 0/0
 16195 ;;		On exit  : 0/0
 16196 ;;		Unchanged: 0/0
 16197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16198 ;;      Params:         0       0       0       0       0       0       0       0       0
 16199 ;;      Locals:         0       8       0       0       0       0       0       0       0
 16200 ;;      Temps:          0      12       0       0       0       0       0       0       0
 16201 ;;      Totals:         0      20       0       0       0       0       0       0       0
 16202 ;;Total ram usage:       20 bytes
 16203 ;; Hardware stack levels used:    1
 16204 ;; Hardware stack levels required when called:   11
 16205 ;; This function calls:
 16206 ;;		_millis
 16207 ;; This function is called by:
 16208 ;;		_JoinLoRaWan
 16209 ;;		_TxLoRaWan
 16210 ;;		_enviaComando
 16211 ;; This function uses a non-reentrant model
 16212 ;;
 16213                           
 16214                           	psect	text54
 16215  004174                     __ptext54:
 16216                           	opt stack 0
 16217  004174                     _parseLoRaWan:
 16218                           	opt stack 18
 16219                           
 16220                           ;LoRaWanCore.c: 311: uint8_t status=0xFF;
 16221                           
 16222                           ;incstack = 0
 16223  004174  0100               	movlb	0	; () banked
 16224  004176  697A               	setf	parseLoRaWan@status& (0+255),b
 16225                           
 16226                           ; BSR set to: 0
 16227                           ;LoRaWanCore.c: 312: uint16_t intervalMAX=60000;
 16228  004178  0EEA               	movlw	234
 16229  00417A  6F79               	movwf	(parseLoRaWan@intervalMAX+1)& (0+255),b
 16230  00417C  0E60               	movlw	96
 16231  00417E  6F78               	movwf	parseLoRaWan@intervalMAX& (0+255),b
 16232                           
 16233                           ;LoRaWanCore.c: 313: bool timeout=0;
 16234  004180  0E00               	movlw	0
 16235  004182  6F7B               	movwf	parseLoRaWan@timeout& (0+255),b
 16236                           
 16237                           ; BSR set to: 0
 16238                           ;LoRaWanCore.c: 314: uint32_t previous=millis();
 16239  004184  EC22  F02A         	call	_millis	;wreg free
 16240  004188  C060  F074         	movff	?_millis,parseLoRaWan@previous
 16241  00418C  C061  F075         	movff	?_millis+1,parseLoRaWan@previous+1
 16242  004190  C062  F076         	movff	?_millis+2,parseLoRaWan@previous+2
 16243  004194  C063  F077         	movff	?_millis+3,parseLoRaWan@previous+3
 16244                           
 16245                           ;LoRaWanCore.c: 316: while ((!timeout) && (!novaMsgLoRaWan))
 16246  004198  D033               	goto	l2452
 16247  00419A                     
 16248                           ;LoRaWanCore.c: 317: {
 16249                           ;LoRaWanCore.c: 318: if ((millis()-previous) > intervalMAX)
 16250  00419A  C074  F068         	movff	parseLoRaWan@previous,??_parseLoRaWan
 16251  00419E  C075  F069         	movff	parseLoRaWan@previous+1,??_parseLoRaWan+1
 16252  0041A2  C076  F06A         	movff	parseLoRaWan@previous+2,??_parseLoRaWan+2
 16253  0041A6  C077  F06B         	movff	parseLoRaWan@previous+3,??_parseLoRaWan+3
 16254  0041AA  0100               	movlb	0	; () banked
 16255  0041AC  1F68               	comf	??_parseLoRaWan& (0+255),f,b
 16256  0041AE  1F69               	comf	(??_parseLoRaWan+1)& (0+255),f,b
 16257  0041B0  1F6A               	comf	(??_parseLoRaWan+2)& (0+255),f,b
 16258  0041B2  1F6B               	comf	(??_parseLoRaWan+3)& (0+255),f,b
 16259  0041B4  2B68               	incf	??_parseLoRaWan& (0+255),f,b
 16260  0041B6  0E00               	movlw	0
 16261  0041B8  2369               	addwfc	(??_parseLoRaWan+1)& (0+255),f,b
 16262  0041BA  236A               	addwfc	(??_parseLoRaWan+2)& (0+255),f,b
 16263  0041BC  236B               	addwfc	(??_parseLoRaWan+3)& (0+255),f,b
 16264  0041BE  EC22  F02A         	call	_millis	;wreg free
 16265  0041C2  0100               	movlb	0	; () banked
 16266  0041C4  5168               	movf	??_parseLoRaWan& (0+255),w,b
 16267  0041C6  2560               	addwf	?_millis& (0+255),w,b
 16268  0041C8  6F6C               	movwf	(??_parseLoRaWan+4)& (0+255),b
 16269  0041CA  5169               	movf	(??_parseLoRaWan+1)& (0+255),w,b
 16270  0041CC  2161               	addwfc	(?_millis+1)& (0+255),w,b
 16271  0041CE  6F6D               	movwf	(??_parseLoRaWan+5)& (0+255),b
 16272  0041D0  516A               	movf	(??_parseLoRaWan+2)& (0+255),w,b
 16273  0041D2  2162               	addwfc	(?_millis+2)& (0+255),w,b
 16274  0041D4  6F6E               	movwf	(??_parseLoRaWan+6)& (0+255),b
 16275  0041D6  516B               	movf	(??_parseLoRaWan+3)& (0+255),w,b
 16276  0041D8  2163               	addwfc	(?_millis+3)& (0+255),w,b
 16277  0041DA  6F6F               	movwf	(??_parseLoRaWan+7)& (0+255),b
 16278  0041DC  5178               	movf	parseLoRaWan@intervalMAX& (0+255),w,b
 16279  0041DE  6F70               	movwf	(??_parseLoRaWan+8)& (0+255),b
 16280  0041E0  5179               	movf	(parseLoRaWan@intervalMAX+1)& (0+255),w,b
 16281  0041E2  6F71               	movwf	(??_parseLoRaWan+9)& (0+255),b
 16282  0041E4  6B72               	clrf	(??_parseLoRaWan+10)& (0+255),b
 16283  0041E6  6B73               	clrf	(??_parseLoRaWan+11)& (0+255),b
 16284  0041E8  516C               	movf	(??_parseLoRaWan+4)& (0+255),w,b
 16285  0041EA  5D70               	subwf	(??_parseLoRaWan+8)& (0+255),w,b
 16286  0041EC  516D               	movf	(??_parseLoRaWan+5)& (0+255),w,b
 16287  0041EE  5971               	subwfb	(??_parseLoRaWan+9)& (0+255),w,b
 16288  0041F0  516E               	movf	(??_parseLoRaWan+6)& (0+255),w,b
 16289  0041F2  5972               	subwfb	(??_parseLoRaWan+10)& (0+255),w,b
 16290  0041F4  516F               	movf	(??_parseLoRaWan+7)& (0+255),w,b
 16291  0041F6  5973               	subwfb	(??_parseLoRaWan+11)& (0+255),w,b
 16292  0041F8  B0D8               	btfsc	status,0,c
 16293  0041FA  D002               	goto	l2452
 16294                           
 16295                           ; BSR set to: 0
 16296                           ;LoRaWanCore.c: 319: {
 16297                           ;LoRaWanCore.c: 320: timeout=1;
 16298  0041FC  0E01               	movlw	1
 16299  0041FE  6F7B               	movwf	parseLoRaWan@timeout& (0+255),b
 16300  004200                     l2452:
 16301                           
 16302                           ; BSR set to: 0
 16303  004200  0100               	movlb	0	; () banked
 16304  004202  517B               	movf	parseLoRaWan@timeout& (0+255),w,b
 16305  004204  A4D8               	btfss	status,2,c
 16306  004206  D003               	goto	u6480
 16307                           
 16308                           ; BSR set to: 0
 16309  004208  5059               	movf	_novaMsgLoRaWan,w,c	;volatile
 16310  00420A  B4D8               	btfsc	status,2,c
 16311  00420C  D7C6               	goto	l2451
 16312  00420E                     u6480:
 16313                           
 16314                           ; BSR set to: 0
 16315                           ;LoRaWanCore.c: 321: }
 16316                           ;LoRaWanCore.c: 322: }
 16317                           ;LoRaWanCore.c: 324: if (novaMsgLoRaWan)
 16318                           
 16319                           ; BSR set to: 0
 16320                           
 16321                           ; BSR set to: 0
 16322  00420E  5059               	movf	_novaMsgLoRaWan,w,c	;volatile
 16323  004210  B4D8               	btfsc	status,2,c
 16324  004212  D004               	goto	l2456
 16325                           
 16326                           ; BSR set to: 0
 16327                           ;LoRaWanCore.c: 325: {
 16328                           ;LoRaWanCore.c: 326: status=responseLoRaWan;
 16329  004214  C1FF  F07A         	movff	_responseLoRaWan,parseLoRaWan@status	;volatile
 16330                           
 16331                           ; BSR set to: 0
 16332                           ;LoRaWanCore.c: 327: novaMsgLoRaWan=0;
 16333  004218  0E00               	movlw	0
 16334  00421A  6E59               	movwf	_novaMsgLoRaWan,c	;volatile
 16335  00421C                     l2456:
 16336                           
 16337                           ; BSR set to: 0
 16338                           ;LoRaWanCore.c: 328: }
 16339                           ;LoRaWanCore.c: 330: return status;
 16340  00421C  517A               	movf	parseLoRaWan@status& (0+255),w,b
 16341  00421E  0012               	return	
 16342  004220                     __end_of_parseLoRaWan:
 16343                           	opt stack 0
 16344                           tblptru	equ	0xFF8
 16345                           tblptrh	equ	0xFF7
 16346                           tblptrl	equ	0xFF6
 16347                           tablat	equ	0xFF5
 16348                           prodh	equ	0xFF4
 16349                           prodl	equ	0xFF3
 16350                           intcon	equ	0xFF2
 16351                           indf0	equ	0xFEF
 16352                           postinc0	equ	0xFEE
 16353                           fsr0h	equ	0xFEA
 16354                           fsr0l	equ	0xFE9
 16355                           wreg	equ	0xFE8
 16356                           indf1	equ	0xFE7
 16357                           postdec1	equ	0xFE5
 16358                           fsr1h	equ	0xFE2
 16359                           fsr1l	equ	0xFE1
 16360                           indf2	equ	0xFDF
 16361                           postinc2	equ	0xFDE
 16362                           postdec2	equ	0xFDD
 16363                           plusw2	equ	0xFDB
 16364                           fsr2h	equ	0xFDA
 16365                           fsr2l	equ	0xFD9
 16366                           status	equ	0xFD8
 16367                           
 16368 ;; *************** function _millis *****************
 16369 ;; Defined at:
 16370 ;;		line 48 in file "Timer.c"
 16371 ;; Parameters:    Size  Location     Type
 16372 ;;		None
 16373 ;; Auto vars:     Size  Location     Type
 16374 ;;  m               4    4[BANK0 ] unsigned long 
 16375 ;; Return value:  Size  Location     Type
 16376 ;;                  4    0[BANK0 ] unsigned long 
 16377 ;; Registers used:
 16378 ;;		None
 16379 ;; Tracked objects:
 16380 ;;		On entry : 0/0
 16381 ;;		On exit  : 0/0
 16382 ;;		Unchanged: 0/0
 16383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16384 ;;      Params:         0       4       0       0       0       0       0       0       0
 16385 ;;      Locals:         0       4       0       0       0       0       0       0       0
 16386 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16387 ;;      Totals:         0       8       0       0       0       0       0       0       0
 16388 ;;Total ram usage:        8 bytes
 16389 ;; Hardware stack levels used:    1
 16390 ;; Hardware stack levels required when called:   10
 16391 ;; This function calls:
 16392 ;;		Nothing
 16393 ;; This function is called by:
 16394 ;;		_delay
 16395 ;;		_main
 16396 ;;		_parseLoRaWan
 16397 ;;		_parse_message
 16398 ;;		_txZBStatusResponse
 16399 ;; This function uses a non-reentrant model
 16400 ;;
 16401                           
 16402                           	psect	text55
 16403  005444                     __ptext55:
 16404                           	opt stack 0
 16405  005444                     _millis:
 16406                           	opt stack 20
 16407                           
 16408                           ;Timer.c: 50: CCP1IE=0;
 16409                           
 16410                           ; BSR set to: 0
 16411                           ;incstack = 0
 16412  005444  949D               	bcf	3997,2,c	;volatile
 16413                           
 16414                           ;Timer.c: 51: uint32_t m=ticks;
 16415  005446  C32A  F064         	movff	_ticks,millis@m	;volatile
 16416  00544A  C32B  F065         	movff	_ticks+1,millis@m+1	;volatile
 16417  00544E  C32C  F066         	movff	_ticks+2,millis@m+2	;volatile
 16418  005452  C32D  F067         	movff	_ticks+3,millis@m+3	;volatile
 16419                           
 16420                           ;Timer.c: 52: CCP1IE=1;
 16421  005456  849D               	bsf	3997,2,c	;volatile
 16422                           
 16423                           ;Timer.c: 54: return m;
 16424  005458  C064  F060         	movff	millis@m,?_millis
 16425  00545C  C065  F061         	movff	millis@m+1,?_millis+1
 16426  005460  C066  F062         	movff	millis@m+2,?_millis+2
 16427  005464  C067  F063         	movff	millis@m+3,?_millis+3
 16428  005468  0012               	return		;funcret
 16429  00546A                     __end_of_millis:
 16430                           	opt stack 0
 16431                           tblptru	equ	0xFF8
 16432                           tblptrh	equ	0xFF7
 16433                           tblptrl	equ	0xFF6
 16434                           tablat	equ	0xFF5
 16435                           prodh	equ	0xFF4
 16436                           prodl	equ	0xFF3
 16437                           intcon	equ	0xFF2
 16438                           indf0	equ	0xFEF
 16439                           postinc0	equ	0xFEE
 16440                           fsr0h	equ	0xFEA
 16441                           fsr0l	equ	0xFE9
 16442                           wreg	equ	0xFE8
 16443                           indf1	equ	0xFE7
 16444                           postdec1	equ	0xFE5
 16445                           fsr1h	equ	0xFE2
 16446                           fsr1l	equ	0xFE1
 16447                           indf2	equ	0xFDF
 16448                           postinc2	equ	0xFDE
 16449                           postdec2	equ	0xFDD
 16450                           plusw2	equ	0xFDB
 16451                           fsr2h	equ	0xFDA
 16452                           fsr2l	equ	0xFD9
 16453                           status	equ	0xFD8
 16454                           
 16455 ;; *************** function _initRecebeDados *****************
 16456 ;; Defined at:
 16457 ;;		line 333 in file "LoRaWanCore.c"
 16458 ;; Parameters:    Size  Location     Type
 16459 ;;		None
 16460 ;; Auto vars:     Size  Location     Type
 16461 ;;		None
 16462 ;; Return value:  Size  Location     Type
 16463 ;;                  1    wreg      void 
 16464 ;; Registers used:
 16465 ;;		wreg, status,2
 16466 ;; Tracked objects:
 16467 ;;		On entry : 0/0
 16468 ;;		On exit  : 0/0
 16469 ;;		Unchanged: 0/0
 16470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16471 ;;      Params:         0       0       0       0       0       0       0       0       0
 16472 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16473 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16474 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16475 ;;Total ram usage:        0 bytes
 16476 ;; Hardware stack levels used:    1
 16477 ;; Hardware stack levels required when called:   10
 16478 ;; This function calls:
 16479 ;;		Nothing
 16480 ;; This function is called by:
 16481 ;;		_enviaComando
 16482 ;; This function uses a non-reentrant model
 16483 ;;
 16484                           
 16485                           	psect	text56
 16486  0054F8                     __ptext56:
 16487                           	opt stack 0
 16488  0054F8                     _initRecebeDados:
 16489                           	opt stack 18
 16490                           
 16491                           ;LoRaWanCore.c: 335: RCIE=0;
 16492                           
 16493                           ;incstack = 0
 16494  0054F8  9A9D               	bcf	3997,5,c	;volatile
 16495                           
 16496                           ;LoRaWanCore.c: 336: responseLoRaWan=0xFF;
 16497  0054FA  0101               	movlb	1	; () banked
 16498  0054FC  69FF               	setf	_responseLoRaWan& (0+255),b	;volatile
 16499                           
 16500                           ; BSR set to: 1
 16501                           ;LoRaWanCore.c: 337: tamFrame=0;
 16502  0054FE  0E00               	movlw	0
 16503  005500  6E5A               	movwf	_tamFrame,c	;volatile
 16504                           
 16505                           ;LoRaWanCore.c: 338: tamDadosRecebidos=0;
 16506  005502  0E00               	movlw	0
 16507  005504  6E5B               	movwf	_tamDadosRecebidos,c	;volatile
 16508                           
 16509                           ;LoRaWanCore.c: 339: novaMsgLoRaWan=0;
 16510  005506  0E00               	movlw	0
 16511  005508  6E59               	movwf	_novaMsgLoRaWan,c	;volatile
 16512                           
 16513                           ; BSR set to: 1
 16514                           ;LoRaWanCore.c: 340: RCIE=1;
 16515  00550A  8A9D               	bsf	3997,5,c	;volatile
 16516                           
 16517                           ; BSR set to: 1
 16518  00550C  0012               	return		;funcret
 16519  00550E                     __end_of_initRecebeDados:
 16520                           	opt stack 0
 16521                           tblptru	equ	0xFF8
 16522                           tblptrh	equ	0xFF7
 16523                           tblptrl	equ	0xFF6
 16524                           tablat	equ	0xFF5
 16525                           prodh	equ	0xFF4
 16526                           prodl	equ	0xFF3
 16527                           intcon	equ	0xFF2
 16528                           indf0	equ	0xFEF
 16529                           postinc0	equ	0xFEE
 16530                           fsr0h	equ	0xFEA
 16531                           fsr0l	equ	0xFE9
 16532                           wreg	equ	0xFE8
 16533                           indf1	equ	0xFE7
 16534                           postdec1	equ	0xFE5
 16535                           fsr1h	equ	0xFE2
 16536                           fsr1l	equ	0xFE1
 16537                           indf2	equ	0xFDF
 16538                           postinc2	equ	0xFDE
 16539                           postdec2	equ	0xFDD
 16540                           plusw2	equ	0xFDB
 16541                           fsr2h	equ	0xFDA
 16542                           fsr2l	equ	0xFD9
 16543                           status	equ	0xFD8
 16544                           
 16545 ;; *************** function _SYS_InterruptHigh *****************
 16546 ;; Defined at:
 16547 ;;		line 59 in file "usb/system.c"
 16548 ;; Parameters:    Size  Location     Type
 16549 ;;		None
 16550 ;; Auto vars:     Size  Location     Type
 16551 ;;  dig4            2   53[COMRAM] int 
 16552 ;;  dig3            2   51[COMRAM] int 
 16553 ;;  dig2            2   49[COMRAM] int 
 16554 ;;  dig1            2   47[COMRAM] int 
 16555 ;; Return value:  Size  Location     Type
 16556 ;;                  1    wreg      void 
 16557 ;; Registers used:
 16558 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16559 ;; Tracked objects:
 16560 ;;		On entry : 0/0
 16561 ;;		On exit  : 0/0
 16562 ;;		Unchanged: 0/0
 16563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16564 ;;      Params:         0       0       0       0       0       0       0       0       0
 16565 ;;      Locals:         8       0       0       0       0       0       0       0       0
 16566 ;;      Temps:         19       0       0       0       0       0       0       0       0
 16567 ;;      Totals:        27       0       0       0       0       0       0       0       0
 16568 ;;Total ram usage:       27 bytes
 16569 ;; Hardware stack levels used:    1
 16570 ;; Hardware stack levels required when called:    9
 16571 ;; This function calls:
 16572 ;;		_USBDeviceTasks
 16573 ;;		_getch
 16574 ;;		_recebeByteLoRaWan
 16575 ;; This function is called by:
 16576 ;;		Interrupt level 2
 16577 ;; This function uses a non-reentrant model
 16578 ;;
 16579                           
 16580                           	psect	intcode
 16581  000008                     __pintcode:
 16582                           	opt stack 0
 16583  000008                     _SYS_InterruptHigh:
 16584                           	opt stack 16
 16585                           
 16586                           ; BSR set to: 1
 16587                           ;incstack = 0
 16588  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 16589  00000A  ED1C  F013         	call	int_func,f	;refresh shadow registers
 16590                           tblptru	equ	0xFF8
 16591                           tblptrh	equ	0xFF7
 16592                           tblptrl	equ	0xFF6
 16593                           tablat	equ	0xFF5
 16594                           prodh	equ	0xFF4
 16595                           prodl	equ	0xFF3
 16596                           intcon	equ	0xFF2
 16597                           indf0	equ	0xFEF
 16598                           postinc0	equ	0xFEE
 16599                           fsr0h	equ	0xFEA
 16600                           fsr0l	equ	0xFE9
 16601                           wreg	equ	0xFE8
 16602                           indf1	equ	0xFE7
 16603                           postdec1	equ	0xFE5
 16604                           fsr1h	equ	0xFE2
 16605                           fsr1l	equ	0xFE1
 16606                           indf2	equ	0xFDF
 16607                           postinc2	equ	0xFDE
 16608                           postdec2	equ	0xFDD
 16609                           plusw2	equ	0xFDB
 16610                           fsr2h	equ	0xFDA
 16611                           fsr2l	equ	0xFD9
 16612                           status	equ	0xFD8
 16613                           
 16614                           	psect	intcode_body
 16615  002638                     __pintcode_body:
 16616                           	opt stack 16
 16617  002638                     int_func:
 16618                           	opt stack 16
 16619  002638  0006               	pop		; remove dummy address from shadow register refresh
 16620  00263A  CFFA F01E          	movff	pclath,??_SYS_InterruptHigh+1
 16621  00263E  CFFB F01F          	movff	pclatu,??_SYS_InterruptHigh+2
 16622  002642  CFE9 F020          	movff	fsr0l,??_SYS_InterruptHigh+3
 16623  002646  CFEA F021          	movff	fsr0h,??_SYS_InterruptHigh+4
 16624  00264A  CFE1 F022          	movff	fsr1l,??_SYS_InterruptHigh+5
 16625  00264E  CFE2 F023          	movff	fsr1h,??_SYS_InterruptHigh+6
 16626  002652  CFD9 F024          	movff	fsr2l,??_SYS_InterruptHigh+7
 16627  002656  CFDA F025          	movff	fsr2h,??_SYS_InterruptHigh+8
 16628  00265A  CFF3 F026          	movff	prodl,??_SYS_InterruptHigh+9
 16629  00265E  CFF4 F027          	movff	prodh,??_SYS_InterruptHigh+10
 16630  002662  CFF6 F028          	movff	tblptrl,??_SYS_InterruptHigh+11
 16631  002666  CFF7 F029          	movff	tblptrh,??_SYS_InterruptHigh+12
 16632  00266A  CFF8 F02A          	movff	tblptru,??_SYS_InterruptHigh+13
 16633  00266E  CFF5 F02B          	movff	tablat,??_SYS_InterruptHigh+14
 16634  002672  C05F  F02C         	movff	btemp,??_SYS_InterruptHigh+15
 16635  002676  C060  F02D         	movff	btemp+1,??_SYS_InterruptHigh+16
 16636  00267A  C061  F02E         	movff	btemp+2,??_SYS_InterruptHigh+17
 16637  00267E  C062  F02F         	movff	btemp+3,??_SYS_InterruptHigh+18
 16638                           
 16639                           ;system.c: 64: if (CCP1IF && CCP1IE)
 16640  002682  B49E               	btfsc	3998,2,c	;volatile
 16641  002684  A49D               	btfss	3997,2,c	;volatile
 16642  002686  D088               	goto	i2l119
 16643                           
 16644                           ;system.c: 65: {
 16645                           ;system.c: 66: CCP1IF=0;
 16646  002688  949E               	bcf	3998,2,c	;volatile
 16647                           
 16648                           ;system.c: 67: ticks++;
 16649  00268A  0E01               	movlw	1
 16650  00268C  0103               	movlb	3	; () banked
 16651  00268E  272A               	addwf	_ticks& (0+255),f,b	;volatile
 16652  002690  0E00               	movlw	0
 16653  002692  232B               	addwfc	(_ticks+1)& (0+255),f,b	;volatile
 16654  002694  232C               	addwfc	(_ticks+2)& (0+255),f,b	;volatile
 16655  002696  232D               	addwfc	(_ticks+3)& (0+255),f,b	;volatile
 16656                           
 16657                           ; BSR set to: 3
 16658                           ;system.c: 69: int dig1=PORTDbits.RD0;
 16659  002698  A083               	btfss	3971,0,c	;volatile
 16660  00269A  D003               	goto	i2u1040_40
 16661  00269C  6A1D               	clrf	??_SYS_InterruptHigh& (0+255),c
 16662  00269E  2A1D               	incf	??_SYS_InterruptHigh& (0+255),f,c
 16663  0026A0  D001               	goto	i2u1040_48
 16664  0026A2                     i2u1040_40:
 16665  0026A2  6A1D               	clrf	??_SYS_InterruptHigh& (0+255),c
 16666  0026A4                     i2u1040_48:
 16667  0026A4  501D               	movf	??_SYS_InterruptHigh,w,c
 16668  0026A6  6E30               	movwf	SYS_InterruptHigh@dig1,c
 16669  0026A8  6A31               	clrf	SYS_InterruptHigh@dig1+1,c
 16670                           
 16671                           ;system.c: 70: int dig2=PORTDbits.RD1;
 16672  0026AA  A283               	btfss	3971,1,c	;volatile
 16673  0026AC  D003               	goto	i2u1041_40
 16674  0026AE  6A1D               	clrf	??_SYS_InterruptHigh& (0+255),c
 16675  0026B0  2A1D               	incf	??_SYS_InterruptHigh& (0+255),f,c
 16676  0026B2  D001               	goto	i2u1041_48
 16677  0026B4                     i2u1041_40:
 16678  0026B4  6A1D               	clrf	??_SYS_InterruptHigh& (0+255),c
 16679  0026B6                     i2u1041_48:
 16680  0026B6  501D               	movf	??_SYS_InterruptHigh,w,c
 16681  0026B8  6E32               	movwf	SYS_InterruptHigh@dig2,c
 16682  0026BA  6A33               	clrf	SYS_InterruptHigh@dig2+1,c
 16683                           
 16684                           ;system.c: 71: int dig3=PORTDbits.RD2;
 16685  0026BC  A483               	btfss	3971,2,c	;volatile
 16686  0026BE  D003               	goto	i2u1042_40
 16687  0026C0  6A1D               	clrf	??_SYS_InterruptHigh& (0+255),c
 16688  0026C2  2A1D               	incf	??_SYS_InterruptHigh& (0+255),f,c
 16689  0026C4  D001               	goto	i2u1042_48
 16690  0026C6                     i2u1042_40:
 16691  0026C6  6A1D               	clrf	??_SYS_InterruptHigh& (0+255),c
 16692  0026C8                     i2u1042_48:
 16693  0026C8  501D               	movf	??_SYS_InterruptHigh,w,c
 16694  0026CA  6E34               	movwf	SYS_InterruptHigh@dig3,c
 16695  0026CC  6A35               	clrf	SYS_InterruptHigh@dig3+1,c
 16696                           
 16697                           ;system.c: 72: int dig4=PORTDbits.RD3;
 16698  0026CE  A683               	btfss	3971,3,c	;volatile
 16699  0026D0  D003               	goto	i2u1043_40
 16700  0026D2  6A1D               	clrf	??_SYS_InterruptHigh& (0+255),c
 16701  0026D4  2A1D               	incf	??_SYS_InterruptHigh& (0+255),f,c
 16702  0026D6  D001               	goto	i2u1043_48
 16703  0026D8                     i2u1043_40:
 16704  0026D8  6A1D               	clrf	??_SYS_InterruptHigh& (0+255),c
 16705  0026DA                     i2u1043_48:
 16706  0026DA  501D               	movf	??_SYS_InterruptHigh,w,c
 16707  0026DC  6E36               	movwf	SYS_InterruptHigh@dig4,c
 16708  0026DE  6A37               	clrf	SYS_InterruptHigh@dig4+1,c
 16709                           
 16710                           ;system.c: 74: if ((dig_1!=dig1) && (dig1==1))
 16711  0026E0  5030               	movf	SYS_InterruptHigh@dig1,w,c
 16712  0026E2  0102               	movlb	2	; () banked
 16713  0026E4  19DE               	xorwf	_dig_1& (0+255),w,b	;volatile
 16714  0026E6  E104               	bnz	i2u1044_40
 16715  0026E8  5031               	movf	SYS_InterruptHigh@dig1+1,w,c
 16716  0026EA  19DF               	xorwf	(_dig_1+1)& (0+255),w,b	;volatile
 16717  0026EC  B4D8               	btfsc	status,2,c
 16718  0026EE  D00B               	goto	i2l120
 16719  0026F0                     i2u1044_40:
 16720                           
 16721                           ; BSR set to: 2
 16722  0026F0  0430               	decf	SYS_InterruptHigh@dig1,w,c
 16723  0026F2  1031               	iorwf	SYS_InterruptHigh@dig1+1,w,c
 16724  0026F4  A4D8               	btfss	status,2,c
 16725  0026F6  D007               	goto	i2l120
 16726                           
 16727                           ; BSR set to: 2
 16728                           ;system.c: 75: freqPulses1++;
 16729  0026F8  0E01               	movlw	1
 16730  0026FA  0103               	movlb	3	; () banked
 16731  0026FC  273A               	addwf	_freqPulses1& (0+255),f,b	;volatile
 16732  0026FE  0E00               	movlw	0
 16733  002700  233B               	addwfc	(_freqPulses1+1)& (0+255),f,b	;volatile
 16734  002702  233C               	addwfc	(_freqPulses1+2)& (0+255),f,b	;volatile
 16735  002704  233D               	addwfc	(_freqPulses1+3)& (0+255),f,b	;volatile
 16736  002706                     i2l120:
 16737                           
 16738                           ;system.c: 76: dig_1=dig1;
 16739                           
 16740                           ; BSR set to: 3
 16741  002706  C030  F2DE         	movff	SYS_InterruptHigh@dig1,_dig_1	;volatile
 16742  00270A  C031  F2DF         	movff	SYS_InterruptHigh@dig1+1,_dig_1+1	;volatile
 16743                           
 16744                           ;system.c: 77: if ((dig_2!=dig2) && (dig2==1))
 16745  00270E  5032               	movf	SYS_InterruptHigh@dig2,w,c
 16746  002710  0102               	movlb	2	; () banked
 16747  002712  19DC               	xorwf	_dig_2& (0+255),w,b	;volatile
 16748  002714  E104               	bnz	i2u1046_40
 16749  002716  5033               	movf	SYS_InterruptHigh@dig2+1,w,c
 16750  002718  19DD               	xorwf	(_dig_2+1)& (0+255),w,b	;volatile
 16751  00271A  B4D8               	btfsc	status,2,c
 16752  00271C  D00B               	goto	i2l121
 16753  00271E                     i2u1046_40:
 16754                           
 16755                           ; BSR set to: 2
 16756  00271E  0432               	decf	SYS_InterruptHigh@dig2,w,c
 16757  002720  1033               	iorwf	SYS_InterruptHigh@dig2+1,w,c
 16758  002722  A4D8               	btfss	status,2,c
 16759  002724  D007               	goto	i2l121
 16760                           
 16761                           ; BSR set to: 2
 16762                           ;system.c: 78: freqPulses2++;
 16763  002726  0E01               	movlw	1
 16764  002728  0103               	movlb	3	; () banked
 16765  00272A  2736               	addwf	_freqPulses2& (0+255),f,b	;volatile
 16766  00272C  0E00               	movlw	0
 16767  00272E  2337               	addwfc	(_freqPulses2+1)& (0+255),f,b	;volatile
 16768  002730  2338               	addwfc	(_freqPulses2+2)& (0+255),f,b	;volatile
 16769  002732  2339               	addwfc	(_freqPulses2+3)& (0+255),f,b	;volatile
 16770  002734                     i2l121:
 16771                           
 16772                           ;system.c: 79: dig_2=dig2;
 16773                           
 16774                           ; BSR set to: 3
 16775  002734  C032  F2DC         	movff	SYS_InterruptHigh@dig2,_dig_2	;volatile
 16776  002738  C033  F2DD         	movff	SYS_InterruptHigh@dig2+1,_dig_2+1	;volatile
 16777                           
 16778                           ;system.c: 80: if ((dig_3!=dig3) && (dig3==1))
 16779  00273C  5034               	movf	SYS_InterruptHigh@dig3,w,c
 16780  00273E  0102               	movlb	2	; () banked
 16781  002740  19DA               	xorwf	_dig_3& (0+255),w,b	;volatile
 16782  002742  E104               	bnz	i2u1048_40
 16783  002744  5035               	movf	SYS_InterruptHigh@dig3+1,w,c
 16784  002746  19DB               	xorwf	(_dig_3+1)& (0+255),w,b	;volatile
 16785  002748  B4D8               	btfsc	status,2,c
 16786  00274A  D00B               	goto	i2l122
 16787  00274C                     i2u1048_40:
 16788                           
 16789                           ; BSR set to: 2
 16790  00274C  0434               	decf	SYS_InterruptHigh@dig3,w,c
 16791  00274E  1035               	iorwf	SYS_InterruptHigh@dig3+1,w,c
 16792  002750  A4D8               	btfss	status,2,c
 16793  002752  D007               	goto	i2l122
 16794                           
 16795                           ; BSR set to: 2
 16796                           ;system.c: 81: freqPulses3++;
 16797  002754  0E01               	movlw	1
 16798  002756  0103               	movlb	3	; () banked
 16799  002758  2732               	addwf	_freqPulses3& (0+255),f,b	;volatile
 16800  00275A  0E00               	movlw	0
 16801  00275C  2333               	addwfc	(_freqPulses3+1)& (0+255),f,b	;volatile
 16802  00275E  2334               	addwfc	(_freqPulses3+2)& (0+255),f,b	;volatile
 16803  002760  2335               	addwfc	(_freqPulses3+3)& (0+255),f,b	;volatile
 16804  002762                     i2l122:
 16805                           
 16806                           ;system.c: 82: dig_3=dig3;
 16807                           
 16808                           ; BSR set to: 3
 16809  002762  C034  F2DA         	movff	SYS_InterruptHigh@dig3,_dig_3	;volatile
 16810  002766  C035  F2DB         	movff	SYS_InterruptHigh@dig3+1,_dig_3+1	;volatile
 16811                           
 16812                           ;system.c: 83: if ((dig_4!=dig4) && (dig4==1))
 16813  00276A  5036               	movf	SYS_InterruptHigh@dig4,w,c
 16814  00276C  0103               	movlb	3	; () banked
 16815  00276E  194E               	xorwf	_dig_4& (0+255),w,b	;volatile
 16816  002770  E104               	bnz	i2u1050_40
 16817  002772  5037               	movf	SYS_InterruptHigh@dig4+1,w,c
 16818  002774  194F               	xorwf	(_dig_4+1)& (0+255),w,b	;volatile
 16819  002776  B4D8               	btfsc	status,2,c
 16820  002778  D00A               	goto	i2l123
 16821  00277A                     i2u1050_40:
 16822                           
 16823                           ; BSR set to: 3
 16824  00277A  0436               	decf	SYS_InterruptHigh@dig4,w,c
 16825  00277C  1037               	iorwf	SYS_InterruptHigh@dig4+1,w,c
 16826  00277E  A4D8               	btfss	status,2,c
 16827  002780  D006               	goto	i2l123
 16828                           
 16829                           ; BSR set to: 3
 16830                           ;system.c: 84: freqPulses4++;
 16831  002782  0E01               	movlw	1
 16832  002784  272E               	addwf	_freqPulses4& (0+255),f,b	;volatile
 16833  002786  0E00               	movlw	0
 16834  002788  232F               	addwfc	(_freqPulses4+1)& (0+255),f,b	;volatile
 16835  00278A  2330               	addwfc	(_freqPulses4+2)& (0+255),f,b	;volatile
 16836  00278C  2331               	addwfc	(_freqPulses4+3)& (0+255),f,b	;volatile
 16837  00278E                     i2l123:
 16838                           
 16839                           ; BSR set to: 3
 16840                           ;system.c: 85: dig_4=dig4;
 16841                           
 16842                           ; BSR set to: 3
 16843  00278E  C036  F34E         	movff	SYS_InterruptHigh@dig4,_dig_4	;volatile
 16844  002792  C037  F34F         	movff	SYS_InterruptHigh@dig4+1,_dig_4+1	;volatile
 16845                           
 16846                           ;system.c: 86: }
 16847  002796  D00B               	goto	i2l127
 16848  002798                     i2l119:
 16849                           
 16850                           ;system.c: 87: else if (RCIE && RCIF)
 16851  002798  BA9D               	btfsc	3997,5,c	;volatile
 16852  00279A  AA9E               	btfss	3998,5,c	;volatile
 16853  00279C  D005               	goto	i2l125
 16854                           
 16855                           ;system.c: 88: {
 16856                           ;system.c: 90: recebeByteLoRaWan(getch());
 16857  00279E  EC35  F02A         	call	_getch	;wreg free
 16858  0027A2  EC57  F00F         	call	_recebeByteLoRaWan
 16859                           
 16860                           ;system.c: 92: }
 16861  0027A6  D003               	goto	i2l127
 16862  0027A8                     i2l125:
 16863                           
 16864                           ;system.c: 93: else if (USBIE)
 16865  0027A8  BAA0               	btfsc	4000,5,c	;volatile
 16866                           
 16867                           ;system.c: 94: {
 16868                           ;system.c: 96: USBDeviceTasks();
 16869  0027AA  ECB0  F016         	call	_USBDeviceTasks	;wreg free
 16870  0027AE                     i2l127:
 16871  0027AE  C02F  F062         	movff	??_SYS_InterruptHigh+18,btemp+3
 16872  0027B2  C02E  F061         	movff	??_SYS_InterruptHigh+17,btemp+2
 16873  0027B6  C02D  F060         	movff	??_SYS_InterruptHigh+16,btemp+1
 16874  0027BA  C02C  F05F         	movff	??_SYS_InterruptHigh+15,btemp
 16875  0027BE  C02B  FFF5         	movff	??_SYS_InterruptHigh+14,tablat
 16876  0027C2  C02A  FFF8         	movff	??_SYS_InterruptHigh+13,tblptru
 16877  0027C6  C029  FFF7         	movff	??_SYS_InterruptHigh+12,tblptrh
 16878  0027CA  C028  FFF6         	movff	??_SYS_InterruptHigh+11,tblptrl
 16879  0027CE  C027  FFF4         	movff	??_SYS_InterruptHigh+10,prodh
 16880  0027D2  C026  FFF3         	movff	??_SYS_InterruptHigh+9,prodl
 16881  0027D6  C025  FFDA         	movff	??_SYS_InterruptHigh+8,fsr2h
 16882  0027DA  C024  FFD9         	movff	??_SYS_InterruptHigh+7,fsr2l
 16883  0027DE  C023  FFE2         	movff	??_SYS_InterruptHigh+6,fsr1h
 16884  0027E2  C022  FFE1         	movff	??_SYS_InterruptHigh+5,fsr1l
 16885  0027E6  C021  FFEA         	movff	??_SYS_InterruptHigh+4,fsr0h
 16886  0027EA  C020  FFE9         	movff	??_SYS_InterruptHigh+3,fsr0l
 16887  0027EE  C01F  FFFB         	movff	??_SYS_InterruptHigh+2,pclatu
 16888  0027F2  C01E  FFFA         	movff	??_SYS_InterruptHigh+1,pclath
 16889  0027F6  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 16890  0027F8  0011               	retfie		f
 16891  0027FA                     __end_of_SYS_InterruptHigh:
 16892                           	opt stack 0
 16893                           pclatu	equ	0xFFB
 16894                           pclath	equ	0xFFA
 16895                           tblptru	equ	0xFF8
 16896                           tblptrh	equ	0xFF7
 16897                           tblptrl	equ	0xFF6
 16898                           tablat	equ	0xFF5
 16899                           prodh	equ	0xFF4
 16900                           prodl	equ	0xFF3
 16901                           intcon	equ	0xFF2
 16902                           indf0	equ	0xFEF
 16903                           postinc0	equ	0xFEE
 16904                           fsr0h	equ	0xFEA
 16905                           fsr0l	equ	0xFE9
 16906                           wreg	equ	0xFE8
 16907                           indf1	equ	0xFE7
 16908                           postdec1	equ	0xFE5
 16909                           fsr1h	equ	0xFE2
 16910                           fsr1l	equ	0xFE1
 16911                           indf2	equ	0xFDF
 16912                           postinc2	equ	0xFDE
 16913                           postdec2	equ	0xFDD
 16914                           plusw2	equ	0xFDB
 16915                           fsr2h	equ	0xFDA
 16916                           fsr2l	equ	0xFD9
 16917                           status	equ	0xFD8
 16918                           
 16919 ;; *************** function _recebeByteLoRaWan *****************
 16920 ;; Defined at:
 16921 ;;		line 343 in file "LoRaWanCore.c"
 16922 ;; Parameters:    Size  Location     Type
 16923 ;;  b               1    wreg     char 
 16924 ;; Auto vars:     Size  Location     Type
 16925 ;;  b               1   15[COMRAM] char 
 16926 ;;  i               1   18[COMRAM] unsigned char 
 16927 ;;  port            1   14[COMRAM] unsigned char 
 16928 ;;  i               1   16[COMRAM] unsigned char 
 16929 ;;  tamMsgRx        1   17[COMRAM] unsigned char 
 16930 ;;  len             1   13[COMRAM] unsigned char 
 16931 ;; Return value:  Size  Location     Type
 16932 ;;                  1    wreg      void 
 16933 ;; Registers used:
 16934 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16935 ;; Tracked objects:
 16936 ;;		On entry : 0/0
 16937 ;;		On exit  : 0/0
 16938 ;;		Unchanged: 0/0
 16939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16940 ;;      Params:         0       0       0       0       0       0       0       0       0
 16941 ;;      Locals:         6       0       0       0       0       0       0       0       0
 16942 ;;      Temps:          4       0       0       0       0       0       0       0       0
 16943 ;;      Totals:        10       0       0       0       0       0       0       0       0
 16944 ;;Total ram usage:       10 bytes
 16945 ;; Hardware stack levels used:    1
 16946 ;; Hardware stack levels required when called:    2
 16947 ;; This function calls:
 16948 ;;		_converter
 16949 ;;		_strcmp
 16950 ;;		_strcpy
 16951 ;;		_strncmp
 16952 ;;		i2_strlen
 16953 ;; This function is called by:
 16954 ;;		_SYS_InterruptHigh
 16955 ;; This function uses a non-reentrant model
 16956 ;;
 16957                           
 16958                           	psect	text58
 16959  001EAE                     __ptext58:
 16960                           	opt stack 0
 16961  001EAE                     _recebeByteLoRaWan:
 16962                           	opt stack 22
 16963                           
 16964                           ;incstack = 0
 16965                           ;recebeByteLoRaWan@b stored from wreg
 16966  001EAE  6E10               	movwf	recebeByteLoRaWan@b,c
 16967                           
 16968                           ;LoRaWanCore.c: 345: static uint8_t frameData[100];
 16969                           ;LoRaWanCore.c: 346: frameData[tamFrame++]=b;
 16970  001EB0  505A               	movf	_tamFrame,w,c	;volatile
 16971  001EB2  0D01               	mullw	1
 16972  001EB4  0E40               	movlw	low recebeByteLoRaWan@frameData
 16973  001EB6  24F3               	addwf	prodl,w,c
 16974  001EB8  6ED9               	movwf	fsr2l,c
 16975  001EBA  0E04               	movlw	high recebeByteLoRaWan@frameData
 16976  001EBC  20F4               	addwfc	prodh,w,c
 16977  001EBE  6EDA               	movwf	fsr2h,c
 16978  001EC0  C010  FFDF         	movff	recebeByteLoRaWan@b,indf2
 16979  001EC4  2A5A               	incf	_tamFrame,f,c	;volatile
 16980                           
 16981                           ;LoRaWanCore.c: 347: if ((b==0x0A) && (tamFrame>2))
 16982  001EC6  0E0A               	movlw	10
 16983  001EC8  1810               	xorwf	recebeByteLoRaWan@b,w,c
 16984  001ECA  A4D8               	btfss	status,2,c
 16985  001ECC  D131               	goto	i2u897_40
 16986  001ECE  0E02               	movlw	2
 16987  001ED0  645A               	cpfsgt	_tamFrame,c	;volatile
 16988  001ED2  D12E               	goto	i2u897_40
 16989                           
 16990                           ;LoRaWanCore.c: 348: {
 16991                           ;LoRaWanCore.c: 349: frameData[tamFrame]=0x00;
 16992  001ED4  505A               	movf	_tamFrame,w,c	;volatile
 16993  001ED6  0D01               	mullw	1
 16994  001ED8  0E40               	movlw	low recebeByteLoRaWan@frameData
 16995  001EDA  24F3               	addwf	prodl,w,c
 16996  001EDC  6ED9               	movwf	fsr2l,c
 16997  001EDE  0E04               	movlw	high recebeByteLoRaWan@frameData
 16998  001EE0  20F4               	addwfc	prodh,w,c
 16999  001EE2  6EDA               	movwf	fsr2h,c
 17000  001EE4  0E00               	movlw	0
 17001  001EE6  6EDF               	movwf	indf2,c
 17002                           
 17003                           ;LoRaWanCore.c: 350: strcpy(frameBuffer,frameData);
 17004  001EE8  0E64               	movlw	low _frameBuffer
 17005  001EEA  6E01               	movwf	strcpy@to,c
 17006  001EEC  0E06               	movlw	high _frameBuffer
 17007  001EEE  6E02               	movwf	strcpy@to+1,c
 17008  001EF0  0E40               	movlw	low recebeByteLoRaWan@frameData
 17009  001EF2  6E03               	movwf	strcpy@from,c
 17010  001EF4  0E04               	movlw	high recebeByteLoRaWan@frameData
 17011  001EF6  6E04               	movwf	strcpy@from+1,c
 17012  001EF8  ECBB  F029         	call	_strcpy	;wreg free
 17013                           
 17014                           ;LoRaWanCore.c: 352: frameData[tamFrame-2]=0x00;
 17015  001EFC  0EFE               	movlw	254
 17016  001EFE  6E0A               	movwf	??_recebeByteLoRaWan& (0+255),c
 17017  001F00  0EFF               	movlw	255
 17018  001F02  6E0B               	movwf	(??_recebeByteLoRaWan+1)& (0+255),c
 17019  001F04  505A               	movf	_tamFrame,w,c	;volatile
 17020  001F06  6E0C               	movwf	(??_recebeByteLoRaWan+2)& (0+255),c
 17021  001F08  6A0D               	clrf	(??_recebeByteLoRaWan+3)& (0+255),c
 17022  001F0A  500A               	movf	??_recebeByteLoRaWan,w,c
 17023  001F0C  260C               	addwf	??_recebeByteLoRaWan+2,f,c
 17024  001F0E  500B               	movf	??_recebeByteLoRaWan+1,w,c
 17025  001F10  220D               	addwfc	??_recebeByteLoRaWan+3,f,c
 17026  001F12  0E40               	movlw	low recebeByteLoRaWan@frameData
 17027  001F14  240C               	addwf	??_recebeByteLoRaWan+2,w,c
 17028  001F16  6ED9               	movwf	fsr2l,c
 17029  001F18  0E04               	movlw	high recebeByteLoRaWan@frameData
 17030  001F1A  200D               	addwfc	??_recebeByteLoRaWan+3,w,c
 17031  001F1C  6EDA               	movwf	fsr2h,c
 17032  001F1E  0E00               	movlw	0
 17033  001F20  6EDF               	movwf	indf2,c
 17034                           
 17035                           ;LoRaWanCore.c: 353: tamFrame=0;
 17036  001F22  0E00               	movlw	0
 17037  001F24  6E5A               	movwf	_tamFrame,c	;volatile
 17038                           
 17039                           ;LoRaWanCore.c: 354: uint8_t len = (sizeof(MSG_LORAWAN) / sizeof((MSG_LORAWAN)[0]));
 17040  001F26  0E0F               	movlw	15
 17041  001F28  6E0E               	movwf	recebeByteLoRaWan@len,c
 17042                           
 17043                           ;LoRaWanCore.c: 355: responseLoRaWan=0xFF;
 17044  001F2A  0101               	movlb	1	; () banked
 17045  001F2C  69FF               	setf	_responseLoRaWan& (0+255),b	;volatile
 17046                           
 17047                           ; BSR set to: 1
 17048                           ;LoRaWanCore.c: 356: for (uint8_t i=0;i<len;i++)
 17049  001F2E  0E00               	movlw	0
 17050  001F30  6E11               	movwf	recebeByteLoRaWan@i,c
 17051  001F32  D01C               	goto	i2l2466
 17052  001F34                     
 17053                           ;LoRaWanCore.c: 357: {
 17054                           ;LoRaWanCore.c: 358: if (strcmp(frameData,MSG_LORAWAN[i])==0)
 17055                           
 17056                           ; BSR set to: 1
 17057  001F34  0E40               	movlw	low recebeByteLoRaWan@frameData
 17058  001F36  6E01               	movwf	strcmp@s1,c
 17059  001F38  0E04               	movlw	high recebeByteLoRaWan@frameData
 17060  001F3A  6E02               	movwf	strcmp@s1+1,c
 17061  001F3C  5011               	movf	recebeByteLoRaWan@i,w,c
 17062  001F3E  0D02               	mullw	2
 17063  001F40  0EC5               	movlw	low _MSG_LORAWAN
 17064  001F42  24F3               	addwf	prodl,w,c
 17065  001F44  6ED9               	movwf	fsr2l,c
 17066  001F46  0E03               	movlw	high _MSG_LORAWAN
 17067  001F48  20F4               	addwfc	prodh,w,c
 17068  001F4A  6EDA               	movwf	fsr2h,c
 17069  001F4C  CFDE F003          	movff	postinc2,strcmp@s2
 17070  001F50  CFDD F004          	movff	postdec2,strcmp@s2+1
 17071  001F54  EC1D  F027         	call	_strcmp	;wreg free
 17072  001F58  5001               	movf	?_strcmp,w,c
 17073  001F5A  1002               	iorwf	?_strcmp+1,w,c
 17074  001F5C  A4D8               	btfss	status,2,c
 17075  001F5E  D005               	goto	i2l2468
 17076                           
 17077                           ;LoRaWanCore.c: 359: {
 17078                           ;LoRaWanCore.c: 360: responseLoRaWan=i;
 17079  001F60  C011  F1FF         	movff	recebeByteLoRaWan@i,_responseLoRaWan	;volatile
 17080                           
 17081                           ;LoRaWanCore.c: 361: novaMsgLoRaWan=1;
 17082  001F64  0E01               	movlw	1
 17083  001F66  6E59               	movwf	_novaMsgLoRaWan,c	;volatile
 17084                           
 17085                           ;LoRaWanCore.c: 362: return;
 17086  001F68  0012               	return	
 17087  001F6A                     i2l2468:
 17088  001F6A  2A11               	incf	recebeByteLoRaWan@i,f,c
 17089  001F6C                     i2l2466:
 17090  001F6C  500E               	movf	recebeByteLoRaWan@len,w,c
 17091  001F6E  5C11               	subwf	recebeByteLoRaWan@i,w,c
 17092  001F70  A0D8               	btfss	status,0,c
 17093  001F72  D7E0               	goto	i2l2467
 17094                           
 17095                           ;LoRaWanCore.c: 363: }
 17096                           ;LoRaWanCore.c: 364: }
 17097                           ;LoRaWanCore.c: 365: uint8_t tamMsgRx=strlen(MSG_LORAWAN[15]);
 17098  001F74  C3E3  F001         	movff	_MSG_LORAWAN+30,i2strlen@s
 17099  001F78  C3E4  F002         	movff	_MSG_LORAWAN+31,i2strlen@s+1
 17100  001F7C  ECCC  F026         	call	i2_strlen	;wreg free
 17101  001F80  5001               	movf	?i2_strlen,w,c
 17102  001F82  6E12               	movwf	recebeByteLoRaWan@tamMsgRx,c
 17103                           
 17104                           ;LoRaWanCore.c: 366: if (strncmp(frameData,MSG_LORAWAN[15],tamMsgRx)==0)
 17105  001F84  0E40               	movlw	low recebeByteLoRaWan@frameData
 17106  001F86  6E01               	movwf	strncmp@s1,c
 17107  001F88  0E04               	movlw	high recebeByteLoRaWan@frameData
 17108  001F8A  6E02               	movwf	strncmp@s1+1,c
 17109  001F8C  C3E3  F003         	movff	_MSG_LORAWAN+30,strncmp@s2
 17110  001F90  C3E4  F004         	movff	_MSG_LORAWAN+31,strncmp@s2+1
 17111  001F94  C012  F005         	movff	recebeByteLoRaWan@tamMsgRx,strncmp@len
 17112  001F98  6A06               	clrf	strncmp@len+1,c
 17113  001F9A  EC95  F024         	call	_strncmp	;wreg free
 17114  001F9E  5001               	movf	?_strncmp,w,c
 17115  001FA0  1002               	iorwf	?_strncmp+1,w,c
 17116  001FA2  A4D8               	btfss	status,2,c
 17117  001FA4  D006               	goto	i2l2471
 17118                           
 17119                           ;LoRaWanCore.c: 367: {
 17120                           ;LoRaWanCore.c: 368: responseLoRaWan=15;
 17121  001FA6  0E0F               	movlw	15
 17122  001FA8  0101               	movlb	1	; () banked
 17123  001FAA  6FFF               	movwf	_responseLoRaWan& (0+255),b	;volatile
 17124                           
 17125                           ;LoRaWanCore.c: 369: novaMsgLoRaWan=1;
 17126  001FAC  0E01               	movlw	1
 17127  001FAE  6E59               	movwf	_novaMsgLoRaWan,c	;volatile
 17128                           
 17129                           ; BSR set to: 1
 17130                           ;LoRaWanCore.c: 370: return;
 17131  001FB0  0012               	return	
 17132  001FB2                     i2l2471:
 17133                           
 17134                           ;LoRaWanCore.c: 371: }
 17135                           ;LoRaWanCore.c: 374: tamMsgRx=strlen(MSG_LORAWAN[10]);
 17136                           
 17137                           ; BSR set to: 1
 17138  001FB2  C3D9  F001         	movff	_MSG_LORAWAN+20,i2strlen@s
 17139  001FB6  C3DA  F002         	movff	_MSG_LORAWAN+21,i2strlen@s+1
 17140  001FBA  ECCC  F026         	call	i2_strlen	;wreg free
 17141  001FBE  5001               	movf	?i2_strlen,w,c
 17142  001FC0  6E12               	movwf	recebeByteLoRaWan@tamMsgRx,c
 17143                           
 17144                           ;LoRaWanCore.c: 376: if (strncmp(frameData,MSG_LORAWAN[10],tamMsgRx)==0)
 17145  001FC2  0E40               	movlw	low recebeByteLoRaWan@frameData
 17146  001FC4  6E01               	movwf	strncmp@s1,c
 17147  001FC6  0E04               	movlw	high recebeByteLoRaWan@frameData
 17148  001FC8  6E02               	movwf	strncmp@s1+1,c
 17149  001FCA  C3D9  F003         	movff	_MSG_LORAWAN+20,strncmp@s2
 17150  001FCE  C3DA  F004         	movff	_MSG_LORAWAN+21,strncmp@s2+1
 17151  001FD2  C012  F005         	movff	recebeByteLoRaWan@tamMsgRx,strncmp@len
 17152  001FD6  6A06               	clrf	strncmp@len+1,c
 17153  001FD8  EC95  F024         	call	_strncmp	;wreg free
 17154  001FDC  5001               	movf	?_strncmp,w,c
 17155  001FDE  1002               	iorwf	?_strncmp+1,w,c
 17156  001FE0  A4D8               	btfss	status,2,c
 17157  001FE2  D0A6               	goto	i2u897_40
 17158                           
 17159                           ;LoRaWanCore.c: 377: {
 17160                           ;LoRaWanCore.c: 380: uint8_t i=tamMsgRx;
 17161  001FE4  C012  F013         	movff	recebeByteLoRaWan@tamMsgRx,recebeByteLoRaWan@i_4929
 17162                           
 17163                           ;LoRaWanCore.c: 381: uint8_t port=0;
 17164  001FE8  0E00               	movlw	0
 17165  001FEA  6E0F               	movwf	recebeByteLoRaWan@port,c
 17166                           
 17167                           ;LoRaWanCore.c: 383: for (;i<strlen(frameData);i++)
 17168  001FEC  D027               	goto	i2l2473
 17169  001FEE                     
 17170                           ;LoRaWanCore.c: 384: {
 17171                           ;LoRaWanCore.c: 385: if ((frameData[i]<'0') || (frameData[i]>'9'))
 17172  001FEE  5013               	movf	recebeByteLoRaWan@i_4929,w,c
 17173  001FF0  0D01               	mullw	1
 17174  001FF2  0E40               	movlw	low recebeByteLoRaWan@frameData
 17175  001FF4  24F3               	addwf	prodl,w,c
 17176  001FF6  6ED9               	movwf	fsr2l,c
 17177  001FF8  0E04               	movlw	high recebeByteLoRaWan@frameData
 17178  001FFA  20F4               	addwfc	prodh,w,c
 17179  001FFC  6EDA               	movwf	fsr2h,c
 17180  001FFE  0E2F               	movlw	47
 17181  002000  64DF               	cpfsgt	indf2,c
 17182  002002  D02B               	goto	i2u893_40
 17183  002004  5013               	movf	recebeByteLoRaWan@i_4929,w,c
 17184  002006  0D01               	mullw	1
 17185  002008  0E40               	movlw	low recebeByteLoRaWan@frameData
 17186  00200A  24F3               	addwf	prodl,w,c
 17187  00200C  6ED9               	movwf	fsr2l,c
 17188  00200E  0E04               	movlw	high recebeByteLoRaWan@frameData
 17189  002010  20F4               	addwfc	prodh,w,c
 17190  002012  6EDA               	movwf	fsr2h,c
 17191  002014  0E39               	movlw	57
 17192  002016  64DF               	cpfsgt	indf2,c
 17193  002018  D001               	goto	i2l2475
 17194  00201A  D01F               	goto	i2u893_40
 17195  00201C                     i2l2475:
 17196                           
 17197                           ;LoRaWanCore.c: 388: port*=10;
 17198  00201C  0E0A               	movlw	10
 17199  00201E  020F               	mulwf	recebeByteLoRaWan@port,c
 17200  002020  50F3               	movf	prodl,w,c
 17201  002022  6E0F               	movwf	recebeByteLoRaWan@port,c
 17202                           
 17203                           ;LoRaWanCore.c: 389: port+=frameData[i]-'0';
 17204  002024  5013               	movf	recebeByteLoRaWan@i_4929,w,c
 17205  002026  0D01               	mullw	1
 17206  002028  0E40               	movlw	low recebeByteLoRaWan@frameData
 17207  00202A  24F3               	addwf	prodl,w,c
 17208  00202C  6ED9               	movwf	fsr2l,c
 17209  00202E  0E04               	movlw	high recebeByteLoRaWan@frameData
 17210  002030  20F4               	addwfc	prodh,w,c
 17211  002032  6EDA               	movwf	fsr2h,c
 17212  002034  50DF               	movf	indf2,w,c
 17213  002036  0FD0               	addlw	208
 17214  002038  260F               	addwf	recebeByteLoRaWan@port,f,c
 17215  00203A  2A13               	incf	recebeByteLoRaWan@i_4929,f,c
 17216  00203C                     i2l2473:
 17217  00203C  0E40               	movlw	low recebeByteLoRaWan@frameData
 17218  00203E  6E01               	movwf	i2strlen@s,c
 17219  002040  0E04               	movlw	high recebeByteLoRaWan@frameData
 17220  002042  6E02               	movwf	i2strlen@s+1,c
 17221  002044  ECCC  F026         	call	i2_strlen	;wreg free
 17222  002048  5013               	movf	recebeByteLoRaWan@i_4929,w,c
 17223  00204A  6E0A               	movwf	??_recebeByteLoRaWan& (0+255),c
 17224  00204C  6A0B               	clrf	(??_recebeByteLoRaWan+1)& (0+255),c
 17225  00204E  5001               	movf	?i2_strlen,w,c
 17226  002050  5C0A               	subwf	??_recebeByteLoRaWan,w,c
 17227  002052  5002               	movf	?i2_strlen+1,w,c
 17228  002054  580B               	subwfb	??_recebeByteLoRaWan+1,w,c
 17229  002056  A0D8               	btfss	status,0,c
 17230  002058  D7CA               	goto	i2l2474
 17231  00205A                     i2u893_40:
 17232                           
 17233                           ;LoRaWanCore.c: 390: }
 17234                           ;LoRaWanCore.c: 391: i++;
 17235  00205A  2A13               	incf	recebeByteLoRaWan@i_4929,f,c
 17236                           
 17237                           ;LoRaWanCore.c: 393: for (;i<strlen(frameData);i+=2)
 17238  00205C  D038               	goto	i2l2479
 17239  00205E                     
 17240                           ;LoRaWanCore.c: 394: {
 17241                           ;LoRaWanCore.c: 395: dadosRecebidos[tamDadosRecebidos].port=port;
 17242  00205E  505B               	movf	_tamDadosRecebidos,w,c	;volatile
 17243  002060  0D02               	mullw	2
 17244  002062  0E00               	movlw	low _dadosRecebidos
 17245  002064  24F3               	addwf	prodl,w,c
 17246  002066  6ED9               	movwf	fsr2l,c
 17247  002068  0E03               	movlw	high _dadosRecebidos
 17248  00206A  20F4               	addwfc	prodh,w,c
 17249  00206C  6EDA               	movwf	fsr2h,c
 17250  00206E  C00F  FFDF         	movff	recebeByteLoRaWan@port,indf2
 17251                           
 17252                           ;LoRaWanCore.c: 396: dadosRecebidos[tamDadosRecebidos++].data=converter(frameData[i],fra
      +                          meData[i+1]);
 17253  002072  505B               	movf	_tamDadosRecebidos,w,c	;volatile
 17254  002074  0D02               	mullw	2
 17255  002076  0E01               	movlw	1
 17256  002078  26F3               	addwf	prodl,f,c
 17257  00207A  0E00               	movlw	0
 17258  00207C  22F4               	addwfc	prodh,f,c
 17259  00207E  0E00               	movlw	low _dadosRecebidos
 17260  002080  24F3               	addwf	prodl,w,c
 17261  002082  6ED9               	movwf	fsr2l,c
 17262  002084  0E03               	movlw	high _dadosRecebidos
 17263  002086  20F4               	addwfc	prodh,w,c
 17264  002088  6EDA               	movwf	fsr2h,c
 17265  00208A  5013               	movf	recebeByteLoRaWan@i_4929,w,c
 17266  00208C  6E0A               	movwf	??_recebeByteLoRaWan& (0+255),c
 17267  00208E  6A0B               	clrf	(??_recebeByteLoRaWan+1)& (0+255),c
 17268  002090  0E01               	movlw	1
 17269  002092  260A               	addwf	??_recebeByteLoRaWan,f,c
 17270  002094  0E00               	movlw	0
 17271  002096  220B               	addwfc	??_recebeByteLoRaWan+1,f,c
 17272  002098  0E40               	movlw	low recebeByteLoRaWan@frameData
 17273  00209A  240A               	addwf	??_recebeByteLoRaWan,w,c
 17274  00209C  6EE1               	movwf	fsr1l,c
 17275  00209E  0E04               	movlw	high recebeByteLoRaWan@frameData
 17276  0020A0  200B               	addwfc	??_recebeByteLoRaWan+1,w,c
 17277  0020A2  6EE2               	movwf	fsr1h,c
 17278  0020A4  50E7               	movf	indf1,w,c
 17279  0020A6  6E02               	movwf	converter@conv2,c
 17280  0020A8  5013               	movf	recebeByteLoRaWan@i_4929,w,c
 17281  0020AA  0D01               	mullw	1
 17282  0020AC  0E40               	movlw	low recebeByteLoRaWan@frameData
 17283  0020AE  24F3               	addwf	prodl,w,c
 17284  0020B0  6EE1               	movwf	fsr1l,c
 17285  0020B2  0E04               	movlw	high recebeByteLoRaWan@frameData
 17286  0020B4  20F4               	addwfc	prodh,w,c
 17287  0020B6  6EE2               	movwf	fsr1h,c
 17288  0020B8  50E7               	movf	indf1,w,c
 17289  0020BA  EC10  F024         	call	_converter
 17290  0020BE  6EDF               	movwf	indf2,c
 17291  0020C0  2A5B               	incf	_tamDadosRecebidos,f,c	;volatile
 17292                           
 17293                           ;LoRaWanCore.c: 397: if (tamDadosRecebidos>=10)
 17294  0020C2  0E09               	movlw	9
 17295  0020C4  645B               	cpfsgt	_tamDadosRecebidos,c	;volatile
 17296  0020C6  D001               	goto	i2l2481
 17297  0020C8  0012               	return	
 17298  0020CA                     i2l2481:
 17299  0020CA  0E02               	movlw	2
 17300  0020CC  2613               	addwf	recebeByteLoRaWan@i_4929,f,c
 17301  0020CE                     i2l2479:
 17302  0020CE  0E40               	movlw	low recebeByteLoRaWan@frameData
 17303  0020D0  6E01               	movwf	i2strlen@s,c
 17304  0020D2  0E04               	movlw	high recebeByteLoRaWan@frameData
 17305  0020D4  6E02               	movwf	i2strlen@s+1,c
 17306  0020D6  ECCC  F026         	call	i2_strlen	;wreg free
 17307  0020DA  5013               	movf	recebeByteLoRaWan@i_4929,w,c
 17308  0020DC  6E0A               	movwf	??_recebeByteLoRaWan& (0+255),c
 17309  0020DE  6A0B               	clrf	(??_recebeByteLoRaWan+1)& (0+255),c
 17310  0020E0  5001               	movf	?i2_strlen,w,c
 17311  0020E2  5C0A               	subwf	??_recebeByteLoRaWan,w,c
 17312  0020E4  5002               	movf	?i2_strlen+1,w,c
 17313  0020E6  580B               	subwfb	??_recebeByteLoRaWan+1,w,c
 17314  0020E8  A0D8               	btfss	status,0,c
 17315  0020EA  D7B9               	goto	i2l2480
 17316                           
 17317                           ;LoRaWanCore.c: 399: }
 17318                           ;LoRaWanCore.c: 401: if (i>=strlen(frameData)){
 17319  0020EC  0E40               	movlw	low recebeByteLoRaWan@frameData
 17320  0020EE  6E01               	movwf	i2strlen@s,c
 17321  0020F0  0E04               	movlw	high recebeByteLoRaWan@frameData
 17322  0020F2  6E02               	movwf	i2strlen@s+1,c
 17323  0020F4  ECCC  F026         	call	i2_strlen	;wreg free
 17324  0020F8  5013               	movf	recebeByteLoRaWan@i_4929,w,c
 17325  0020FA  6E0A               	movwf	??_recebeByteLoRaWan& (0+255),c
 17326  0020FC  6A0B               	clrf	(??_recebeByteLoRaWan+1)& (0+255),c
 17327  0020FE  5001               	movf	?i2_strlen,w,c
 17328  002100  5C0A               	subwf	??_recebeByteLoRaWan,w,c
 17329  002102  5002               	movf	?i2_strlen+1,w,c
 17330  002104  580B               	subwfb	??_recebeByteLoRaWan+1,w,c
 17331  002106  B0D8               	btfsc	status,0,c
 17332  002108  D010               	goto	i2l2484
 17333  00210A  D012               	goto	i2u897_40
 17334  00210C                     
 17335                           ;LoRaWanCore.c: 403: dadosRecebidos[tamDadosRecebidos].data = 0;
 17336  00210C  505B               	movf	_tamDadosRecebidos,w,c	;volatile
 17337  00210E  0D02               	mullw	2
 17338  002110  0E01               	movlw	1
 17339  002112  26F3               	addwf	prodl,f,c
 17340  002114  0E00               	movlw	0
 17341  002116  22F4               	addwfc	prodh,f,c
 17342  002118  0E00               	movlw	low _dadosRecebidos
 17343  00211A  24F3               	addwf	prodl,w,c
 17344  00211C  6ED9               	movwf	fsr2l,c
 17345  00211E  0E03               	movlw	high _dadosRecebidos
 17346  002120  20F4               	addwfc	prodh,w,c
 17347  002122  6EDA               	movwf	fsr2h,c
 17348  002124  0E00               	movlw	0
 17349  002126  6EDF               	movwf	indf2,c
 17350  002128  2A5B               	incf	_tamDadosRecebidos,f,c	;volatile
 17351  00212A                     i2l2484:
 17352  00212A  0E0A               	movlw	10
 17353  00212C  645B               	cpfsgt	_tamDadosRecebidos,c	;volatile
 17354  00212E  D7EE               	goto	i2l2485
 17355  002130                     i2u897_40:
 17356                           
 17357                           ;LoRaWanCore.c: 404: }
 17358                           ;LoRaWanCore.c: 405: }
 17359                           ;LoRaWanCore.c: 407: }
 17360                           ;LoRaWanCore.c: 408: }
 17361                           ;LoRaWanCore.c: 409: if ((tamFrame>=100) || (b==0x0A))
 17362  002130  0E64               	movlw	100
 17363  002132  605A               	cpfslt	_tamFrame,c	;volatile
 17364  002134  D004               	goto	i2u899_40
 17365  002136  0E0A               	movlw	10
 17366  002138  1810               	xorwf	recebeByteLoRaWan@b,w,c
 17367  00213A  A4D8               	btfss	status,2,c
 17368  00213C  0012               	return	
 17369  00213E                     i2u899_40:
 17370                           
 17371                           ;LoRaWanCore.c: 410: {
 17372                           ;LoRaWanCore.c: 411: tamFrame=0;
 17373  00213E  0E00               	movlw	0
 17374  002140  6E5A               	movwf	_tamFrame,c	;volatile
 17375  002142  0012               	return	
 17376  002144                     __end_of_recebeByteLoRaWan:
 17377                           	opt stack 0
 17378                           pclatu	equ	0xFFB
 17379                           pclath	equ	0xFFA
 17380                           tblptru	equ	0xFF8
 17381                           tblptrh	equ	0xFF7
 17382                           tblptrl	equ	0xFF6
 17383                           tablat	equ	0xFF5
 17384                           prodh	equ	0xFF4
 17385                           prodl	equ	0xFF3
 17386                           intcon	equ	0xFF2
 17387                           indf0	equ	0xFEF
 17388                           postinc0	equ	0xFEE
 17389                           fsr0h	equ	0xFEA
 17390                           fsr0l	equ	0xFE9
 17391                           wreg	equ	0xFE8
 17392                           indf1	equ	0xFE7
 17393                           postdec1	equ	0xFE5
 17394                           fsr1h	equ	0xFE2
 17395                           fsr1l	equ	0xFE1
 17396                           indf2	equ	0xFDF
 17397                           postinc2	equ	0xFDE
 17398                           postdec2	equ	0xFDD
 17399                           plusw2	equ	0xFDB
 17400                           fsr2h	equ	0xFDA
 17401                           fsr2l	equ	0xFD9
 17402                           status	equ	0xFD8
 17403                           
 17404 ;; *************** function i2_strlen *****************
 17405 ;; Defined at:
 17406 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strlen.c"
 17407 ;; Parameters:    Size  Location     Type
 17408 ;;  s               2    0[COMRAM] PTR const unsigned char 
 17409 ;;		 -> recebeByteLoRaWan@frameData(100), SYS(5), MAC(5), TxLoRaWan@comando(200), 
 17410 ;;		 -> DataRate@comando(12), SetBandWidth@comando(20), SetSpreadingFactor@comando(20), MacSave@comando(7), 
 17411 ;;		 -> GetAdr@comando(10), SetAdr@comando(15), SetChannelLoRaWan@comando(25), MAC_JOIN_OTAA(10), 
 17412 ;;		 -> SYS_RESET(6), SetAppKey@comando(50), SetAppEUI@comando(32), SetDevEUI@comando(32), 
 17413 ;;		 -> GetDnctr@comando(100), STR_26(16), STR_25(7), STR_24(14), 
 17414 ;;		 -> STR_23(8), STR_22(8), STR_21(10), STR_20(17), 
 17415 ;;		 -> STR_19(11), STR_18(5), STR_17(32), STR_16(7), 
 17416 ;;		 -> STR_15(11), STR_14(11), STR_13(14), STR_12(3), 
 17417 ;; Auto vars:     Size  Location     Type
 17418 ;;  strlen          2    4[COMRAM] PTR const unsigned char 
 17419 ;;		 -> recebeByteLoRaWan@frameData(100), SYS(5), MAC(5), TxLoRaWan@comando(200), 
 17420 ;;		 -> DataRate@comando(12), SetBandWidth@comando(20), SetSpreadingFactor@comando(20), MacSave@comando(7), 
 17421 ;;		 -> GetAdr@comando(10), SetAdr@comando(15), SetChannelLoRaWan@comando(25), MAC_JOIN_OTAA(10), 
 17422 ;;		 -> SYS_RESET(6), SetAppKey@comando(50), SetAppEUI@comando(32), SetDevEUI@comando(32), 
 17423 ;;		 -> GetDnctr@comando(100), STR_26(16), STR_25(7), STR_24(14), 
 17424 ;;		 -> STR_23(8), STR_22(8), STR_21(10), STR_20(17), 
 17425 ;;		 -> STR_19(11), STR_18(5), STR_17(32), STR_16(7), 
 17426 ;;		 -> STR_15(11), STR_14(11), STR_13(14), STR_12(3), 
 17427 ;; Return value:  Size  Location     Type
 17428 ;;                  2    0[COMRAM] unsigned int 
 17429 ;; Registers used:
 17430 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 17431 ;; Tracked objects:
 17432 ;;		On entry : 0/0
 17433 ;;		On exit  : 0/0
 17434 ;;		Unchanged: 0/0
 17435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17436 ;;      Params:         2       0       0       0       0       0       0       0       0
 17437 ;;      Locals:         2       0       0       0       0       0       0       0       0
 17438 ;;      Temps:          2       0       0       0       0       0       0       0       0
 17439 ;;      Totals:         6       0       0       0       0       0       0       0       0
 17440 ;;Total ram usage:        6 bytes
 17441 ;; Hardware stack levels used:    1
 17442 ;; This function calls:
 17443 ;;		Nothing
 17444 ;; This function is called by:
 17445 ;;		_recebeByteLoRaWan
 17446 ;; This function uses a non-reentrant model
 17447 ;;
 17448                           
 17449                           	psect	text59
 17450  004D98                     __ptext59:
 17451                           	opt stack 0
 17452  004D98                     i2_strlen:
 17453                           	opt stack 23
 17454                           
 17455                           ;incstack = 0
 17456  004D98  C001  F005         	movff	i2strlen@s,i2strlen@cp
 17457  004D9C  C002  F006         	movff	i2strlen@s+1,i2strlen@cp+1
 17458  004DA0  D002               	goto	i2l3401
 17459  004DA2  4A05               	infsnz	i2strlen@cp,f,c
 17460  004DA4  2A06               	incf	i2strlen@cp+1,f,c
 17461  004DA6                     i2l3401:
 17462  004DA6  C005  FFF6         	movff	i2strlen@cp,tblptrl
 17463  004DAA  C006  FFF7         	movff	i2strlen@cp+1,tblptrh
 17464  004DAE  6AF8               	clrf	tblptru,c
 17465  004DB0  0E07               	movlw	(high __ramtop+-1)
 17466  004DB2  64F7               	cpfsgt	tblptrh,c
 17467  004DB4  D003               	bra	i2u881_47
 17468  004DB6  0008               	tblrd		*
 17469  004DB8  50F5               	movf	tablat,w,c
 17470  004DBA  D005               	bra	i2u881_40
 17471  004DBC                     i2u881_47:
 17472  004DBC  CFF6 FFE9          	movff	tblptrl,fsr0l
 17473  004DC0  CFF7 FFEA          	movff	tblptrh,fsr0h
 17474  004DC4  50EF               	movf	indf0,w,c
 17475  004DC6                     i2u881_40:
 17476  004DC6  0900               	iorlw	0
 17477  004DC8  A4D8               	btfss	status,2,c
 17478  004DCA  D7EB               	goto	i2l3402
 17479  004DCC  C001  F003         	movff	i2strlen@s,??i2_strlen
 17480  004DD0  C002  F004         	movff	i2strlen@s+1,??i2_strlen+1
 17481  004DD4  1E03               	comf	??i2_strlen,f,c
 17482  004DD6  1E04               	comf	??i2_strlen+1,f,c
 17483  004DD8  4A03               	infsnz	??i2_strlen,f,c
 17484  004DDA  2A04               	incf	??i2_strlen+1,f,c
 17485  004DDC  5005               	movf	i2strlen@cp,w,c
 17486  004DDE  2403               	addwf	??i2_strlen,w,c
 17487  004DE0  6E01               	movwf	?i2_strlen,c
 17488  004DE2  5006               	movf	i2strlen@cp+1,w,c
 17489  004DE4  2004               	addwfc	??i2_strlen+1,w,c
 17490  004DE6  6E02               	movwf	?i2_strlen+1,c
 17491  004DE8  0012               	return	
 17492  004DEA                     __end_ofi2_strlen:
 17493                           	opt stack 0
 17494                           pclatu	equ	0xFFB
 17495                           pclath	equ	0xFFA
 17496                           tblptru	equ	0xFF8
 17497                           tblptrh	equ	0xFF7
 17498                           tblptrl	equ	0xFF6
 17499                           tablat	equ	0xFF5
 17500                           prodh	equ	0xFF4
 17501                           prodl	equ	0xFF3
 17502                           intcon	equ	0xFF2
 17503                           indf0	equ	0xFEF
 17504                           postinc0	equ	0xFEE
 17505                           fsr0h	equ	0xFEA
 17506                           fsr0l	equ	0xFE9
 17507                           wreg	equ	0xFE8
 17508                           indf1	equ	0xFE7
 17509                           postdec1	equ	0xFE5
 17510                           fsr1h	equ	0xFE2
 17511                           fsr1l	equ	0xFE1
 17512                           indf2	equ	0xFDF
 17513                           postinc2	equ	0xFDE
 17514                           postdec2	equ	0xFDD
 17515                           plusw2	equ	0xFDB
 17516                           fsr2h	equ	0xFDA
 17517                           fsr2l	equ	0xFD9
 17518                           status	equ	0xFD8
 17519                           
 17520 ;; *************** function _strncmp *****************
 17521 ;; Defined at:
 17522 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strncmp.c"
 17523 ;; Parameters:    Size  Location     Type
 17524 ;;  s1              2    0[COMRAM] PTR const unsigned char 
 17525 ;;		 -> recebeByteLoRaWan@frameData(100), 
 17526 ;;  s2              2    2[COMRAM] PTR const unsigned char 
 17527 ;;		 -> STR_26(16), STR_25(7), STR_24(14), STR_23(8), 
 17528 ;;		 -> STR_22(8), STR_21(10), STR_20(17), STR_19(11), 
 17529 ;;		 -> STR_18(5), STR_17(32), STR_16(7), STR_15(11), 
 17530 ;;		 -> STR_14(11), STR_13(14), STR_12(3), 
 17531 ;;  len             2    4[COMRAM] unsigned int 
 17532 ;; Auto vars:     Size  Location     Type
 17533 ;;		None
 17534 ;; Return value:  Size  Location     Type
 17535 ;;                  2    0[COMRAM] int 
 17536 ;; Registers used:
 17537 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17538 ;; Tracked objects:
 17539 ;;		On entry : 0/0
 17540 ;;		On exit  : 0/0
 17541 ;;		Unchanged: 0/0
 17542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17543 ;;      Params:         6       0       0       0       0       0       0       0       0
 17544 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17545 ;;      Temps:          3       0       0       0       0       0       0       0       0
 17546 ;;      Totals:         9       0       0       0       0       0       0       0       0
 17547 ;;Total ram usage:        9 bytes
 17548 ;; Hardware stack levels used:    1
 17549 ;; This function calls:
 17550 ;;		Nothing
 17551 ;; This function is called by:
 17552 ;;		_recebeByteLoRaWan
 17553 ;; This function uses a non-reentrant model
 17554 ;;
 17555                           
 17556                           	psect	text60
 17557  00492A                     __ptext60:
 17558                           	opt stack 0
 17559  00492A                     _strncmp:
 17560                           	opt stack 23
 17561                           
 17562                           ;incstack = 0
 17563  00492A  D033               	goto	i2l3407
 17564  00492C                     i2l9412:
 17565  00492C  C001  FFD9         	movff	strncmp@s1,fsr2l
 17566  004930  C002  FFDA         	movff	strncmp@s1+1,fsr2h
 17567  004934  50DF               	movf	indf2,w,c
 17568  004936  B4D8               	btfsc	status,2,c
 17569  004938  D00F               	goto	i2u868_40
 17570  00493A  C001  FFD9         	movff	strncmp@s1,fsr2l
 17571  00493E  C002  FFDA         	movff	strncmp@s1+1,fsr2h
 17572  004942  50DF               	movf	indf2,w,c
 17573  004944  6E07               	movwf	??_strncmp& (0+255),c
 17574  004946  C003  FFF6         	movff	strncmp@s2,tblptrl
 17575  00494A  C004  FFF7         	movff	strncmp@s2+1,tblptrh
 17576  00494E                     	if	0	;tblptru may be non-zero
 17577  00494E                     	endif
 17578  00494E                     	if	0	;tblptru may be non-zero
 17579  00494E                     	endif
 17580  00494E  0008               	tblrd		*
 17581  004950  50F5               	movf	tablat,w,c
 17582  004952  1807               	xorwf	??_strncmp,w,c
 17583  004954  B4D8               	btfsc	status,2,c
 17584  004956  D019               	goto	i2l3409
 17585  004958                     i2u868_40:
 17586  004958  C003  FFF6         	movff	strncmp@s2,tblptrl
 17587  00495C  C004  FFF7         	movff	strncmp@s2+1,tblptrh
 17588  004960                     	if	0	;tblptru may be non-zero
 17589  004960                     	endif
 17590  004960                     	if	0	;tblptru may be non-zero
 17591  004960                     	endif
 17592  004960  0008               	tblrd		*
 17593  004962  50F5               	movf	tablat,w,c
 17594  004964  6E07               	movwf	??_strncmp& (0+255),c
 17595  004966  6A08               	clrf	(??_strncmp+1)& (0+255),c
 17596  004968  1E07               	comf	??_strncmp,f,c
 17597  00496A  1E08               	comf	??_strncmp+1,f,c
 17598  00496C  4A07               	infsnz	??_strncmp,f,c
 17599  00496E  2A08               	incf	??_strncmp+1,f,c
 17600  004970  C001  FFD9         	movff	strncmp@s1,fsr2l
 17601  004974  C002  FFDA         	movff	strncmp@s1+1,fsr2h
 17602  004978  50DF               	movf	indf2,w,c
 17603  00497A  6E09               	movwf	(??_strncmp+2)& (0+255),c
 17604  00497C  5009               	movf	??_strncmp+2,w,c
 17605  00497E  2407               	addwf	??_strncmp,w,c
 17606  004980  6E01               	movwf	?_strncmp,c
 17607  004982  0E00               	movlw	0
 17608  004984  2008               	addwfc	??_strncmp+1,w,c
 17609  004986  6E02               	movwf	?_strncmp+1,c
 17610  004988  0012               	return	
 17611  00498A                     i2l3409:
 17612  00498A  4A01               	infsnz	strncmp@s1,f,c
 17613  00498C  2A02               	incf	strncmp@s1+1,f,c
 17614  00498E  4A03               	infsnz	strncmp@s2,f,c
 17615  004990  2A04               	incf	strncmp@s2+1,f,c
 17616  004992                     i2l3407:
 17617  004992  0605               	decf	strncmp@len,f,c
 17618  004994  A0D8               	btfss	status,0,c
 17619  004996  0606               	decf	strncmp@len+1,f,c
 17620  004998  2805               	incf	strncmp@len,w,c
 17621  00499A  E1C8               	bnz	i2l9412
 17622  00499C  2806               	incf	strncmp@len+1,w,c
 17623  00499E  A4D8               	btfss	status,2,c
 17624  0049A0  D7C5               	goto	i2l3408
 17625  0049A2  0E00               	movlw	0
 17626  0049A4  6E02               	movwf	?_strncmp+1,c
 17627  0049A6  0E00               	movlw	0
 17628  0049A8  6E01               	movwf	?_strncmp,c
 17629  0049AA  0012               	return	
 17630  0049AC                     __end_of_strncmp:
 17631                           	opt stack 0
 17632                           pclatu	equ	0xFFB
 17633                           pclath	equ	0xFFA
 17634                           tblptru	equ	0xFF8
 17635                           tblptrh	equ	0xFF7
 17636                           tblptrl	equ	0xFF6
 17637                           tablat	equ	0xFF5
 17638                           prodh	equ	0xFF4
 17639                           prodl	equ	0xFF3
 17640                           intcon	equ	0xFF2
 17641                           indf0	equ	0xFEF
 17642                           postinc0	equ	0xFEE
 17643                           fsr0h	equ	0xFEA
 17644                           fsr0l	equ	0xFE9
 17645                           wreg	equ	0xFE8
 17646                           indf1	equ	0xFE7
 17647                           postdec1	equ	0xFE5
 17648                           fsr1h	equ	0xFE2
 17649                           fsr1l	equ	0xFE1
 17650                           indf2	equ	0xFDF
 17651                           postinc2	equ	0xFDE
 17652                           postdec2	equ	0xFDD
 17653                           plusw2	equ	0xFDB
 17654                           fsr2h	equ	0xFDA
 17655                           fsr2l	equ	0xFD9
 17656                           status	equ	0xFD8
 17657                           
 17658 ;; *************** function _strcpy *****************
 17659 ;; Defined at:
 17660 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strcpy.c"
 17661 ;; Parameters:    Size  Location     Type
 17662 ;;  to              2    0[COMRAM] PTR unsigned char 
 17663 ;;		 -> frameBuffer(150), 
 17664 ;;  from            2    2[COMRAM] PTR const unsigned char 
 17665 ;;		 -> recebeByteLoRaWan@frameData(100), 
 17666 ;; Auto vars:     Size  Location     Type
 17667 ;;  cp              2    4[COMRAM] PTR unsigned char 
 17668 ;;		 -> frameBuffer(150), 
 17669 ;; Return value:  Size  Location     Type
 17670 ;;                  2    0[COMRAM] PTR unsigned char 
 17671 ;; Registers used:
 17672 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 17673 ;; Tracked objects:
 17674 ;;		On entry : 0/0
 17675 ;;		On exit  : 0/0
 17676 ;;		Unchanged: 0/0
 17677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17678 ;;      Params:         4       0       0       0       0       0       0       0       0
 17679 ;;      Locals:         2       0       0       0       0       0       0       0       0
 17680 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17681 ;;      Totals:         6       0       0       0       0       0       0       0       0
 17682 ;;Total ram usage:        6 bytes
 17683 ;; Hardware stack levels used:    1
 17684 ;; This function calls:
 17685 ;;		Nothing
 17686 ;; This function is called by:
 17687 ;;		_recebeByteLoRaWan
 17688 ;; This function uses a non-reentrant model
 17689 ;;
 17690                           
 17691                           	psect	text61
 17692  005376                     __ptext61:
 17693                           	opt stack 0
 17694  005376                     _strcpy:
 17695                           	opt stack 23
 17696                           
 17697                           ;incstack = 0
 17698  005376  C001  F005         	movff	strcpy@to,strcpy@cp
 17699  00537A  C002  F006         	movff	strcpy@to+1,strcpy@cp+1
 17700  00537E  D004               	goto	i2l3395
 17701  005380  4A05               	infsnz	strcpy@cp,f,c
 17702  005382  2A06               	incf	strcpy@cp+1,f,c
 17703  005384  4A03               	infsnz	strcpy@from,f,c
 17704  005386  2A04               	incf	strcpy@from+1,f,c
 17705  005388                     i2l3395:
 17706  005388  C003  FFD9         	movff	strcpy@from,fsr2l
 17707  00538C  C004  FFDA         	movff	strcpy@from+1,fsr2h
 17708  005390  C005  FFE1         	movff	strcpy@cp,fsr1l
 17709  005394  C006  FFE2         	movff	strcpy@cp+1,fsr1h
 17710  005398  CFDF FFE7          	movff	indf2,indf1
 17711  00539C  50E7               	movf	indf1,w,c
 17712  00539E  B4D8               	btfsc	status,2,c
 17713  0053A0  0012               	return	
 17714  0053A2  D7EE               	goto	i2l3396
 17715  0053A4                     __end_of_strcpy:
 17716                           	opt stack 0
 17717                           pclatu	equ	0xFFB
 17718                           pclath	equ	0xFFA
 17719                           tblptru	equ	0xFF8
 17720                           tblptrh	equ	0xFF7
 17721                           tblptrl	equ	0xFF6
 17722                           tablat	equ	0xFF5
 17723                           prodh	equ	0xFF4
 17724                           prodl	equ	0xFF3
 17725                           intcon	equ	0xFF2
 17726                           indf0	equ	0xFEF
 17727                           postinc0	equ	0xFEE
 17728                           fsr0h	equ	0xFEA
 17729                           fsr0l	equ	0xFE9
 17730                           wreg	equ	0xFE8
 17731                           indf1	equ	0xFE7
 17732                           postdec1	equ	0xFE5
 17733                           fsr1h	equ	0xFE2
 17734                           fsr1l	equ	0xFE1
 17735                           indf2	equ	0xFDF
 17736                           postinc2	equ	0xFDE
 17737                           postdec2	equ	0xFDD
 17738                           plusw2	equ	0xFDB
 17739                           fsr2h	equ	0xFDA
 17740                           fsr2l	equ	0xFD9
 17741                           status	equ	0xFD8
 17742                           
 17743 ;; *************** function _strcmp *****************
 17744 ;; Defined at:
 17745 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strcmp.c"
 17746 ;; Parameters:    Size  Location     Type
 17747 ;;  s1              2    0[COMRAM] PTR const unsigned char 
 17748 ;;		 -> recebeByteLoRaWan@frameData(100), 
 17749 ;;  s2              2    2[COMRAM] PTR const unsigned char 
 17750 ;;		 -> STR_26(16), STR_25(7), STR_24(14), STR_23(8), 
 17751 ;;		 -> STR_22(8), STR_21(10), STR_20(17), STR_19(11), 
 17752 ;;		 -> STR_18(5), STR_17(32), STR_16(7), STR_15(11), 
 17753 ;;		 -> STR_14(11), STR_13(14), STR_12(3), 
 17754 ;; Auto vars:     Size  Location     Type
 17755 ;;  r               1    5[COMRAM] char 
 17756 ;; Return value:  Size  Location     Type
 17757 ;;                  2    0[COMRAM] int 
 17758 ;; Registers used:
 17759 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17760 ;; Tracked objects:
 17761 ;;		On entry : 0/0
 17762 ;;		On exit  : 0/0
 17763 ;;		Unchanged: 0/0
 17764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17765 ;;      Params:         4       0       0       0       0       0       0       0       0
 17766 ;;      Locals:         1       0       0       0       0       0       0       0       0
 17767 ;;      Temps:          1       0       0       0       0       0       0       0       0
 17768 ;;      Totals:         6       0       0       0       0       0       0       0       0
 17769 ;;Total ram usage:        6 bytes
 17770 ;; Hardware stack levels used:    1
 17771 ;; This function calls:
 17772 ;;		Nothing
 17773 ;; This function is called by:
 17774 ;;		_recebeByteLoRaWan
 17775 ;; This function uses a non-reentrant model
 17776 ;;
 17777                           
 17778                           	psect	text62
 17779  004E3A                     __ptext62:
 17780                           	opt stack 0
 17781  004E3A                     _strcmp:
 17782                           	opt stack 23
 17783                           
 17784                           ;incstack = 0
 17785  004E3A  D004               	goto	i2l3387
 17786  004E3C  4A01               	infsnz	strcmp@s1,f,c
 17787  004E3E  2A02               	incf	strcmp@s1+1,f,c
 17788  004E40  4A03               	infsnz	strcmp@s2,f,c
 17789  004E42  2A04               	incf	strcmp@s2+1,f,c
 17790  004E44                     i2l3387:
 17791  004E44  C001  FFD9         	movff	strcmp@s1,fsr2l
 17792  004E48  C002  FFDA         	movff	strcmp@s1+1,fsr2h
 17793  004E4C  50DF               	movf	indf2,w,c
 17794  004E4E  6E05               	movwf	??_strcmp& (0+255),c
 17795  004E50  C003  FFF6         	movff	strcmp@s2,tblptrl
 17796  004E54  C004  FFF7         	movff	strcmp@s2+1,tblptrh
 17797  004E58                     	if	0	;tblptru may be non-zero
 17798  004E58                     	endif
 17799  004E58                     	if	0	;tblptru may be non-zero
 17800  004E58                     	endif
 17801  004E58  0008               	tblrd		*
 17802  004E5A  50F5               	movf	tablat,w,c
 17803  004E5C  0800               	sublw	0
 17804  004E5E  2405               	addwf	??_strcmp,w,c
 17805  004E60  6E06               	movwf	strcmp@r,c
 17806  004E62  5006               	movf	strcmp@r,w,c
 17807  004E64  A4D8               	btfss	status,2,c
 17808  004E66  D007               	goto	i2u866_40
 17809  004E68  C001  FFD9         	movff	strcmp@s1,fsr2l
 17810  004E6C  C002  FFDA         	movff	strcmp@s1+1,fsr2h
 17811  004E70  50DF               	movf	indf2,w,c
 17812  004E72  A4D8               	btfss	status,2,c
 17813  004E74  D7E3               	goto	i2l3388
 17814  004E76                     i2u866_40:
 17815  004E76  5006               	movf	strcmp@r,w,c
 17816  004E78  6E01               	movwf	?_strcmp,c
 17817  004E7A  6A02               	clrf	?_strcmp+1,c
 17818  004E7C  BE01               	btfsc	?_strcmp,7,c
 17819  004E7E  0602               	decf	?_strcmp+1,f,c
 17820  004E80  0012               	return	
 17821  004E82                     __end_of_strcmp:
 17822                           	opt stack 0
 17823                           pclatu	equ	0xFFB
 17824                           pclath	equ	0xFFA
 17825                           tblptru	equ	0xFF8
 17826                           tblptrh	equ	0xFF7
 17827                           tblptrl	equ	0xFF6
 17828                           tablat	equ	0xFF5
 17829                           prodh	equ	0xFF4
 17830                           prodl	equ	0xFF3
 17831                           intcon	equ	0xFF2
 17832                           indf0	equ	0xFEF
 17833                           postinc0	equ	0xFEE
 17834                           fsr0h	equ	0xFEA
 17835                           fsr0l	equ	0xFE9
 17836                           wreg	equ	0xFE8
 17837                           indf1	equ	0xFE7
 17838                           postdec1	equ	0xFE5
 17839                           fsr1h	equ	0xFE2
 17840                           fsr1l	equ	0xFE1
 17841                           indf2	equ	0xFDF
 17842                           postinc2	equ	0xFDE
 17843                           postdec2	equ	0xFDD
 17844                           plusw2	equ	0xFDB
 17845                           fsr2h	equ	0xFDA
 17846                           fsr2l	equ	0xFD9
 17847                           status	equ	0xFD8
 17848                           
 17849 ;; *************** function _converter *****************
 17850 ;; Defined at:
 17851 ;;		line 361 in file "XBeeCore.c"
 17852 ;; Parameters:    Size  Location     Type
 17853 ;;  conv1           1    wreg     unsigned char 
 17854 ;;  conv2           1    1[COMRAM] unsigned char 
 17855 ;; Auto vars:     Size  Location     Type
 17856 ;;  conv1           1    5[COMRAM] unsigned char 
 17857 ;;  aux2            1    4[COMRAM] unsigned char 
 17858 ;;  aux             1    3[COMRAM] unsigned char 
 17859 ;;  resul           1    2[COMRAM] unsigned char 
 17860 ;; Return value:  Size  Location     Type
 17861 ;;                  1    wreg      unsigned char 
 17862 ;; Registers used:
 17863 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 17864 ;; Tracked objects:
 17865 ;;		On entry : 0/0
 17866 ;;		On exit  : 0/0
 17867 ;;		Unchanged: 0/0
 17868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17869 ;;      Params:         1       0       0       0       0       0       0       0       0
 17870 ;;      Locals:         4       0       0       0       0       0       0       0       0
 17871 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17872 ;;      Totals:         5       0       0       0       0       0       0       0       0
 17873 ;;Total ram usage:        5 bytes
 17874 ;; Hardware stack levels used:    1
 17875 ;; Hardware stack levels required when called:    1
 17876 ;; This function calls:
 17877 ;;		_toupper
 17878 ;; This function is called by:
 17879 ;;		_recebeByteLoRaWan
 17880 ;;		_send
 17881 ;; This function uses a non-reentrant model
 17882 ;;
 17883                           
 17884                           	psect	text63
 17885  004820                     __ptext63:
 17886                           	opt stack 0
 17887  004820                     _converter:
 17888                           	opt stack 22
 17889                           
 17890                           ;incstack = 0
 17891                           ;converter@conv1 stored from wreg
 17892  004820  6E06               	movwf	converter@conv1,c
 17893                           
 17894                           ;XBeeCore.c: 363: uint8_t aux=0;
 17895  004822  0E00               	movlw	0
 17896  004824  6E04               	movwf	converter@aux,c
 17897                           
 17898                           ;XBeeCore.c: 364: uint8_t aux2=0;
 17899  004826  0E00               	movlw	0
 17900  004828  6E05               	movwf	converter@aux2,c
 17901                           
 17902                           ;XBeeCore.c: 365: uint8_t resul=0;
 17903  00482A  0E00               	movlw	0
 17904  00482C  6E03               	movwf	converter@resul,c
 17905                           
 17906                           ;XBeeCore.c: 368: conv1=toupper(conv1);
 17907  00482E  5006               	movf	converter@conv1,w,c
 17908  004830  EC87  F02A         	call	_toupper
 17909  004834  6E06               	movwf	converter@conv1,c
 17910                           
 17911                           ;XBeeCore.c: 369: conv2=toupper(conv2);
 17912  004836  5002               	movf	converter@conv2,w,c
 17913  004838  EC87  F02A         	call	_toupper
 17914  00483C  6E02               	movwf	converter@conv2,c
 17915                           
 17916                           ;XBeeCore.c: 371: if ((conv1>='0') && (conv1<='9'))
 17917  00483E  0E2F               	movlw	47
 17918  004840  6406               	cpfsgt	converter@conv1,c
 17919  004842  D006               	goto	i2l1476
 17920  004844  0E3A               	movlw	58
 17921  004846  6006               	cpfslt	converter@conv1,c
 17922  004848  D003               	goto	i2l1476
 17923                           
 17924                           ;XBeeCore.c: 372: {
 17925                           ;XBeeCore.c: 373: aux=conv1-'0';
 17926  00484A  5006               	movf	converter@conv1,w,c
 17927  00484C  0FD0               	addlw	208
 17928  00484E  D008               	goto	L15
 17929  004850                     i2l1476:
 17930                           
 17931                           ;XBeeCore.c: 375: else if ((conv1>='A') && (conv1<='F'))
 17932  004850  0E40               	movlw	64
 17933  004852  6406               	cpfsgt	converter@conv1,c
 17934  004854  D006               	goto	i2l1478
 17935  004856  0E47               	movlw	71
 17936  004858  6006               	cpfslt	converter@conv1,c
 17937  00485A  D003               	goto	i2l1478
 17938                           
 17939                           ;XBeeCore.c: 376: {
 17940                           ;XBeeCore.c: 377: aux=conv1-'A'+10;
 17941  00485C  5006               	movf	converter@conv1,w,c
 17942  00485E  0FC9               	addlw	201
 17943  004860                     L15:
 17944  004860  6E04               	movwf	converter@aux,c
 17945  004862                     i2l1478:
 17946                           
 17947                           ;XBeeCore.c: 378: }
 17948                           ;XBeeCore.c: 380: if ((conv2>='0') && (conv2<='9'))
 17949  004862  0E2F               	movlw	47
 17950  004864  6402               	cpfsgt	converter@conv2,c
 17951  004866  D006               	goto	i2l1479
 17952  004868  0E3A               	movlw	58
 17953  00486A  6002               	cpfslt	converter@conv2,c
 17954  00486C  D003               	goto	i2l1479
 17955                           
 17956                           ;XBeeCore.c: 381: {
 17957                           ;XBeeCore.c: 382: aux2=conv2-'0';
 17958  00486E  5002               	movf	converter@conv2,w,c
 17959  004870  0FD0               	addlw	208
 17960  004872  D00A               	goto	L17
 17961  004874                     i2l1479:
 17962                           
 17963                           ;XBeeCore.c: 384: else if ((conv2>='A') && (conv2<='F'))
 17964  004874  0E40               	movlw	64
 17965  004876  6402               	cpfsgt	converter@conv2,c
 17966  004878  D006               	goto	i2l1481
 17967  00487A  0E47               	movlw	71
 17968  00487C  6002               	cpfslt	converter@conv2,c
 17969  00487E  D003               	goto	i2l1481
 17970                           
 17971                           ;XBeeCore.c: 385: {
 17972                           ;XBeeCore.c: 386: aux2=conv2-'A'+10;
 17973  004880  5002               	movf	converter@conv2,w,c
 17974  004882  0FC9               	addlw	201
 17975  004884  D001               	goto	L17
 17976  004886                     i2l1481:
 17977                           
 17978                           ;XBeeCore.c: 388: else
 17979                           ;XBeeCore.c: 389: {
 17980                           ;XBeeCore.c: 390: aux2=100;
 17981  004886  0E64               	movlw	100
 17982  004888                     L17:
 17983  004888  6E05               	movwf	converter@aux2,c
 17984                           
 17985                           ;XBeeCore.c: 391: }
 17986                           ;XBeeCore.c: 393: if(aux2==100)
 17987  00488A  0E64               	movlw	100
 17988  00488C  1805               	xorwf	converter@aux2,w,c
 17989  00488E  A4D8               	btfss	status,2,c
 17990  004890  D003               	goto	i2l1483
 17991                           
 17992                           ;XBeeCore.c: 394: {
 17993                           ;XBeeCore.c: 395: resul=aux;
 17994  004892  C004  F003         	movff	converter@aux,converter@resul
 17995                           
 17996                           ;XBeeCore.c: 396: }
 17997  004896  D005               	goto	i2l1484
 17998  004898                     i2l1483:
 17999                           
 18000                           ;XBeeCore.c: 397: else
 18001                           ;XBeeCore.c: 398: {
 18002                           ;XBeeCore.c: 399: resul=(uint8_t)((aux*16)+aux2);
 18003  004898  5004               	movf	converter@aux,w,c
 18004  00489A  0D10               	mullw	16
 18005  00489C  50F3               	movf	prodl,w,c
 18006  00489E  2405               	addwf	converter@aux2,w,c
 18007  0048A0  6E03               	movwf	converter@resul,c
 18008  0048A2                     i2l1484:
 18009                           
 18010                           ;XBeeCore.c: 400: }
 18011                           ;XBeeCore.c: 401: return resul;
 18012  0048A2  5003               	movf	converter@resul,w,c
 18013  0048A4  0012               	return	
 18014  0048A6                     __end_of_converter:
 18015                           	opt stack 0
 18016                           pclatu	equ	0xFFB
 18017                           pclath	equ	0xFFA
 18018                           tblptru	equ	0xFF8
 18019                           tblptrh	equ	0xFF7
 18020                           tblptrl	equ	0xFF6
 18021                           tablat	equ	0xFF5
 18022                           prodh	equ	0xFF4
 18023                           prodl	equ	0xFF3
 18024                           intcon	equ	0xFF2
 18025                           indf0	equ	0xFEF
 18026                           postinc0	equ	0xFEE
 18027                           fsr0h	equ	0xFEA
 18028                           fsr0l	equ	0xFE9
 18029                           wreg	equ	0xFE8
 18030                           indf1	equ	0xFE7
 18031                           postdec1	equ	0xFE5
 18032                           fsr1h	equ	0xFE2
 18033                           fsr1l	equ	0xFE1
 18034                           indf2	equ	0xFDF
 18035                           postinc2	equ	0xFDE
 18036                           postdec2	equ	0xFDD
 18037                           plusw2	equ	0xFDB
 18038                           fsr2h	equ	0xFDA
 18039                           fsr2l	equ	0xFD9
 18040                           status	equ	0xFD8
 18041                           
 18042 ;; *************** function _toupper *****************
 18043 ;; Defined at:
 18044 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\toupper.c"
 18045 ;; Parameters:    Size  Location     Type
 18046 ;;  c               1    wreg     unsigned char 
 18047 ;; Auto vars:     Size  Location     Type
 18048 ;;  c               1    0[COMRAM] unsigned char 
 18049 ;; Return value:  Size  Location     Type
 18050 ;;                  1    wreg      unsigned char 
 18051 ;; Registers used:
 18052 ;;		wreg, status,2, status,0
 18053 ;; Tracked objects:
 18054 ;;		On entry : 0/0
 18055 ;;		On exit  : 0/0
 18056 ;;		Unchanged: 0/0
 18057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18058 ;;      Params:         0       0       0       0       0       0       0       0       0
 18059 ;;      Locals:         1       0       0       0       0       0       0       0       0
 18060 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18061 ;;      Totals:         1       0       0       0       0       0       0       0       0
 18062 ;;Total ram usage:        1 bytes
 18063 ;; Hardware stack levels used:    1
 18064 ;; This function calls:
 18065 ;;		Nothing
 18066 ;; This function is called by:
 18067 ;;		_converter
 18068 ;; This function uses a non-reentrant model
 18069 ;;
 18070                           
 18071                           	psect	text64
 18072  00550E                     __ptext64:
 18073                           	opt stack 0
 18074  00550E                     _toupper:
 18075                           	opt stack 22
 18076                           
 18077                           ;incstack = 0
 18078                           ;toupper@c stored from wreg
 18079  00550E  6E01               	movwf	toupper@c,c
 18080  005510  0E7B               	movlw	123
 18081  005512  6001               	cpfslt	toupper@c,c
 18082  005514  D004               	goto	i2l3416
 18083  005516  0E60               	movlw	96
 18084  005518  6401               	cpfsgt	toupper@c,c
 18085  00551A  D001               	goto	i2l3416
 18086  00551C  9A01               	bcf	toupper@c,5,c
 18087  00551E                     i2l3416:
 18088  00551E  5001               	movf	toupper@c,w,c
 18089  005520  0012               	return	
 18090  005522                     __end_of_toupper:
 18091                           	opt stack 0
 18092                           pclatu	equ	0xFFB
 18093                           pclath	equ	0xFFA
 18094                           tblptru	equ	0xFF8
 18095                           tblptrh	equ	0xFF7
 18096                           tblptrl	equ	0xFF6
 18097                           tablat	equ	0xFF5
 18098                           prodh	equ	0xFF4
 18099                           prodl	equ	0xFF3
 18100                           intcon	equ	0xFF2
 18101                           indf0	equ	0xFEF
 18102                           postinc0	equ	0xFEE
 18103                           fsr0h	equ	0xFEA
 18104                           fsr0l	equ	0xFE9
 18105                           wreg	equ	0xFE8
 18106                           indf1	equ	0xFE7
 18107                           postdec1	equ	0xFE5
 18108                           fsr1h	equ	0xFE2
 18109                           fsr1l	equ	0xFE1
 18110                           indf2	equ	0xFDF
 18111                           postinc2	equ	0xFDE
 18112                           postdec2	equ	0xFDD
 18113                           plusw2	equ	0xFDB
 18114                           fsr2h	equ	0xFDA
 18115                           fsr2l	equ	0xFD9
 18116                           status	equ	0xFD8
 18117                           
 18118 ;; *************** function _getch *****************
 18119 ;; Defined at:
 18120 ;;		line 52 in file "uart/uart.c"
 18121 ;; Parameters:    Size  Location     Type
 18122 ;;		None
 18123 ;; Auto vars:     Size  Location     Type
 18124 ;;  data            1    2[COMRAM] unsigned char 
 18125 ;;  RC              1    1[COMRAM] unsigned char 
 18126 ;; Return value:  Size  Location     Type
 18127 ;;                  1    wreg      unsigned char 
 18128 ;; Registers used:
 18129 ;;		wreg, status,2, status,0
 18130 ;; Tracked objects:
 18131 ;;		On entry : 0/0
 18132 ;;		On exit  : 0/0
 18133 ;;		Unchanged: 0/0
 18134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18135 ;;      Params:         0       0       0       0       0       0       0       0       0
 18136 ;;      Locals:         2       0       0       0       0       0       0       0       0
 18137 ;;      Temps:          1       0       0       0       0       0       0       0       0
 18138 ;;      Totals:         3       0       0       0       0       0       0       0       0
 18139 ;;Total ram usage:        3 bytes
 18140 ;; Hardware stack levels used:    1
 18141 ;; This function calls:
 18142 ;;		Nothing
 18143 ;; This function is called by:
 18144 ;;		_SYS_InterruptHigh
 18145 ;;		_flush
 18146 ;;		_parse_message
 18147 ;; This function uses a non-reentrant model
 18148 ;;
 18149                           
 18150                           	psect	text65
 18151  00546A                     __ptext65:
 18152                           	opt stack 0
 18153  00546A                     _getch:
 18154                           	opt stack 24
 18155                           
 18156                           ;uart.c: 54: uint8_t RC;
 18157                           ;uart.c: 55: char data;
 18158                           ;uart.c: 57: if (!RCIF)
 18159                           
 18160                           ;incstack = 0
 18161  00546A  BA9E               	btfsc	3998,5,c	;volatile
 18162  00546C  D002               	goto	i2l1221
 18163                           
 18164                           ;uart.c: 58: return 0;
 18165  00546E  0E00               	movlw	0
 18166  005470  0012               	return	
 18167  005472                     i2l1221:
 18168                           
 18169                           ;uart.c: 60: RC=RCSTA;
 18170  005472  CFAB F002          	movff	4011,getch@RC	;volatile
 18171                           
 18172                           ;uart.c: 61: data=RCREG;
 18173  005476  CFAE F003          	movff	4014,getch@data	;volatile
 18174                           
 18175                           ;uart.c: 64: if ((RC & 0x06)!=0)
 18176  00547A  C002  F001         	movff	getch@RC,??_getch
 18177  00547E  0E06               	movlw	6
 18178  005480  1601               	andwf	??_getch,f,c
 18179  005482  B4D8               	btfsc	status,2,c
 18180  005484  D003               	goto	i2l1223
 18181                           
 18182                           ;uart.c: 65: {
 18183                           ;uart.c: 66: RCSTAbits.CREN=0;
 18184  005486  98AB               	bcf	4011,4,c	;volatile
 18185                           
 18186                           ;uart.c: 67: __nop();
 18187  005488  F000               	nop	
 18188                           
 18189                           ;uart.c: 68: RCSTAbits.CREN=1;
 18190  00548A  88AB               	bsf	4011,4,c	;volatile
 18191  00548C                     i2l1223:
 18192                           
 18193                           ;uart.c: 69: }
 18194                           ;uart.c: 71: return data;
 18195  00548C  5003               	movf	getch@data,w,c
 18196  00548E  0012               	return	
 18197  005490                     __end_of_getch:
 18198                           	opt stack 0
 18199                           pclatu	equ	0xFFB
 18200                           pclath	equ	0xFFA
 18201                           tblptru	equ	0xFF8
 18202                           tblptrh	equ	0xFF7
 18203                           tblptrl	equ	0xFF6
 18204                           tablat	equ	0xFF5
 18205                           prodh	equ	0xFF4
 18206                           prodl	equ	0xFF3
 18207                           intcon	equ	0xFF2
 18208                           indf0	equ	0xFEF
 18209                           postinc0	equ	0xFEE
 18210                           fsr0h	equ	0xFEA
 18211                           fsr0l	equ	0xFE9
 18212                           wreg	equ	0xFE8
 18213                           indf1	equ	0xFE7
 18214                           postdec1	equ	0xFE5
 18215                           fsr1h	equ	0xFE2
 18216                           fsr1l	equ	0xFE1
 18217                           indf2	equ	0xFDF
 18218                           postinc2	equ	0xFDE
 18219                           postdec2	equ	0xFDD
 18220                           plusw2	equ	0xFDB
 18221                           fsr2h	equ	0xFDA
 18222                           fsr2l	equ	0xFD9
 18223                           status	equ	0xFD8
 18224                           
 18225 ;; *************** function _USBDeviceTasks *****************
 18226 ;; Defined at:
 18227 ;;		line 477 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 18228 ;; Parameters:    Size  Location     Type
 18229 ;;		None
 18230 ;; Auto vars:     Size  Location     Type
 18231 ;;  i               1   27[COMRAM] unsigned char 
 18232 ;; Return value:  Size  Location     Type
 18233 ;;                  1    wreg      void 
 18234 ;; Registers used:
 18235 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18236 ;; Tracked objects:
 18237 ;;		On entry : 0/0
 18238 ;;		On exit  : 0/0
 18239 ;;		Unchanged: 0/0
 18240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18241 ;;      Params:         0       0       0       0       0       0       0       0       0
 18242 ;;      Locals:         1       0       0       0       0       0       0       0       0
 18243 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18244 ;;      Totals:         1       0       0       0       0       0       0       0       0
 18245 ;;Total ram usage:        1 bytes
 18246 ;; Hardware stack levels used:    1
 18247 ;; Hardware stack levels required when called:    8
 18248 ;; This function calls:
 18249 ;;		_USBCtrlEPAllowStatusStage
 18250 ;;		_USBCtrlEPService
 18251 ;;		_USBIncrement1msInternalTimers
 18252 ;;		_USBStallHandler
 18253 ;;		_USBSuspend
 18254 ;;		_USBWakeFromSuspend
 18255 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 18256 ;;		i2_USBDeviceInit
 18257 ;; This function is called by:
 18258 ;;		_SYS_InterruptHigh
 18259 ;; This function uses a non-reentrant model
 18260 ;;
 18261                           
 18262                           	psect	text66
 18263  002D60                     __ptext66:
 18264                           	opt stack 0
 18265  002D60                     _USBDeviceTasks:
 18266                           	opt stack 16
 18267                           
 18268                           ;usb_device.c: 479: uint8_t i;
 18269                           ;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 18270                           
 18271                           ;incstack = 0
 18272  002D60  0458               	decf	_USBDeviceState,w,c	;volatile
 18273  002D62  B4D8               	btfsc	status,2,c
 18274                           
 18275                           ;usb_device.c: 591: {
 18276                           ;usb_device.c: 601: if(!UCONbits.SE0)
 18277  002D64  BA6D               	btfsc	3949,5,c	;volatile
 18278  002D66  D006               	goto	i2l408
 18279                           
 18280                           ;usb_device.c: 602: {
 18281                           ;usb_device.c: 608: {UIR = 0;};
 18282  002D68  0E00               	movlw	0
 18283  002D6A  6E68               	movwf	3944,c	;volatile
 18284                           
 18285                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 18286  002D6C  8069               	bsf	3945,0,c	;volatile
 18287                           
 18288                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 18289  002D6E  8869               	bsf	3945,4,c	;volatile
 18290                           
 18291                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 18292  002D70  0E02               	movlw	2
 18293  002D72  6E58               	movwf	_USBDeviceState,c	;volatile
 18294  002D74                     i2l408:
 18295                           
 18296                           ;usb_device.c: 617: }
 18297                           ;usb_device.c: 618: }
 18298                           ;usb_device.c: 634: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 18299  002D74  B468               	btfsc	3944,2,c	;volatile
 18300  002D76  A469               	btfss	3945,2,c	;volatile
 18301  002D78  D003               	goto	i2l409
 18302                           
 18303                           ;usb_device.c: 635: {
 18304                           ;usb_device.c: 636: (UIR &= 0xFB);
 18305  002D7A  9468               	bcf	3944,2,c	;volatile
 18306                           
 18307                           ;usb_device.c: 640: USBWakeFromSuspend();
 18308  002D7C  EC3E  F029         	call	_USBWakeFromSuspend	;wreg free
 18309  002D80                     i2l409:
 18310                           
 18311                           ;usb_device.c: 642: }
 18312                           ;usb_device.c: 647: if(UCONbits.SUSPND==1)
 18313  002D80  A26D               	btfss	3949,1,c	;volatile
 18314  002D82  D002               	goto	i2l410
 18315                           
 18316                           ;usb_device.c: 648: {
 18317                           ;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 18318  002D84  9AA1               	bcf	4001,5,c	;volatile
 18319                           
 18320                           ;usb_device.c: 650: return;
 18321  002D86  0012               	return	
 18322  002D88                     i2l410:
 18323                           
 18324                           ;usb_device.c: 651: }
 18325                           ;usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 18326  002D88  B068               	btfsc	3944,0,c	;volatile
 18327  002D8A  A069               	btfss	3945,0,c	;volatile
 18328  002D8C  D006               	goto	i2l412
 18329                           
 18330                           ;usb_device.c: 664: {
 18331                           ;usb_device.c: 665: USBDeviceInit();
 18332  002D8E  EC76  F015         	call	i2_USBDeviceInit	;wreg free
 18333                           
 18334                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
 18335  002D92  8AA0               	bsf	4000,5,c	;volatile
 18336                           
 18337                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 18338  002D94  0E04               	movlw	4
 18339  002D96  6E58               	movwf	_USBDeviceState,c	;volatile
 18340                           
 18341                           ;usb_device.c: 681: (UIR &= 0xFE);
 18342  002D98  9068               	bcf	3944,0,c	;volatile
 18343  002D9A                     i2l412:
 18344                           
 18345                           ;usb_device.c: 682: }
 18346                           ;usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 18347  002D9A  B868               	btfsc	3944,4,c	;volatile
 18348  002D9C  A869               	btfss	3945,4,c	;volatile
 18349  002D9E  D002               	goto	i2l413
 18350                           
 18351                           ;usb_device.c: 688: {
 18352                           ;usb_device.c: 694: USBSuspend();
 18353  002DA0  ECA3  F029         	call	_USBSuspend	;wreg free
 18354  002DA4                     i2l413:
 18355                           
 18356                           ;usb_device.c: 696: }
 18357                           ;usb_device.c: 708: if(UIRbits.SOFIF)
 18358  002DA4  AC68               	btfss	3944,6,c	;volatile
 18359  002DA6  D01A               	goto	i2l417
 18360                           
 18361                           ;usb_device.c: 709: {
 18362                           ;usb_device.c: 711: if(UIEbits.SOFIE)
 18363  002DA8  AC69               	btfss	3945,6,c	;volatile
 18364  002DAA  D00E               	goto	i2l415
 18365                           
 18366                           ;usb_device.c: 712: {
 18367                           ;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 18368  002DAC  0E00               	movlw	0
 18369  002DAE  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18370  002DB0  0E73               	movlw	115
 18371  002DB2  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18372  002DB4  0E00               	movlw	0
 18373  002DB6  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 18374  002DB8  0E00               	movlw	0
 18375  002DBA  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 18376  002DBC  0E00               	movlw	0
 18377  002DBE  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18378  002DC0  0E01               	movlw	1
 18379  002DC2  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18380  002DC4  EC73  F026         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18381  002DC8                     i2l415:
 18382                           
 18383                           ;usb_device.c: 714: }
 18384                           ;usb_device.c: 715: (UIR &= 0xBF);
 18385  002DC8  9C68               	bcf	3944,6,c	;volatile
 18386                           
 18387                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 18388  002DCA  EC48  F02A         	call	_USBIncrement1msInternalTimers	;wreg free
 18389                           
 18390                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 18391  002DCE  5054               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 18392  002DD0  A4D8               	btfss	status,2,c
 18393                           
 18394                           ;usb_device.c: 736: {
 18395                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 18396  002DD2  0654               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 18397                           
 18398                           ;usb_device.c: 738: }
 18399                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 18400  002DD4  5054               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 18401  002DD6  B4D8               	btfsc	status,2,c
 18402                           
 18403                           ;usb_device.c: 745: {
 18404                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 18405  002DD8  EC4B  F01F         	call	_USBCtrlEPAllowStatusStage	;wreg free
 18406  002DDC                     i2l417:
 18407                           
 18408                           ;usb_device.c: 747: }
 18409                           ;usb_device.c: 749: }
 18410                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
 18411  002DDC  BA68               	btfsc	3944,5,c	;volatile
 18412  002DDE  AA69               	btfss	3945,5,c	;volatile
 18413  002DE0  D002               	goto	i2l418
 18414                           
 18415                           ;usb_device.c: 752: {
 18416                           ;usb_device.c: 753: USBStallHandler();
 18417  002DE2  EC0E  F028         	call	_USBStallHandler	;wreg free
 18418  002DE6                     i2l418:
 18419                           
 18420                           ;usb_device.c: 754: }
 18421                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 18422  002DE6  B268               	btfsc	3944,1,c	;volatile
 18423  002DE8  A269               	btfss	3945,1,c	;volatile
 18424  002DEA  D00F               	goto	i2l419
 18425                           
 18426                           ;usb_device.c: 757: {
 18427                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 18428  002DEC  0E7F               	movlw	127
 18429  002DEE  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18430  002DF0  680D               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18431  002DF2  0E00               	movlw	0
 18432  002DF4  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 18433  002DF6  0E00               	movlw	0
 18434  002DF8  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 18435  002DFA  0E00               	movlw	0
 18436  002DFC  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18437  002DFE  0E01               	movlw	1
 18438  002E00  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18439  002E02  EC73  F026         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18440                           
 18441                           ;usb_device.c: 759: {UEIR = 0;};
 18442  002E06  0E00               	movlw	0
 18443  002E08  6E6A               	movwf	3946,c	;volatile
 18444  002E0A                     i2l419:
 18445                           
 18446                           ;usb_device.c: 767: }
 18447                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 18448  002E0A  0E04               	movlw	4
 18449  002E0C  6058               	cpfslt	_USBDeviceState,c	;volatile
 18450  002E0E  D002               	goto	i2l420
 18451                           
 18452                           ;usb_device.c: 775: {
 18453                           ;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 18454  002E10  9AA1               	bcf	4001,5,c	;volatile
 18455                           
 18456                           ;usb_device.c: 777: return;
 18457  002E12  0012               	return	
 18458  002E14                     i2l420:
 18459                           
 18460                           ;usb_device.c: 778: }
 18461                           ;usb_device.c: 783: if(UIEbits.TRNIE)
 18462  002E14  A669               	btfss	3945,3,c	;volatile
 18463  002E16  D039               	goto	i2u923_40
 18464                           
 18465                           ;usb_device.c: 784: {
 18466                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
 18467  002E18  0E00               	movlw	0
 18468  002E1A  6E1C               	movwf	USBDeviceTasks@i,c
 18469  002E1C                     i2l9752:
 18470  002E1C  0E03               	movlw	3
 18471  002E1E  641C               	cpfsgt	USBDeviceTasks@i,c
 18472  002E20  D001               	goto	i2l422
 18473  002E22  D033               	goto	i2u923_40
 18474  002E24                     i2l422:
 18475                           
 18476                           ;usb_device.c: 786: {
 18477                           ;usb_device.c: 787: if(UIRbits.TRNIF)
 18478  002E24  A668               	btfss	3944,3,c	;volatile
 18479  002E26  D031               	goto	i2u923_40
 18480                           
 18481                           ;usb_device.c: 788: {
 18482                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
 18483  002E28  CF6C F05D          	movff	3948,_USTATcopy	;volatile
 18484                           
 18485                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 18486  002E2C  305D               	rrcf	_USTATcopy,w,c	;volatile
 18487  002E2E  32E8               	rrcf	wreg,f,c
 18488  002E30  32E8               	rrcf	wreg,f,c
 18489  002E32  0B0F               	andlw	15
 18490  002E34  6E55               	movwf	_endpoint_number,c	;volatile
 18491                           
 18492                           ;usb_device.c: 793: (UIR &= 0xF7);
 18493  002E36  9668               	bcf	3944,3,c	;volatile
 18494                           
 18495                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 18496  002E38  B45D               	btfsc	_USTATcopy,2,c	;volatile
 18497  002E3A  D007               	goto	i2l425
 18498                           
 18499                           ;usb_device.c: 799: {
 18500                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 18501  002E3C  5055               	movf	_endpoint_number,w,c	;volatile
 18502  002E3E  0D01               	mullw	1
 18503  002E40  0ED2               	movlw	low _ep_data_out
 18504  002E42  24F3               	addwf	prodl,w,c
 18505  002E44  6ED9               	movwf	fsr2l,c
 18506  002E46  0E02               	movlw	high _ep_data_out
 18507  002E48  D006               	goto	L18
 18508  002E4A                     i2l425:
 18509                           
 18510                           ;usb_device.c: 802: else
 18511                           ;usb_device.c: 803: {
 18512                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 18513                           
 18514                           ; BSR set to: 2
 18515  002E4A  5055               	movf	_endpoint_number,w,c	;volatile
 18516  002E4C  0D01               	mullw	1
 18517  002E4E  0ED5               	movlw	low _ep_data_in
 18518  002E50  24F3               	addwf	prodl,w,c
 18519  002E52  6ED9               	movwf	fsr2l,c
 18520  002E54  0E02               	movlw	high _ep_data_in
 18521  002E56                     L18:
 18522  002E56  20F4               	addwfc	prodh,w,c
 18523  002E58  6EDA               	movwf	fsr2h,c
 18524  002E5A  0102               	movlb	2	; () banked
 18525  002E5C  70DF               	btg	indf2,0,c
 18526                           
 18527                           ; BSR set to: 2
 18528                           ;usb_device.c: 805: }
 18529                           ;usb_device.c: 810: if(endpoint_number == 0)
 18530                           
 18531                           ; BSR set to: 2
 18532  002E5E  5055               	movf	_endpoint_number,w,c	;volatile
 18533  002E60  A4D8               	btfss	status,2,c
 18534  002E62  D003               	goto	i2l427
 18535                           
 18536                           ; BSR set to: 2
 18537                           ;usb_device.c: 811: {
 18538                           ;usb_device.c: 812: USBCtrlEPService();
 18539  002E64  ECA6  F022         	call	_USBCtrlEPService	;wreg free
 18540                           
 18541                           ;usb_device.c: 813: }
 18542  002E68  D00E               	goto	i2l429
 18543  002E6A                     i2l427:
 18544                           
 18545                           ;usb_device.c: 814: else
 18546                           ;usb_device.c: 815: {
 18547                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 18548  002E6A  0E00               	movlw	0
 18549  002E6C  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18550  002E6E  0E72               	movlw	114
 18551  002E70  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18552  002E72  0E5D               	movlw	low _USTATcopy
 18553  002E74  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 18554  002E76  0E00               	movlw	high _USTATcopy
 18555  002E78  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 18556  002E7A  0E00               	movlw	0
 18557  002E7C  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18558  002E7E  0E00               	movlw	0
 18559  002E80  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18560  002E82  EC73  F026         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18561  002E86                     i2l429:
 18562  002E86  2A1C               	incf	USBDeviceTasks@i,f,c
 18563  002E88  D7C9               	goto	i2l9752
 18564  002E8A                     i2u923_40:
 18565                           
 18566                           ;usb_device.c: 822: }
 18567                           ;usb_device.c: 823: }
 18568                           ;usb_device.c: 824: }
 18569                           ;usb_device.c: 826: {PIR2bits.USBIF = 0;};
 18570  002E8A  9AA1               	bcf	4001,5,c	;volatile
 18571  002E8C  0012               	return		;funcret
 18572  002E8E                     __end_of_USBDeviceTasks:
 18573                           	opt stack 0
 18574                           pclatu	equ	0xFFB
 18575                           pclath	equ	0xFFA
 18576                           tblptru	equ	0xFF8
 18577                           tblptrh	equ	0xFF7
 18578                           tblptrl	equ	0xFF6
 18579                           tablat	equ	0xFF5
 18580                           prodh	equ	0xFF4
 18581                           prodl	equ	0xFF3
 18582                           intcon	equ	0xFF2
 18583                           indf0	equ	0xFEF
 18584                           postinc0	equ	0xFEE
 18585                           fsr0h	equ	0xFEA
 18586                           fsr0l	equ	0xFE9
 18587                           wreg	equ	0xFE8
 18588                           indf1	equ	0xFE7
 18589                           postdec1	equ	0xFE5
 18590                           fsr1h	equ	0xFE2
 18591                           fsr1l	equ	0xFE1
 18592                           indf2	equ	0xFDF
 18593                           postinc2	equ	0xFDE
 18594                           postdec2	equ	0xFDD
 18595                           plusw2	equ	0xFDB
 18596                           fsr2h	equ	0xFDA
 18597                           fsr2l	equ	0xFD9
 18598                           status	equ	0xFD8
 18599                           
 18600 ;; *************** function i2_USBDeviceInit *****************
 18601 ;; Defined at:
 18602 ;;		line 277 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 18603 ;; Parameters:    Size  Location     Type
 18604 ;;		None
 18605 ;; Auto vars:     Size  Location     Type
 18606 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 18607 ;; Return value:  Size  Location     Type
 18608 ;;                  1    wreg      void 
 18609 ;; Registers used:
 18610 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18611 ;; Tracked objects:
 18612 ;;		On entry : 0/0
 18613 ;;		On exit  : 0/0
 18614 ;;		Unchanged: 0/0
 18615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18616 ;;      Params:         0       0       0       0       0       0       0       0       0
 18617 ;;      Locals:         1       0       0       0       0       0       0       0       0
 18618 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18619 ;;      Totals:         1       0       0       0       0       0       0       0       0
 18620 ;;Total ram usage:        1 bytes
 18621 ;; Hardware stack levels used:    1
 18622 ;; Hardware stack levels required when called:    1
 18623 ;; This function calls:
 18624 ;;		i2_memset
 18625 ;; This function is called by:
 18626 ;;		_USBDeviceTasks
 18627 ;; This function uses a non-reentrant model
 18628 ;;
 18629                           
 18630                           	psect	text67
 18631  002AEC                     __ptext67:
 18632                           	opt stack 0
 18633  002AEC                     i2_USBDeviceInit:
 18634                           	opt stack 22
 18635                           
 18636                           ;usb_device.c: 279: uint8_t i;
 18637                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 18638                           
 18639                           ;incstack = 0
 18640  002AEC  9AA0               	bcf	4000,5,c	;volatile
 18641                           
 18642                           ;usb_device.c: 285: ;
 18643                           ;usb_device.c: 288: {UEIR = 0;};
 18644  002AEE  0E00               	movlw	0
 18645  002AF0  6E6A               	movwf	3946,c	;volatile
 18646                           
 18647                           ;usb_device.c: 291: {UIR = 0;};
 18648  002AF2  0E00               	movlw	0
 18649  002AF4  6E68               	movwf	3944,c	;volatile
 18650                           
 18651                           ;usb_device.c: 294: UEP0 = 0;
 18652  002AF6  0E00               	movlw	0
 18653  002AF8  6E70               	movwf	3952,c	;volatile
 18654                           
 18655                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 18656  002AFA  0E71               	movlw	113
 18657  002AFC  6E01               	movwf	i2memset@p1,c
 18658  002AFE  0E0F               	movlw	15
 18659  002B00  6E02               	movwf	i2memset@p1+1,c
 18660  002B02  0E00               	movlw	0
 18661  002B04  6E04               	movwf	i2memset@c+1,c
 18662  002B06  0E00               	movlw	0
 18663  002B08  6E03               	movwf	i2memset@c,c
 18664  002B0A  0E00               	movlw	0
 18665  002B0C  6E06               	movwf	i2memset@n+1,c
 18666  002B0E  0E02               	movlw	2
 18667  002B10  6E05               	movwf	i2memset@n,c
 18668  002B12  ECD2  F029         	call	i2_memset	;wreg free
 18669                           
 18670                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 18671  002B16  0E16               	movlw	22
 18672  002B18  6E6F               	movwf	3951,c	;volatile
 18673  002B1A  0E9F               	movlw	159
 18674  002B1C  6E6B               	movwf	3947,c	;volatile
 18675  002B1E  0E7B               	movlw	123
 18676  002B20  6E69               	movwf	3945,c	;volatile
 18677                           
 18678                           ;usb_device.c: 301: ;
 18679                           ;usb_device.c: 304: ;
 18680                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
 18681  002B22  0E00               	movlw	0
 18682  002B24  6E09               	movwf	i2USBDeviceInit@i,c
 18683  002B26                     i2l9500:
 18684  002B26  0E0B               	movlw	11
 18685  002B28  6409               	cpfsgt	i2USBDeviceInit@i,c
 18686  002B2A  D001               	goto	i2l398
 18687  002B2C  D00E               	goto	i2u877_40
 18688  002B2E                     i2l398:
 18689                           
 18690                           ;usb_device.c: 308: {
 18691                           ;usb_device.c: 309: BDT[i].Val = 0x00;
 18692  002B2E  5009               	movf	i2USBDeviceInit@i,w,c
 18693  002B30  0D04               	mullw	4
 18694  002B32  0E00               	movlw	0
 18695  002B34  24F3               	addwf	prodl,w,c
 18696  002B36  6ED9               	movwf	fsr2l,c
 18697  002B38  0E04               	movlw	4
 18698  002B3A  20F4               	addwfc	prodh,w,c
 18699  002B3C  6EDA               	movwf	fsr2h,c
 18700  002B3E  6ADE               	clrf	postinc2,c
 18701  002B40  6ADE               	clrf	postinc2,c
 18702  002B42  6ADE               	clrf	postinc2,c
 18703  002B44  6ADD               	clrf	postdec2,c
 18704  002B46  2A09               	incf	i2USBDeviceInit@i,f,c
 18705  002B48  D7EE               	goto	i2l9500
 18706  002B4A                     i2u877_40:
 18707                           
 18708                           ;usb_device.c: 310: }
 18709                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
 18710  002B4A  8C6D               	bsf	3949,6,c	;volatile
 18711                           
 18712                           ;usb_device.c: 316: UADDR = 0x00;
 18713  002B4C  0E00               	movlw	0
 18714  002B4E  6E6E               	movwf	3950,c	;volatile
 18715                           
 18716                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 18717  002B50  986D               	bcf	3949,4,c	;volatile
 18718                           
 18719                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 18720  002B52  9C6D               	bcf	3949,6,c	;volatile
 18721  002B54                     
 18722                           ;usb_device.c: 326: {
 18723                           ;usb_device.c: 327: (UIR &= 0xF7);
 18724  002B54  9668               	bcf	3944,3,c	;volatile
 18725                           
 18726                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 18727  002B56  0E00               	movlw	0
 18728  002B58  0100               	movlb	0	; () banked
 18729  002B5A  6FFC               	movwf	(_inPipes+3)& (0+255),b	;volatile
 18730                           
 18731                           ; BSR set to: 0
 18732                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 18733  002B5C  0E00               	movlw	0
 18734  002B5E  6E3B               	movwf	_outPipes+3,c	;volatile
 18735                           
 18736                           ; BSR set to: 0
 18737                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 18738  002B60  0E00               	movlw	0
 18739  002B62  6E3D               	movwf	_outPipes+5,c	;volatile
 18740  002B64  0E00               	movlw	0
 18741  002B66  6E3C               	movwf	_outPipes+4,c	;volatile
 18742                           
 18743                           ; BSR set to: 0
 18744                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 18745  002B68  B668               	btfsc	3944,3,c	;volatile
 18746  002B6A  D7F4               	goto	i2l400
 18747                           
 18748                           ; BSR set to: 0
 18749                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 18750                           
 18751                           ; BSR set to: 0
 18752  002B6C  0E01               	movlw	1
 18753  002B6E  0102               	movlb	2	; () banked
 18754  002B70  6FE9               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 18755                           
 18756                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 18757  002B72  0E01               	movlw	1
 18758  002B74  6FE8               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 18759                           
 18760                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 18761  002B76  0E00               	movlw	0
 18762  002B78  6FE7               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 18763                           
 18764                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 18765  002B7A  0E00               	movlw	0
 18766  002B7C  6FE6               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 18767                           
 18768                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 18769  002B7E  0E00               	movlw	0
 18770  002B80  0101               	movlb	1	; () banked
 18771  002B82  6FF9               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 18772                           
 18773                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 18774  002B84  0E00               	movlw	0
 18775  002B86  6E09               	movwf	i2USBDeviceInit@i,c
 18776  002B88                     i2l9528:
 18777                           
 18778                           ; BSR set to: 1
 18779  002B88  0E02               	movlw	2
 18780  002B8A  6409               	cpfsgt	i2USBDeviceInit@i,c
 18781  002B8C  D001               	goto	i2l402
 18782  002B8E  D02E               	goto	i2u880_40
 18783  002B90                     i2l402:
 18784                           
 18785                           ;usb_device.c: 346: {
 18786                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 18787                           
 18788                           ; BSR set to: 1
 18789  002B90  5009               	movf	i2USBDeviceInit@i,w,c
 18790  002B92  0D02               	mullw	2
 18791  002B94  0E40               	movlw	low _pBDTEntryIn
 18792  002B96  24F3               	addwf	prodl,w,c
 18793  002B98  6ED9               	movwf	fsr2l,c
 18794  002B9A  0E00               	movlw	high _pBDTEntryIn
 18795  002B9C  20F4               	addwfc	prodh,w,c
 18796  002B9E  6EDA               	movwf	fsr2h,c
 18797  002BA0  0E00               	movlw	0
 18798  002BA2  6EDE               	movwf	postinc2,c
 18799  002BA4  0E00               	movlw	0
 18800  002BA6  6EDD               	movwf	postdec2,c
 18801                           
 18802                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 18803  002BA8  5009               	movf	i2USBDeviceInit@i,w,c
 18804  002BAA  0D02               	mullw	2
 18805  002BAC  0EC8               	movlw	low _pBDTEntryOut
 18806  002BAE  24F3               	addwf	prodl,w,c
 18807  002BB0  6ED9               	movwf	fsr2l,c
 18808  002BB2  0E02               	movlw	high _pBDTEntryOut
 18809  002BB4  20F4               	addwfc	prodh,w,c
 18810  002BB6  6EDA               	movwf	fsr2h,c
 18811  002BB8  0E00               	movlw	0
 18812  002BBA  6EDE               	movwf	postinc2,c
 18813  002BBC  0E00               	movlw	0
 18814  002BBE  6EDD               	movwf	postdec2,c
 18815                           
 18816                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 18817  002BC0  5009               	movf	i2USBDeviceInit@i,w,c
 18818  002BC2  0D01               	mullw	1
 18819  002BC4  0ED5               	movlw	low _ep_data_in
 18820  002BC6  24F3               	addwf	prodl,w,c
 18821  002BC8  6ED9               	movwf	fsr2l,c
 18822  002BCA  0E02               	movlw	high _ep_data_in
 18823  002BCC  20F4               	addwfc	prodh,w,c
 18824  002BCE  6EDA               	movwf	fsr2h,c
 18825  002BD0  0E00               	movlw	0
 18826  002BD2  6EDF               	movwf	indf2,c
 18827                           
 18828                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 18829  002BD4  5009               	movf	i2USBDeviceInit@i,w,c
 18830  002BD6  0D01               	mullw	1
 18831  002BD8  0ED2               	movlw	low _ep_data_out
 18832  002BDA  24F3               	addwf	prodl,w,c
 18833  002BDC  6ED9               	movwf	fsr2l,c
 18834  002BDE  0E02               	movlw	high _ep_data_out
 18835  002BE0  20F4               	addwfc	prodh,w,c
 18836  002BE2  6EDA               	movwf	fsr2h,c
 18837  002BE4  0E00               	movlw	0
 18838  002BE6  6EDF               	movwf	indf2,c
 18839  002BE8  2A09               	incf	i2USBDeviceInit@i,f,c
 18840  002BEA  D7CE               	goto	i2l9528
 18841  002BEC                     i2u880_40:
 18842                           
 18843                           ;usb_device.c: 351: }
 18844                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 18845  002BEC  0E08               	movlw	8
 18846  002BEE  6E40               	movwf	_pBDTEntryIn,c
 18847  002BF0  0E04               	movlw	4
 18848  002BF2  6E41               	movwf	_pBDTEntryIn+1,c
 18849                           
 18850                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 18851  002BF4  0E16               	movlw	22
 18852  002BF6  6E70               	movwf	3952,c	;volatile
 18853                           
 18854                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 18855  002BF8  0E04               	movlw	4
 18856  002BFA  0104               	movlb	4	; () banked
 18857  002BFC  6F03               	movwf	3,b	;volatile
 18858  002BFE  0E30               	movlw	48
 18859  002C00  6F02               	movwf	2,b	;volatile
 18860                           
 18861                           ; BSR set to: 4
 18862                           ;usb_device.c: 359: BDT[0].CNT = 8;
 18863  002C02  0E08               	movlw	8
 18864  002C04  6F01               	movwf	1,b	;volatile
 18865                           
 18866                           ; BSR set to: 4
 18867                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 18868  002C06  0E04               	movlw	4
 18869  002C08  6F00               	movwf	0,b	;volatile
 18870                           
 18871                           ; BSR set to: 4
 18872                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 18873  002C0A  8F00               	bsf	0,7,b	;volatile
 18874                           
 18875                           ; BSR set to: 4
 18876                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 18877  002C0C  0E00               	movlw	0
 18878  002C0E  6E5E               	movwf	_USBActiveConfiguration,c	;volatile
 18879                           
 18880                           ; BSR set to: 4
 18881                           ;usb_device.c: 366: USB1msTickCount = 0;
 18882  002C10  0E00               	movlw	0
 18883  002C12  0102               	movlb	2	; () banked
 18884  002C14  6FCE               	movwf	_USB1msTickCount& (0+255),b	;volatile
 18885  002C16  0E00               	movlw	0
 18886  002C18  6FCF               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 18887  002C1A  0E00               	movlw	0
 18888  002C1C  6FD0               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 18889  002C1E  0E00               	movlw	0
 18890  002C20  6FD1               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 18891                           
 18892                           ; BSR set to: 2
 18893                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 18894  002C22  0E00               	movlw	0
 18895  002C24  6FE5               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 18896                           
 18897                           ; BSR set to: 2
 18898                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 18899  002C26  0E00               	movlw	0
 18900  002C28  6E58               	movwf	_USBDeviceState,c	;volatile
 18901                           
 18902                           ; BSR set to: 2
 18903  002C2A  0012               	return		;funcret
 18904  002C2C                     __end_ofi2_USBDeviceInit:
 18905                           	opt stack 0
 18906                           pclatu	equ	0xFFB
 18907                           pclath	equ	0xFFA
 18908                           tblptru	equ	0xFF8
 18909                           tblptrh	equ	0xFF7
 18910                           tblptrl	equ	0xFF6
 18911                           tablat	equ	0xFF5
 18912                           prodh	equ	0xFF4
 18913                           prodl	equ	0xFF3
 18914                           intcon	equ	0xFF2
 18915                           indf0	equ	0xFEF
 18916                           postinc0	equ	0xFEE
 18917                           fsr0h	equ	0xFEA
 18918                           fsr0l	equ	0xFE9
 18919                           wreg	equ	0xFE8
 18920                           indf1	equ	0xFE7
 18921                           postdec1	equ	0xFE5
 18922                           fsr1h	equ	0xFE2
 18923                           fsr1l	equ	0xFE1
 18924                           indf2	equ	0xFDF
 18925                           postinc2	equ	0xFDE
 18926                           postdec2	equ	0xFDD
 18927                           plusw2	equ	0xFDB
 18928                           fsr2h	equ	0xFDA
 18929                           fsr2l	equ	0xFD9
 18930                           status	equ	0xFD8
 18931                           
 18932 ;; *************** function _USBWakeFromSuspend *****************
 18933 ;; Defined at:
 18934 ;;		line 2303 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 18935 ;; Parameters:    Size  Location     Type
 18936 ;;		None
 18937 ;; Auto vars:     Size  Location     Type
 18938 ;;		None
 18939 ;; Return value:  Size  Location     Type
 18940 ;;                  1    wreg      void 
 18941 ;; Registers used:
 18942 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18943 ;; Tracked objects:
 18944 ;;		On entry : 0/0
 18945 ;;		On exit  : 0/0
 18946 ;;		Unchanged: 0/0
 18947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18948 ;;      Params:         0       0       0       0       0       0       0       0       0
 18949 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18950 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18951 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18952 ;;Total ram usage:        0 bytes
 18953 ;; Hardware stack levels used:    1
 18954 ;; Hardware stack levels required when called:    4
 18955 ;; This function calls:
 18956 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 18957 ;; This function is called by:
 18958 ;;		_USBDeviceTasks
 18959 ;; This function uses a non-reentrant model
 18960 ;;
 18961                           
 18962                           	psect	text68
 18963  00527C                     __ptext68:
 18964                           	opt stack 0
 18965  00527C                     _USBWakeFromSuspend:
 18966                           	opt stack 19
 18967                           
 18968                           ;usb_device.c: 2305: USBBusIsSuspended = 0;
 18969                           
 18970                           ; BSR set to: 2
 18971                           ;incstack = 0
 18972  00527C  0E00               	movlw	0
 18973  00527E  0101               	movlb	1	; () banked
 18974  005280  6FF9               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 18975                           
 18976                           ; BSR set to: 1
 18977                           ;usb_device.c: 2311: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 18978  005282  0E00               	movlw	0
 18979  005284  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18980  005286  0E74               	movlw	116
 18981  005288  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18982  00528A  0E00               	movlw	0
 18983  00528C  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 18984  00528E  0E00               	movlw	0
 18985  005290  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 18986  005292  0E00               	movlw	0
 18987  005294  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18988  005296  0E00               	movlw	0
 18989  005298  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18990  00529A  EC73  F026         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18991                           
 18992                           ;usb_device.c: 2318: UCONbits.SUSPND = 0;
 18993  00529E  926D               	bcf	3949,1,c	;volatile
 18994                           
 18995                           ;usb_device.c: 2323: UIEbits.ACTVIE = 0;
 18996  0052A0  9469               	bcf	3945,2,c	;volatile
 18997                           
 18998                           ;usb_device.c: 2341: while(UIRbits.ACTVIF)
 18999  0052A2  D001               	goto	i2l568
 19000  0052A4                     
 19001                           ;usb_device.c: 2343: {
 19002                           ;usb_device.c: 2344: (UIR &= 0xFB);
 19003  0052A4  9468               	bcf	3944,2,c	;volatile
 19004  0052A6                     i2l568:
 19005  0052A6  B468               	btfsc	3944,2,c	;volatile
 19006  0052A8  D7FD               	goto	i2l569
 19007                           
 19008                           ;usb_device.c: 2345: }
 19009                           ;usb_device.c: 2347: USBTicksSinceSuspendEnd = 0;
 19010  0052AA  0E00               	movlw	0
 19011  0052AC  0102               	movlb	2	; () banked
 19012  0052AE  6FE5               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 19013                           
 19014                           ; BSR set to: 2
 19015  0052B0  0012               	return		;funcret
 19016  0052B2                     __end_of_USBWakeFromSuspend:
 19017                           	opt stack 0
 19018                           pclatu	equ	0xFFB
 19019                           pclath	equ	0xFFA
 19020                           tblptru	equ	0xFF8
 19021                           tblptrh	equ	0xFF7
 19022                           tblptrl	equ	0xFF6
 19023                           tablat	equ	0xFF5
 19024                           prodh	equ	0xFF4
 19025                           prodl	equ	0xFF3
 19026                           intcon	equ	0xFF2
 19027                           indf0	equ	0xFEF
 19028                           postinc0	equ	0xFEE
 19029                           fsr0h	equ	0xFEA
 19030                           fsr0l	equ	0xFE9
 19031                           wreg	equ	0xFE8
 19032                           indf1	equ	0xFE7
 19033                           postdec1	equ	0xFE5
 19034                           fsr1h	equ	0xFE2
 19035                           fsr1l	equ	0xFE1
 19036                           indf2	equ	0xFDF
 19037                           postinc2	equ	0xFDE
 19038                           postdec2	equ	0xFDD
 19039                           plusw2	equ	0xFDB
 19040                           fsr2h	equ	0xFDA
 19041                           fsr2l	equ	0xFD9
 19042                           status	equ	0xFD8
 19043                           
 19044 ;; *************** function _USBSuspend *****************
 19045 ;; Defined at:
 19046 ;;		line 2245 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 19047 ;; Parameters:    Size  Location     Type
 19048 ;;		None
 19049 ;; Auto vars:     Size  Location     Type
 19050 ;;		None
 19051 ;; Return value:  Size  Location     Type
 19052 ;;                  1    wreg      void 
 19053 ;; Registers used:
 19054 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19055 ;; Tracked objects:
 19056 ;;		On entry : 0/0
 19057 ;;		On exit  : 0/0
 19058 ;;		Unchanged: 0/0
 19059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19060 ;;      Params:         0       0       0       0       0       0       0       0       0
 19061 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19062 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19063 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19064 ;;Total ram usage:        0 bytes
 19065 ;; Hardware stack levels used:    1
 19066 ;; Hardware stack levels required when called:    4
 19067 ;; This function calls:
 19068 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 19069 ;; This function is called by:
 19070 ;;		_USBDeviceTasks
 19071 ;; This function uses a non-reentrant model
 19072 ;;
 19073                           
 19074                           	psect	text69
 19075  005346                     __ptext69:
 19076                           	opt stack 0
 19077  005346                     _USBSuspend:
 19078                           	opt stack 19
 19079                           
 19080                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
 19081                           
 19082                           ; BSR set to: 2
 19083                           ;incstack = 0
 19084  005346  8469               	bsf	3945,2,c	;volatile
 19085                           
 19086                           ;usb_device.c: 2271: (UIR &= 0xEF);
 19087  005348  9868               	bcf	3944,4,c	;volatile
 19088                           
 19089                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
 19090  00534A  826D               	bsf	3949,1,c	;volatile
 19091                           
 19092                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
 19093  00534C  0E01               	movlw	1
 19094  00534E  0101               	movlb	1	; () banked
 19095  005350  6FF9               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 19096                           
 19097                           ; BSR set to: 1
 19098                           ;usb_device.c: 2278: USBTicksSinceSuspendEnd = 0;
 19099  005352  0E00               	movlw	0
 19100  005354  0102               	movlb	2	; () banked
 19101  005356  6FE5               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 19102                           
 19103                           ; BSR set to: 2
 19104                           ;usb_device.c: 2285: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 19105  005358  0E00               	movlw	0
 19106  00535A  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 19107  00535C  0E75               	movlw	117
 19108  00535E  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 19109  005360  0E00               	movlw	0
 19110  005362  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 19111  005364  0E00               	movlw	0
 19112  005366  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 19113  005368  0E00               	movlw	0
 19114  00536A  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 19115  00536C  0E00               	movlw	0
 19116  00536E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 19117  005370  EC73  F026         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 19118  005374  0012               	return		;funcret
 19119  005376                     __end_of_USBSuspend:
 19120                           	opt stack 0
 19121                           pclatu	equ	0xFFB
 19122                           pclath	equ	0xFFA
 19123                           tblptru	equ	0xFF8
 19124                           tblptrh	equ	0xFF7
 19125                           tblptrl	equ	0xFF6
 19126                           tablat	equ	0xFF5
 19127                           prodh	equ	0xFF4
 19128                           prodl	equ	0xFF3
 19129                           intcon	equ	0xFF2
 19130                           indf0	equ	0xFEF
 19131                           postinc0	equ	0xFEE
 19132                           fsr0h	equ	0xFEA
 19133                           fsr0l	equ	0xFE9
 19134                           wreg	equ	0xFE8
 19135                           indf1	equ	0xFE7
 19136                           postdec1	equ	0xFE5
 19137                           fsr1h	equ	0xFE2
 19138                           fsr1l	equ	0xFE1
 19139                           indf2	equ	0xFDF
 19140                           postinc2	equ	0xFDE
 19141                           postdec2	equ	0xFDD
 19142                           plusw2	equ	0xFDB
 19143                           fsr2h	equ	0xFDA
 19144                           fsr2l	equ	0xFD9
 19145                           status	equ	0xFD8
 19146                           
 19147 ;; *************** function _USBStallHandler *****************
 19148 ;; Defined at:
 19149 ;;		line 2202 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 19150 ;; Parameters:    Size  Location     Type
 19151 ;;		None
 19152 ;; Auto vars:     Size  Location     Type
 19153 ;;		None
 19154 ;; Return value:  Size  Location     Type
 19155 ;;                  1    wreg      void 
 19156 ;; Registers used:
 19157 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19158 ;; Tracked objects:
 19159 ;;		On entry : 0/0
 19160 ;;		On exit  : 0/0
 19161 ;;		Unchanged: 0/0
 19162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19163 ;;      Params:         0       0       0       0       0       0       0       0       0
 19164 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19165 ;;      Temps:          1       0       0       0       0       0       0       0       0
 19166 ;;      Totals:         1       0       0       0       0       0       0       0       0
 19167 ;;Total ram usage:        1 bytes
 19168 ;; Hardware stack levels used:    1
 19169 ;; This function calls:
 19170 ;;		Nothing
 19171 ;; This function is called by:
 19172 ;;		_USBDeviceTasks
 19173 ;; This function uses a non-reentrant model
 19174 ;;
 19175                           
 19176                           	psect	text70
 19177  00501C                     __ptext70:
 19178                           	opt stack 0
 19179  00501C                     _USBStallHandler:
 19180                           	opt stack 23
 19181                           
 19182                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
 19183                           
 19184                           ;incstack = 0
 19185  00501C  A070               	btfss	3952,0,c	;volatile
 19186  00501E  D01D               	goto	i2l560
 19187                           
 19188                           ;usb_device.c: 2215: {
 19189                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 19190  005020  C04E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19191  005024  C04F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19192  005028  0E80               	movlw	128
 19193  00502A  18DE               	xorwf	postinc2,w,c
 19194  00502C  A4D8               	btfss	status,2,c
 19195  00502E  D014               	goto	i2l561
 19196  005030  C040  FFD9         	movff	_pBDTEntryIn,fsr2l
 19197  005034  C041  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19198  005038  0E84               	movlw	132
 19199  00503A  18DE               	xorwf	postinc2,w,c
 19200  00503C  A4D8               	btfss	status,2,c
 19201  00503E  D00C               	goto	i2l561
 19202                           
 19203                           ;usb_device.c: 2218: {
 19204                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 19205  005040  C04E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19206  005044  C04F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19207  005048  0E0C               	movlw	12
 19208  00504A  6EDF               	movwf	indf2,c
 19209                           
 19210                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 19211  00504C  C04E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19212  005050  C04F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19213  005054  0E00               	movlw	0
 19214  005056  8EDB               	bsf	plusw2,7,c
 19215  005058                     i2l561:
 19216                           
 19217                           ;usb_device.c: 2222: }
 19218                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
 19219  005058  9070               	bcf	3952,0,c	;volatile
 19220  00505A                     i2l560:
 19221                           
 19222                           ;usb_device.c: 2224: }
 19223                           ;usb_device.c: 2226: (UIR &= 0xDF);
 19224  00505A  9A68               	bcf	3944,5,c	;volatile
 19225  00505C  0012               	return		;funcret
 19226  00505E                     __end_of_USBStallHandler:
 19227                           	opt stack 0
 19228                           pclatu	equ	0xFFB
 19229                           pclath	equ	0xFFA
 19230                           tblptru	equ	0xFF8
 19231                           tblptrh	equ	0xFF7
 19232                           tblptrl	equ	0xFF6
 19233                           tablat	equ	0xFF5
 19234                           prodh	equ	0xFF4
 19235                           prodl	equ	0xFF3
 19236                           intcon	equ	0xFF2
 19237                           indf0	equ	0xFEF
 19238                           postinc0	equ	0xFEE
 19239                           fsr0h	equ	0xFEA
 19240                           fsr0l	equ	0xFE9
 19241                           wreg	equ	0xFE8
 19242                           indf1	equ	0xFE7
 19243                           postdec1	equ	0xFE5
 19244                           fsr1h	equ	0xFE2
 19245                           fsr1l	equ	0xFE1
 19246                           indf2	equ	0xFDF
 19247                           postinc2	equ	0xFDE
 19248                           postdec2	equ	0xFDD
 19249                           plusw2	equ	0xFDB
 19250                           fsr2h	equ	0xFDA
 19251                           fsr2l	equ	0xFD9
 19252                           status	equ	0xFD8
 19253                           
 19254 ;; *************** function _USBIncrement1msInternalTimers *****************
 19255 ;; Defined at:
 19256 ;;		line 3025 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 19257 ;; Parameters:    Size  Location     Type
 19258 ;;		None
 19259 ;; Auto vars:     Size  Location     Type
 19260 ;;		None
 19261 ;; Return value:  Size  Location     Type
 19262 ;;                  1    wreg      void 
 19263 ;; Registers used:
 19264 ;;		wreg, status,2, status,0
 19265 ;; Tracked objects:
 19266 ;;		On entry : 0/0
 19267 ;;		On exit  : 0/0
 19268 ;;		Unchanged: 0/0
 19269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19270 ;;      Params:         0       0       0       0       0       0       0       0       0
 19271 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19272 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19273 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19274 ;;Total ram usage:        0 bytes
 19275 ;; Hardware stack levels used:    1
 19276 ;; This function calls:
 19277 ;;		Nothing
 19278 ;; This function is called by:
 19279 ;;		_USBDeviceTasks
 19280 ;; This function uses a non-reentrant model
 19281 ;;
 19282                           
 19283                           	psect	text71
 19284  005490                     __ptext71:
 19285                           	opt stack 0
 19286  005490                     _USBIncrement1msInternalTimers:
 19287                           	opt stack 23
 19288                           
 19289                           ;usb_device.c: 3033: USB1msTickCount++;
 19290                           
 19291                           ;incstack = 0
 19292  005490  0E01               	movlw	1
 19293  005492  0102               	movlb	2	; () banked
 19294  005494  27CE               	addwf	_USB1msTickCount& (0+255),f,b	;volatile
 19295  005496  0E00               	movlw	0
 19296  005498  23CF               	addwfc	(_USB1msTickCount+1)& (0+255),f,b	;volatile
 19297  00549A  23D0               	addwfc	(_USB1msTickCount+2)& (0+255),f,b	;volatile
 19298  00549C  23D1               	addwfc	(_USB1msTickCount+3)& (0+255),f,b	;volatile
 19299                           
 19300                           ; BSR set to: 2
 19301                           ;usb_device.c: 3034: if(USBBusIsSuspended == 0)
 19302  00549E  0101               	movlb	1	; () banked
 19303  0054A0  51F9               	movf	_USBBusIsSuspended& (0+255),w,b	;volatile
 19304  0054A2  A4D8               	btfss	status,2,c
 19305  0054A4  0012               	return	
 19306                           
 19307                           ; BSR set to: 1
 19308                           ;usb_device.c: 3035: {
 19309                           ;usb_device.c: 3036: USBTicksSinceSuspendEnd++;
 19310  0054A6  0102               	movlb	2	; () banked
 19311  0054A8  2BE5               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b	;volatile
 19312                           
 19313                           ; BSR set to: 2
 19314                           ;usb_device.c: 3038: if(USBTicksSinceSuspendEnd == 0)
 19315  0054AA  51E5               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b	;volatile
 19316  0054AC  A4D8               	btfss	status,2,c
 19317  0054AE  0012               	return	
 19318                           
 19319                           ; BSR set to: 2
 19320                           ;usb_device.c: 3039: {
 19321                           ;usb_device.c: 3040: USBTicksSinceSuspendEnd = 255;
 19322  0054B0  69E5               	setf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 19323                           
 19324                           ; BSR set to: 2
 19325  0054B2  0012               	return	
 19326  0054B4                     __end_of_USBIncrement1msInternalTimers:
 19327                           	opt stack 0
 19328                           pclatu	equ	0xFFB
 19329                           pclath	equ	0xFFA
 19330                           tblptru	equ	0xFF8
 19331                           tblptrh	equ	0xFF7
 19332                           tblptrl	equ	0xFF6
 19333                           tablat	equ	0xFF5
 19334                           prodh	equ	0xFF4
 19335                           prodl	equ	0xFF3
 19336                           intcon	equ	0xFF2
 19337                           indf0	equ	0xFEF
 19338                           postinc0	equ	0xFEE
 19339                           fsr0h	equ	0xFEA
 19340                           fsr0l	equ	0xFE9
 19341                           wreg	equ	0xFE8
 19342                           indf1	equ	0xFE7
 19343                           postdec1	equ	0xFE5
 19344                           fsr1h	equ	0xFE2
 19345                           fsr1l	equ	0xFE1
 19346                           indf2	equ	0xFDF
 19347                           postinc2	equ	0xFDE
 19348                           postdec2	equ	0xFDD
 19349                           plusw2	equ	0xFDB
 19350                           fsr2h	equ	0xFDA
 19351                           fsr2l	equ	0xFD9
 19352                           status	equ	0xFD8
 19353                           
 19354 ;; *************** function _USBCtrlEPService *****************
 19355 ;; Defined at:
 19356 ;;		line 2372 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 19357 ;; Parameters:    Size  Location     Type
 19358 ;;		None
 19359 ;; Auto vars:     Size  Location     Type
 19360 ;;		None
 19361 ;; Return value:  Size  Location     Type
 19362 ;;                  1    wreg      void 
 19363 ;; Registers used:
 19364 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19365 ;; Tracked objects:
 19366 ;;		On entry : 0/0
 19367 ;;		On exit  : 0/0
 19368 ;;		Unchanged: 0/0
 19369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19370 ;;      Params:         0       0       0       0       0       0       0       0       0
 19371 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19372 ;;      Temps:          1       0       0       0       0       0       0       0       0
 19373 ;;      Totals:         1       0       0       0       0       0       0       0       0
 19374 ;;Total ram usage:        1 bytes
 19375 ;; Hardware stack levels used:    1
 19376 ;; Hardware stack levels required when called:    7
 19377 ;; This function calls:
 19378 ;;		_USBCtrlTrfInHandler
 19379 ;;		_USBCtrlTrfOutHandler
 19380 ;;		_USBCtrlTrfSetupHandler
 19381 ;;		_memcpy
 19382 ;; This function is called by:
 19383 ;;		_USBDeviceTasks
 19384 ;; This function uses a non-reentrant model
 19385 ;;
 19386                           
 19387                           	psect	text72
 19388  00454C                     __ptext72:
 19389                           	opt stack 0
 19390  00454C                     _USBCtrlEPService:
 19391                           	opt stack 16
 19392                           
 19393                           ;usb_device.c: 2378: USBStatusStageTimeoutCounter = (uint8_t)45;
 19394                           
 19395                           ;incstack = 0
 19396  00454C  0E2D               	movlw	45
 19397  00454E  6E54               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 19398                           
 19399                           ;usb_device.c: 2382: if((USTATcopy.Val & ~0x02) == 0x00)
 19400  004550  C05D  F01B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 19401  004554  0EFD               	movlw	253
 19402  004556  161B               	andwf	??_USBCtrlEPService,f,c
 19403  004558  A4D8               	btfss	status,2,c
 19404  00455A  D03B               	goto	i2l574
 19405                           
 19406                           ;usb_device.c: 2383: {
 19407                           ;usb_device.c: 2386: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 19408  00455C  C05D  F01B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 19409  004560  90D8               	bcf	status,0,c
 19410  004562  321B               	rrcf	??_USBCtrlEPService,f,c
 19411  004564  0E3F               	movlw	63
 19412  004566  161B               	andwf	??_USBCtrlEPService,f,c
 19413  004568  501B               	movf	??_USBCtrlEPService,w,c
 19414  00456A  0D04               	mullw	4
 19415  00456C  0E00               	movlw	0
 19416  00456E  24F3               	addwf	prodl,w,c
 19417  004570  6E4E               	movwf	_pBDTEntryEP0OutCurrent,c
 19418  004572  0E04               	movlw	4
 19419  004574  20F4               	addwfc	prodh,w,c
 19420  004576  6E4F               	movwf	_pBDTEntryEP0OutCurrent+1,c
 19421                           
 19422                           ;usb_device.c: 2394: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 19423  004578  C04E  F04C         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 19424  00457C  C04F  F04D         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 19425                           
 19426                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 19427  004580  0E04               	movlw	4
 19428  004582  184C               	xorwf	_pBDTEntryEP0OutNext,w,c
 19429  004584  6E4C               	movwf	_pBDTEntryEP0OutNext,c
 19430  004586  504D               	movf	_pBDTEntryEP0OutNext+1,w,c
 19431  004588  6E4D               	movwf	_pBDTEntryEP0OutNext+1,c
 19432                           
 19433                           ;usb_device.c: 2399: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 19434  00458A  C04E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19435  00458E  C04F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19436  004592  30DF               	rrcf	indf2,w,c
 19437  004594  32E8               	rrcf	wreg,f,c
 19438  004596  0B0F               	andlw	15
 19439  004598  0A0D               	xorlw	13
 19440  00459A  A4D8               	btfss	status,2,c
 19441  00459C  D017               	goto	i2l575
 19442                           
 19443                           ;usb_device.c: 2400: {
 19444                           ;usb_device.c: 2405: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
 19445  00459E  0E30               	movlw	48
 19446  0045A0  6E01               	movwf	memcpy@d1,c
 19447  0045A2  0E04               	movlw	4
 19448  0045A4  6E02               	movwf	memcpy@d1+1,c
 19449  0045A6  EE20 F002          	lfsr	2,2
 19450  0045AA  504E               	movf	_pBDTEntryEP0OutCurrent,w,c
 19451  0045AC  26D9               	addwf	fsr2l,f,c
 19452  0045AE  504F               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 19453  0045B0  22DA               	addwfc	fsr2h,f,c
 19454  0045B2  CFDE F003          	movff	postinc2,memcpy@s1
 19455  0045B6  CFDD F004          	movff	postdec2,memcpy@s1+1
 19456  0045BA  0E00               	movlw	0
 19457  0045BC  6E06               	movwf	memcpy@n+1,c
 19458  0045BE  0E08               	movlw	8
 19459  0045C0  6E05               	movwf	memcpy@n,c
 19460  0045C2  ECAA  F027         	call	_memcpy	;wreg free
 19461                           
 19462                           ;usb_device.c: 2408: USBCtrlTrfSetupHandler();
 19463  0045C6  EC84  F023         	call	_USBCtrlTrfSetupHandler	;wreg free
 19464                           
 19465                           ;usb_device.c: 2409: }
 19466  0045CA  0012               	return	
 19467  0045CC                     i2l575:
 19468                           
 19469                           ;usb_device.c: 2410: else
 19470                           ;usb_device.c: 2411: {
 19471                           ;usb_device.c: 2413: USBCtrlTrfOutHandler();
 19472  0045CC  EC44  F026         	call	_USBCtrlTrfOutHandler	;wreg free
 19473                           
 19474                           ;usb_device.c: 2414: }
 19475                           ;usb_device.c: 2415: }
 19476  0045D0  0012               	return	
 19477  0045D2                     i2l574:
 19478                           
 19479                           ;usb_device.c: 2416: else if((USTATcopy.Val & ~0x02) == 0x04)
 19480  0045D2  505D               	movf	_USTATcopy,w,c	;volatile
 19481  0045D4  0BFD               	andlw	253
 19482  0045D6  0A04               	xorlw	4
 19483  0045D8  A4D8               	btfss	status,2,c
 19484  0045DA  0012               	return	
 19485                           
 19486                           ;usb_device.c: 2417: {
 19487                           ;usb_device.c: 2420: USBCtrlTrfInHandler();
 19488  0045DC  ECAD  F01F         	call	_USBCtrlTrfInHandler	;wreg free
 19489  0045E0  0012               	return	
 19490  0045E2                     __end_of_USBCtrlEPService:
 19491                           	opt stack 0
 19492                           pclatu	equ	0xFFB
 19493                           pclath	equ	0xFFA
 19494                           tblptru	equ	0xFF8
 19495                           tblptrh	equ	0xFF7
 19496                           tblptrl	equ	0xFF6
 19497                           tablat	equ	0xFF5
 19498                           prodh	equ	0xFF4
 19499                           prodl	equ	0xFF3
 19500                           intcon	equ	0xFF2
 19501                           indf0	equ	0xFEF
 19502                           postinc0	equ	0xFEE
 19503                           fsr0h	equ	0xFEA
 19504                           fsr0l	equ	0xFE9
 19505                           wreg	equ	0xFE8
 19506                           indf1	equ	0xFE7
 19507                           postdec1	equ	0xFE5
 19508                           fsr1h	equ	0xFE2
 19509                           fsr1l	equ	0xFE1
 19510                           indf2	equ	0xFDF
 19511                           postinc2	equ	0xFDE
 19512                           postdec2	equ	0xFDD
 19513                           plusw2	equ	0xFDB
 19514                           fsr2h	equ	0xFDA
 19515                           fsr2l	equ	0xFD9
 19516                           status	equ	0xFD8
 19517                           
 19518 ;; *************** function _memcpy *****************
 19519 ;; Defined at:
 19520 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\memcpy.c"
 19521 ;; Parameters:    Size  Location     Type
 19522 ;;  d1              2    0[COMRAM] PTR void 
 19523 ;;		 -> receivePacket(100), response(100), SetupPkt(8), 
 19524 ;;  s1              2    2[COMRAM] PTR const void 
 19525 ;;		 -> recebeByte@frameData(100), CtrlTrfData(8), RAM(2047), SetupPkt(8), 
 19526 ;;  n               2    4[COMRAM] unsigned int 
 19527 ;; Auto vars:     Size  Location     Type
 19528 ;;  s               2    8[COMRAM] PTR const unsigned char 
 19529 ;;		 -> recebeByte@frameData(100), CtrlTrfData(8), RAM(2047), SetupPkt(8), 
 19530 ;;  d               2    6[COMRAM] PTR unsigned char 
 19531 ;;		 -> receivePacket(100), response(100), SetupPkt(8), 
 19532 ;;  tmp             1   10[COMRAM] unsigned char 
 19533 ;; Return value:  Size  Location     Type
 19534 ;;                  2    0[COMRAM] PTR void 
 19535 ;; Registers used:
 19536 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19537 ;; Tracked objects:
 19538 ;;		On entry : 0/0
 19539 ;;		On exit  : 0/0
 19540 ;;		Unchanged: 0/0
 19541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19542 ;;      Params:         6       0       0       0       0       0       0       0       0
 19543 ;;      Locals:         5       0       0       0       0       0       0       0       0
 19544 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19545 ;;      Totals:        11       0       0       0       0       0       0       0       0
 19546 ;;Total ram usage:       11 bytes
 19547 ;; Hardware stack levels used:    1
 19548 ;; This function calls:
 19549 ;;		Nothing
 19550 ;; This function is called by:
 19551 ;;		_USBCtrlEPService
 19552 ;;		_recebeByte
 19553 ;; This function uses a non-reentrant model
 19554 ;;
 19555                           
 19556                           	psect	text73
 19557  004F54                     __ptext73:
 19558                           	opt stack 0
 19559  004F54                     _memcpy:
 19560                           	opt stack 22
 19561                           
 19562                           ;incstack = 0
 19563  004F54  C003  F009         	movff	memcpy@s1,memcpy@s
 19564  004F58  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
 19565  004F5C  C001  F007         	movff	memcpy@d1,memcpy@d
 19566  004F60  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
 19567  004F64  D010               	goto	i2l3234
 19568  004F66                     i2l8282:
 19569  004F66  C009  FFD9         	movff	memcpy@s,fsr2l
 19570  004F6A  C00A  FFDA         	movff	memcpy@s+1,fsr2h
 19571  004F6E  50DF               	movf	indf2,w,c
 19572  004F70  6E0B               	movwf	memcpy@tmp,c
 19573  004F72  4A09               	infsnz	memcpy@s,f,c
 19574  004F74  2A0A               	incf	memcpy@s+1,f,c
 19575  004F76  C007  FFD9         	movff	memcpy@d,fsr2l
 19576  004F7A  C008  FFDA         	movff	memcpy@d+1,fsr2h
 19577  004F7E  C00B  FFDF         	movff	memcpy@tmp,indf2
 19578  004F82  4A07               	infsnz	memcpy@d,f,c
 19579  004F84  2A08               	incf	memcpy@d+1,f,c
 19580  004F86                     i2l3234:
 19581  004F86  0605               	decf	memcpy@n,f,c
 19582  004F88  A0D8               	btfss	status,0,c
 19583  004F8A  0606               	decf	memcpy@n+1,f,c
 19584  004F8C  2805               	incf	memcpy@n,w,c
 19585  004F8E  E1EB               	bnz	i2l8282
 19586  004F90  2806               	incf	memcpy@n+1,w,c
 19587  004F92  B4D8               	btfsc	status,2,c
 19588  004F94  0012               	return	
 19589  004F96  D7E7               	goto	i2l3235
 19590  004F98                     __end_of_memcpy:
 19591                           	opt stack 0
 19592                           pclatu	equ	0xFFB
 19593                           pclath	equ	0xFFA
 19594                           tblptru	equ	0xFF8
 19595                           tblptrh	equ	0xFF7
 19596                           tblptrl	equ	0xFF6
 19597                           tablat	equ	0xFF5
 19598                           prodh	equ	0xFF4
 19599                           prodl	equ	0xFF3
 19600                           intcon	equ	0xFF2
 19601                           indf0	equ	0xFEF
 19602                           postinc0	equ	0xFEE
 19603                           fsr0h	equ	0xFEA
 19604                           fsr0l	equ	0xFE9
 19605                           wreg	equ	0xFE8
 19606                           indf1	equ	0xFE7
 19607                           postdec1	equ	0xFE5
 19608                           fsr1h	equ	0xFE2
 19609                           fsr1l	equ	0xFE1
 19610                           indf2	equ	0xFDF
 19611                           postinc2	equ	0xFDE
 19612                           postdec2	equ	0xFDD
 19613                           plusw2	equ	0xFDB
 19614                           fsr2h	equ	0xFDA
 19615                           fsr2l	equ	0xFD9
 19616                           status	equ	0xFD8
 19617                           
 19618 ;; *************** function _USBCtrlTrfSetupHandler *****************
 19619 ;; Defined at:
 19620 ;;		line 2465 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 19621 ;; Parameters:    Size  Location     Type
 19622 ;;		None
 19623 ;; Auto vars:     Size  Location     Type
 19624 ;;		None
 19625 ;; Return value:  Size  Location     Type
 19626 ;;                  1    wreg      void 
 19627 ;; Registers used:
 19628 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19629 ;; Tracked objects:
 19630 ;;		On entry : 0/0
 19631 ;;		On exit  : 0/0
 19632 ;;		Unchanged: 0/0
 19633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19634 ;;      Params:         0       0       0       0       0       0       0       0       0
 19635 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19636 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19637 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19638 ;;Total ram usage:        0 bytes
 19639 ;; Hardware stack levels used:    1
 19640 ;; Hardware stack levels required when called:    6
 19641 ;; This function calls:
 19642 ;;		_USBCheckStdRequest
 19643 ;;		_USBCtrlEPServiceComplete
 19644 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 19645 ;; This function is called by:
 19646 ;;		_USBCtrlEPService
 19647 ;; This function uses a non-reentrant model
 19648 ;;
 19649                           
 19650                           	psect	text74
 19651  004708                     __ptext74:
 19652                           	opt stack 0
 19653  004708                     _USBCtrlTrfSetupHandler:
 19654                           	opt stack 16
 19655                           
 19656                           ;usb_device.c: 2470: shortPacketStatus = 0;
 19657                           
 19658                           ;incstack = 0
 19659  004708  0E00               	movlw	0
 19660  00470A  6E57               	movwf	_shortPacketStatus,c	;volatile
 19661                           
 19662                           ;usb_device.c: 2471: USBDeferStatusStagePacket = 0;
 19663  00470C  0E00               	movlw	0
 19664  00470E  6E53               	movwf	_USBDeferStatusStagePacket,c	;volatile
 19665                           
 19666                           ;usb_device.c: 2472: USBDeferINDataStagePackets = 0;
 19667  004710  0E00               	movlw	0
 19668  004712  0102               	movlb	2	; () banked
 19669  004714  6FE7               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 19670                           
 19671                           ;usb_device.c: 2473: USBDeferOUTDataStagePackets = 0;
 19672  004716  0E00               	movlw	0
 19673  004718  6FE6               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 19674                           
 19675                           ;usb_device.c: 2474: BothEP0OutUOWNsSet = 0;
 19676  00471A  0E00               	movlw	0
 19677  00471C  6FEA               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 19678                           
 19679                           ;usb_device.c: 2475: controlTransferState = 0;
 19680  00471E  0E00               	movlw	0
 19681  004720  6E56               	movwf	_controlTransferState,c	;volatile
 19682                           
 19683                           ; BSR set to: 2
 19684                           ;usb_device.c: 2484: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 19685  004722  C040  FFD9         	movff	_pBDTEntryIn,fsr2l
 19686  004726  C041  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19687  00472A  0E7F               	movlw	127
 19688  00472C  16DF               	andwf	indf2,f,c
 19689                           
 19690                           ; BSR set to: 2
 19691                           ;usb_device.c: 2486: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 19692  00472E  0E04               	movlw	4
 19693  004730  1840               	xorwf	_pBDTEntryIn,w,c
 19694  004732  6E40               	movwf	_pBDTEntryIn,c
 19695  004734  5041               	movf	_pBDTEntryIn+1,w,c
 19696  004736  6E41               	movwf	_pBDTEntryIn+1,c
 19697                           
 19698                           ; BSR set to: 2
 19699                           ;usb_device.c: 2487: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 19700  004738  C040  FFD9         	movff	_pBDTEntryIn,fsr2l
 19701  00473C  C041  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19702  004740  0E7F               	movlw	127
 19703  004742  16DF               	andwf	indf2,f,c
 19704                           
 19705                           ; BSR set to: 2
 19706                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 19707  004744  0E04               	movlw	4
 19708  004746  1840               	xorwf	_pBDTEntryIn,w,c
 19709  004748  6E40               	movwf	_pBDTEntryIn,c
 19710  00474A  5041               	movf	_pBDTEntryIn+1,w,c
 19711  00474C  6E41               	movwf	_pBDTEntryIn+1,c
 19712                           
 19713                           ; BSR set to: 2
 19714                           ;usb_device.c: 2489: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 19715  00474E  C04C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19716  004752  C04D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19717  004756  0E7F               	movlw	127
 19718  004758  16DF               	andwf	indf2,f,c
 19719                           
 19720                           ; BSR set to: 2
 19721                           ;usb_device.c: 2491: inPipes[0].info.Val = 0;
 19722  00475A  0E00               	movlw	0
 19723  00475C  0100               	movlb	0	; () banked
 19724  00475E  6FFC               	movwf	(_inPipes+3)& (0+255),b	;volatile
 19725                           
 19726                           ; BSR set to: 0
 19727                           ;usb_device.c: 2492: inPipes[0].wCount.Val = 0;
 19728  004760  0E00               	movlw	0
 19729  004762  6FFE               	movwf	(_inPipes+5)& (0+255),b	;volatile
 19730  004764  0E00               	movlw	0
 19731  004766  6FFD               	movwf	(_inPipes+4)& (0+255),b	;volatile
 19732                           
 19733                           ; BSR set to: 0
 19734                           ;usb_device.c: 2493: outPipes[0].info.Val = 0;
 19735  004768  0E00               	movlw	0
 19736  00476A  6E3B               	movwf	_outPipes+3,c	;volatile
 19737                           
 19738                           ; BSR set to: 0
 19739                           ;usb_device.c: 2494: outPipes[0].wCount.Val = 0;
 19740  00476C  0E00               	movlw	0
 19741  00476E  6E3D               	movwf	_outPipes+5,c	;volatile
 19742  004770  0E00               	movlw	0
 19743  004772  6E3C               	movwf	_outPipes+4,c	;volatile
 19744                           
 19745                           ; BSR set to: 0
 19746                           ;usb_device.c: 2500: USBCheckStdRequest();
 19747  004774  EC91  F01D         	call	_USBCheckStdRequest	;wreg free
 19748                           
 19749                           ;usb_device.c: 2501: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 19750  004778  0E00               	movlw	0
 19751  00477A  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 19752  00477C  0E03               	movlw	3
 19753  00477E  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 19754  004780  0E00               	movlw	0
 19755  004782  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 19756  004784  0E00               	movlw	0
 19757  004786  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 19758  004788  0E00               	movlw	0
 19759  00478A  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 19760  00478C  0E00               	movlw	0
 19761  00478E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 19762  004790  EC73  F026         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 19763                           
 19764                           ;usb_device.c: 2514: USBCtrlEPServiceComplete();
 19765  004794  ECA8  F01B         	call	_USBCtrlEPServiceComplete	;wreg free
 19766  004798  0012               	return		;funcret
 19767  00479A                     __end_of_USBCtrlTrfSetupHandler:
 19768                           	opt stack 0
 19769                           pclatu	equ	0xFFB
 19770                           pclath	equ	0xFFA
 19771                           tblptru	equ	0xFF8
 19772                           tblptrh	equ	0xFF7
 19773                           tblptrl	equ	0xFF6
 19774                           tablat	equ	0xFF5
 19775                           prodh	equ	0xFF4
 19776                           prodl	equ	0xFF3
 19777                           intcon	equ	0xFF2
 19778                           indf0	equ	0xFEF
 19779                           postinc0	equ	0xFEE
 19780                           fsr0h	equ	0xFEA
 19781                           fsr0l	equ	0xFE9
 19782                           wreg	equ	0xFE8
 19783                           indf1	equ	0xFE7
 19784                           postdec1	equ	0xFE5
 19785                           fsr1h	equ	0xFE2
 19786                           fsr1l	equ	0xFE1
 19787                           indf2	equ	0xFDF
 19788                           postinc2	equ	0xFDE
 19789                           postdec2	equ	0xFDD
 19790                           plusw2	equ	0xFDB
 19791                           fsr2h	equ	0xFDA
 19792                           fsr2l	equ	0xFD9
 19793                           status	equ	0xFD8
 19794                           
 19795 ;; *************** function _USBCtrlEPServiceComplete *****************
 19796 ;; Defined at:
 19797 ;;		line 1616 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 19798 ;; Parameters:    Size  Location     Type
 19799 ;;		None
 19800 ;; Auto vars:     Size  Location     Type
 19801 ;;		None
 19802 ;; Return value:  Size  Location     Type
 19803 ;;                  1    wreg      void 
 19804 ;; Registers used:
 19805 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19806 ;; Tracked objects:
 19807 ;;		On entry : 0/0
 19808 ;;		On exit  : 0/0
 19809 ;;		Unchanged: 0/0
 19810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19811 ;;      Params:         0       0       0       0       0       0       0       0       0
 19812 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19813 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19814 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19815 ;;Total ram usage:        0 bytes
 19816 ;; Hardware stack levels used:    1
 19817 ;; Hardware stack levels required when called:    2
 19818 ;; This function calls:
 19819 ;;		_USBCtrlEPAllowDataStage
 19820 ;;		_USBCtrlEPAllowStatusStage
 19821 ;; This function is called by:
 19822 ;;		_USBCtrlTrfSetupHandler
 19823 ;; This function uses a non-reentrant model
 19824 ;;
 19825                           
 19826                           	psect	text75
 19827  003750                     __ptext75:
 19828                           	opt stack 0
 19829  003750                     _USBCtrlEPServiceComplete:
 19830                           	opt stack 19
 19831                           
 19832                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
 19833                           
 19834                           ;incstack = 0
 19835  003750  986D               	bcf	3949,4,c	;volatile
 19836                           
 19837                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
 19838  003752  0100               	movlb	0	; () banked
 19839  003754  BFFC               	btfsc	(_inPipes+3)& (0+255),7,b	;volatile
 19840  003756  D03A               	goto	i2l484
 19841                           
 19842                           ; BSR set to: 0
 19843                           ;usb_device.c: 1629: {
 19844                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
 19845  003758  AE3B               	btfss	_outPipes+3,7,c	;volatile
 19846  00375A  D00D               	goto	i2l485
 19847                           
 19848                           ; BSR set to: 0
 19849                           ;usb_device.c: 1631: {
 19850                           ;usb_device.c: 1632: controlTransferState = 2;
 19851  00375C  0E02               	movlw	2
 19852  00375E  6E56               	movwf	_controlTransferState,c	;volatile
 19853                           
 19854                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
 19855  003760  0102               	movlb	2	; () banked
 19856  003762  51E6               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 19857  003764  B4D8               	btfsc	status,2,c
 19858                           
 19859                           ; BSR set to: 2
 19860                           ;usb_device.c: 1644: {
 19861                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
 19862  003766  EC0A  F022         	call	_USBCtrlEPAllowDataStage	;wreg free
 19863                           
 19864                           ;usb_device.c: 1646: }
 19865                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
 19866  00376A  0E00               	movlw	0
 19867  00376C  0102               	movlb	2	; () banked
 19868  00376E  6FE8               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 19869                           
 19870                           ; BSR set to: 2
 19871                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
 19872  003770  0E00               	movlw	0
 19873  003772  6FE9               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 19874                           
 19875                           ;usb_device.c: 1652: }
 19876  003774  0012               	return	
 19877  003776                     i2l485:
 19878                           
 19879                           ;usb_device.c: 1653: else
 19880                           ;usb_device.c: 1654: {
 19881                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
 19882                           
 19883                           ; BSR set to: 2
 19884  003776  EE20 F001          	lfsr	2,1
 19885  00377A  504C               	movf	_pBDTEntryEP0OutNext,w,c
 19886  00377C  26D9               	addwf	fsr2l,f,c
 19887  00377E  504D               	movf	_pBDTEntryEP0OutNext+1,w,c
 19888  003780  22DA               	addwfc	fsr2h,f,c
 19889  003782  0E08               	movlw	8
 19890  003784  6EDF               	movwf	indf2,c
 19891                           
 19892                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 19893  003786  EE20 F002          	lfsr	2,2
 19894  00378A  504C               	movf	_pBDTEntryEP0OutNext,w,c
 19895  00378C  26D9               	addwf	fsr2l,f,c
 19896  00378E  504D               	movf	_pBDTEntryEP0OutNext+1,w,c
 19897  003790  22DA               	addwfc	fsr2h,f,c
 19898  003792  0E30               	movlw	48
 19899  003794  6EDE               	movwf	postinc2,c
 19900  003796  0E04               	movlw	4
 19901  003798  6EDD               	movwf	postdec2,c
 19902                           
 19903                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 19904  00379A  C04C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19905  00379E  C04D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19906  0037A2  0E0C               	movlw	12
 19907  0037A4  6EDF               	movwf	indf2,c
 19908                           
 19909                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 19910  0037A6  C04C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19911  0037AA  C04D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19912  0037AE  0E00               	movlw	0
 19913  0037B0  8EDB               	bsf	plusw2,7,c
 19914                           
 19915                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
 19916  0037B2  C040  FFD9         	movff	_pBDTEntryIn,fsr2l
 19917  0037B6  C041  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19918  0037BA  0E04               	movlw	4
 19919  0037BC  6EDF               	movwf	indf2,c
 19920                           
 19921                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
 19922  0037BE  C040  FFD9         	movff	_pBDTEntryIn,fsr2l
 19923  0037C2  C041  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19924  0037C6  0E00               	movlw	0
 19925  0037C8  8EDB               	bsf	plusw2,7,c
 19926                           
 19927                           ;usb_device.c: 1665: }
 19928                           ;usb_device.c: 1666: }
 19929  0037CA  0012               	return	
 19930  0037CC                     i2l484:
 19931                           
 19932                           ; BSR set to: 0
 19933                           ;usb_device.c: 1667: else
 19934                           ;usb_device.c: 1668: {
 19935                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
 19936  0037CC  0104               	movlb	4	; () banked
 19937  0037CE  AF30               	btfss	48,7,b	;volatile
 19938  0037D0  D012               	goto	i2l489
 19939                           
 19940                           ; BSR set to: 4
 19941                           ;usb_device.c: 1670: {
 19942                           ;usb_device.c: 1671: controlTransferState = 1;
 19943  0037D2  0E01               	movlw	1
 19944  0037D4  6E56               	movwf	_controlTransferState,c	;volatile
 19945                           
 19946                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
 19947  0037D6  0102               	movlb	2	; () banked
 19948  0037D8  51E7               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 19949  0037DA  B4D8               	btfsc	status,2,c
 19950                           
 19951                           ; BSR set to: 2
 19952                           ;usb_device.c: 1686: {
 19953                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
 19954  0037DC  EC0A  F022         	call	_USBCtrlEPAllowDataStage	;wreg free
 19955                           
 19956                           ;usb_device.c: 1688: }
 19957                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
 19958  0037E0  0E00               	movlw	0
 19959  0037E2  0102               	movlb	2	; () banked
 19960  0037E4  6FE8               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 19961                           
 19962                           ; BSR set to: 2
 19963                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
 19964  0037E6  0E00               	movlw	0
 19965  0037E8  6FE9               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 19966                           
 19967                           ; BSR set to: 2
 19968                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
 19969  0037EA  5053               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 19970  0037EC  A4D8               	btfss	status,2,c
 19971  0037EE  0012               	return	
 19972                           
 19973                           ; BSR set to: 2
 19974                           ;usb_device.c: 1713: {
 19975                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
 19976  0037F0  EC4B  F01F         	call	_USBCtrlEPAllowStatusStage	;wreg free
 19977                           
 19978                           ;usb_device.c: 1715: }
 19979                           ;usb_device.c: 1716: }
 19980  0037F4  0012               	return	
 19981  0037F6                     i2l489:
 19982                           
 19983                           ;usb_device.c: 1717: else
 19984                           ;usb_device.c: 1718: {
 19985                           ;usb_device.c: 1729: controlTransferState = 2;
 19986  0037F6  0E02               	movlw	2
 19987  0037F8  6E56               	movwf	_controlTransferState,c	;volatile
 19988                           
 19989                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
 19990  0037FA  EE20 F001          	lfsr	2,1
 19991  0037FE  504C               	movf	_pBDTEntryEP0OutNext,w,c
 19992  003800  26D9               	addwf	fsr2l,f,c
 19993  003802  504D               	movf	_pBDTEntryEP0OutNext+1,w,c
 19994  003804  22DA               	addwfc	fsr2h,f,c
 19995  003806  0E08               	movlw	8
 19996  003808  6EDF               	movwf	indf2,c
 19997                           
 19998                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 19999  00380A  EE20 F002          	lfsr	2,2
 20000  00380E  504C               	movf	_pBDTEntryEP0OutNext,w,c
 20001  003810  26D9               	addwf	fsr2l,f,c
 20002  003812  504D               	movf	_pBDTEntryEP0OutNext+1,w,c
 20003  003814  22DA               	addwfc	fsr2h,f,c
 20004  003816  0E30               	movlw	48
 20005  003818  6EDE               	movwf	postinc2,c
 20006  00381A  0E04               	movlw	4
 20007  00381C  6EDD               	movwf	postdec2,c
 20008                           
 20009                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 20010  00381E  C04C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20011  003822  C04D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20012  003826  0E04               	movlw	4
 20013  003828  6EDF               	movwf	indf2,c
 20014                           
 20015                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 20016  00382A  C04C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20017  00382E  C04D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20018  003832  0E00               	movlw	0
 20019  003834  8EDB               	bsf	plusw2,7,c
 20020                           
 20021                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
 20022  003836  0E00               	movlw	0
 20023  003838  0102               	movlb	2	; () banked
 20024  00383A  6FE8               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 20025                           
 20026                           ; BSR set to: 2
 20027                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
 20028  00383C  0E00               	movlw	0
 20029  00383E  6FE9               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 20030                           
 20031                           ; BSR set to: 2
 20032                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
 20033  003840  5053               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 20034  003842  A4D8               	btfss	status,2,c
 20035  003844  0012               	return	
 20036                           
 20037                           ; BSR set to: 2
 20038                           ;usb_device.c: 1741: {
 20039                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
 20040  003846  EC4B  F01F         	call	_USBCtrlEPAllowStatusStage	;wreg free
 20041  00384A  0012               	return	
 20042  00384C                     __end_of_USBCtrlEPServiceComplete:
 20043                           	opt stack 0
 20044                           pclatu	equ	0xFFB
 20045                           pclath	equ	0xFFA
 20046                           tblptru	equ	0xFF8
 20047                           tblptrh	equ	0xFF7
 20048                           tblptrl	equ	0xFF6
 20049                           tablat	equ	0xFF5
 20050                           prodh	equ	0xFF4
 20051                           prodl	equ	0xFF3
 20052                           intcon	equ	0xFF2
 20053                           indf0	equ	0xFEF
 20054                           postinc0	equ	0xFEE
 20055                           fsr0h	equ	0xFEA
 20056                           fsr0l	equ	0xFE9
 20057                           wreg	equ	0xFE8
 20058                           indf1	equ	0xFE7
 20059                           postdec1	equ	0xFE5
 20060                           fsr1h	equ	0xFE2
 20061                           fsr1l	equ	0xFE1
 20062                           indf2	equ	0xFDF
 20063                           postinc2	equ	0xFDE
 20064                           postdec2	equ	0xFDD
 20065                           plusw2	equ	0xFDB
 20066                           fsr2h	equ	0xFDA
 20067                           fsr2l	equ	0xFD9
 20068                           status	equ	0xFD8
 20069                           
 20070 ;; *************** function _USBCtrlEPAllowDataStage *****************
 20071 ;; Defined at:
 20072 ;;		line 1488 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 20073 ;; Parameters:    Size  Location     Type
 20074 ;;		None
 20075 ;; Auto vars:     Size  Location     Type
 20076 ;;		None
 20077 ;; Return value:  Size  Location     Type
 20078 ;;                  1    wreg      void 
 20079 ;; Registers used:
 20080 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20081 ;; Tracked objects:
 20082 ;;		On entry : 0/0
 20083 ;;		On exit  : 0/0
 20084 ;;		Unchanged: 0/0
 20085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20086 ;;      Params:         0       0       0       0       0       0       0       0       0
 20087 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20088 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20089 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20090 ;;Total ram usage:        0 bytes
 20091 ;; Hardware stack levels used:    1
 20092 ;; Hardware stack levels required when called:    1
 20093 ;; This function calls:
 20094 ;;		_USBCtrlTrfTxService
 20095 ;; This function is called by:
 20096 ;;		_USBCtrlEPServiceComplete
 20097 ;; This function uses a non-reentrant model
 20098 ;;
 20099                           
 20100                           	psect	text76
 20101  004414                     __ptext76:
 20102                           	opt stack 0
 20103  004414                     _USBCtrlEPAllowDataStage:
 20104                           	opt stack 19
 20105                           
 20106                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
 20107                           
 20108                           ;incstack = 0
 20109  004414  0E00               	movlw	0
 20110  004416  0102               	movlb	2	; () banked
 20111  004418  6FE7               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 20112                           
 20113                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
 20114  00441A  0E00               	movlw	0
 20115  00441C  6FE6               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 20116                           
 20117                           ; BSR set to: 2
 20118                           ;usb_device.c: 1493: if(controlTransferState == 2)
 20119  00441E  0E02               	movlw	2
 20120  004420  1856               	xorwf	_controlTransferState,w,c	;volatile
 20121  004422  A4D8               	btfss	status,2,c
 20122  004424  D01F               	goto	i2l473
 20123                           
 20124                           ; BSR set to: 2
 20125                           ;usb_device.c: 1494: {
 20126                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
 20127  004426  EE20 F001          	lfsr	2,1
 20128  00442A  504C               	movf	_pBDTEntryEP0OutNext,w,c
 20129  00442C  26D9               	addwf	fsr2l,f,c
 20130  00442E  504D               	movf	_pBDTEntryEP0OutNext+1,w,c
 20131  004430  22DA               	addwfc	fsr2h,f,c
 20132  004432  0E08               	movlw	8
 20133  004434  6EDF               	movwf	indf2,c
 20134                           
 20135                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 20136  004436  EE20 F002          	lfsr	2,2
 20137  00443A  504C               	movf	_pBDTEntryEP0OutNext,w,c
 20138  00443C  26D9               	addwf	fsr2l,f,c
 20139  00443E  504D               	movf	_pBDTEntryEP0OutNext+1,w,c
 20140  004440  22DA               	addwfc	fsr2h,f,c
 20141  004442  0E38               	movlw	56
 20142  004444  6EDE               	movwf	postinc2,c
 20143  004446  0E04               	movlw	4
 20144  004448  6EDD               	movwf	postdec2,c
 20145                           
 20146                           ; BSR set to: 2
 20147                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 20148  00444A  C04C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20149  00444E  C04D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20150  004452  0E48               	movlw	72
 20151  004454  6EDF               	movwf	indf2,c
 20152                           
 20153                           ; BSR set to: 2
 20154                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 20155  004456  C04C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20156  00445A  C04D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20157  00445E  0E00               	movlw	0
 20158  004460  8EDB               	bsf	plusw2,7,c
 20159                           
 20160                           ;usb_device.c: 1500: }
 20161  004462  0012               	return	
 20162  004464                     i2l473:
 20163                           
 20164                           ; BSR set to: 2
 20165                           ;usb_device.c: 1501: else
 20166                           ;usb_device.c: 1502: {
 20167                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 20168                           
 20169                           ; BSR set to: 2
 20170  004464  0100               	movlb	0	; () banked
 20171  004466  51FD               	movf	(_inPipes+4)& (0+255),w,b	;volatile
 20172  004468  0104               	movlb	4	; () banked
 20173  00446A  5D36               	subwf	54,w,b	;volatile
 20174  00446C  0100               	movlb	0	; () banked
 20175  00446E  51FE               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 20176  004470  0104               	movlb	4	; () banked
 20177  004472  5937               	subwfb	55,w,b	;volatile
 20178  004474  B0D8               	btfsc	status,0,c
 20179  004476  D004               	goto	i2l475
 20180                           
 20181                           ; BSR set to: 4
 20182                           ;usb_device.c: 1506: {
 20183                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
 20184  004478  C436 F0FD          	movff	1078,_inPipes+4	;volatile
 20185  00447C  C437 F0FE          	movff	1079,_inPipes+5	;volatile
 20186  004480                     i2l475:
 20187                           
 20188                           ; BSR set to: 4
 20189                           ;usb_device.c: 1508: }
 20190                           ;usb_device.c: 1509: USBCtrlTrfTxService();
 20191                           
 20192                           ; BSR set to: 4
 20193  004480  ECE1  F01E         	call	_USBCtrlTrfTxService	;wreg free
 20194                           
 20195                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 20196  004484  EE20 F002          	lfsr	2,2
 20197  004488  5040               	movf	_pBDTEntryIn,w,c
 20198  00448A  26D9               	addwf	fsr2l,f,c
 20199  00448C  5041               	movf	_pBDTEntryIn+1,w,c
 20200  00448E  22DA               	addwfc	fsr2h,f,c
 20201  004490  0E38               	movlw	56
 20202  004492  6EDE               	movwf	postinc2,c
 20203  004494  0E04               	movlw	4
 20204  004496  6EDD               	movwf	postdec2,c
 20205                           
 20206                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 20207  004498  C040  FFD9         	movff	_pBDTEntryIn,fsr2l
 20208  00449C  C041  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20209  0044A0  0E48               	movlw	72
 20210  0044A2  6EDF               	movwf	indf2,c
 20211                           
 20212                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
 20213  0044A4  C040  FFD9         	movff	_pBDTEntryIn,fsr2l
 20214  0044A8  C041  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20215  0044AC  0E00               	movlw	0
 20216  0044AE  8EDB               	bsf	plusw2,7,c
 20217  0044B0  0012               	return	
 20218  0044B2                     __end_of_USBCtrlEPAllowDataStage:
 20219                           	opt stack 0
 20220                           pclatu	equ	0xFFB
 20221                           pclath	equ	0xFFA
 20222                           tblptru	equ	0xFF8
 20223                           tblptrh	equ	0xFF7
 20224                           tblptrl	equ	0xFF6
 20225                           tablat	equ	0xFF5
 20226                           prodh	equ	0xFF4
 20227                           prodl	equ	0xFF3
 20228                           intcon	equ	0xFF2
 20229                           indf0	equ	0xFEF
 20230                           postinc0	equ	0xFEE
 20231                           fsr0h	equ	0xFEA
 20232                           fsr0l	equ	0xFE9
 20233                           wreg	equ	0xFE8
 20234                           indf1	equ	0xFE7
 20235                           postdec1	equ	0xFE5
 20236                           fsr1h	equ	0xFE2
 20237                           fsr1l	equ	0xFE1
 20238                           indf2	equ	0xFDF
 20239                           postinc2	equ	0xFDE
 20240                           postdec2	equ	0xFDD
 20241                           plusw2	equ	0xFDB
 20242                           fsr2h	equ	0xFDA
 20243                           fsr2l	equ	0xFD9
 20244                           status	equ	0xFD8
 20245                           
 20246 ;; *************** function _USBCheckStdRequest *****************
 20247 ;; Defined at:
 20248 ;;		line 2686 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 20249 ;; Parameters:    Size  Location     Type
 20250 ;;		None
 20251 ;; Auto vars:     Size  Location     Type
 20252 ;;		None
 20253 ;; Return value:  Size  Location     Type
 20254 ;;                  1    wreg      void 
 20255 ;; Registers used:
 20256 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20257 ;; Tracked objects:
 20258 ;;		On entry : 0/0
 20259 ;;		On exit  : 0/0
 20260 ;;		Unchanged: 0/0
 20261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20262 ;;      Params:         0       0       0       0       0       0       0       0       0
 20263 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20264 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20265 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20266 ;;Total ram usage:        0 bytes
 20267 ;; Hardware stack levels used:    1
 20268 ;; Hardware stack levels required when called:    5
 20269 ;; This function calls:
 20270 ;;		_USBStdFeatureReqHandler
 20271 ;;		_USBStdGetDscHandler
 20272 ;;		_USBStdGetStatusHandler
 20273 ;;		_USBStdSetCfgHandler
 20274 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20275 ;; This function is called by:
 20276 ;;		_USBCtrlTrfSetupHandler
 20277 ;; This function uses a non-reentrant model
 20278 ;;
 20279                           
 20280                           	psect	text77
 20281  003B22                     __ptext77:
 20282                           	opt stack 0
 20283  003B22                     _USBCheckStdRequest:
 20284                           	opt stack 16
 20285                           
 20286                           ;usb_device.c: 2688: if(SetupPkt.RequestType != (0x00>>5)) return;
 20287                           
 20288                           ;incstack = 0
 20289  003B22  0104               	movlb	4	; () banked
 20290  003B24  3930               	swapf	48,w,b	;volatile
 20291  003B26  32E8               	rrcf	wreg,f,c
 20292  003B28  0B03               	andlw	3
 20293  003B2A  0900               	iorlw	0
 20294  003B2C  A4D8               	btfss	status,2,c
 20295  003B2E  0012               	return	
 20296  003B30  D047               	goto	i2l608
 20297  003B32                     i2l609:
 20298                           
 20299                           ; BSR set to: 4
 20300                           ;usb_device.c: 2693: inPipes[0].info.bits.busy = 1;
 20301  003B32  0100               	movlb	0	; () banked
 20302  003B34  8FFC               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 20303                           
 20304                           ; BSR set to: 0
 20305                           ;usb_device.c: 2694: USBDeviceState = ADR_PENDING_STATE;
 20306  003B36  0E08               	movlw	8
 20307  003B38  6E58               	movwf	_USBDeviceState,c	;volatile
 20308                           
 20309                           ;usb_device.c: 2696: break;
 20310  003B3A  0012               	return	
 20311  003B3C                     
 20312                           ;usb_device.c: 2698: USBStdGetDscHandler();
 20313                           
 20314                           ; BSR set to: 0
 20315  003B3C  EC47  F017         	call	_USBStdGetDscHandler	;wreg free
 20316                           
 20317                           ;usb_device.c: 2699: break;
 20318  003B40  0012               	return	
 20319  003B42                     
 20320                           ;usb_device.c: 2701: USBStdSetCfgHandler();
 20321  003B42  EC72  F01E         	call	_USBStdSetCfgHandler	;wreg free
 20322                           
 20323                           ;usb_device.c: 2702: break;
 20324  003B46  0012               	return	
 20325  003B48                     
 20326                           ;usb_device.c: 2704: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 20327  003B48  0E5E               	movlw	low _USBActiveConfiguration
 20328  003B4A  0100               	movlb	0	; () banked
 20329  003B4C  6FF9               	movwf	_inPipes& (0+255),b	;volatile
 20330  003B4E  0E00               	movlw	high _USBActiveConfiguration
 20331  003B50  6FFA               	movwf	(_inPipes+1)& (0+255),b	;volatile
 20332                           
 20333                           ; BSR set to: 0
 20334                           ;usb_device.c: 2705: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 20335  003B52  81FC               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 20336                           
 20337                           ; BSR set to: 0
 20338                           ;usb_device.c: 2706: inPipes[0].wCount.v[0] = 1;
 20339  003B54  0E01               	movlw	1
 20340  003B56  6FFD               	movwf	(_inPipes+4)& (0+255),b	;volatile
 20341                           
 20342                           ; BSR set to: 0
 20343                           ;usb_device.c: 2707: inPipes[0].info.bits.busy = 1;
 20344  003B58  8FFC               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 20345                           
 20346                           ;usb_device.c: 2708: break;
 20347  003B5A  0012               	return	
 20348  003B5C                     
 20349                           ;usb_device.c: 2710: USBStdGetStatusHandler();
 20350                           
 20351                           ; BSR set to: 0
 20352  003B5C  EC65  F021         	call	_USBStdGetStatusHandler	;wreg free
 20353                           
 20354                           ;usb_device.c: 2711: break;
 20355  003B60  0012               	return	
 20356  003B62                     
 20357                           ;usb_device.c: 2713: case 3:
 20358                           ;usb_device.c: 2714: USBStdFeatureReqHandler();
 20359  003B62  ECA2  F010         	call	_USBStdFeatureReqHandler	;wreg free
 20360                           
 20361                           ;usb_device.c: 2715: break;
 20362  003B66  0012               	return	
 20363  003B68                     
 20364                           ;usb_device.c: 2717: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 20365  003B68  0104               	movlb	4	; () banked
 20366  003B6A  5134               	movf	52,w,b	;volatile
 20367  003B6C  0D01               	mullw	1
 20368  003B6E  0EFD               	movlw	low _USBAlternateInterface
 20369  003B70  24F3               	addwf	prodl,w,c
 20370  003B72  0100               	movlb	0	; () banked
 20371  003B74  6FF9               	movwf	_inPipes& (0+255),b	;volatile
 20372  003B76  0E02               	movlw	high _USBAlternateInterface
 20373  003B78  20F4               	addwfc	prodh,w,c
 20374  003B7A  6FFA               	movwf	(_inPipes+1)& (0+255),b	;volatile
 20375                           
 20376                           ; BSR set to: 0
 20377                           ;usb_device.c: 2718: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 20378  003B7C  81FC               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 20379                           
 20380                           ; BSR set to: 0
 20381                           ;usb_device.c: 2719: inPipes[0].wCount.v[0] = 1;
 20382  003B7E  0E01               	movlw	1
 20383  003B80  6FFD               	movwf	(_inPipes+4)& (0+255),b	;volatile
 20384                           
 20385                           ; BSR set to: 0
 20386                           ;usb_device.c: 2720: inPipes[0].info.bits.busy = 1;
 20387  003B82  8FFC               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 20388                           
 20389                           ;usb_device.c: 2721: break;
 20390  003B84  0012               	return	
 20391  003B86                     i2l618:
 20392                           
 20393                           ; BSR set to: 4
 20394                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
 20395  003B86  0100               	movlb	0	; () banked
 20396  003B88  8FFC               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 20397                           
 20398                           ; BSR set to: 0
 20399                           ;usb_device.c: 2724: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 20400  003B8A  0104               	movlb	4	; () banked
 20401  003B8C  5134               	movf	52,w,b	;volatile
 20402  003B8E  0D01               	mullw	1
 20403  003B90  0EFD               	movlw	low _USBAlternateInterface
 20404  003B92  24F3               	addwf	prodl,w,c
 20405  003B94  6ED9               	movwf	fsr2l,c
 20406  003B96  0E02               	movlw	high _USBAlternateInterface
 20407  003B98  20F4               	addwfc	prodh,w,c
 20408  003B9A  6EDA               	movwf	fsr2h,c
 20409  003B9C  C432 FFDF          	movff	1074,indf2	;volatile
 20410                           
 20411                           ;usb_device.c: 2725: break;
 20412  003BA0  0012               	return	
 20413  003BA2                     
 20414                           ; BSR set to: 4
 20415                           ;usb_device.c: 2727: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 20416                           
 20417                           ; BSR set to: 4
 20418  003BA2  0E00               	movlw	0
 20419  003BA4  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 20420  003BA6  0E02               	movlw	2
 20421  003BA8  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 20422  003BAA  0E00               	movlw	0
 20423  003BAC  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 20424  003BAE  0E00               	movlw	0
 20425  003BB0  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 20426  003BB2  0E00               	movlw	0
 20427  003BB4  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 20428  003BB6  0E00               	movlw	0
 20429  003BB8  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 20430  003BBA  EC73  F026         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 20431                           
 20432                           ;usb_device.c: 2732: }
 20433                           
 20434                           ;usb_device.c: 2731: break;
 20435                           
 20436                           ;usb_device.c: 2730: default:
 20437                           
 20438                           ;usb_device.c: 2729: case 12:
 20439                           
 20440                           ;usb_device.c: 2728: break;
 20441  003BBE  0012               	return	
 20442  003BC0                     i2l608:
 20443  003BC0  0104               	movlb	4	; () banked
 20444  003BC2  5131               	movf	49,w,b	;volatile
 20445                           
 20446                           ; Switch size 1, requested type "space"
 20447                           ; Number of cases is 11, Range of values is 0 to 12
 20448                           ; switch strategies available:
 20449                           ; Name         Instructions Cycles
 20450                           ; simple_byte           34    18 (average)
 20451                           ;	Chosen strategy is simple_byte
 20452  003BC4  0A00               	xorlw	0	; case 0
 20453  003BC6  B4D8               	btfsc	status,2,c
 20454  003BC8  D7C9               	goto	i2l614
 20455  003BCA  0A01               	xorlw	1	; case 1
 20456  003BCC  B4D8               	btfsc	status,2,c
 20457  003BCE  D7C9               	goto	i2l615
 20458  003BD0  0A02               	xorlw	2	; case 3
 20459  003BD2  B4D8               	btfsc	status,2,c
 20460  003BD4  D7C6               	goto	i2l615
 20461  003BD6  0A06               	xorlw	6	; case 5
 20462  003BD8  B4D8               	btfsc	status,2,c
 20463  003BDA  D7AB               	goto	i2l609
 20464  003BDC  0A03               	xorlw	3	; case 6
 20465  003BDE  B4D8               	btfsc	status,2,c
 20466  003BE0  D7AD               	goto	i2l611
 20467  003BE2  0A01               	xorlw	1	; case 7
 20468  003BE4  B4D8               	btfsc	status,2,c
 20469  003BE6  D7DD               	goto	i2l619
 20470  003BE8  0A0F               	xorlw	15	; case 8
 20471  003BEA  B4D8               	btfsc	status,2,c
 20472  003BEC  D7AD               	goto	i2l613
 20473  003BEE  0A01               	xorlw	1	; case 9
 20474  003BF0  B4D8               	btfsc	status,2,c
 20475  003BF2  D7A7               	goto	i2l612
 20476  003BF4  0A03               	xorlw	3	; case 10
 20477  003BF6  B4D8               	btfsc	status,2,c
 20478  003BF8  D7B7               	goto	i2l617
 20479  003BFA  0A01               	xorlw	1	; case 11
 20480  003BFC  B4D8               	btfsc	status,2,c
 20481  003BFE  D7C3               	goto	i2l618
 20482  003C00  0A07               	xorlw	7	; case 12
 20483  003C02  0012               	return	
 20484  003C04                     __end_of_USBCheckStdRequest:
 20485                           	opt stack 0
 20486                           pclatu	equ	0xFFB
 20487                           pclath	equ	0xFFA
 20488                           tblptru	equ	0xFF8
 20489                           tblptrh	equ	0xFF7
 20490                           tblptrl	equ	0xFF6
 20491                           tablat	equ	0xFF5
 20492                           prodh	equ	0xFF4
 20493                           prodl	equ	0xFF3
 20494                           intcon	equ	0xFF2
 20495                           indf0	equ	0xFEF
 20496                           postinc0	equ	0xFEE
 20497                           fsr0h	equ	0xFEA
 20498                           fsr0l	equ	0xFE9
 20499                           wreg	equ	0xFE8
 20500                           indf1	equ	0xFE7
 20501                           postdec1	equ	0xFE5
 20502                           fsr1h	equ	0xFE2
 20503                           fsr1l	equ	0xFE1
 20504                           indf2	equ	0xFDF
 20505                           postinc2	equ	0xFDE
 20506                           postdec2	equ	0xFDD
 20507                           plusw2	equ	0xFDB
 20508                           fsr2h	equ	0xFDA
 20509                           fsr2l	equ	0xFD9
 20510                           status	equ	0xFD8
 20511                           
 20512 ;; *************** function _USBStdSetCfgHandler *****************
 20513 ;; Defined at:
 20514 ;;		line 1968 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 20515 ;; Parameters:    Size  Location     Type
 20516 ;;		None
 20517 ;; Auto vars:     Size  Location     Type
 20518 ;;  i               1   20[COMRAM] unsigned char 
 20519 ;; Return value:  Size  Location     Type
 20520 ;;                  1    wreg      void 
 20521 ;; Registers used:
 20522 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20523 ;; Tracked objects:
 20524 ;;		On entry : 0/0
 20525 ;;		On exit  : 0/0
 20526 ;;		Unchanged: 0/0
 20527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20528 ;;      Params:         0       0       0       0       0       0       0       0       0
 20529 ;;      Locals:         1       0       0       0       0       0       0       0       0
 20530 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20531 ;;      Totals:         1       0       0       0       0       0       0       0       0
 20532 ;;Total ram usage:        1 bytes
 20533 ;; Hardware stack levels used:    1
 20534 ;; Hardware stack levels required when called:    4
 20535 ;; This function calls:
 20536 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20537 ;;		i2_memset
 20538 ;; This function is called by:
 20539 ;;		_USBCheckStdRequest
 20540 ;; This function uses a non-reentrant model
 20541 ;;
 20542                           
 20543                           	psect	text78
 20544  003CE4                     __ptext78:
 20545                           	opt stack 0
 20546  003CE4                     _USBStdSetCfgHandler:
 20547                           	opt stack 16
 20548                           
 20549                           ;usb_device.c: 1970: uint8_t i;
 20550                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
 20551                           
 20552                           ;incstack = 0
 20553  003CE4  0100               	movlb	0	; () banked
 20554  003CE6  8FFC               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 20555                           
 20556                           ; BSR set to: 0
 20557                           ;usb_device.c: 1976: memset((void*)&UEP1,0x00,(2));;
 20558  003CE8  0E71               	movlw	113
 20559  003CEA  6E01               	movwf	i2memset@p1,c
 20560  003CEC  0E0F               	movlw	15
 20561  003CEE  6E02               	movwf	i2memset@p1+1,c
 20562  003CF0  0E00               	movlw	0
 20563  003CF2  6E04               	movwf	i2memset@c+1,c
 20564  003CF4  0E00               	movlw	0
 20565  003CF6  6E03               	movwf	i2memset@c,c
 20566  003CF8  0E00               	movlw	0
 20567  003CFA  6E06               	movwf	i2memset@n+1,c
 20568  003CFC  0E02               	movlw	2
 20569  003CFE  6E05               	movwf	i2memset@n,c
 20570  003D00  ECD2  F029         	call	i2_memset	;wreg free
 20571                           
 20572                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 20573  003D04  0E00               	movlw	0
 20574  003D06  6E01               	movwf	i2memset@p1,c
 20575  003D08  0E04               	movlw	4
 20576  003D0A  6E02               	movwf	i2memset@p1+1,c
 20577  003D0C  0E00               	movlw	0
 20578  003D0E  6E04               	movwf	i2memset@c+1,c
 20579  003D10  0E00               	movlw	0
 20580  003D12  6E03               	movwf	i2memset@c,c
 20581  003D14  0E00               	movlw	0
 20582  003D16  6E06               	movwf	i2memset@n+1,c
 20583  003D18  0E30               	movlw	48
 20584  003D1A  6E05               	movwf	i2memset@n,c
 20585  003D1C  ECD2  F029         	call	i2_memset	;wreg free
 20586                           
 20587                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
 20588  003D20  8C6D               	bsf	3949,6,c	;volatile
 20589                           
 20590                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
 20591  003D22  0E00               	movlw	0
 20592  003D24  6E15               	movwf	USBStdSetCfgHandler@i,c
 20593  003D26                     i2l7642:
 20594  003D26  0E02               	movlw	2
 20595  003D28  6415               	cpfsgt	USBStdSetCfgHandler@i,c
 20596  003D2A  D001               	goto	i2l525
 20597  003D2C  D016               	goto	i2u590_40
 20598  003D2E                     i2l525:
 20599                           
 20600                           ;usb_device.c: 1988: {
 20601                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
 20602  003D2E  5015               	movf	USBStdSetCfgHandler@i,w,c
 20603  003D30  0D01               	mullw	1
 20604  003D32  0ED5               	movlw	low _ep_data_in
 20605  003D34  24F3               	addwf	prodl,w,c
 20606  003D36  6ED9               	movwf	fsr2l,c
 20607  003D38  0E02               	movlw	high _ep_data_in
 20608  003D3A  20F4               	addwfc	prodh,w,c
 20609  003D3C  6EDA               	movwf	fsr2h,c
 20610  003D3E  0E00               	movlw	0
 20611  003D40  6EDF               	movwf	indf2,c
 20612                           
 20613                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
 20614  003D42  5015               	movf	USBStdSetCfgHandler@i,w,c
 20615  003D44  0D01               	mullw	1
 20616  003D46  0ED2               	movlw	low _ep_data_out
 20617  003D48  24F3               	addwf	prodl,w,c
 20618  003D4A  6ED9               	movwf	fsr2l,c
 20619  003D4C  0E02               	movlw	high _ep_data_out
 20620  003D4E  20F4               	addwfc	prodh,w,c
 20621  003D50  6EDA               	movwf	fsr2h,c
 20622  003D52  0E00               	movlw	0
 20623  003D54  6EDF               	movwf	indf2,c
 20624  003D56  2A15               	incf	USBStdSetCfgHandler@i,f,c
 20625  003D58  D7E6               	goto	i2l7642
 20626  003D5A                     i2u590_40:
 20627                           
 20628                           ;usb_device.c: 1991: }
 20629                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
 20630  003D5A  0EFD               	movlw	low _USBAlternateInterface
 20631  003D5C  6E01               	movwf	i2memset@p1,c
 20632  003D5E  0E02               	movlw	high _USBAlternateInterface
 20633  003D60  6E02               	movwf	i2memset@p1+1,c
 20634  003D62  0E00               	movlw	0
 20635  003D64  6E04               	movwf	i2memset@c+1,c
 20636  003D66  0E00               	movlw	0
 20637  003D68  6E03               	movwf	i2memset@c,c
 20638  003D6A  0E00               	movlw	0
 20639  003D6C  6E06               	movwf	i2memset@n+1,c
 20640  003D6E  0E02               	movlw	2
 20641  003D70  6E05               	movwf	i2memset@n,c
 20642  003D72  ECD2  F029         	call	i2_memset	;wreg free
 20643                           
 20644                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
 20645  003D76  9C6D               	bcf	3949,6,c	;volatile
 20646                           
 20647                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 20648  003D78  0E08               	movlw	8
 20649  003D7A  6E40               	movwf	_pBDTEntryIn,c
 20650  003D7C  0E04               	movlw	4
 20651  003D7E  6E41               	movwf	_pBDTEntryIn+1,c
 20652                           
 20653                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 20654  003D80  0E00               	movlw	0
 20655  003D82  6E4E               	movwf	_pBDTEntryEP0OutCurrent,c
 20656  003D84  0E04               	movlw	4
 20657  003D86  6E4F               	movwf	_pBDTEntryEP0OutCurrent+1,c
 20658                           
 20659                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 20660  003D88  C04E  F04C         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 20661  003D8C  C04F  F04D         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 20662                           
 20663                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 20664  003D90  C432 F05E          	movff	1074,_USBActiveConfiguration	;volatile
 20665                           
 20666                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
 20667  003D94  505E               	movf	_USBActiveConfiguration,w,c	;volatile
 20668  003D96  A4D8               	btfss	status,2,c
 20669  003D98  D003               	goto	i2l527
 20670                           
 20671                           ;usb_device.c: 2010: {
 20672                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
 20673  003D9A  0E10               	movlw	16
 20674  003D9C  6E58               	movwf	_USBDeviceState,c	;volatile
 20675                           
 20676                           ;usb_device.c: 2013: }
 20677  003D9E  0012               	return	
 20678  003DA0                     i2l527:
 20679                           
 20680                           ;usb_device.c: 2014: else
 20681                           ;usb_device.c: 2015: {
 20682                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 20683  003DA0  0E00               	movlw	0
 20684  003DA2  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 20685  003DA4  0E01               	movlw	1
 20686  003DA6  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 20687  003DA8  0E5E               	movlw	low _USBActiveConfiguration
 20688  003DAA  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 20689  003DAC  0E00               	movlw	high _USBActiveConfiguration
 20690  003DAE  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 20691  003DB0  0E00               	movlw	0
 20692  003DB2  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 20693  003DB4  0E01               	movlw	1
 20694  003DB6  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 20695  003DB8  EC73  F026         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 20696                           
 20697                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
 20698  003DBC  0E20               	movlw	32
 20699  003DBE  6E58               	movwf	_USBDeviceState,c	;volatile
 20700  003DC0  0012               	return	
 20701  003DC2                     __end_of_USBStdSetCfgHandler:
 20702                           	opt stack 0
 20703                           pclatu	equ	0xFFB
 20704                           pclath	equ	0xFFA
 20705                           tblptru	equ	0xFF8
 20706                           tblptrh	equ	0xFF7
 20707                           tblptrl	equ	0xFF6
 20708                           tablat	equ	0xFF5
 20709                           prodh	equ	0xFF4
 20710                           prodl	equ	0xFF3
 20711                           intcon	equ	0xFF2
 20712                           indf0	equ	0xFEF
 20713                           postinc0	equ	0xFEE
 20714                           fsr0h	equ	0xFEA
 20715                           fsr0l	equ	0xFE9
 20716                           wreg	equ	0xFE8
 20717                           indf1	equ	0xFE7
 20718                           postdec1	equ	0xFE5
 20719                           fsr1h	equ	0xFE2
 20720                           fsr1l	equ	0xFE1
 20721                           indf2	equ	0xFDF
 20722                           postinc2	equ	0xFDE
 20723                           postdec2	equ	0xFDD
 20724                           plusw2	equ	0xFDB
 20725                           fsr2h	equ	0xFDA
 20726                           fsr2l	equ	0xFD9
 20727                           status	equ	0xFD8
 20728                           
 20729 ;; *************** function i2_memset *****************
 20730 ;; Defined at:
 20731 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\memset.c"
 20732 ;; Parameters:    Size  Location     Type
 20733 ;;  p1              2    0[COMRAM] PTR void 
 20734 ;;		 -> frameBuffer(150), USBAlternateInterface(2), BDT(48), UEP1(1), 
 20735 ;;  c               2    2[COMRAM] int 
 20736 ;;  n               2    4[COMRAM] unsigned int 
 20737 ;; Auto vars:     Size  Location     Type
 20738 ;;  memset          2    6[COMRAM] PTR unsigned char 
 20739 ;;		 -> frameBuffer(150), USBAlternateInterface(2), BDT(48), UEP1(1), 
 20740 ;; Return value:  Size  Location     Type
 20741 ;;                  2    0[COMRAM] PTR void 
 20742 ;; Registers used:
 20743 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20744 ;; Tracked objects:
 20745 ;;		On entry : 0/0
 20746 ;;		On exit  : 0/0
 20747 ;;		Unchanged: 0/0
 20748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20749 ;;      Params:         6       0       0       0       0       0       0       0       0
 20750 ;;      Locals:         2       0       0       0       0       0       0       0       0
 20751 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20752 ;;      Totals:         8       0       0       0       0       0       0       0       0
 20753 ;;Total ram usage:        8 bytes
 20754 ;; Hardware stack levels used:    1
 20755 ;; This function calls:
 20756 ;;		Nothing
 20757 ;; This function is called by:
 20758 ;;		_USBStdSetCfgHandler
 20759 ;;		i2_USBDeviceInit
 20760 ;; This function uses a non-reentrant model
 20761 ;;
 20762                           
 20763                           	psect	text79
 20764  0053A4                     __ptext79:
 20765                           	opt stack 0
 20766  0053A4                     i2_memset:
 20767                           	opt stack 22
 20768                           
 20769                           ;incstack = 0
 20770  0053A4  C001  F007         	movff	i2memset@p1,i2memset@p
 20771  0053A8  C002  F008         	movff	i2memset@p1+1,i2memset@p+1
 20772  0053AC  D008               	goto	i2l3240
 20773  0053AE                     i2l7572:
 20774  0053AE  C007  FFD9         	movff	i2memset@p,fsr2l
 20775  0053B2  C008  FFDA         	movff	i2memset@p+1,fsr2h
 20776  0053B6  C003  FFDF         	movff	i2memset@c,indf2
 20777  0053BA  4A07               	infsnz	i2memset@p,f,c
 20778  0053BC  2A08               	incf	i2memset@p+1,f,c
 20779  0053BE                     i2l3240:
 20780  0053BE  0605               	decf	i2memset@n,f,c
 20781  0053C0  A0D8               	btfss	status,0,c
 20782  0053C2  0606               	decf	i2memset@n+1,f,c
 20783  0053C4  2805               	incf	i2memset@n,w,c
 20784  0053C6  E1F3               	bnz	i2l7572
 20785  0053C8  2806               	incf	i2memset@n+1,w,c
 20786  0053CA  B4D8               	btfsc	status,2,c
 20787  0053CC  0012               	return	
 20788  0053CE  D7EF               	goto	i2l3241
 20789  0053D0                     __end_ofi2_memset:
 20790                           	opt stack 0
 20791                           pclatu	equ	0xFFB
 20792                           pclath	equ	0xFFA
 20793                           tblptru	equ	0xFF8
 20794                           tblptrh	equ	0xFF7
 20795                           tblptrl	equ	0xFF6
 20796                           tablat	equ	0xFF5
 20797                           prodh	equ	0xFF4
 20798                           prodl	equ	0xFF3
 20799                           intcon	equ	0xFF2
 20800                           indf0	equ	0xFEF
 20801                           postinc0	equ	0xFEE
 20802                           fsr0h	equ	0xFEA
 20803                           fsr0l	equ	0xFE9
 20804                           wreg	equ	0xFE8
 20805                           indf1	equ	0xFE7
 20806                           postdec1	equ	0xFE5
 20807                           fsr1h	equ	0xFE2
 20808                           fsr1l	equ	0xFE1
 20809                           indf2	equ	0xFDF
 20810                           postinc2	equ	0xFDE
 20811                           postdec2	equ	0xFDD
 20812                           plusw2	equ	0xFDB
 20813                           fsr2h	equ	0xFDA
 20814                           fsr2l	equ	0xFD9
 20815                           status	equ	0xFD8
 20816                           
 20817 ;; *************** function _USBStdGetStatusHandler *****************
 20818 ;; Defined at:
 20819 ;;		line 2129 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 20820 ;; Parameters:    Size  Location     Type
 20821 ;;		None
 20822 ;; Auto vars:     Size  Location     Type
 20823 ;;  p               2    1[COMRAM] PTR struct __BDT
 20824 ;;		 -> RAM(2047), NULL(0), BDT(48), 
 20825 ;; Return value:  Size  Location     Type
 20826 ;;                  1    wreg      void 
 20827 ;; Registers used:
 20828 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20829 ;; Tracked objects:
 20830 ;;		On entry : 0/0
 20831 ;;		On exit  : 0/0
 20832 ;;		Unchanged: 0/0
 20833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20834 ;;      Params:         0       0       0       0       0       0       0       0       0
 20835 ;;      Locals:         2       0       0       0       0       0       0       0       0
 20836 ;;      Temps:          1       0       0       0       0       0       0       0       0
 20837 ;;      Totals:         3       0       0       0       0       0       0       0       0
 20838 ;;Total ram usage:        3 bytes
 20839 ;; Hardware stack levels used:    1
 20840 ;; This function calls:
 20841 ;;		Nothing
 20842 ;; This function is called by:
 20843 ;;		_USBCheckStdRequest
 20844 ;; This function uses a non-reentrant model
 20845 ;;
 20846                           
 20847                           	psect	text80
 20848  0042CA                     __ptext80:
 20849                           	opt stack 0
 20850  0042CA                     _USBStdGetStatusHandler:
 20851                           	opt stack 20
 20852                           
 20853                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
 20854                           
 20855                           ;incstack = 0
 20856  0042CA  0E00               	movlw	0
 20857  0042CC  0104               	movlb	4	; () banked
 20858  0042CE  6F38               	movwf	56,b	;volatile
 20859                           
 20860                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
 20861  0042D0  0E00               	movlw	0
 20862  0042D2  6F39               	movwf	57,b	;volatile
 20863                           
 20864                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
 20865  0042D4  D039               	goto	i2l546
 20866  0042D6                     i2l547:
 20867                           
 20868                           ; BSR set to: 4
 20869                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
 20870  0042D6  0100               	movlb	0	; () banked
 20871  0042D8  8FFC               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 20872                           
 20873                           ;usb_device.c: 2145: }
 20874                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
 20875                           
 20876                           ; BSR set to: 4
 20877                           
 20878                           ; BSR set to: 0
 20879                           ;usb_device.c: 2143: {
 20880                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
 20881                           
 20882                           ;usb_device.c: 2142: if(0 == 1)
 20883  0042DA  0101               	movlb	1	; () banked
 20884  0042DC  05FA               	decf	_RemoteWakeup& (0+255),w,b	;volatile
 20885  0042DE  A4D8               	btfss	status,2,c
 20886  0042E0  D03E               	goto	i2l550
 20887                           
 20888                           ; BSR set to: 1
 20889                           ;usb_device.c: 2148: {
 20890                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
 20891  0042E2  0104               	movlb	4	; () banked
 20892  0042E4  8338               	bsf	56,1,b	;volatile
 20893                           
 20894                           ; BSR set to: 4
 20895                           ;usb_device.c: 2150: }
 20896                           ;usb_device.c: 2151: break;
 20897  0042E6  D03B               	goto	i2l550
 20898  0042E8                     i2l551:
 20899                           
 20900                           ; BSR set to: 4
 20901                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
 20902  0042E8  0100               	movlb	0	; () banked
 20903  0042EA  8FFC               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 20904                           
 20905                           ;usb_device.c: 2154: break;
 20906  0042EC  D038               	goto	i2l550
 20907  0042EE                     i2l552:
 20908                           
 20909                           ; BSR set to: 4
 20910                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
 20911  0042EE  0100               	movlb	0	; () banked
 20912  0042F0  8FFC               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 20913                           
 20914                           ;usb_device.c: 2160: {
 20915                           ;usb_device.c: 2161: BDT_ENTRY *p;
 20916                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
 20917  0042F2  0104               	movlb	4	; () banked
 20918  0042F4  BF34               	btfsc	52,7,b	;volatile
 20919  0042F6  D00A               	goto	i2l553
 20920                           
 20921                           ; BSR set to: 4
 20922                           ;usb_device.c: 2164: {
 20923                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 20924  0042F8  5134               	movf	52,w,b	;volatile
 20925  0042FA  0B0F               	andlw	15
 20926  0042FC  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 20927  0042FE  5001               	movf	??_USBStdGetStatusHandler,w,c
 20928  004300  0D02               	mullw	2
 20929  004302  0EC8               	movlw	low _pBDTEntryOut
 20930  004304  24F3               	addwf	prodl,w,c
 20931  004306  6ED9               	movwf	fsr2l,c
 20932  004308  0E02               	movlw	high _pBDTEntryOut
 20933  00430A  D009               	goto	L19
 20934  00430C                     i2l553:
 20935                           
 20936                           ; BSR set to: 4
 20937                           ;usb_device.c: 2167: else
 20938                           ;usb_device.c: 2168: {
 20939                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 20940                           
 20941                           ; BSR set to: 4
 20942  00430C  5134               	movf	52,w,b	;volatile
 20943  00430E  0B0F               	andlw	15
 20944  004310  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 20945  004312  5001               	movf	??_USBStdGetStatusHandler,w,c
 20946  004314  0D02               	mullw	2
 20947  004316  0E40               	movlw	low _pBDTEntryIn
 20948  004318  24F3               	addwf	prodl,w,c
 20949  00431A  6ED9               	movwf	fsr2l,c
 20950  00431C  0E00               	movlw	high _pBDTEntryIn
 20951  00431E                     L19:
 20952  00431E  20F4               	addwfc	prodh,w,c
 20953  004320  6EDA               	movwf	fsr2h,c
 20954  004322  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 20955  004326  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 20956                           
 20957                           ; BSR set to: 4
 20958                           ;usb_device.c: 2170: }
 20959                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 20960                           
 20961                           ; BSR set to: 4
 20962  00432A  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 20963  00432E  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 20964  004332  AEDF               	btfss	indf2,7,c
 20965  004334  D014               	goto	i2l550
 20966                           
 20967                           ; BSR set to: 4
 20968  004336  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 20969  00433A  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 20970  00433E  A4DF               	btfss	indf2,2,c
 20971  004340  D00E               	goto	i2l550
 20972                           
 20973                           ; BSR set to: 4
 20974                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
 20975  004342  0E01               	movlw	1
 20976  004344  6F38               	movwf	56,b	;volatile
 20977                           
 20978                           ; BSR set to: 4
 20979                           ;usb_device.c: 2175: }
 20980                           ;usb_device.c: 2176: }
 20981                           
 20982                           ; BSR set to: 4
 20983                           ;usb_device.c: 2174: break;
 20984  004346  D00B               	goto	i2l550
 20985  004348                     i2l546:
 20986                           
 20987                           ; BSR set to: 4
 20988                           
 20989                           ; BSR set to: 4
 20990  004348  5130               	movf	48,w,b	;volatile
 20991  00434A  0B1F               	andlw	31
 20992                           
 20993                           ; Switch size 1, requested type "space"
 20994                           ; Number of cases is 3, Range of values is 0 to 2
 20995                           ; switch strategies available:
 20996                           ; Name         Instructions Cycles
 20997                           ; simple_byte           10     6 (average)
 20998                           ;	Chosen strategy is simple_byte
 20999  00434C  0A00               	xorlw	0	; case 0
 21000  00434E  B4D8               	btfsc	status,2,c
 21001  004350  D7C2               	goto	i2l547
 21002  004352  0A01               	xorlw	1	; case 1
 21003  004354  B4D8               	btfsc	status,2,c
 21004  004356  D7C8               	goto	i2l551
 21005  004358  0A03               	xorlw	3	; case 2
 21006  00435A  B4D8               	btfsc	status,2,c
 21007  00435C  D7C8               	goto	i2l552
 21008  00435E                     i2l550:
 21009                           
 21010                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
 21011  00435E  0100               	movlb	0	; () banked
 21012  004360  AFFC               	btfss	(_inPipes+3)& (0+255),7,b	;volatile
 21013  004362  0012               	return	
 21014                           
 21015                           ; BSR set to: 0
 21016                           ;usb_device.c: 2179: {
 21017                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 21018  004364  0E38               	movlw	56
 21019  004366  6FF9               	movwf	_inPipes& (0+255),b	;volatile
 21020  004368  0E04               	movlw	4
 21021  00436A  6FFA               	movwf	(_inPipes+1)& (0+255),b	;volatile
 21022                           
 21023                           ; BSR set to: 0
 21024                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 21025  00436C  81FC               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 21026                           
 21027                           ; BSR set to: 0
 21028                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
 21029  00436E  0E02               	movlw	2
 21030  004370  6FFD               	movwf	(_inPipes+4)& (0+255),b	;volatile
 21031  004372  0012               	return	
 21032  004374                     __end_of_USBStdGetStatusHandler:
 21033                           	opt stack 0
 21034                           pclatu	equ	0xFFB
 21035                           pclath	equ	0xFFA
 21036                           tblptru	equ	0xFF8
 21037                           tblptrh	equ	0xFF7
 21038                           tblptrl	equ	0xFF6
 21039                           tablat	equ	0xFF5
 21040                           prodh	equ	0xFF4
 21041                           prodl	equ	0xFF3
 21042                           intcon	equ	0xFF2
 21043                           indf0	equ	0xFEF
 21044                           postinc0	equ	0xFEE
 21045                           fsr0h	equ	0xFEA
 21046                           fsr0l	equ	0xFE9
 21047                           wreg	equ	0xFE8
 21048                           indf1	equ	0xFE7
 21049                           postdec1	equ	0xFE5
 21050                           fsr1h	equ	0xFE2
 21051                           fsr1l	equ	0xFE1
 21052                           indf2	equ	0xFDF
 21053                           postinc2	equ	0xFDE
 21054                           postdec2	equ	0xFDD
 21055                           plusw2	equ	0xFDB
 21056                           fsr2h	equ	0xFDA
 21057                           fsr2l	equ	0xFD9
 21058                           status	equ	0xFD8
 21059                           
 21060 ;; *************** function _USBStdGetDscHandler *****************
 21061 ;; Defined at:
 21062 ;;		line 2043 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 21063 ;; Parameters:    Size  Location     Type
 21064 ;;		None
 21065 ;; Auto vars:     Size  Location     Type
 21066 ;;		None
 21067 ;; Return value:  Size  Location     Type
 21068 ;;                  1    wreg      void 
 21069 ;; Registers used:
 21070 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 21071 ;; Tracked objects:
 21072 ;;		On entry : 0/0
 21073 ;;		On exit  : 0/0
 21074 ;;		Unchanged: 0/0
 21075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21076 ;;      Params:         0       0       0       0       0       0       0       0       0
 21077 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21078 ;;      Temps:          2       0       0       0       0       0       0       0       0
 21079 ;;      Totals:         2       0       0       0       0       0       0       0       0
 21080 ;;Total ram usage:        2 bytes
 21081 ;; Hardware stack levels used:    1
 21082 ;; This function calls:
 21083 ;;		Nothing
 21084 ;; This function is called by:
 21085 ;;		_USBCheckStdRequest
 21086 ;; This function uses a non-reentrant model
 21087 ;;
 21088                           
 21089                           	psect	text81
 21090  002E8E                     __ptext81:
 21091                           	opt stack 0
 21092  002E8E                     _USBStdGetDscHandler:
 21093                           	opt stack 20
 21094                           
 21095                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
 21096                           
 21097                           ; BSR set to: 0
 21098                           ;incstack = 0
 21099  002E8E  0E80               	movlw	128
 21100  002E90  0104               	movlb	4	; () banked
 21101  002E92  1930               	xorwf	48,w,b	;volatile
 21102  002E94  A4D8               	btfss	status,2,c
 21103  002E96  0012               	return	
 21104                           
 21105                           ; BSR set to: 4
 21106                           ;usb_device.c: 2046: {
 21107                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 21108  002E98  0EC0               	movlw	192
 21109  002E9A  0100               	movlb	0	; () banked
 21110  002E9C  6FFC               	movwf	(_inPipes+3)& (0+255),b	;volatile
 21111                           
 21112                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
 21113  002E9E  D082               	goto	i2l533
 21114  002EA0                     
 21115                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 21116                           
 21117                           ; BSR set to: 0
 21118  002EA0  0E52               	movlw	low _device_dsc
 21119  002EA2  0100               	movlb	0	; () banked
 21120  002EA4  6FF9               	movwf	_inPipes& (0+255),b	;volatile
 21121  002EA6  0E7D               	movlw	high _device_dsc
 21122  002EA8  6FFA               	movwf	(_inPipes+1)& (0+255),b	;volatile
 21123                           
 21124                           ; BSR set to: 0
 21125                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
 21126  002EAA  0E00               	movlw	0
 21127  002EAC  6FFE               	movwf	(_inPipes+5)& (0+255),b	;volatile
 21128  002EAE  0E12               	movlw	18
 21129  002EB0  6FFD               	movwf	(_inPipes+4)& (0+255),b	;volatile
 21130                           
 21131                           ;usb_device.c: 2058: break;
 21132  002EB2  0012               	return	
 21133  002EB4                     
 21134                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
 21135                           
 21136                           ; BSR set to: 0
 21137  002EB4  0104               	movlb	4	; () banked
 21138  002EB6  5132               	movf	50,w,b	;volatile
 21139  002EB8  A4D8               	btfss	status,2,c
 21140  002EBA  D040               	goto	i2l537
 21141                           
 21142                           ; BSR set to: 4
 21143                           ;usb_device.c: 2064: {
 21144                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 21145  002EBC  5132               	movf	50,w,b	;volatile
 21146  002EBE  0D02               	mullw	2
 21147  002EC0  0EA5               	movlw	low _USB_CD_Ptr
 21148  002EC2  24F3               	addwf	prodl,w,c
 21149  002EC4  6EF6               	movwf	tblptrl,c
 21150  002EC6  0E7C               	movlw	high _USB_CD_Ptr
 21151  002EC8  20F4               	addwfc	prodh,w,c
 21152  002ECA  6EF7               	movwf	tblptrh,c
 21153  002ECC                     	if	0	;There are less than 3 active tblptr bytes
 21154  002ECC                     	endif
 21155  002ECC  0009               	tblrd		*+
 21156  002ECE  CFF5 F0F9          	movff	tablat,_inPipes	;volatile
 21157  002ED2  000A               	tblrd		*-
 21158  002ED4  CFF5 F0FA          	movff	tablat,_inPipes+1	;volatile
 21159                           
 21160                           ; BSR set to: 4
 21161                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 21162  002ED8  0E02               	movlw	2
 21163  002EDA  0100               	movlb	0	; () banked
 21164  002EDC  25F9               	addwf	_inPipes& (0+255),w,b	;volatile
 21165  002EDE  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 21166  002EE0  0E00               	movlw	0
 21167  002EE2  21FA               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 21168  002EE4  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 21169  002EE6  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 21170  002EEA  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 21171  002EEE  6AF8               	clrf	tblptru,c
 21172  002EF0  0E07               	movlw	(high __ramtop+-1)
 21173  002EF2  64F7               	cpfsgt	tblptrh,c
 21174  002EF4  D003               	bra	i2u594_47
 21175  002EF6  0008               	tblrd		*
 21176  002EF8  50F5               	movf	tablat,w,c
 21177  002EFA  D005               	bra	i2u594_40
 21178  002EFC                     i2u594_47:
 21179  002EFC  CFF6 FFE9          	movff	tblptrl,fsr0l
 21180  002F00  CFF7 FFEA          	movff	tblptrh,fsr0h
 21181  002F04  50EF               	movf	indf0,w,c
 21182  002F06                     i2u594_40:
 21183  002F06  0100               	movlb	0	; () banked
 21184  002F08  6FFD               	movwf	(_inPipes+4)& (0+255),b	;volatile
 21185                           
 21186                           ; BSR set to: 0
 21187                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 21188  002F0A  0E03               	movlw	3
 21189  002F0C  25F9               	addwf	_inPipes& (0+255),w,b	;volatile
 21190  002F0E  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 21191  002F10  0E00               	movlw	0
 21192  002F12  21FA               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 21193  002F14  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 21194  002F16  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 21195  002F1A  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 21196  002F1E  6AF8               	clrf	tblptru,c
 21197  002F20  0E07               	movlw	(high __ramtop+-1)
 21198  002F22  64F7               	cpfsgt	tblptrh,c
 21199  002F24  D003               	bra	i2u595_47
 21200  002F26  0008               	tblrd		*
 21201  002F28  50F5               	movf	tablat,w,c
 21202  002F2A  D005               	bra	i2u595_40
 21203  002F2C                     i2u595_47:
 21204  002F2C  CFF6 FFE9          	movff	tblptrl,fsr0l
 21205  002F30  CFF7 FFEA          	movff	tblptrh,fsr0h
 21206  002F34  50EF               	movf	indf0,w,c
 21207  002F36                     i2u595_40:
 21208  002F36  0100               	movlb	0	; () banked
 21209  002F38  6FFE               	movwf	(_inPipes+5)& (0+255),b	;volatile
 21210                           
 21211                           ;usb_device.c: 2076: }
 21212  002F3A  0012               	return	
 21213  002F3C                     i2l537:
 21214                           
 21215                           ;usb_device.c: 2077: else
 21216                           ;usb_device.c: 2078: {
 21217                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
 21218                           
 21219                           ; BSR set to: 0
 21220  002F3C  0E00               	movlw	0
 21221  002F3E  0100               	movlb	0	; () banked
 21222  002F40  6FFC               	movwf	(_inPipes+3)& (0+255),b	;volatile
 21223                           
 21224                           ; BSR set to: 0
 21225                           ;usb_device.c: 2080: }
 21226                           ;usb_device.c: 2081: break;
 21227  002F42  0012               	return	
 21228  002F44                     
 21229                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
 21230                           
 21231                           ; BSR set to: 0
 21232  002F44  0E03               	movlw	3
 21233  002F46  0104               	movlb	4	; () banked
 21234  002F48  6132               	cpfslt	50,b	;volatile
 21235  002F4A  D024               	goto	i2l540
 21236                           
 21237                           ; BSR set to: 4
 21238                           ;usb_device.c: 2087: {
 21239                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 21240  002F4C  5132               	movf	50,w,b	;volatile
 21241  002F4E  0D02               	mullw	2
 21242  002F50  0E9F               	movlw	low _USB_SD_Ptr
 21243  002F52  24F3               	addwf	prodl,w,c
 21244  002F54  6EF6               	movwf	tblptrl,c
 21245  002F56  0E7C               	movlw	high _USB_SD_Ptr
 21246  002F58  20F4               	addwfc	prodh,w,c
 21247  002F5A  6EF7               	movwf	tblptrh,c
 21248  002F5C                     	if	0	;There are less than 3 active tblptr bytes
 21249  002F5C                     	endif
 21250  002F5C  0009               	tblrd		*+
 21251  002F5E  CFF5 F0F9          	movff	tablat,_inPipes	;volatile
 21252  002F62  000A               	tblrd		*-
 21253  002F64  CFF5 F0FA          	movff	tablat,_inPipes+1	;volatile
 21254                           
 21255                           ; BSR set to: 4
 21256                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 21257  002F68  C0F9  FFF6         	movff	_inPipes,tblptrl	;volatile
 21258  002F6C  C0FA  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 21259  002F70  6AF8               	clrf	tblptru,c
 21260  002F72  0E07               	movlw	(high __ramtop+-1)
 21261  002F74  64F7               	cpfsgt	tblptrh,c
 21262  002F76  D003               	bra	i2u597_47
 21263  002F78  0008               	tblrd		*
 21264  002F7A  50F5               	movf	tablat,w,c
 21265  002F7C  D005               	bra	i2u597_40
 21266  002F7E                     i2u597_47:
 21267  002F7E  CFF6 FFE9          	movff	tblptrl,fsr0l
 21268  002F82  CFF7 FFEA          	movff	tblptrh,fsr0h
 21269  002F86  50EF               	movf	indf0,w,c
 21270  002F88                     i2u597_40:
 21271  002F88  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 21272  002F8A  5001               	movf	??_USBStdGetDscHandler,w,c
 21273  002F8C  0100               	movlb	0	; () banked
 21274  002F8E  6FFD               	movwf	(_inPipes+4)& (0+255),b	;volatile
 21275  002F90  6BFE               	clrf	(_inPipes+5)& (0+255),b	;volatile
 21276                           
 21277                           ;usb_device.c: 2092: }
 21278  002F92  0012               	return	
 21279  002F94                     i2l540:
 21280                           
 21281                           ;usb_device.c: 2102: else
 21282                           ;usb_device.c: 2103: {
 21283                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
 21284                           
 21285                           ; BSR set to: 0
 21286  002F94  0E00               	movlw	0
 21287  002F96  0100               	movlb	0	; () banked
 21288  002F98  6FFC               	movwf	(_inPipes+3)& (0+255),b	;volatile
 21289                           
 21290                           ; BSR set to: 0
 21291                           ;usb_device.c: 2105: }
 21292                           ;usb_device.c: 2106: break;
 21293  002F9A  0012               	return	
 21294  002F9C                     
 21295                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
 21296                           
 21297                           ; BSR set to: 0
 21298  002F9C  0E00               	movlw	0
 21299  002F9E  0100               	movlb	0	; () banked
 21300  002FA0  6FFC               	movwf	(_inPipes+3)& (0+255),b	;volatile
 21301                           
 21302                           ; BSR set to: 0
 21303                           ;usb_device.c: 2110: }
 21304                           
 21305                           ;usb_device.c: 2109: break;
 21306  002FA2  0012               	return	
 21307  002FA4                     i2l533:
 21308                           
 21309                           ; BSR set to: 0
 21310                           
 21311                           ; BSR set to: 0
 21312  002FA4  0104               	movlb	4	; () banked
 21313  002FA6  5133               	movf	51,w,b	;volatile
 21314                           
 21315                           ; Switch size 1, requested type "space"
 21316                           ; Number of cases is 3, Range of values is 1 to 3
 21317                           ; switch strategies available:
 21318                           ; Name         Instructions Cycles
 21319                           ; simple_byte           10     6 (average)
 21320                           ;	Chosen strategy is simple_byte
 21321  002FA8  0A01               	xorlw	1	; case 1
 21322  002FAA  B4D8               	btfsc	status,2,c
 21323  002FAC  D779               	goto	i2l534
 21324  002FAE  0A03               	xorlw	3	; case 2
 21325  002FB0  B4D8               	btfsc	status,2,c
 21326  002FB2  D780               	goto	i2l536
 21327  002FB4  0A01               	xorlw	1	; case 3
 21328  002FB6  B4D8               	btfsc	status,2,c
 21329  002FB8  D7C5               	goto	i2l539
 21330  002FBA  D7F0               	goto	i2l542
 21331  002FBC                     __end_of_USBStdGetDscHandler:
 21332                           	opt stack 0
 21333                           pclatu	equ	0xFFB
 21334                           pclath	equ	0xFFA
 21335                           tblptru	equ	0xFF8
 21336                           tblptrh	equ	0xFF7
 21337                           tblptrl	equ	0xFF6
 21338                           tablat	equ	0xFF5
 21339                           prodh	equ	0xFF4
 21340                           prodl	equ	0xFF3
 21341                           intcon	equ	0xFF2
 21342                           indf0	equ	0xFEF
 21343                           postinc0	equ	0xFEE
 21344                           fsr0h	equ	0xFEA
 21345                           fsr0l	equ	0xFE9
 21346                           wreg	equ	0xFE8
 21347                           indf1	equ	0xFE7
 21348                           postdec1	equ	0xFE5
 21349                           fsr1h	equ	0xFE2
 21350                           fsr1l	equ	0xFE1
 21351                           indf2	equ	0xFDF
 21352                           postinc2	equ	0xFDE
 21353                           postdec2	equ	0xFDD
 21354                           plusw2	equ	0xFDB
 21355                           fsr2h	equ	0xFDA
 21356                           fsr2l	equ	0xFD9
 21357                           status	equ	0xFD8
 21358                           
 21359 ;; *************** function _USBStdFeatureReqHandler *****************
 21360 ;; Defined at:
 21361 ;;		line 2754 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 21362 ;; Parameters:    Size  Location     Type
 21363 ;;		None
 21364 ;; Auto vars:     Size  Location     Type
 21365 ;;  p               2   24[COMRAM] PTR struct __BDT
 21366 ;;		 -> RAM(2047), NULL(0), BDT(48), 
 21367 ;;  pUEP            2   21[COMRAM] PTR unsigned char 
 21368 ;;		 -> UEP0(1), 
 21369 ;;  current_ep_d    1   23[COMRAM] struct .
 21370 ;; Return value:  Size  Location     Type
 21371 ;;                  1    wreg      void 
 21372 ;; Registers used:
 21373 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21374 ;; Tracked objects:
 21375 ;;		On entry : 0/0
 21376 ;;		On exit  : 0/0
 21377 ;;		Unchanged: 0/0
 21378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21379 ;;      Params:         0       0       0       0       0       0       0       0       0
 21380 ;;      Locals:         5       0       0       0       0       0       0       0       0
 21381 ;;      Temps:          1       0       0       0       0       0       0       0       0
 21382 ;;      Totals:         6       0       0       0       0       0       0       0       0
 21383 ;;Total ram usage:        6 bytes
 21384 ;; Hardware stack levels used:    1
 21385 ;; Hardware stack levels required when called:    4
 21386 ;; This function calls:
 21387 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 21388 ;; This function is called by:
 21389 ;;		_USBCheckStdRequest
 21390 ;; This function uses a non-reentrant model
 21391 ;;
 21392                           
 21393                           	psect	text82
 21394  002144                     __ptext82:
 21395                           	opt stack 0
 21396  002144                     _USBStdFeatureReqHandler:
 21397                           	opt stack 16
 21398                           
 21399                           ;usb_device.c: 2756: BDT_ENTRY *p;
 21400                           ;usb_device.c: 2757: EP_STATUS current_ep_data;
 21401                           ;usb_device.c: 2761: unsigned char* pUEP;
 21402                           ;usb_device.c: 2799: if((SetupPkt.bFeature == 1)&&
 21403                           ;usb_device.c: 2800: (SetupPkt.Recipient == (0x00)))
 21404                           
 21405                           ;incstack = 0
 21406  002144  0104               	movlb	4	; () banked
 21407  002146  0532               	decf	50,w,b	;volatile
 21408  002148  A4D8               	btfss	status,2,c
 21409  00214A  D011               	goto	i2l626
 21410                           
 21411                           ; BSR set to: 4
 21412  00214C  5130               	movf	48,w,b	;volatile
 21413  00214E  0B1F               	andlw	31
 21414  002150  0900               	iorlw	0
 21415  002152  A4D8               	btfss	status,2,c
 21416  002154  D00C               	goto	i2l626
 21417                           
 21418                           ; BSR set to: 4
 21419                           ;usb_device.c: 2801: {
 21420                           ;usb_device.c: 2802: inPipes[0].info.bits.busy = 1;
 21421  002156  0100               	movlb	0	; () banked
 21422  002158  8FFC               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 21423                           
 21424                           ; BSR set to: 0
 21425                           ;usb_device.c: 2803: if(SetupPkt.bRequest == 3)
 21426  00215A  0E03               	movlw	3
 21427  00215C  0104               	movlb	4	; () banked
 21428  00215E  1931               	xorwf	49,w,b	;volatile
 21429  002160  A4D8               	btfss	status,2,c
 21430  002162  D002               	goto	i2l625
 21431                           
 21432                           ; BSR set to: 4
 21433                           ;usb_device.c: 2804: RemoteWakeup = 1;
 21434  002164  0E01               	movlw	1
 21435  002166  D001               	goto	L20
 21436  002168                     i2l625:
 21437                           
 21438                           ;usb_device.c: 2805: else
 21439                           ;usb_device.c: 2806: RemoteWakeup = 0;
 21440                           
 21441                           ; BSR set to: 1
 21442  002168  0E00               	movlw	0
 21443  00216A                     L20:
 21444  00216A  0101               	movlb	1	; () banked
 21445  00216C  6FFA               	movwf	_RemoteWakeup& (0+255),b	;volatile
 21446  00216E                     i2l626:
 21447                           
 21448                           ;usb_device.c: 2807: }
 21449                           ;usb_device.c: 2810: if((SetupPkt.bFeature == 0)&&
 21450                           ;usb_device.c: 2811: (SetupPkt.Recipient == (0x02))&&
 21451                           ;usb_device.c: 2812: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 21452                           ;usb_device.c: 2813: (USBDeviceState == CONFIGURED_STATE))
 21453                           
 21454                           ; BSR set to: 1
 21455  00216E  0104               	movlb	4	; () banked
 21456  002170  5132               	movf	50,w,b	;volatile
 21457  002172  A4D8               	btfss	status,2,c
 21458  002174  0012               	return	
 21459                           
 21460                           ; BSR set to: 4
 21461  002176  5130               	movf	48,w,b	;volatile
 21462  002178  0B1F               	andlw	31
 21463  00217A  0A02               	xorlw	2
 21464  00217C  A4D8               	btfss	status,2,c
 21465  00217E  0012               	return	
 21466                           
 21467                           ; BSR set to: 4
 21468  002180  5134               	movf	52,w,b	;volatile
 21469  002182  0B0F               	andlw	15
 21470  002184  0900               	iorlw	0
 21471  002186  B4D8               	btfsc	status,2,c
 21472  002188  0012               	return	
 21473                           
 21474                           ; BSR set to: 4
 21475  00218A  5134               	movf	52,w,b	;volatile
 21476  00218C  0B0F               	andlw	15
 21477  00218E  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21478  002190  0E03               	movlw	3
 21479  002192  6015               	cpfslt	??_USBStdFeatureReqHandler,c
 21480  002194  0012               	return	
 21481                           
 21482                           ; BSR set to: 4
 21483  002196  0E20               	movlw	32
 21484  002198  1858               	xorwf	_USBDeviceState,w,c	;volatile
 21485  00219A  A4D8               	btfss	status,2,c
 21486  00219C  0012               	return	
 21487                           
 21488                           ; BSR set to: 4
 21489                           ;usb_device.c: 2814: {
 21490                           ;usb_device.c: 2817: inPipes[0].info.bits.busy = 1;
 21491  00219E  0100               	movlb	0	; () banked
 21492  0021A0  8FFC               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 21493                           
 21494                           ;usb_device.c: 2820: if(SetupPkt.EPDir == 0)
 21495  0021A2  0104               	movlb	4	; () banked
 21496  0021A4  BF34               	btfsc	52,7,b	;volatile
 21497  0021A6  D019               	goto	i2l628
 21498                           
 21499                           ; BSR set to: 4
 21500                           ;usb_device.c: 2821: {
 21501                           ;usb_device.c: 2822: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 21502  0021A8  5134               	movf	52,w,b	;volatile
 21503  0021AA  0B0F               	andlw	15
 21504  0021AC  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21505  0021AE  5015               	movf	??_USBStdFeatureReqHandler,w,c
 21506  0021B0  0D02               	mullw	2
 21507  0021B2  0EC8               	movlw	low _pBDTEntryOut
 21508  0021B4  24F3               	addwf	prodl,w,c
 21509  0021B6  6ED9               	movwf	fsr2l,c
 21510  0021B8  0E02               	movlw	high _pBDTEntryOut
 21511  0021BA  20F4               	addwfc	prodh,w,c
 21512  0021BC  6EDA               	movwf	fsr2h,c
 21513  0021BE  CFDE F019          	movff	postinc2,USBStdFeatureReqHandler@p
 21514  0021C2  CFDD F01A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 21515                           
 21516                           ;usb_device.c: 2823: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 21517  0021C6  5134               	movf	52,w,b	;volatile
 21518  0021C8  0B0F               	andlw	15
 21519  0021CA  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21520  0021CC  5015               	movf	??_USBStdFeatureReqHandler,w,c
 21521  0021CE  0D01               	mullw	1
 21522  0021D0  0ED2               	movlw	low _ep_data_out
 21523  0021D2  24F3               	addwf	prodl,w,c
 21524  0021D4  6ED9               	movwf	fsr2l,c
 21525  0021D6  0E02               	movlw	high _ep_data_out
 21526  0021D8  D018               	goto	L21
 21527  0021DA                     i2l628:
 21528                           
 21529                           ; BSR set to: 4
 21530                           ;usb_device.c: 2825: else
 21531                           ;usb_device.c: 2826: {
 21532                           ;usb_device.c: 2827: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 21533                           
 21534                           ; BSR set to: 4
 21535  0021DA  5134               	movf	52,w,b	;volatile
 21536  0021DC  0B0F               	andlw	15
 21537  0021DE  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21538  0021E0  5015               	movf	??_USBStdFeatureReqHandler,w,c
 21539  0021E2  0D02               	mullw	2
 21540  0021E4  0E40               	movlw	low _pBDTEntryIn
 21541  0021E6  24F3               	addwf	prodl,w,c
 21542  0021E8  6ED9               	movwf	fsr2l,c
 21543  0021EA  0E00               	movlw	high _pBDTEntryIn
 21544  0021EC  20F4               	addwfc	prodh,w,c
 21545  0021EE  6EDA               	movwf	fsr2h,c
 21546  0021F0  CFDE F019          	movff	postinc2,USBStdFeatureReqHandler@p
 21547  0021F4  CFDD F01A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 21548                           
 21549                           ;usb_device.c: 2828: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 21550  0021F8  5134               	movf	52,w,b	;volatile
 21551  0021FA  0B0F               	andlw	15
 21552  0021FC  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21553  0021FE  5015               	movf	??_USBStdFeatureReqHandler,w,c
 21554  002200  0D01               	mullw	1
 21555  002202  0ED5               	movlw	low _ep_data_in
 21556  002204  24F3               	addwf	prodl,w,c
 21557  002206  6ED9               	movwf	fsr2l,c
 21558  002208  0E02               	movlw	high _ep_data_in
 21559  00220A                     L21:
 21560  00220A  20F4               	addwfc	prodh,w,c
 21561  00220C  6EDA               	movwf	fsr2h,c
 21562  00220E  50DF               	movf	indf2,w,c
 21563  002210  6E18               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 21564                           
 21565                           ; BSR set to: 4
 21566                           ;usb_device.c: 2829: }
 21567                           ;usb_device.c: 2835: if(current_ep_data.bits.ping_pong_state == 0)
 21568                           
 21569                           ; BSR set to: 4
 21570  002212  B018               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 21571  002214  D006               	goto	i2l630
 21572                           
 21573                           ; BSR set to: 4
 21574                           ;usb_device.c: 2836: {
 21575                           ;usb_device.c: 2837: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 21576  002216  0EFB               	movlw	251
 21577  002218  1419               	andwf	USBStdFeatureReqHandler@p,w,c
 21578  00221A  6E19               	movwf	USBStdFeatureReqHandler@p,c
 21579  00221C  0EFF               	movlw	255
 21580  00221E  141A               	andwf	USBStdFeatureReqHandler@p+1,w,c
 21581  002220  D004               	goto	L22
 21582  002222                     i2l630:
 21583                           
 21584                           ; BSR set to: 4
 21585                           ;usb_device.c: 2839: else
 21586                           ;usb_device.c: 2840: {
 21587                           ;usb_device.c: 2841: p = (BDT_ENTRY*)(((uintptr_t)p) | 0x0004);
 21588                           
 21589                           ; BSR set to: 4
 21590  002222  0E04               	movlw	4
 21591  002224  1019               	iorwf	USBStdFeatureReqHandler@p,w,c
 21592  002226  6E19               	movwf	USBStdFeatureReqHandler@p,c
 21593  002228  501A               	movf	USBStdFeatureReqHandler@p+1,w,c
 21594  00222A                     L22:
 21595  00222A  6E1A               	movwf	USBStdFeatureReqHandler@p+1,c
 21596                           
 21597                           ; BSR set to: 4
 21598                           ;usb_device.c: 2842: }
 21599                           ;usb_device.c: 2847: if(SetupPkt.EPDir == 0)
 21600                           
 21601                           ; BSR set to: 4
 21602  00222C  BF34               	btfsc	52,7,b	;volatile
 21603  00222E  D00A               	goto	i2l632
 21604                           
 21605                           ; BSR set to: 4
 21606                           ;usb_device.c: 2848: {
 21607                           ;usb_device.c: 2849: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 21608  002230  5134               	movf	52,w,b	;volatile
 21609  002232  0B0F               	andlw	15
 21610  002234  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21611  002236  5015               	movf	??_USBStdFeatureReqHandler,w,c
 21612  002238  0D02               	mullw	2
 21613  00223A  0EC8               	movlw	low _pBDTEntryOut
 21614  00223C  24F3               	addwf	prodl,w,c
 21615  00223E  6ED9               	movwf	fsr2l,c
 21616  002240  0E02               	movlw	high _pBDTEntryOut
 21617  002242  D009               	goto	L23
 21618  002244                     i2l632:
 21619                           
 21620                           ; BSR set to: 4
 21621                           ;usb_device.c: 2851: else
 21622                           ;usb_device.c: 2852: {
 21623                           ;usb_device.c: 2853: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 21624                           
 21625                           ; BSR set to: 4
 21626  002244  5134               	movf	52,w,b	;volatile
 21627  002246  0B0F               	andlw	15
 21628  002248  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21629  00224A  5015               	movf	??_USBStdFeatureReqHandler,w,c
 21630  00224C  0D02               	mullw	2
 21631  00224E  0E40               	movlw	low _pBDTEntryIn
 21632  002250  24F3               	addwf	prodl,w,c
 21633  002252  6ED9               	movwf	fsr2l,c
 21634  002254  0E00               	movlw	high _pBDTEntryIn
 21635  002256                     L23:
 21636  002256  20F4               	addwfc	prodh,w,c
 21637  002258  6EDA               	movwf	fsr2h,c
 21638  00225A  C019  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 21639  00225E  C01A  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 21640                           
 21641                           ; BSR set to: 4
 21642                           ;usb_device.c: 2854: }
 21643                           ;usb_device.c: 2857: if(SetupPkt.bRequest == 3)
 21644                           
 21645                           ; BSR set to: 4
 21646  002262  0E03               	movlw	3
 21647  002264  1931               	xorwf	49,w,b	;volatile
 21648  002266  A4D8               	btfss	status,2,c
 21649  002268  D02D               	goto	i2l634
 21650                           
 21651                           ; BSR set to: 4
 21652                           ;usb_device.c: 2858: {
 21653                           ;usb_device.c: 2859: if(p->STAT.UOWN == 1)
 21654  00226A  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 21655  00226E  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 21656  002272  AEDF               	btfss	indf2,7,c
 21657  002274  D01A               	goto	i2l637
 21658                           
 21659                           ; BSR set to: 4
 21660                           ;usb_device.c: 2860: {
 21661                           ;usb_device.c: 2863: if(SetupPkt.EPDir == 0)
 21662  002276  BF34               	btfsc	52,7,b	;volatile
 21663  002278  D00A               	goto	i2l636
 21664                           
 21665                           ; BSR set to: 4
 21666                           ;usb_device.c: 2864: {
 21667                           ;usb_device.c: 2865: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 21668  00227A  5134               	movf	52,w,b	;volatile
 21669  00227C  0B0F               	andlw	15
 21670  00227E  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21671  002280  5015               	movf	??_USBStdFeatureReqHandler,w,c
 21672  002282  0D01               	mullw	1
 21673  002284  0ED2               	movlw	low _ep_data_out
 21674  002286  24F3               	addwf	prodl,w,c
 21675  002288  6ED9               	movwf	fsr2l,c
 21676  00228A  0E02               	movlw	high _ep_data_out
 21677  00228C  D00A               	goto	L24
 21678  00228E                     i2l636:
 21679                           
 21680                           ;usb_device.c: 2867: else
 21681                           ;usb_device.c: 2868: {
 21682                           ;usb_device.c: 2869: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 21683                           
 21684                           ; BSR set to: 2
 21685  00228E  0104               	movlb	4	; () banked
 21686  002290  5134               	movf	52,w,b	;volatile
 21687  002292  0B0F               	andlw	15
 21688  002294  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21689  002296  5015               	movf	??_USBStdFeatureReqHandler,w,c
 21690  002298  0D01               	mullw	1
 21691  00229A  0ED5               	movlw	low _ep_data_in
 21692  00229C  24F3               	addwf	prodl,w,c
 21693  00229E  6ED9               	movwf	fsr2l,c
 21694  0022A0  0E02               	movlw	high _ep_data_in
 21695  0022A2                     L24:
 21696  0022A2  20F4               	addwfc	prodh,w,c
 21697  0022A4  6EDA               	movwf	fsr2h,c
 21698  0022A6  0102               	movlb	2	; () banked
 21699  0022A8  82DF               	bsf	indf2,1,c
 21700  0022AA                     i2l637:
 21701                           
 21702                           ;usb_device.c: 2870: }
 21703                           ;usb_device.c: 2871: }
 21704                           ;usb_device.c: 2874: p->STAT.Val |= 0x04;
 21705                           
 21706                           ; BSR set to: 2
 21707                           
 21708                           ; BSR set to: 2
 21709  0022AA  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 21710  0022AE  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 21711  0022B2  0E00               	movlw	0
 21712  0022B4  84DB               	bsf	plusw2,2,c
 21713                           
 21714                           ;usb_device.c: 2875: p->STAT.Val |= 0x80;
 21715  0022B6  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 21716  0022BA  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 21717  0022BE  0E00               	movlw	0
 21718  0022C0  8EDB               	bsf	plusw2,7,c
 21719                           
 21720                           ;usb_device.c: 2876: }
 21721  0022C2  0012               	return	
 21722  0022C4                     i2l634:
 21723                           
 21724                           ;usb_device.c: 2877: else
 21725                           ;usb_device.c: 2878: {
 21726                           ;usb_device.c: 2882: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 21727  0022C4  0E04               	movlw	4
 21728  0022C6  1819               	xorwf	USBStdFeatureReqHandler@p,w,c
 21729  0022C8  6E19               	movwf	USBStdFeatureReqHandler@p,c
 21730  0022CA  501A               	movf	USBStdFeatureReqHandler@p+1,w,c
 21731  0022CC  6E1A               	movwf	USBStdFeatureReqHandler@p+1,c
 21732                           
 21733                           ;usb_device.c: 2884: if(p->STAT.UOWN == 1)
 21734  0022CE  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 21735  0022D2  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 21736  0022D6  AEDF               	btfss	indf2,7,c
 21737  0022D8  D01B               	goto	i2l639
 21738                           
 21739                           ;usb_device.c: 2885: {
 21740                           ;usb_device.c: 2888: p->STAT.Val &= (~0x80);
 21741  0022DA  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 21742  0022DE  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 21743  0022E2  0E7F               	movlw	127
 21744  0022E4  16DF               	andwf	indf2,f,c
 21745                           
 21746                           ;usb_device.c: 2889: p->STAT.Val |= 0x40;
 21747  0022E6  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 21748  0022EA  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 21749  0022EE  0E00               	movlw	0
 21750  0022F0  8CDB               	bsf	plusw2,6,c
 21751                           
 21752                           ;usb_device.c: 2890: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 21753  0022F2  0E00               	movlw	0
 21754  0022F4  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 21755  0022F6  0E05               	movlw	5
 21756  0022F8  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 21757  0022FA  C019  F00F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 21758  0022FE  C01A  F010         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 21759  002302  0E00               	movlw	0
 21760  002304  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 21761  002306  0E02               	movlw	2
 21762  002308  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 21763  00230A  EC73  F026         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 21764                           
 21765                           ;usb_device.c: 2891: }
 21766  00230E  D006               	goto	i2l640
 21767  002310                     i2l639:
 21768                           
 21769                           ;usb_device.c: 2892: else
 21770                           ;usb_device.c: 2893: {
 21771                           ;usb_device.c: 2895: p->STAT.Val |= 0x40;
 21772  002310  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 21773  002314  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 21774  002318  0E00               	movlw	0
 21775  00231A  8CDB               	bsf	plusw2,6,c
 21776  00231C                     i2l640:
 21777                           
 21778                           ;usb_device.c: 2896: }
 21779                           ;usb_device.c: 2900: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 21780  00231C  0E04               	movlw	4
 21781  00231E  1819               	xorwf	USBStdFeatureReqHandler@p,w,c
 21782  002320  6E19               	movwf	USBStdFeatureReqHandler@p,c
 21783  002322  501A               	movf	USBStdFeatureReqHandler@p+1,w,c
 21784  002324  6E1A               	movwf	USBStdFeatureReqHandler@p+1,c
 21785                           
 21786                           ;usb_device.c: 2906: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 21787  002326  B218               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 21788  002328  D006               	goto	i2u619_40
 21789  00232A  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 21790  00232E  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 21791  002332  AEDF               	btfss	indf2,7,c
 21792  002334  D030               	goto	i2l641
 21793  002336                     i2u619_40:
 21794                           
 21795                           ;usb_device.c: 2907: {
 21796                           ;usb_device.c: 2908: if(SetupPkt.EPDir == 0)
 21797  002336  0104               	movlb	4	; () banked
 21798  002338  BF34               	btfsc	52,7,b	;volatile
 21799  00233A  D00A               	goto	i2l644
 21800                           
 21801                           ; BSR set to: 4
 21802                           ;usb_device.c: 2909: {
 21803                           ;usb_device.c: 2910: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 21804  00233C  5134               	movf	52,w,b	;volatile
 21805  00233E  0B0F               	andlw	15
 21806  002340  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21807  002342  5015               	movf	??_USBStdFeatureReqHandler,w,c
 21808  002344  0D01               	mullw	1
 21809  002346  0ED2               	movlw	low _ep_data_out
 21810  002348  24F3               	addwf	prodl,w,c
 21811  00234A  6ED9               	movwf	fsr2l,c
 21812  00234C  0E02               	movlw	high _ep_data_out
 21813  00234E  D00A               	goto	L25
 21814  002350                     i2l644:
 21815                           
 21816                           ;usb_device.c: 2912: else
 21817                           ;usb_device.c: 2913: {
 21818                           ;usb_device.c: 2914: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 21819                           
 21820                           ; BSR set to: 2
 21821  002350  0104               	movlb	4	; () banked
 21822  002352  5134               	movf	52,w,b	;volatile
 21823  002354  0B0F               	andlw	15
 21824  002356  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21825  002358  5015               	movf	??_USBStdFeatureReqHandler,w,c
 21826  00235A  0D01               	mullw	1
 21827  00235C  0ED5               	movlw	low _ep_data_in
 21828  00235E  24F3               	addwf	prodl,w,c
 21829  002360  6ED9               	movwf	fsr2l,c
 21830  002362  0E02               	movlw	high _ep_data_in
 21831  002364                     L25:
 21832  002364  20F4               	addwfc	prodh,w,c
 21833  002366  6EDA               	movwf	fsr2h,c
 21834  002368  0102               	movlb	2	; () banked
 21835  00236A  92DF               	bcf	indf2,1,c
 21836                           
 21837                           ; BSR set to: 2
 21838                           ;usb_device.c: 2915: }
 21839                           ;usb_device.c: 2917: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 21840                           
 21841                           ; BSR set to: 2
 21842  00236C  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 21843  002370  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 21844  002374  0E3B               	movlw	59
 21845  002376  16DF               	andwf	indf2,f,c
 21846                           
 21847                           ; BSR set to: 2
 21848                           ;usb_device.c: 2920: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 21849  002378  0E00               	movlw	0
 21850  00237A  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 21851  00237C  0E05               	movlw	5
 21852  00237E  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 21853  002380  C019  F00F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 21854  002384  C01A  F010         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 21855  002388  0E00               	movlw	0
 21856  00238A  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 21857  00238C  0E02               	movlw	2
 21858  00238E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 21859  002390  EC73  F026         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 21860                           
 21861                           ;usb_device.c: 2921: }
 21862  002394  D006               	goto	i2l646
 21863  002396                     i2l641:
 21864                           
 21865                           ;usb_device.c: 2922: else
 21866                           ;usb_device.c: 2923: {
 21867                           ;usb_device.c: 2925: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 21868  002396  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 21869  00239A  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 21870  00239E  0E3B               	movlw	59
 21871  0023A0  16DF               	andwf	indf2,f,c
 21872  0023A2                     i2l646:
 21873                           
 21874                           ;usb_device.c: 2926: }
 21875                           ;usb_device.c: 2973: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 21876  0023A2  0104               	movlb	4	; () banked
 21877  0023A4  5134               	movf	52,w,b	;volatile
 21878  0023A6  0B0F               	andlw	15
 21879  0023A8  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21880  0023AA  5015               	movf	??_USBStdFeatureReqHandler,w,c
 21881  0023AC  0D01               	mullw	1
 21882  0023AE  0E70               	movlw	112
 21883  0023B0  24F3               	addwf	prodl,w,c
 21884  0023B2  6E16               	movwf	USBStdFeatureReqHandler@pUEP,c
 21885  0023B4  0E0F               	movlw	15
 21886  0023B6  20F4               	addwfc	prodh,w,c
 21887  0023B8  6E17               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 21888                           
 21889                           ; BSR set to: 4
 21890                           ;usb_device.c: 2977: *pUEP &= ~0x0001;
 21891  0023BA  C016  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 21892  0023BE  C017  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 21893  0023C2  0EFE               	movlw	254
 21894  0023C4  16DF               	andwf	indf2,f,c
 21895                           
 21896                           ; BSR set to: 4
 21897  0023C6  0012               	return	
 21898  0023C8                     __end_of_USBStdFeatureReqHandler:
 21899                           	opt stack 0
 21900                           pclatu	equ	0xFFB
 21901                           pclath	equ	0xFFA
 21902                           tblptru	equ	0xFF8
 21903                           tblptrh	equ	0xFF7
 21904                           tblptrl	equ	0xFF6
 21905                           tablat	equ	0xFF5
 21906                           prodh	equ	0xFF4
 21907                           prodl	equ	0xFF3
 21908                           intcon	equ	0xFF2
 21909                           indf0	equ	0xFEF
 21910                           postinc0	equ	0xFEE
 21911                           fsr0h	equ	0xFEA
 21912                           fsr0l	equ	0xFE9
 21913                           wreg	equ	0xFE8
 21914                           indf1	equ	0xFE7
 21915                           postdec1	equ	0xFE5
 21916                           fsr1h	equ	0xFE2
 21917                           fsr1l	equ	0xFE1
 21918                           indf2	equ	0xFDF
 21919                           postinc2	equ	0xFDE
 21920                           postdec2	equ	0xFDD
 21921                           plusw2	equ	0xFDB
 21922                           fsr2h	equ	0xFDA
 21923                           fsr2l	equ	0xFD9
 21924                           status	equ	0xFD8
 21925                           
 21926 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 21927 ;; Defined at:
 21928 ;;		line 29 in file "usb/usb_events.c"
 21929 ;; Parameters:    Size  Location     Type
 21930 ;;  event           2   12[COMRAM] enum E4179
 21931 ;;  pdata           2   14[COMRAM] PTR void 
 21932 ;;		 -> RAM(2047), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 21933 ;;		 -> BDT(48), 
 21934 ;;  size            2   16[COMRAM] unsigned int 
 21935 ;; Auto vars:     Size  Location     Type
 21936 ;;		None
 21937 ;; Return value:  Size  Location     Type
 21938 ;;                  1    wreg      unsigned char 
 21939 ;; Registers used:
 21940 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21941 ;; Tracked objects:
 21942 ;;		On entry : 0/0
 21943 ;;		On exit  : 0/0
 21944 ;;		Unchanged: 0/0
 21945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21946 ;;      Params:         6       0       0       0       0       0       0       0       0
 21947 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21948 ;;      Temps:          2       0       0       0       0       0       0       0       0
 21949 ;;      Totals:         8       0       0       0       0       0       0       0       0
 21950 ;;Total ram usage:        8 bytes
 21951 ;; Hardware stack levels used:    1
 21952 ;; Hardware stack levels required when called:    3
 21953 ;; This function calls:
 21954 ;;		_CDCInitEP
 21955 ;;		_USBCheckCDCRequest
 21956 ;; This function is called by:
 21957 ;;		_USBDeviceTasks
 21958 ;;		_USBStdSetCfgHandler
 21959 ;;		_USBSuspend
 21960 ;;		_USBWakeFromSuspend
 21961 ;;		_USBCtrlTrfSetupHandler
 21962 ;;		_USBCheckStdRequest
 21963 ;;		_USBStdFeatureReqHandler
 21964 ;; This function uses a non-reentrant model
 21965 ;;
 21966                           
 21967                           	psect	text83
 21968  004CE6                     __ptext83:
 21969                           	opt stack 0
 21970  004CE6                     _USER_USB_CALLBACK_EVENT_HANDLER:
 21971                           	opt stack 20
 21972                           
 21973                           ;usb_events.c: 31: switch( (int) event )
 21974                           
 21975                           ;incstack = 0
 21976  004CE6  D006               	goto	i2l245
 21977  004CE8                     
 21978                           ;usb_events.c: 56: CDCInitEP();
 21979  004CE8  ECB2  F025         	call	_CDCInitEP	;wreg free
 21980                           
 21981                           ;usb_events.c: 60: break;
 21982                           
 21983                           ;usb_events.c: 59: case EVENT_SET_DESCRIPTOR:
 21984                           
 21985                           ;usb_events.c: 57: break;
 21986  004CEC  0012               	return	
 21987  004CEE                     
 21988                           ;usb_events.c: 65: USBCheckCDCRequest();
 21989  004CEE  EC63  F020         	call	_USBCheckCDCRequest	;wreg free
 21990                           
 21991                           ;usb_events.c: 76: }
 21992                           
 21993                           ;usb_events.c: 75: break;
 21994                           
 21995                           ;usb_events.c: 74: default:
 21996                           
 21997                           ;usb_events.c: 72: break;
 21998                           
 21999                           ;usb_events.c: 71: case EVENT_TRANSFER_TERMINATED:
 22000                           
 22001                           ;usb_events.c: 69: break;
 22002                           
 22003                           ;usb_events.c: 68: case EVENT_BUS_ERROR:
 22004                           
 22005                           ;usb_events.c: 66: break;
 22006  004CF2  0012               	return	
 22007  004CF4                     i2l245:
 22008  004CF4  C00D  F013         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 22009  004CF8  C00E  F014         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 22010                           
 22011                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 22012                           ; Switch size 1, requested type "space"
 22013                           ; Number of cases is 2, Range of values is 0 to 127
 22014                           ; switch strategies available:
 22015                           ; Name         Instructions Cycles
 22016                           ; simple_byte            7     4 (average)
 22017                           ;	Chosen strategy is simple_byte
 22018  004CFC  5014               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 22019  004CFE  0A00               	xorlw	0	; case 0
 22020  004D00  B4D8               	btfsc	status,2,c
 22021  004D02  D004               	goto	i2l11196
 22022  004D04  0A7F               	xorlw	127	; case 127
 22023  004D06  A4D8               	btfss	status,2,c
 22024  004D08  0012               	return	
 22025  004D0A  D018               	goto	i2l11198
 22026  004D0C                     i2l11196:
 22027                           
 22028                           ; Switch size 1, requested type "space"
 22029                           ; Number of cases is 8, Range of values is 1 to 117
 22030                           ; switch strategies available:
 22031                           ; Name         Instructions Cycles
 22032                           ; simple_byte           25    13 (average)
 22033                           ;	Chosen strategy is simple_byte
 22034  004D0C  5013               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 22035  004D0E  0A01               	xorlw	1	; case 1
 22036  004D10  B4D8               	btfsc	status,2,c
 22037  004D12  D7EA               	goto	i2l251
 22038  004D14  0A03               	xorlw	3	; case 2
 22039  004D16  B4D8               	btfsc	status,2,c
 22040  004D18  0012               	return	
 22041  004D1A  0A01               	xorlw	1	; case 3
 22042  004D1C  B4D8               	btfsc	status,2,c
 22043  004D1E  D7E7               	goto	i2l253
 22044  004D20  0A06               	xorlw	6	; case 5
 22045  004D22  B4D8               	btfsc	status,2,c
 22046  004D24  0012               	return	
 22047  004D26  0A77               	xorlw	119	; case 114
 22048  004D28  B4D8               	btfsc	status,2,c
 22049  004D2A  0012               	return	
 22050  004D2C  0A01               	xorlw	1	; case 115
 22051  004D2E  B4D8               	btfsc	status,2,c
 22052  004D30  0012               	return	
 22053  004D32  0A07               	xorlw	7	; case 116
 22054  004D34  B4D8               	btfsc	status,2,c
 22055  004D36  0012               	return	
 22056  004D38  0A01               	xorlw	1	; case 117
 22057  004D3A  0012               	return	
 22058  004D3C                     i2l11198:
 22059                           
 22060                           ; Switch size 1, requested type "space"
 22061                           ; Number of cases is 1, Range of values is 255 to 255
 22062                           ; switch strategies available:
 22063                           ; Name         Instructions Cycles
 22064                           ; simple_byte            4     3 (average)
 22065                           ;	Chosen strategy is simple_byte
 22066  004D3C  5013               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 22067  004D3E  0AFF               	xorlw	255	; case 255
 22068  004D40  0012               	return	
 22069  004D42                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 22070                           	opt stack 0
 22071                           pclatu	equ	0xFFB
 22072                           pclath	equ	0xFFA
 22073                           tblptru	equ	0xFF8
 22074                           tblptrh	equ	0xFF7
 22075                           tblptrl	equ	0xFF6
 22076                           tablat	equ	0xFF5
 22077                           prodh	equ	0xFF4
 22078                           prodl	equ	0xFF3
 22079                           intcon	equ	0xFF2
 22080                           indf0	equ	0xFEF
 22081                           postinc0	equ	0xFEE
 22082                           fsr0h	equ	0xFEA
 22083                           fsr0l	equ	0xFE9
 22084                           wreg	equ	0xFE8
 22085                           indf1	equ	0xFE7
 22086                           postdec1	equ	0xFE5
 22087                           fsr1h	equ	0xFE2
 22088                           fsr1l	equ	0xFE1
 22089                           indf2	equ	0xFDF
 22090                           postinc2	equ	0xFDE
 22091                           postdec2	equ	0xFDD
 22092                           plusw2	equ	0xFDB
 22093                           fsr2h	equ	0xFDA
 22094                           fsr2l	equ	0xFD9
 22095                           status	equ	0xFD8
 22096                           
 22097 ;; *************** function _USBCheckCDCRequest *****************
 22098 ;; Defined at:
 22099 ;;		line 147 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device_cdc.c"
 22100 ;; Parameters:    Size  Location     Type
 22101 ;;		None
 22102 ;; Auto vars:     Size  Location     Type
 22103 ;;		None
 22104 ;; Return value:  Size  Location     Type
 22105 ;;                  1    wreg      void 
 22106 ;; Registers used:
 22107 ;;		wreg, status,2, status,0
 22108 ;; Tracked objects:
 22109 ;;		On entry : 0/0
 22110 ;;		On exit  : 0/0
 22111 ;;		Unchanged: 0/0
 22112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22113 ;;      Params:         0       0       0       0       0       0       0       0       0
 22114 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22115 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22116 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22117 ;;Total ram usage:        0 bytes
 22118 ;; Hardware stack levels used:    1
 22119 ;; This function calls:
 22120 ;;		Nothing
 22121 ;; This function is called by:
 22122 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 22123 ;; This function uses a non-reentrant model
 22124 ;;
 22125                           
 22126                           	psect	text84
 22127  0040C6                     __ptext84:
 22128                           	opt stack 0
 22129  0040C6                     _USBCheckCDCRequest:
 22130                           	opt stack 22
 22131                           
 22132                           ;usb_device_cdc.c: 152: if(SetupPkt.Recipient != (0x01)) return;
 22133                           
 22134                           ;incstack = 0
 22135  0040C6  0104               	movlb	4	; () banked
 22136  0040C8  5130               	movf	48,w,b	;volatile
 22137  0040CA  0B1F               	andlw	31
 22138  0040CC  06E8               	decf	wreg,f,c
 22139  0040CE  A4D8               	btfss	status,2,c
 22140  0040D0  0012               	return	
 22141                           
 22142                           ; BSR set to: 4
 22143                           ;usb_device_cdc.c: 157: if(SetupPkt.RequestType != (0x20>>5)) return;
 22144                           
 22145                           ; BSR set to: 4
 22146                           
 22147                           ; BSR set to: 4
 22148  0040D2  3930               	swapf	48,w,b	;volatile
 22149  0040D4  32E8               	rrcf	wreg,f,c
 22150  0040D6  0B03               	andlw	3
 22151  0040D8  06E8               	decf	wreg,f,c
 22152  0040DA  A4D8               	btfss	status,2,c
 22153  0040DC  0012               	return	
 22154                           
 22155                           ; BSR set to: 4
 22156                           ;usb_device_cdc.c: 163: if((SetupPkt.bIntfID != 0x0)&&
 22157                           ;usb_device_cdc.c: 164: (SetupPkt.bIntfID != 0x01)) return;
 22158                           
 22159                           ; BSR set to: 4
 22160                           
 22161                           ; BSR set to: 4
 22162  0040DE  5134               	movf	52,w,b	;volatile
 22163  0040E0  B4D8               	btfsc	status,2,c
 22164  0040E2  D036               	goto	i2l802
 22165                           
 22166                           ; BSR set to: 4
 22167  0040E4  0534               	decf	52,w,b	;volatile
 22168  0040E6  A4D8               	btfss	status,2,c
 22169  0040E8  0012               	return	
 22170  0040EA  D032               	goto	i2l802
 22171  0040EC                     
 22172                           ; BSR set to: 4
 22173                           ;usb_device_cdc.c: 171: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 22174                           
 22175                           ; BSR set to: 4
 22176  0040EC  0EB6               	movlw	low _dummy_encapsulated_cmd_response
 22177  0040EE  0100               	movlb	0	; () banked
 22178  0040F0  6FF9               	movwf	_inPipes& (0+255),b	;volatile
 22179  0040F2  0E03               	movlw	high _dummy_encapsulated_cmd_response
 22180  0040F4  6FFA               	movwf	(_inPipes+1)& (0+255),b	;volatile
 22181                           
 22182                           ; BSR set to: 0
 22183                           ;usb_device_cdc.c: 172: inPipes[0].wCount.Val = 0x08;
 22184  0040F6  0E00               	movlw	0
 22185  0040F8  6FFE               	movwf	(_inPipes+5)& (0+255),b	;volatile
 22186  0040FA  0E08               	movlw	8
 22187  0040FC  6FFD               	movwf	(_inPipes+4)& (0+255),b	;volatile
 22188                           
 22189                           ; BSR set to: 0
 22190                           ;usb_device_cdc.c: 173: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 22191  0040FE  81FC               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 22192                           
 22193                           ; BSR set to: 0
 22194                           ;usb_device_cdc.c: 174: inPipes[0].info.bits.busy = 1;
 22195  004100  8FFC               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 22196                           
 22197                           ;usb_device_cdc.c: 175: break;
 22198  004102  0012               	return	
 22199  004104                     
 22200                           ;usb_device_cdc.c: 178: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 22201                           
 22202                           ; BSR set to: 0
 22203  004104  0EB6               	movlw	low _dummy_encapsulated_cmd_response
 22204  004106  0100               	movlb	0	; () banked
 22205  004108  6FF9               	movwf	_inPipes& (0+255),b	;volatile
 22206  00410A  0E03               	movlw	high _dummy_encapsulated_cmd_response
 22207  00410C  6FFA               	movwf	(_inPipes+1)& (0+255),b	;volatile
 22208                           
 22209                           ; BSR set to: 0
 22210                           ;usb_device_cdc.c: 179: inPipes[0].info.bits.busy = 1;
 22211  00410E  8FFC               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 22212                           
 22213                           ;usb_device_cdc.c: 180: break;
 22214  004110  0012               	return	
 22215  004112                     i2l806:
 22216                           
 22217                           ; BSR set to: 4
 22218                           ;usb_device_cdc.c: 185: outPipes[0].wCount.Val = SetupPkt.wLength;
 22219  004112  C436 F03C          	movff	1078,_outPipes+4	;volatile
 22220  004116  C437 F03D          	movff	1079,_outPipes+5	;volatile
 22221                           
 22222                           ; BSR set to: 4
 22223                           ;usb_device_cdc.c: 186: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 22224  00411A  0EBE               	movlw	low _line_coding
 22225  00411C  6E38               	movwf	_outPipes,c	;volatile
 22226  00411E  0E03               	movlw	high _line_coding
 22227  004120  6E39               	movwf	_outPipes+1,c	;volatile
 22228                           
 22229                           ;usb_device_cdc.c: 187: outPipes[0].pFunc = (0);
 22230  004122  0E00               	movlw	0
 22231  004124  6E3E               	movwf	_outPipes+6,c	;volatile
 22232  004126  0E00               	movlw	0
 22233  004128  6E3F               	movwf	_outPipes+7,c	;volatile
 22234                           
 22235                           ; BSR set to: 4
 22236                           ;usb_device_cdc.c: 188: outPipes[0].info.bits.busy = 1;
 22237  00412A  8E3B               	bsf	_outPipes+3,7,c	;volatile
 22238                           
 22239                           ;usb_device_cdc.c: 189: break;
 22240  00412C  0012               	return	
 22241  00412E                     
 22242                           ; BSR set to: 4
 22243                           ;usb_device_cdc.c: 192: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 22244                           
 22245                           ; BSR set to: 4
 22246  00412E  0EBE               	movlw	low _line_coding
 22247  004130  0100               	movlb	0	; () banked
 22248  004132  6FF9               	movwf	_inPipes& (0+255),b	;volatile
 22249  004134  0E03               	movlw	high _line_coding
 22250  004136  6FFA               	movwf	(_inPipes+1)& (0+255),b	;volatile
 22251                           
 22252                           ; BSR set to: 0
 22253  004138  0E00               	movlw	0
 22254  00413A  6FFE               	movwf	(_inPipes+5)& (0+255),b	;volatile
 22255  00413C  0E07               	movlw	7
 22256  00413E  6FFD               	movwf	(_inPipes+4)& (0+255),b	;volatile
 22257                           
 22258                           ; BSR set to: 0
 22259  004140  0EC1               	movlw	193
 22260  004142  6FFC               	movwf	(_inPipes+3)& (0+255),b	;volatile
 22261                           
 22262                           ;usb_device_cdc.c: 196: break;
 22263  004144  0012               	return	
 22264  004146                     i2l808:
 22265                           
 22266                           ; BSR set to: 4
 22267                           ;usb_device_cdc.c: 199: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 22268  004146  C432 F2E3          	movff	1074,_control_signal_bitmap	;volatile
 22269                           
 22270                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
 22271  00414A  0100               	movlb	0	; () banked
 22272  00414C  8FFC               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 22273                           
 22274                           ; BSR set to: 0
 22275                           ;usb_device_cdc.c: 258: }
 22276                           
 22277                           ; BSR set to: 0
 22278                           ;usb_device_cdc.c: 257: break;
 22279                           
 22280                           ;usb_device_cdc.c: 256: default:
 22281                           
 22282                           ;usb_device_cdc.c: 232: break;
 22283  00414E  0012               	return	
 22284  004150                     i2l802:
 22285                           
 22286                           ; BSR set to: 0
 22287  004150  0104               	movlb	4	; () banked
 22288  004152  5131               	movf	49,w,b	;volatile
 22289                           
 22290                           ; Switch size 1, requested type "space"
 22291                           ; Number of cases is 5, Range of values is 0 to 34
 22292                           ; switch strategies available:
 22293                           ; Name         Instructions Cycles
 22294                           ; simple_byte           16     9 (average)
 22295                           ;	Chosen strategy is simple_byte
 22296  004154  0A00               	xorlw	0	; case 0
 22297  004156  B4D8               	btfsc	status,2,c
 22298  004158  D7C9               	goto	i2l803
 22299  00415A  0A01               	xorlw	1	; case 1
 22300  00415C  B4D8               	btfsc	status,2,c
 22301  00415E  D7D2               	goto	i2l805
 22302  004160  0A21               	xorlw	33	; case 32
 22303  004162  B4D8               	btfsc	status,2,c
 22304  004164  D7D6               	goto	i2l806
 22305  004166  0A01               	xorlw	1	; case 33
 22306  004168  B4D8               	btfsc	status,2,c
 22307  00416A  D7E1               	goto	i2l807
 22308  00416C  0A03               	xorlw	3	; case 34
 22309  00416E  A4D8               	btfss	status,2,c
 22310  004170  0012               	return	
 22311  004172  D7E9               	goto	i2l808
 22312  004174                     __end_of_USBCheckCDCRequest:
 22313                           	opt stack 0
 22314                           pclatu	equ	0xFFB
 22315                           pclath	equ	0xFFA
 22316                           tblptru	equ	0xFF8
 22317                           tblptrh	equ	0xFF7
 22318                           tblptrl	equ	0xFF6
 22319                           tablat	equ	0xFF5
 22320                           prodh	equ	0xFF4
 22321                           prodl	equ	0xFF3
 22322                           intcon	equ	0xFF2
 22323                           indf0	equ	0xFEF
 22324                           postinc0	equ	0xFEE
 22325                           fsr0h	equ	0xFEA
 22326                           fsr0l	equ	0xFE9
 22327                           wreg	equ	0xFE8
 22328                           indf1	equ	0xFE7
 22329                           postdec1	equ	0xFE5
 22330                           fsr1h	equ	0xFE2
 22331                           fsr1l	equ	0xFE1
 22332                           indf2	equ	0xFDF
 22333                           postinc2	equ	0xFDE
 22334                           postdec2	equ	0xFDD
 22335                           plusw2	equ	0xFDB
 22336                           fsr2h	equ	0xFDA
 22337                           fsr2l	equ	0xFD9
 22338                           status	equ	0xFD8
 22339                           
 22340 ;; *************** function _CDCInitEP *****************
 22341 ;; Defined at:
 22342 ;;		line 294 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device_cdc.c"
 22343 ;; Parameters:    Size  Location     Type
 22344 ;;		None
 22345 ;; Auto vars:     Size  Location     Type
 22346 ;;		None
 22347 ;; Return value:  Size  Location     Type
 22348 ;;                  1    wreg      void 
 22349 ;; Registers used:
 22350 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22351 ;; Tracked objects:
 22352 ;;		On entry : 0/0
 22353 ;;		On exit  : 0/0
 22354 ;;		Unchanged: 0/0
 22355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22356 ;;      Params:         0       0       0       0       0       0       0       0       0
 22357 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22358 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22359 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22360 ;;Total ram usage:        0 bytes
 22361 ;; Hardware stack levels used:    1
 22362 ;; Hardware stack levels required when called:    2
 22363 ;; This function calls:
 22364 ;;		_USBEnableEndpoint
 22365 ;;		i2_USBTransferOnePacket
 22366 ;; This function is called by:
 22367 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 22368 ;; This function uses a non-reentrant model
 22369 ;;
 22370                           
 22371                           	psect	text85
 22372  004B64                     __ptext85:
 22373                           	opt stack 0
 22374  004B64                     _CDCInitEP:
 22375                           	opt stack 20
 22376                           
 22377                           ;usb_device_cdc.c: 297: line_coding.dwDTERate = 19200;
 22378                           
 22379                           ;incstack = 0
 22380  004B64  0E00               	movlw	0
 22381  004B66  0103               	movlb	3	; () banked
 22382  004B68  6FBE               	movwf	_line_coding& (0+255),b
 22383  004B6A  0E4B               	movlw	75
 22384  004B6C  6FBF               	movwf	(_line_coding+1)& (0+255),b
 22385  004B6E  0E00               	movlw	0
 22386  004B70  6FC0               	movwf	(_line_coding+2)& (0+255),b
 22387  004B72  0E00               	movlw	0
 22388  004B74  6FC1               	movwf	(_line_coding+3)& (0+255),b
 22389                           
 22390                           ;usb_device_cdc.c: 298: line_coding.bCharFormat = 0x00;
 22391  004B76  0E00               	movlw	0
 22392  004B78  6FC2               	movwf	(_line_coding+4)& (0+255),b
 22393                           
 22394                           ;usb_device_cdc.c: 299: line_coding.bParityType = 0x00;
 22395  004B7A  0E00               	movlw	0
 22396  004B7C  6FC3               	movwf	(_line_coding+5)& (0+255),b
 22397                           
 22398                           ;usb_device_cdc.c: 300: line_coding.bDataBits = 0x08;
 22399  004B7E  0E08               	movlw	8
 22400  004B80  6FC4               	movwf	(_line_coding+6)& (0+255),b
 22401                           
 22402                           ;usb_device_cdc.c: 302: cdc_rx_len = 0;
 22403  004B82  0E00               	movlw	0
 22404  004B84  6E52               	movwf	_cdc_rx_len,c
 22405                           
 22406                           ; BSR set to: 3
 22407                           ;usb_device_cdc.c: 315: USBEnableEndpoint(1,0x02|0x10|0x08);
 22408  004B86  0E1A               	movlw	26
 22409  004B88  6E09               	movwf	USBEnableEndpoint@options,c
 22410  004B8A  0E01               	movlw	1
 22411  004B8C  ECCB  F028         	call	_USBEnableEndpoint
 22412                           
 22413                           ;usb_device_cdc.c: 316: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 22414  004B90  0E1E               	movlw	30
 22415  004B92  6E09               	movwf	USBEnableEndpoint@options,c
 22416  004B94  0E02               	movlw	2
 22417  004B96  ECCB  F028         	call	_USBEnableEndpoint
 22418                           
 22419                           ;usb_device_cdc.c: 318: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 22420  004B9A  0E00               	movlw	0
 22421  004B9C  6E01               	movwf	i2USBTransferOnePacket@dir,c
 22422  004B9E  0E40               	movlw	64
 22423  004BA0  6E02               	movwf	i2USBTransferOnePacket@data,c
 22424  004BA2  0E05               	movlw	5
 22425  004BA4  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 22426  004BA6  0E40               	movlw	64
 22427  004BA8  6E04               	movwf	i2USBTransferOnePacket@len,c
 22428  004BAA  0E02               	movlw	2
 22429  004BAC  EC27  F01B         	call	i2_USBTransferOnePacket
 22430  004BB0  C001  F04A         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 22431  004BB4  C002  F04B         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 22432                           
 22433                           ;usb_device_cdc.c: 319: CDCDataInHandle = (0);
 22434  004BB8  0E00               	movlw	0
 22435  004BBA  0102               	movlb	2	; () banked
 22436  004BBC  6FD8               	movwf	_CDCDataInHandle& (0+255),b
 22437  004BBE  0E00               	movlw	0
 22438  004BC0  6FD9               	movwf	(_CDCDataInHandle+1)& (0+255),b
 22439                           
 22440                           ; BSR set to: 2
 22441                           ;usb_device_cdc.c: 346: cdc_trf_state = 0;
 22442  004BC2  0E00               	movlw	0
 22443  004BC4  0100               	movlb	0	; () banked
 22444  004BC6  6FFF               	movwf	_cdc_trf_state& (0+255),b
 22445                           
 22446                           ; BSR set to: 0
 22447  004BC8  0012               	return		;funcret
 22448  004BCA                     __end_of_CDCInitEP:
 22449                           	opt stack 0
 22450                           pclatu	equ	0xFFB
 22451                           pclath	equ	0xFFA
 22452                           tblptru	equ	0xFF8
 22453                           tblptrh	equ	0xFF7
 22454                           tblptrl	equ	0xFF6
 22455                           tablat	equ	0xFF5
 22456                           prodh	equ	0xFF4
 22457                           prodl	equ	0xFF3
 22458                           intcon	equ	0xFF2
 22459                           indf0	equ	0xFEF
 22460                           postinc0	equ	0xFEE
 22461                           fsr0h	equ	0xFEA
 22462                           fsr0l	equ	0xFE9
 22463                           wreg	equ	0xFE8
 22464                           indf1	equ	0xFE7
 22465                           postdec1	equ	0xFE5
 22466                           fsr1h	equ	0xFE2
 22467                           fsr1l	equ	0xFE1
 22468                           indf2	equ	0xFDF
 22469                           postinc2	equ	0xFDE
 22470                           postdec2	equ	0xFDD
 22471                           plusw2	equ	0xFDB
 22472                           fsr2h	equ	0xFDA
 22473                           fsr2l	equ	0xFD9
 22474                           status	equ	0xFD8
 22475                           
 22476 ;; *************** function i2_USBTransferOnePacket *****************
 22477 ;; Defined at:
 22478 ;;		line 995 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 22479 ;; Parameters:    Size  Location     Type
 22480 ;;  ep              1    wreg     unsigned char 
 22481 ;;  dir             1    0[COMRAM] unsigned char 
 22482 ;;  data            2    1[COMRAM] PTR unsigned char 
 22483 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 22484 ;;  len             1    3[COMRAM] unsigned char 
 22485 ;; Auto vars:     Size  Location     Type
 22486 ;;  ep              1    8[COMRAM] unsigned char 
 22487 ;;  USBTransferO    2    9[COMRAM] PTR volatile struct __BD
 22488 ;;		 -> RAM(2047), NULL(0), BDT(48), 
 22489 ;; Return value:  Size  Location     Type
 22490 ;;                  2    0[COMRAM] PTR void 
 22491 ;; Registers used:
 22492 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22493 ;; Tracked objects:
 22494 ;;		On entry : 0/0
 22495 ;;		On exit  : 0/0
 22496 ;;		Unchanged: 0/0
 22497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22498 ;;      Params:         4       0       0       0       0       0       0       0       0
 22499 ;;      Locals:         3       0       0       0       0       0       0       0       0
 22500 ;;      Temps:          4       0       0       0       0       0       0       0       0
 22501 ;;      Totals:        11       0       0       0       0       0       0       0       0
 22502 ;;Total ram usage:       11 bytes
 22503 ;; Hardware stack levels used:    1
 22504 ;; This function calls:
 22505 ;;		Nothing
 22506 ;; This function is called by:
 22507 ;;		_CDCInitEP
 22508 ;; This function uses a non-reentrant model
 22509 ;;
 22510                           
 22511                           	psect	text86
 22512  00364E                     __ptext86:
 22513                           	opt stack 0
 22514  00364E                     i2_USBTransferOnePacket:
 22515                           	opt stack 21
 22516                           
 22517                           ; BSR set to: 0
 22518                           ;incstack = 0
 22519                           ;i2USBTransferOnePacket@ep stored from wreg
 22520  00364E  6E09               	movwf	i2USBTransferOnePacket@ep,c
 22521                           
 22522                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 22523                           ;usb_device.c: 1000: if(dir != 0)
 22524  003650  5001               	movf	i2USBTransferOnePacket@dir,w,c
 22525  003652  B4D8               	btfsc	status,2,c
 22526  003654  D007               	goto	i2l437
 22527                           
 22528                           ;usb_device.c: 1001: {
 22529                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 22530  003656  5009               	movf	i2USBTransferOnePacket@ep,w,c
 22531  003658  0D02               	mullw	2
 22532  00365A  0E40               	movlw	low _pBDTEntryIn
 22533  00365C  24F3               	addwf	prodl,w,c
 22534  00365E  6ED9               	movwf	fsr2l,c
 22535  003660  0E00               	movlw	high _pBDTEntryIn
 22536  003662  D006               	goto	L26
 22537  003664                     i2l437:
 22538                           
 22539                           ;usb_device.c: 1005: else
 22540                           ;usb_device.c: 1006: {
 22541                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 22542  003664  5009               	movf	i2USBTransferOnePacket@ep,w,c
 22543  003666  0D02               	mullw	2
 22544  003668  0EC8               	movlw	low _pBDTEntryOut
 22545  00366A  24F3               	addwf	prodl,w,c
 22546  00366C  6ED9               	movwf	fsr2l,c
 22547  00366E  0E02               	movlw	high _pBDTEntryOut
 22548  003670                     L26:
 22549  003670  20F4               	addwfc	prodh,w,c
 22550  003672  6EDA               	movwf	fsr2h,c
 22551  003674  CFDE F00A          	movff	postinc2,i2USBTransferOnePacket@handle
 22552  003678  CFDD F00B          	movff	postdec2,i2USBTransferOnePacket@handle+1
 22553                           
 22554                           ;usb_device.c: 1009: }
 22555                           ;usb_device.c: 1013: if(handle == 0)
 22556  00367C  500A               	movf	i2USBTransferOnePacket@handle,w,c
 22557  00367E  100B               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 22558  003680  A4D8               	btfss	status,2,c
 22559  003682  D005               	goto	i2l439
 22560                           
 22561                           ;usb_device.c: 1014: {
 22562                           ;usb_device.c: 1015: return 0;
 22563  003684  0E00               	movlw	0
 22564  003686  6E01               	movwf	?i2_USBTransferOnePacket,c
 22565  003688  0E00               	movlw	0
 22566  00368A  6E02               	movwf	?i2_USBTransferOnePacket+1,c
 22567  00368C  0012               	return	
 22568  00368E                     i2l439:
 22569                           
 22570                           ;usb_device.c: 1016: }
 22571                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 22572  00368E  EE20 F002          	lfsr	2,2
 22573  003692  500A               	movf	i2USBTransferOnePacket@handle,w,c
 22574  003694  26D9               	addwf	fsr2l,f,c
 22575  003696  500B               	movf	i2USBTransferOnePacket@handle+1,w,c
 22576  003698  22DA               	addwfc	fsr2h,f,c
 22577  00369A  C002  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 22578  00369E  C003  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 22579                           
 22580                           ;usb_device.c: 1030: handle->CNT = len;
 22581  0036A2  EE20 F001          	lfsr	2,1
 22582  0036A6  500A               	movf	i2USBTransferOnePacket@handle,w,c
 22583  0036A8  26D9               	addwf	fsr2l,f,c
 22584  0036AA  500B               	movf	i2USBTransferOnePacket@handle+1,w,c
 22585  0036AC  22DA               	addwfc	fsr2h,f,c
 22586  0036AE  C004  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 22587                           
 22588                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 22589  0036B2  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 22590  0036B6  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 22591  0036BA  0E40               	movlw	64
 22592  0036BC  16DF               	andwf	indf2,f,c
 22593                           
 22594                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 22595  0036BE  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 22596  0036C2  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 22597  0036C6  0E00               	movlw	0
 22598  0036C8  86DB               	bsf	plusw2,3,c
 22599                           
 22600                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 22601  0036CA  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 22602  0036CE  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 22603  0036D2  0E00               	movlw	0
 22604  0036D4  8EDB               	bsf	plusw2,7,c
 22605                           
 22606                           ;usb_device.c: 1036: if(dir != 0)
 22607  0036D6  5001               	movf	i2USBTransferOnePacket@dir,w,c
 22608  0036D8  B4D8               	btfsc	status,2,c
 22609  0036DA  D018               	goto	i2l441
 22610                           
 22611                           ;usb_device.c: 1037: {
 22612                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
 22613  0036DC  5009               	movf	i2USBTransferOnePacket@ep,w,c
 22614  0036DE  0D02               	mullw	2
 22615  0036E0  0E40               	movlw	low _pBDTEntryIn
 22616  0036E2  24F3               	addwf	prodl,w,c
 22617  0036E4  6ED9               	movwf	fsr2l,c
 22618  0036E6  0E00               	movlw	high _pBDTEntryIn
 22619  0036E8  20F4               	addwfc	prodh,w,c
 22620  0036EA  6EDA               	movwf	fsr2h,c
 22621  0036EC  CFDE F005          	movff	postinc2,??i2_USBTransferOnePacket
 22622  0036F0  CFDD F006          	movff	postdec2,??i2_USBTransferOnePacket+1
 22623  0036F4  0E04               	movlw	4
 22624  0036F6  1805               	xorwf	??i2_USBTransferOnePacket,w,c
 22625  0036F8  6E07               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 22626  0036FA  5006               	movf	??i2_USBTransferOnePacket+1,w,c
 22627  0036FC  6E08               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 22628  0036FE  5009               	movf	i2USBTransferOnePacket@ep,w,c
 22629  003700  0D02               	mullw	2
 22630  003702  0E40               	movlw	low _pBDTEntryIn
 22631  003704  24F3               	addwf	prodl,w,c
 22632  003706  6ED9               	movwf	fsr2l,c
 22633  003708  0E00               	movlw	high _pBDTEntryIn
 22634  00370A  D017               	goto	L27
 22635  00370C                     i2l441:
 22636                           
 22637                           ;usb_device.c: 1041: else
 22638                           ;usb_device.c: 1042: {
 22639                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
 22640  00370C  5009               	movf	i2USBTransferOnePacket@ep,w,c
 22641  00370E  0D02               	mullw	2
 22642  003710  0EC8               	movlw	low _pBDTEntryOut
 22643  003712  24F3               	addwf	prodl,w,c
 22644  003714  6ED9               	movwf	fsr2l,c
 22645  003716  0E02               	movlw	high _pBDTEntryOut
 22646  003718  20F4               	addwfc	prodh,w,c
 22647  00371A  6EDA               	movwf	fsr2h,c
 22648  00371C  CFDE F005          	movff	postinc2,??i2_USBTransferOnePacket
 22649  003720  CFDD F006          	movff	postdec2,??i2_USBTransferOnePacket+1
 22650  003724  0E04               	movlw	4
 22651  003726  1805               	xorwf	??i2_USBTransferOnePacket,w,c
 22652  003728  6E07               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 22653  00372A  5006               	movf	??i2_USBTransferOnePacket+1,w,c
 22654  00372C  6E08               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 22655  00372E  5009               	movf	i2USBTransferOnePacket@ep,w,c
 22656  003730  0D02               	mullw	2
 22657  003732  0EC8               	movlw	low _pBDTEntryOut
 22658  003734  24F3               	addwf	prodl,w,c
 22659  003736  6ED9               	movwf	fsr2l,c
 22660  003738  0E02               	movlw	high _pBDTEntryOut
 22661  00373A                     L27:
 22662  00373A  20F4               	addwfc	prodh,w,c
 22663  00373C  6EDA               	movwf	fsr2h,c
 22664  00373E  C007  FFDE         	movff	??i2_USBTransferOnePacket+2,postinc2
 22665  003742  C008  FFDD         	movff	??i2_USBTransferOnePacket+3,postdec2
 22666                           
 22667                           ;usb_device.c: 1045: }
 22668                           ;usb_device.c: 1046: return (void*)handle;
 22669  003746  C00A  F001         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 22670  00374A  C00B  F002         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 22671  00374E  0012               	return	
 22672  003750                     __end_ofi2_USBTransferOnePacket:
 22673                           	opt stack 0
 22674                           pclatu	equ	0xFFB
 22675                           pclath	equ	0xFFA
 22676                           tblptru	equ	0xFF8
 22677                           tblptrh	equ	0xFF7
 22678                           tblptrl	equ	0xFF6
 22679                           tablat	equ	0xFF5
 22680                           prodh	equ	0xFF4
 22681                           prodl	equ	0xFF3
 22682                           intcon	equ	0xFF2
 22683                           indf0	equ	0xFEF
 22684                           postinc0	equ	0xFEE
 22685                           fsr0h	equ	0xFEA
 22686                           fsr0l	equ	0xFE9
 22687                           wreg	equ	0xFE8
 22688                           indf1	equ	0xFE7
 22689                           postdec1	equ	0xFE5
 22690                           fsr1h	equ	0xFE2
 22691                           fsr1l	equ	0xFE1
 22692                           indf2	equ	0xFDF
 22693                           postinc2	equ	0xFDE
 22694                           postdec2	equ	0xFDD
 22695                           plusw2	equ	0xFDB
 22696                           fsr2h	equ	0xFDA
 22697                           fsr2l	equ	0xFD9
 22698                           status	equ	0xFD8
 22699                           
 22700 ;; *************** function _USBEnableEndpoint *****************
 22701 ;; Defined at:
 22702 ;;		line 878 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 22703 ;; Parameters:    Size  Location     Type
 22704 ;;  ep              1    wreg     unsigned char 
 22705 ;;  options         1    8[COMRAM] unsigned char 
 22706 ;; Auto vars:     Size  Location     Type
 22707 ;;  ep              1   11[COMRAM] unsigned char 
 22708 ;;  p               2    9[COMRAM] PTR unsigned char 
 22709 ;;		 -> UEP0(1), 
 22710 ;; Return value:  Size  Location     Type
 22711 ;;                  1    wreg      void 
 22712 ;; Registers used:
 22713 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22714 ;; Tracked objects:
 22715 ;;		On entry : 0/0
 22716 ;;		On exit  : 0/0
 22717 ;;		Unchanged: 0/0
 22718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22719 ;;      Params:         1       0       0       0       0       0       0       0       0
 22720 ;;      Locals:         3       0       0       0       0       0       0       0       0
 22721 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22722 ;;      Totals:         4       0       0       0       0       0       0       0       0
 22723 ;;Total ram usage:        4 bytes
 22724 ;; Hardware stack levels used:    1
 22725 ;; Hardware stack levels required when called:    1
 22726 ;; This function calls:
 22727 ;;		_USBConfigureEndpoint
 22728 ;; This function is called by:
 22729 ;;		_CDCInitEP
 22730 ;; This function uses a non-reentrant model
 22731 ;;
 22732                           
 22733                           	psect	text87
 22734  005196                     __ptext87:
 22735                           	opt stack 0
 22736  005196                     _USBEnableEndpoint:
 22737                           	opt stack 20
 22738                           
 22739                           ;incstack = 0
 22740                           ;USBEnableEndpoint@ep stored from wreg
 22741  005196  6E0C               	movwf	USBEnableEndpoint@ep,c
 22742                           
 22743                           ;usb_device.c: 880: unsigned char* p;
 22744                           ;usb_device.c: 884: if(options & 0x04)
 22745  005198  A409               	btfss	USBEnableEndpoint@options,2,c
 22746  00519A  D005               	goto	i2l432
 22747                           
 22748                           ;usb_device.c: 885: {
 22749                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 22750  00519C  0E00               	movlw	0
 22751  00519E  6E01               	movwf	USBConfigureEndpoint@direction,c
 22752  0051A0  500C               	movf	USBEnableEndpoint@ep,w,c
 22753  0051A2  ECF1  F022         	call	_USBConfigureEndpoint
 22754  0051A6                     i2l432:
 22755                           
 22756                           ;usb_device.c: 887: }
 22757                           ;usb_device.c: 888: if(options & 0x02)
 22758  0051A6  A209               	btfss	USBEnableEndpoint@options,1,c
 22759  0051A8  D005               	goto	i2l433
 22760                           
 22761                           ;usb_device.c: 889: {
 22762                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 22763  0051AA  0E01               	movlw	1
 22764  0051AC  6E01               	movwf	USBConfigureEndpoint@direction,c
 22765  0051AE  500C               	movf	USBEnableEndpoint@ep,w,c
 22766  0051B0  ECF1  F022         	call	_USBConfigureEndpoint
 22767  0051B4                     i2l433:
 22768                           
 22769                           ;usb_device.c: 891: }
 22770                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 22771  0051B4  500C               	movf	USBEnableEndpoint@ep,w,c
 22772  0051B6  0D01               	mullw	1
 22773  0051B8  0E70               	movlw	112
 22774  0051BA  24F3               	addwf	prodl,w,c
 22775  0051BC  6E0A               	movwf	USBEnableEndpoint@p,c
 22776  0051BE  0E0F               	movlw	15
 22777  0051C0  20F4               	addwfc	prodh,w,c
 22778  0051C2  6E0B               	movwf	USBEnableEndpoint@p+1,c
 22779                           
 22780                           ;usb_device.c: 901: *p = options;
 22781  0051C4  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 22782  0051C8  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 22783  0051CC  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 22784  0051D0  0012               	return		;funcret
 22785  0051D2                     __end_of_USBEnableEndpoint:
 22786                           	opt stack 0
 22787                           pclatu	equ	0xFFB
 22788                           pclath	equ	0xFFA
 22789                           tblptru	equ	0xFF8
 22790                           tblptrh	equ	0xFF7
 22791                           tblptrl	equ	0xFF6
 22792                           tablat	equ	0xFF5
 22793                           prodh	equ	0xFF4
 22794                           prodl	equ	0xFF3
 22795                           intcon	equ	0xFF2
 22796                           indf0	equ	0xFEF
 22797                           postinc0	equ	0xFEE
 22798                           fsr0h	equ	0xFEA
 22799                           fsr0l	equ	0xFE9
 22800                           wreg	equ	0xFE8
 22801                           indf1	equ	0xFE7
 22802                           postdec1	equ	0xFE5
 22803                           fsr1h	equ	0xFE2
 22804                           fsr1l	equ	0xFE1
 22805                           indf2	equ	0xFDF
 22806                           postinc2	equ	0xFDE
 22807                           postdec2	equ	0xFDD
 22808                           plusw2	equ	0xFDB
 22809                           fsr2h	equ	0xFDA
 22810                           fsr2l	equ	0xFD9
 22811                           status	equ	0xFD8
 22812                           
 22813 ;; *************** function _USBConfigureEndpoint *****************
 22814 ;; Defined at:
 22815 ;;		line 1543 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 22816 ;; Parameters:    Size  Location     Type
 22817 ;;  EPNum           1    wreg     unsigned char 
 22818 ;;  direction       1    0[COMRAM] unsigned char 
 22819 ;; Auto vars:     Size  Location     Type
 22820 ;;  EPNum           1    5[COMRAM] unsigned char 
 22821 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 22822 ;;		 -> BDT(48), 
 22823 ;; Return value:  Size  Location     Type
 22824 ;;                  1    wreg      void 
 22825 ;; Registers used:
 22826 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22827 ;; Tracked objects:
 22828 ;;		On entry : 0/0
 22829 ;;		On exit  : 0/0
 22830 ;;		Unchanged: 0/0
 22831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22832 ;;      Params:         1       0       0       0       0       0       0       0       0
 22833 ;;      Locals:         3       0       0       0       0       0       0       0       0
 22834 ;;      Temps:          4       0       0       0       0       0       0       0       0
 22835 ;;      Totals:         8       0       0       0       0       0       0       0       0
 22836 ;;Total ram usage:        8 bytes
 22837 ;; Hardware stack levels used:    1
 22838 ;; This function calls:
 22839 ;;		Nothing
 22840 ;; This function is called by:
 22841 ;;		_USBEnableEndpoint
 22842 ;; This function uses a non-reentrant model
 22843 ;;
 22844                           
 22845                           	psect	text88
 22846  0045E2                     __ptext88:
 22847                           	opt stack 0
 22848  0045E2                     _USBConfigureEndpoint:
 22849                           	opt stack 20
 22850                           
 22851                           ;incstack = 0
 22852                           ;USBConfigureEndpoint@EPNum stored from wreg
 22853  0045E2  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 22854                           
 22855                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
 22856                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
 22857  0045E4  0E00               	movlw	0
 22858  0045E6  6E07               	movwf	USBConfigureEndpoint@handle,c
 22859  0045E8  0E04               	movlw	4
 22860  0045EA  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 22861                           
 22862                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
 22863  0045EC  5001               	movf	USBConfigureEndpoint@direction,w,c
 22864  0045EE  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 22865  0045F0  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 22866  0045F2  90D8               	bcf	status,0,c
 22867  0045F4  3602               	rlcf	??_USBConfigureEndpoint,f,c
 22868  0045F6  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 22869  0045F8  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 22870  0045FA  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 22871  0045FC  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 22872  0045FE  90D8               	bcf	status,0,c
 22873  004600  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 22874  004602  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 22875  004604  90D8               	bcf	status,0,c
 22876  004606  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 22877  004608  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 22878  00460A  5002               	movf	??_USBConfigureEndpoint,w,c
 22879  00460C  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 22880  00460E  5003               	movf	??_USBConfigureEndpoint+1,w,c
 22881  004610  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 22882  004612  90D8               	bcf	status,0,c
 22883  004614  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 22884  004616  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 22885  004618  90D8               	bcf	status,0,c
 22886  00461A  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 22887  00461C  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 22888  00461E  5004               	movf	??_USBConfigureEndpoint+2,w,c
 22889  004620  2607               	addwf	USBConfigureEndpoint@handle,f,c
 22890  004622  5005               	movf	??_USBConfigureEndpoint+3,w,c
 22891  004624  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 22892                           
 22893                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
 22894  004626  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 22895  00462A  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 22896  00462E  9EDF               	bcf	indf2,7,c
 22897                           
 22898                           ;usb_device.c: 1557: if(direction == 0)
 22899  004630  5001               	movf	USBConfigureEndpoint@direction,w,c
 22900  004632  A4D8               	btfss	status,2,c
 22901  004634  D007               	goto	i2l479
 22902                           
 22903                           ;usb_device.c: 1558: {
 22904                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
 22905  004636  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 22906  004638  0D02               	mullw	2
 22907  00463A  0EC8               	movlw	low _pBDTEntryOut
 22908  00463C  24F3               	addwf	prodl,w,c
 22909  00463E  6ED9               	movwf	fsr2l,c
 22910  004640  0E02               	movlw	high _pBDTEntryOut
 22911  004642  D006               	goto	L28
 22912  004644                     i2l479:
 22913                           
 22914                           ;usb_device.c: 1561: else
 22915                           ;usb_device.c: 1562: {
 22916                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
 22917  004644  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 22918  004646  0D02               	mullw	2
 22919  004648  0E40               	movlw	low _pBDTEntryIn
 22920  00464A  24F3               	addwf	prodl,w,c
 22921  00464C  6ED9               	movwf	fsr2l,c
 22922  00464E  0E00               	movlw	high _pBDTEntryIn
 22923  004650                     L28:
 22924  004650  20F4               	addwfc	prodh,w,c
 22925  004652  6EDA               	movwf	fsr2h,c
 22926  004654  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 22927  004658  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 22928                           
 22929                           ;usb_device.c: 1564: }
 22930                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
 22931  00465C  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 22932  004660  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 22933  004664  9CDF               	bcf	indf2,6,c
 22934                           
 22935                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
 22936  004666  EE20 F004          	lfsr	2,4
 22937  00466A  5007               	movf	USBConfigureEndpoint@handle,w,c
 22938  00466C  26D9               	addwf	fsr2l,f,c
 22939  00466E  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 22940  004670  22DA               	addwfc	fsr2h,f,c
 22941  004672  8CDF               	bsf	indf2,6,c
 22942  004674  0012               	return		;funcret
 22943  004676                     __end_of_USBConfigureEndpoint:
 22944                           	opt stack 0
 22945                           pclatu	equ	0xFFB
 22946                           pclath	equ	0xFFA
 22947                           tblptru	equ	0xFF8
 22948                           tblptrh	equ	0xFF7
 22949                           tblptrl	equ	0xFF6
 22950                           tablat	equ	0xFF5
 22951                           prodh	equ	0xFF4
 22952                           prodl	equ	0xFF3
 22953                           intcon	equ	0xFF2
 22954                           indf0	equ	0xFEF
 22955                           postinc0	equ	0xFEE
 22956                           fsr0h	equ	0xFEA
 22957                           fsr0l	equ	0xFE9
 22958                           wreg	equ	0xFE8
 22959                           indf1	equ	0xFE7
 22960                           postdec1	equ	0xFE5
 22961                           fsr1h	equ	0xFE2
 22962                           fsr1l	equ	0xFE1
 22963                           indf2	equ	0xFDF
 22964                           postinc2	equ	0xFDE
 22965                           postdec2	equ	0xFDD
 22966                           plusw2	equ	0xFDB
 22967                           fsr2h	equ	0xFDA
 22968                           fsr2l	equ	0xFD9
 22969                           status	equ	0xFD8
 22970                           
 22971 ;; *************** function _USBCtrlTrfOutHandler *****************
 22972 ;; Defined at:
 22973 ;;		line 2538 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 22974 ;; Parameters:    Size  Location     Type
 22975 ;;		None
 22976 ;; Auto vars:     Size  Location     Type
 22977 ;;		None
 22978 ;; Return value:  Size  Location     Type
 22979 ;;                  1    wreg      void 
 22980 ;; Registers used:
 22981 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22982 ;; Tracked objects:
 22983 ;;		On entry : 0/0
 22984 ;;		On exit  : 0/0
 22985 ;;		Unchanged: 0/0
 22986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22987 ;;      Params:         0       0       0       0       0       0       0       0       0
 22988 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22989 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22990 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22991 ;;Total ram usage:        0 bytes
 22992 ;; Hardware stack levels used:    1
 22993 ;; Hardware stack levels required when called:    2
 22994 ;; This function calls:
 22995 ;;		_USBCtrlTrfRxService
 22996 ;; This function is called by:
 22997 ;;		_USBCtrlEPService
 22998 ;; This function uses a non-reentrant model
 22999 ;;
 23000                           
 23001                           	psect	text89
 23002  004C88                     __ptext89:
 23003                           	opt stack 0
 23004  004C88                     _USBCtrlTrfOutHandler:
 23005                           	opt stack 20
 23006                           
 23007                           ;usb_device.c: 2540: if(controlTransferState == 2)
 23008                           
 23009                           ;incstack = 0
 23010  004C88  0E02               	movlw	2
 23011  004C8A  1856               	xorwf	_controlTransferState,w,c	;volatile
 23012  004C8C  A4D8               	btfss	status,2,c
 23013  004C8E  D003               	goto	i2l585
 23014                           
 23015                           ;usb_device.c: 2541: {
 23016                           ;usb_device.c: 2542: USBCtrlTrfRxService();
 23017  004C90  EC9C  F019         	call	_USBCtrlTrfRxService	;wreg free
 23018                           
 23019                           ;usb_device.c: 2543: }
 23020  004C94  0012               	return	
 23021  004C96                     i2l585:
 23022                           
 23023                           ;usb_device.c: 2544: else
 23024                           ;usb_device.c: 2545: {
 23025                           ;usb_device.c: 2548: controlTransferState = 0;
 23026  004C96  0E00               	movlw	0
 23027  004C98  6E56               	movwf	_controlTransferState,c	;volatile
 23028                           
 23029                           ;usb_device.c: 2555: if(BothEP0OutUOWNsSet == 0)
 23030  004C9A  0102               	movlb	2	; () banked
 23031  004C9C  51EA               	movf	_BothEP0OutUOWNsSet& (0+255),w,b	;volatile
 23032  004C9E  A4D8               	btfss	status,2,c
 23033  004CA0  D01F               	goto	i2l587
 23034                           
 23035                           ; BSR set to: 2
 23036                           ;usb_device.c: 2556: {
 23037                           ;usb_device.c: 2557: pBDTEntryEP0OutNext->CNT = 8;
 23038  004CA2  EE20 F001          	lfsr	2,1
 23039  004CA6  504C               	movf	_pBDTEntryEP0OutNext,w,c
 23040  004CA8  26D9               	addwf	fsr2l,f,c
 23041  004CAA  504D               	movf	_pBDTEntryEP0OutNext+1,w,c
 23042  004CAC  22DA               	addwfc	fsr2h,f,c
 23043  004CAE  0E08               	movlw	8
 23044  004CB0  6EDF               	movwf	indf2,c
 23045                           
 23046                           ;usb_device.c: 2558: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 23047  004CB2  EE20 F002          	lfsr	2,2
 23048  004CB6  504C               	movf	_pBDTEntryEP0OutNext,w,c
 23049  004CB8  26D9               	addwf	fsr2l,f,c
 23050  004CBA  504D               	movf	_pBDTEntryEP0OutNext+1,w,c
 23051  004CBC  22DA               	addwfc	fsr2h,f,c
 23052  004CBE  0E30               	movlw	48
 23053  004CC0  6EDE               	movwf	postinc2,c
 23054  004CC2  0E04               	movlw	4
 23055  004CC4  6EDD               	movwf	postdec2,c
 23056                           
 23057                           ; BSR set to: 2
 23058                           ;usb_device.c: 2559: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 23059  004CC6  C04C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23060  004CCA  C04D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23061  004CCE  0E0C               	movlw	12
 23062  004CD0  6EDF               	movwf	indf2,c
 23063                           
 23064                           ; BSR set to: 2
 23065                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 23066  004CD2  C04C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23067  004CD6  C04D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23068  004CDA  0E00               	movlw	0
 23069  004CDC  8EDB               	bsf	plusw2,7,c
 23070                           
 23071                           ;usb_device.c: 2561: }
 23072  004CDE  0012               	return	
 23073  004CE0                     i2l587:
 23074                           
 23075                           ; BSR set to: 2
 23076                           ;usb_device.c: 2562: else
 23077                           ;usb_device.c: 2563: {
 23078                           ;usb_device.c: 2564: BothEP0OutUOWNsSet = 0;
 23079                           
 23080                           ; BSR set to: 2
 23081  004CE0  0E00               	movlw	0
 23082  004CE2  6FEA               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 23083                           
 23084                           ; BSR set to: 2
 23085  004CE4  0012               	return	
 23086  004CE6                     __end_of_USBCtrlTrfOutHandler:
 23087                           	opt stack 0
 23088                           pclatu	equ	0xFFB
 23089                           pclath	equ	0xFFA
 23090                           tblptru	equ	0xFF8
 23091                           tblptrh	equ	0xFF7
 23092                           tblptrl	equ	0xFF6
 23093                           tablat	equ	0xFF5
 23094                           prodh	equ	0xFF4
 23095                           prodl	equ	0xFF3
 23096                           intcon	equ	0xFF2
 23097                           indf0	equ	0xFEF
 23098                           postinc0	equ	0xFEE
 23099                           fsr0h	equ	0xFEA
 23100                           fsr0l	equ	0xFE9
 23101                           wreg	equ	0xFE8
 23102                           indf1	equ	0xFE7
 23103                           postdec1	equ	0xFE5
 23104                           fsr1h	equ	0xFE2
 23105                           fsr1l	equ	0xFE1
 23106                           indf2	equ	0xFDF
 23107                           postinc2	equ	0xFDE
 23108                           postdec2	equ	0xFDD
 23109                           plusw2	equ	0xFDB
 23110                           fsr2h	equ	0xFDA
 23111                           fsr2l	equ	0xFD9
 23112                           status	equ	0xFD8
 23113                           
 23114 ;; *************** function _USBCtrlTrfRxService *****************
 23115 ;; Defined at:
 23116 ;;		line 1852 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 23117 ;; Parameters:    Size  Location     Type
 23118 ;;		None
 23119 ;; Auto vars:     Size  Location     Type
 23120 ;;  byteToRead      1    1[COMRAM] unsigned char 
 23121 ;;  i               1    0[COMRAM] unsigned char 
 23122 ;; Return value:  Size  Location     Type
 23123 ;;                  1    wreg      void 
 23124 ;; Registers used:
 23125 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23126 ;; Tracked objects:
 23127 ;;		On entry : 0/0
 23128 ;;		On exit  : 0/0
 23129 ;;		Unchanged: 0/0
 23130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23131 ;;      Params:         0       0       0       0       0       0       0       0       0
 23132 ;;      Locals:         2       0       0       0       0       0       0       0       0
 23133 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23134 ;;      Totals:         2       0       0       0       0       0       0       0       0
 23135 ;;Total ram usage:        2 bytes
 23136 ;; Hardware stack levels used:    1
 23137 ;; Hardware stack levels required when called:    1
 23138 ;; This function calls:
 23139 ;;		_USBCtrlEPAllowStatusStage
 23140 ;; This function is called by:
 23141 ;;		_USBCtrlTrfOutHandler
 23142 ;; This function uses a non-reentrant model
 23143 ;;
 23144                           
 23145                           	psect	text90
 23146  003338                     __ptext90:
 23147                           	opt stack 0
 23148  003338                     _USBCtrlTrfRxService:
 23149                           	opt stack 20
 23150                           
 23151                           ;usb_device.c: 1854: uint8_t byteToRead;
 23152                           ;usb_device.c: 1855: uint8_t i;
 23153                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 23154                           
 23155                           ;incstack = 0
 23156  003338  EE20 F001          	lfsr	2,1
 23157  00333C  504E               	movf	_pBDTEntryEP0OutCurrent,w,c
 23158  00333E  26D9               	addwf	fsr2l,f,c
 23159  003340  504F               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 23160  003342  22DA               	addwfc	fsr2h,f,c
 23161  003344  50DF               	movf	indf2,w,c
 23162  003346  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 23163                           
 23164                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
 23165  003348  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 23166  00334A  5C3C               	subwf	_outPipes+4,w,c	;volatile
 23167  00334C  0E00               	movlw	0
 23168  00334E  583D               	subwfb	_outPipes+5,w,c	;volatile
 23169  003350  A0D8               	btfss	status,0,c
 23170                           
 23171                           ;usb_device.c: 1866: {
 23172                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
 23173  003352  C03C  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 23174                           
 23175                           ;usb_device.c: 1868: }
 23176                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
 23177  003356  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 23178  003358  5E3C               	subwf	_outPipes+4,f,c	;volatile
 23179  00335A  0E00               	movlw	0
 23180  00335C  5A3D               	subwfb	_outPipes+5,f,c	;volatile
 23181                           
 23182                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
 23183  00335E  0E00               	movlw	0
 23184  003360  6E01               	movwf	USBCtrlTrfRxService@i,c
 23185  003362  D011               	goto	i2l513
 23186  003364                     
 23187                           ;usb_device.c: 1875: {
 23188                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 23189  003364  5001               	movf	USBCtrlTrfRxService@i,w,c
 23190  003366  0D01               	mullw	1
 23191  003368  0E38               	movlw	56
 23192  00336A  24F3               	addwf	prodl,w,c
 23193  00336C  6ED9               	movwf	fsr2l,c
 23194  00336E  0E04               	movlw	4
 23195  003370  20F4               	addwfc	prodh,w,c
 23196  003372  6EDA               	movwf	fsr2h,c
 23197  003374  C038  FFE1         	movff	_outPipes,fsr1l	;volatile
 23198  003378  C039  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 23199  00337C  CFDF FFE7          	movff	indf2,indf1
 23200  003380  4A38               	infsnz	_outPipes,f,c	;volatile
 23201  003382  2A39               	incf	_outPipes+1,f,c	;volatile
 23202  003384  2A01               	incf	USBCtrlTrfRxService@i,f,c
 23203  003386                     i2l513:
 23204  003386  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 23205  003388  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 23206  00338A  A0D8               	btfss	status,0,c
 23207  00338C  D7EB               	goto	i2l514
 23208                           
 23209                           ;usb_device.c: 1877: }
 23210                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
 23211  00338E  503C               	movf	_outPipes+4,w,c	;volatile
 23212  003390  103D               	iorwf	_outPipes+5,w,c	;volatile
 23213  003392  B4D8               	btfsc	status,2,c
 23214  003394  D032               	goto	i2l516
 23215                           
 23216                           ;usb_device.c: 1882: {
 23217                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
 23218  003396  EE20 F001          	lfsr	2,1
 23219  00339A  504C               	movf	_pBDTEntryEP0OutNext,w,c
 23220  00339C  26D9               	addwf	fsr2l,f,c
 23221  00339E  504D               	movf	_pBDTEntryEP0OutNext+1,w,c
 23222  0033A0  22DA               	addwfc	fsr2h,f,c
 23223  0033A2  0E08               	movlw	8
 23224  0033A4  6EDF               	movwf	indf2,c
 23225                           
 23226                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 23227  0033A6  EE20 F002          	lfsr	2,2
 23228  0033AA  504C               	movf	_pBDTEntryEP0OutNext,w,c
 23229  0033AC  26D9               	addwf	fsr2l,f,c
 23230  0033AE  504D               	movf	_pBDTEntryEP0OutNext+1,w,c
 23231  0033B0  22DA               	addwfc	fsr2h,f,c
 23232  0033B2  0E38               	movlw	56
 23233  0033B4  6EDE               	movwf	postinc2,c
 23234  0033B6  0E04               	movlw	4
 23235  0033B8  6EDD               	movwf	postdec2,c
 23236                           
 23237                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 23238  0033BA  C04E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 23239  0033BE  C04F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 23240  0033C2  BCDF               	btfsc	indf2,6,c
 23241  0033C4  D00D               	goto	i2l517
 23242                           
 23243                           ;usb_device.c: 1886: {
 23244                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 23245  0033C6  C04C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23246  0033CA  C04D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23247  0033CE  0E48               	movlw	72
 23248  0033D0  6EDF               	movwf	indf2,c
 23249                           
 23250                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 23251  0033D2  C04C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23252  0033D6  C04D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23253  0033DA  0E00               	movlw	0
 23254  0033DC  8EDB               	bsf	plusw2,7,c
 23255                           
 23256                           ;usb_device.c: 1889: }
 23257  0033DE  0012               	return	
 23258  0033E0                     i2l517:
 23259                           
 23260                           ;usb_device.c: 1890: else
 23261                           ;usb_device.c: 1891: {
 23262                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 23263  0033E0  C04C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23264  0033E4  C04D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23265  0033E8  0E08               	movlw	8
 23266  0033EA  6EDF               	movwf	indf2,c
 23267                           
 23268                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 23269  0033EC  C04C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23270  0033F0  C04D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23271  0033F4  0E00               	movlw	0
 23272  0033F6  8EDB               	bsf	plusw2,7,c
 23273                           
 23274                           ;usb_device.c: 1894: }
 23275                           ;usb_device.c: 1895: }
 23276  0033F8  0012               	return	
 23277  0033FA                     i2l516:
 23278                           
 23279                           ;usb_device.c: 1896: else
 23280                           ;usb_device.c: 1897: {
 23281                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 23282  0033FA  EE20 F001          	lfsr	2,1
 23283  0033FE  504C               	movf	_pBDTEntryEP0OutNext,w,c
 23284  003400  26D9               	addwf	fsr2l,f,c
 23285  003402  504D               	movf	_pBDTEntryEP0OutNext+1,w,c
 23286  003404  22DA               	addwfc	fsr2h,f,c
 23287  003406  0E08               	movlw	8
 23288  003408  6EDF               	movwf	indf2,c
 23289                           
 23290                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 23291  00340A  EE20 F002          	lfsr	2,2
 23292  00340E  504C               	movf	_pBDTEntryEP0OutNext,w,c
 23293  003410  26D9               	addwf	fsr2l,f,c
 23294  003412  504D               	movf	_pBDTEntryEP0OutNext+1,w,c
 23295  003414  22DA               	addwfc	fsr2h,f,c
 23296  003416  0E30               	movlw	48
 23297  003418  6EDE               	movwf	postinc2,c
 23298  00341A  0E04               	movlw	4
 23299  00341C  6EDD               	movwf	postdec2,c
 23300                           
 23301                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 23302  00341E  C04C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23303  003422  C04D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23304  003426  0E04               	movlw	4
 23305  003428  6EDF               	movwf	indf2,c
 23306                           
 23307                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 23308  00342A  C04C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23309  00342E  C04D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23310  003432  0E00               	movlw	0
 23311  003434  8EDB               	bsf	plusw2,7,c
 23312                           
 23313                           ;usb_device.c: 1926: }
 23314                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
 23315                           
 23316                           ;usb_device.c: 1915: {
 23317                           ;usb_device.c: 1921: outPipes[0].pFunc();
 23318  003436  9E3B               	bcf	_outPipes+3,7,c	;volatile
 23319                           
 23320                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
 23321  003438  5053               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 23322  00343A  A4D8               	btfss	status,2,c
 23323  00343C  0012               	return	
 23324                           
 23325                           ;usb_device.c: 1942: {
 23326                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
 23327  00343E  EC4B  F01F         	call	_USBCtrlEPAllowStatusStage	;wreg free
 23328  003442  0012               	return	
 23329  003444                     __end_of_USBCtrlTrfRxService:
 23330                           	opt stack 0
 23331                           pclatu	equ	0xFFB
 23332                           pclath	equ	0xFFA
 23333                           tblptru	equ	0xFF8
 23334                           tblptrh	equ	0xFF7
 23335                           tblptrl	equ	0xFF6
 23336                           tablat	equ	0xFF5
 23337                           prodh	equ	0xFF4
 23338                           prodl	equ	0xFF3
 23339                           intcon	equ	0xFF2
 23340                           indf0	equ	0xFEF
 23341                           postinc0	equ	0xFEE
 23342                           fsr0h	equ	0xFEA
 23343                           fsr0l	equ	0xFE9
 23344                           wreg	equ	0xFE8
 23345                           indf1	equ	0xFE7
 23346                           postdec1	equ	0xFE5
 23347                           fsr1h	equ	0xFE2
 23348                           fsr1l	equ	0xFE1
 23349                           indf2	equ	0xFDF
 23350                           postinc2	equ	0xFDE
 23351                           postdec2	equ	0xFDD
 23352                           plusw2	equ	0xFDB
 23353                           fsr2h	equ	0xFDA
 23354                           fsr2l	equ	0xFD9
 23355                           status	equ	0xFD8
 23356                           
 23357 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 23358 ;; Defined at:
 23359 ;;		line 1416 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 23360 ;; Parameters:    Size  Location     Type
 23361 ;;		None
 23362 ;; Auto vars:     Size  Location     Type
 23363 ;;		None
 23364 ;; Return value:  Size  Location     Type
 23365 ;;                  1    wreg      void 
 23366 ;; Registers used:
 23367 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23368 ;; Tracked objects:
 23369 ;;		On entry : 0/0
 23370 ;;		On exit  : 0/0
 23371 ;;		Unchanged: 0/0
 23372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23373 ;;      Params:         0       0       0       0       0       0       0       0       0
 23374 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23375 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23376 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23377 ;;Total ram usage:        0 bytes
 23378 ;; Hardware stack levels used:    1
 23379 ;; This function calls:
 23380 ;;		Nothing
 23381 ;; This function is called by:
 23382 ;;		_USBDeviceTasks
 23383 ;;		_USBCtrlEPServiceComplete
 23384 ;;		_USBCtrlTrfRxService
 23385 ;; This function uses a non-reentrant model
 23386 ;;
 23387                           
 23388                           	psect	text91
 23389  003E96                     __ptext91:
 23390                           	opt stack 0
 23391  003E96                     _USBCtrlEPAllowStatusStage:
 23392                           	opt stack 20
 23393                           
 23394                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
 23395                           
 23396                           ;incstack = 0
 23397  003E96  0102               	movlb	2	; () banked
 23398  003E98  51E9               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 23399  003E9A  A4D8               	btfss	status,2,c
 23400  003E9C  0012               	return	
 23401                           
 23402                           ; BSR set to: 2
 23403                           ;usb_device.c: 1424: {
 23404                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
 23405  003E9E  0E01               	movlw	1
 23406  003EA0  6FE9               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 23407                           
 23408                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
 23409  003EA2  51E8               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 23410  003EA4  A4D8               	btfss	status,2,c
 23411  003EA6  0012               	return	
 23412                           
 23413                           ; BSR set to: 2
 23414                           ;usb_device.c: 1427: {
 23415                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
 23416  003EA8  0E01               	movlw	1
 23417  003EAA  6FE8               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 23418                           
 23419                           ; BSR set to: 2
 23420                           ;usb_device.c: 1432: if(controlTransferState == 2)
 23421  003EAC  0E02               	movlw	2
 23422  003EAE  1856               	xorwf	_controlTransferState,w,c	;volatile
 23423  003EB0  A4D8               	btfss	status,2,c
 23424  003EB2  D015               	goto	i2l467
 23425                           
 23426                           ; BSR set to: 2
 23427                           ;usb_device.c: 1433: {
 23428                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
 23429  003EB4  EE20 F001          	lfsr	2,1
 23430  003EB8  5040               	movf	_pBDTEntryIn,w,c
 23431  003EBA  26D9               	addwf	fsr2l,f,c
 23432  003EBC  5041               	movf	_pBDTEntryIn+1,w,c
 23433  003EBE  22DA               	addwfc	fsr2h,f,c
 23434  003EC0  0E00               	movlw	0
 23435  003EC2  6EDF               	movwf	indf2,c
 23436                           
 23437                           ; BSR set to: 2
 23438                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 23439  003EC4  C040  FFD9         	movff	_pBDTEntryIn,fsr2l
 23440  003EC8  C041  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23441  003ECC  0E48               	movlw	72
 23442  003ECE  6EDF               	movwf	indf2,c
 23443                           
 23444                           ; BSR set to: 2
 23445                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
 23446  003ED0  C040  FFD9         	movff	_pBDTEntryIn,fsr2l
 23447  003ED4  C041  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23448  003ED8  0E00               	movlw	0
 23449  003EDA  8EDB               	bsf	plusw2,7,c
 23450                           
 23451                           ;usb_device.c: 1437: }
 23452  003EDC  0012               	return	
 23453  003EDE                     i2l467:
 23454                           
 23455                           ; BSR set to: 2
 23456                           ;usb_device.c: 1438: else if(controlTransferState == 1)
 23457                           
 23458                           ; BSR set to: 2
 23459  003EDE  0456               	decf	_controlTransferState,w,c	;volatile
 23460  003EE0  A4D8               	btfss	status,2,c
 23461  003EE2  0012               	return	
 23462                           
 23463                           ; BSR set to: 2
 23464                           ;usb_device.c: 1439: {
 23465                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
 23466  003EE4  0E00               	movlw	0
 23467  003EE6  6FEA               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 23468                           
 23469                           ; BSR set to: 2
 23470                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
 23471  003EE8  EE20 F001          	lfsr	2,1
 23472  003EEC  504E               	movf	_pBDTEntryEP0OutCurrent,w,c
 23473  003EEE  26D9               	addwf	fsr2l,f,c
 23474  003EF0  504F               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 23475  003EF2  22DA               	addwfc	fsr2h,f,c
 23476  003EF4  0E08               	movlw	8
 23477  003EF6  6EDF               	movwf	indf2,c
 23478                           
 23479                           ; BSR set to: 2
 23480                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 23481  003EF8  EE20 F002          	lfsr	2,2
 23482  003EFC  504E               	movf	_pBDTEntryEP0OutCurrent,w,c
 23483  003EFE  26D9               	addwf	fsr2l,f,c
 23484  003F00  504F               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 23485  003F02  22DA               	addwfc	fsr2h,f,c
 23486  003F04  0E30               	movlw	48
 23487  003F06  6EDE               	movwf	postinc2,c
 23488  003F08  0E04               	movlw	4
 23489  003F0A  6EDD               	movwf	postdec2,c
 23490                           
 23491                           ; BSR set to: 2
 23492                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 23493  003F0C  C04E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 23494  003F10  C04F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 23495  003F14  0E04               	movlw	4
 23496  003F16  6EDF               	movwf	indf2,c
 23497                           
 23498                           ; BSR set to: 2
 23499                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 23500  003F18  C04E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 23501  003F1C  C04F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 23502  003F20  0E00               	movlw	0
 23503  003F22  8EDB               	bsf	plusw2,7,c
 23504                           
 23505                           ; BSR set to: 2
 23506                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
 23507  003F24  0E01               	movlw	1
 23508  003F26  6FEA               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 23509                           
 23510                           ; BSR set to: 2
 23511                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
 23512  003F28  EE20 F001          	lfsr	2,1
 23513  003F2C  504C               	movf	_pBDTEntryEP0OutNext,w,c
 23514  003F2E  26D9               	addwf	fsr2l,f,c
 23515  003F30  504D               	movf	_pBDTEntryEP0OutNext+1,w,c
 23516  003F32  22DA               	addwfc	fsr2h,f,c
 23517  003F34  0E08               	movlw	8
 23518  003F36  6EDF               	movwf	indf2,c
 23519                           
 23520                           ; BSR set to: 2
 23521                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 23522  003F38  EE20 F002          	lfsr	2,2
 23523  003F3C  504C               	movf	_pBDTEntryEP0OutNext,w,c
 23524  003F3E  26D9               	addwf	fsr2l,f,c
 23525  003F40  504D               	movf	_pBDTEntryEP0OutNext+1,w,c
 23526  003F42  22DA               	addwfc	fsr2h,f,c
 23527  003F44  0E30               	movlw	48
 23528  003F46  6EDE               	movwf	postinc2,c
 23529  003F48  0E04               	movlw	4
 23530  003F4A  6EDD               	movwf	postdec2,c
 23531                           
 23532                           ; BSR set to: 2
 23533                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 23534  003F4C  C04C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23535  003F50  C04D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23536  003F54  0E80               	movlw	128
 23537  003F56  6EDF               	movwf	indf2,c
 23538                           
 23539                           ; BSR set to: 2
 23540                           
 23541                           ; BSR set to: 2
 23542                           
 23543                           ; BSR set to: 2
 23544  003F58  0012               	return	
 23545  003F5A                     __end_of_USBCtrlEPAllowStatusStage:
 23546                           	opt stack 0
 23547                           pclatu	equ	0xFFB
 23548                           pclath	equ	0xFFA
 23549                           tblptru	equ	0xFF8
 23550                           tblptrh	equ	0xFF7
 23551                           tblptrl	equ	0xFF6
 23552                           tablat	equ	0xFF5
 23553                           prodh	equ	0xFF4
 23554                           prodl	equ	0xFF3
 23555                           intcon	equ	0xFF2
 23556                           indf0	equ	0xFEF
 23557                           postinc0	equ	0xFEE
 23558                           fsr0h	equ	0xFEA
 23559                           fsr0l	equ	0xFE9
 23560                           wreg	equ	0xFE8
 23561                           indf1	equ	0xFE7
 23562                           postdec1	equ	0xFE5
 23563                           fsr1h	equ	0xFE2
 23564                           fsr1l	equ	0xFE1
 23565                           indf2	equ	0xFDF
 23566                           postinc2	equ	0xFDE
 23567                           postdec2	equ	0xFDD
 23568                           plusw2	equ	0xFDB
 23569                           fsr2h	equ	0xFDA
 23570                           fsr2l	equ	0xFD9
 23571                           status	equ	0xFD8
 23572                           
 23573 ;; *************** function _USBCtrlTrfInHandler *****************
 23574 ;; Defined at:
 23575 ;;		line 2592 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 23576 ;; Parameters:    Size  Location     Type
 23577 ;;		None
 23578 ;; Auto vars:     Size  Location     Type
 23579 ;;  lastDTS         1    1[COMRAM] unsigned char 
 23580 ;; Return value:  Size  Location     Type
 23581 ;;                  1    wreg      void 
 23582 ;; Registers used:
 23583 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23584 ;; Tracked objects:
 23585 ;;		On entry : 0/0
 23586 ;;		On exit  : 0/0
 23587 ;;		Unchanged: 0/0
 23588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23589 ;;      Params:         0       0       0       0       0       0       0       0       0
 23590 ;;      Locals:         1       0       0       0       0       0       0       0       0
 23591 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23592 ;;      Totals:         1       0       0       0       0       0       0       0       0
 23593 ;;Total ram usage:        1 bytes
 23594 ;; Hardware stack levels used:    1
 23595 ;; Hardware stack levels required when called:    1
 23596 ;; This function calls:
 23597 ;;		_USBCtrlTrfTxService
 23598 ;; This function is called by:
 23599 ;;		_USBCtrlEPService
 23600 ;; This function uses a non-reentrant model
 23601 ;;
 23602                           
 23603                           	psect	text92
 23604  003F5A                     __ptext92:
 23605                           	opt stack 0
 23606  003F5A                     _USBCtrlTrfInHandler:
 23607                           	opt stack 21
 23608                           
 23609                           ;usb_device.c: 2594: uint8_t lastDTS;
 23610                           ;usb_device.c: 2596: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 23611                           
 23612                           ; BSR set to: 2
 23613                           ;incstack = 0
 23614  003F5A  C040  FFD9         	movff	_pBDTEntryIn,fsr2l
 23615  003F5E  C041  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23616  003F62  0E00               	movlw	0
 23617  003F64  BCDF               	btfsc	indf2,6,c
 23618  003F66  0E01               	movlw	1
 23619  003F68  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 23620                           
 23621                           ;usb_device.c: 2599: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 23622  003F6A  0E04               	movlw	4
 23623  003F6C  1840               	xorwf	_pBDTEntryIn,w,c
 23624  003F6E  6E40               	movwf	_pBDTEntryIn,c
 23625  003F70  5041               	movf	_pBDTEntryIn+1,w,c
 23626  003F72  6E41               	movwf	_pBDTEntryIn+1,c
 23627                           
 23628                           ;usb_device.c: 2604: if(USBDeviceState == ADR_PENDING_STATE)
 23629  003F74  0E08               	movlw	8
 23630  003F76  1858               	xorwf	_USBDeviceState,w,c	;volatile
 23631  003F78  A4D8               	btfss	status,2,c
 23632  003F7A  D00B               	goto	i2l594
 23633                           
 23634                           ;usb_device.c: 2605: {
 23635                           ;usb_device.c: 2606: UADDR = (SetupPkt.bDevADR & 0x7F);
 23636  003F7C  0104               	movlb	4	; () banked
 23637  003F7E  5132               	movf	50,w,b	;volatile
 23638  003F80  0B7F               	andlw	127
 23639  003F82  6E6E               	movwf	3950,c	;volatile
 23640                           
 23641                           ; BSR set to: 4
 23642                           ;usb_device.c: 2607: if(UADDR != 0u)
 23643  003F84  506E               	movf	3950,w,c	;volatile
 23644  003F86  B4D8               	btfsc	status,2,c
 23645  003F88  D002               	goto	i2l593
 23646                           
 23647                           ; BSR set to: 4
 23648                           ;usb_device.c: 2608: {
 23649                           ;usb_device.c: 2609: USBDeviceState=ADDRESS_STATE;
 23650  003F8A  0E10               	movlw	16
 23651  003F8C  D001               	goto	L29
 23652  003F8E                     i2l593:
 23653                           
 23654                           ; BSR set to: 4
 23655                           ;usb_device.c: 2611: else
 23656                           ;usb_device.c: 2612: {
 23657                           ;usb_device.c: 2613: USBDeviceState=DEFAULT_STATE;
 23658                           
 23659                           ; BSR set to: 4
 23660  003F8E  0E04               	movlw	4
 23661  003F90                     L29:
 23662  003F90  6E58               	movwf	_USBDeviceState,c	;volatile
 23663  003F92                     i2l594:
 23664                           
 23665                           ;usb_device.c: 2614: }
 23666                           ;usb_device.c: 2615: }
 23667                           ;usb_device.c: 2618: if(controlTransferState == 1)
 23668                           
 23669                           ; BSR set to: 4
 23670                           
 23671                           ; BSR set to: 4
 23672  003F92  0456               	decf	_controlTransferState,w,c	;volatile
 23673  003F94  A4D8               	btfss	status,2,c
 23674  003F96  D03A               	goto	i2l595
 23675                           
 23676                           ;usb_device.c: 2619: {
 23677                           ;usb_device.c: 2620: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 23678  003F98  EE20 F002          	lfsr	2,2
 23679  003F9C  5040               	movf	_pBDTEntryIn,w,c
 23680  003F9E  26D9               	addwf	fsr2l,f,c
 23681  003FA0  5041               	movf	_pBDTEntryIn+1,w,c
 23682  003FA2  22DA               	addwfc	fsr2h,f,c
 23683  003FA4  0E38               	movlw	56
 23684  003FA6  6EDE               	movwf	postinc2,c
 23685  003FA8  0E04               	movlw	4
 23686  003FAA  6EDD               	movwf	postdec2,c
 23687                           
 23688                           ;usb_device.c: 2621: USBCtrlTrfTxService();
 23689  003FAC  ECE1  F01E         	call	_USBCtrlTrfTxService	;wreg free
 23690                           
 23691                           ;usb_device.c: 2627: if(shortPacketStatus == 2)
 23692  003FB0  0E02               	movlw	2
 23693  003FB2  1857               	xorwf	_shortPacketStatus,w,c	;volatile
 23694  003FB4  A4D8               	btfss	status,2,c
 23695  003FB6  D00D               	goto	i2l596
 23696                           
 23697                           ;usb_device.c: 2628: {
 23698                           ;usb_device.c: 2631: pBDTEntryIn[0]->STAT.Val = 0x04;
 23699  003FB8  C040  FFD9         	movff	_pBDTEntryIn,fsr2l
 23700  003FBC  C041  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23701  003FC0  0E04               	movlw	4
 23702  003FC2  6EDF               	movwf	indf2,c
 23703                           
 23704                           ;usb_device.c: 2632: pBDTEntryIn[0]->STAT.Val |= 0x80;
 23705  003FC4  C040  FFD9         	movff	_pBDTEntryIn,fsr2l
 23706  003FC8  C041  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23707  003FCC  0E00               	movlw	0
 23708  003FCE  8EDB               	bsf	plusw2,7,c
 23709                           
 23710                           ;usb_device.c: 2633: }
 23711  003FD0  0012               	return	
 23712  003FD2                     i2l596:
 23713                           
 23714                           ;usb_device.c: 2634: else
 23715                           ;usb_device.c: 2635: {
 23716                           ;usb_device.c: 2636: if(lastDTS == 0)
 23717  003FD2  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 23718  003FD4  A4D8               	btfss	status,2,c
 23719  003FD6  D00D               	goto	i2l598
 23720                           
 23721                           ;usb_device.c: 2637: {
 23722                           ;usb_device.c: 2638: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 23723  003FD8  C040  FFD9         	movff	_pBDTEntryIn,fsr2l
 23724  003FDC  C041  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23725  003FE0  0E48               	movlw	72
 23726  003FE2  6EDF               	movwf	indf2,c
 23727                           
 23728                           ;usb_device.c: 2639: pBDTEntryIn[0]->STAT.Val |= 0x80;
 23729  003FE4  C040  FFD9         	movff	_pBDTEntryIn,fsr2l
 23730  003FE8  C041  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23731  003FEC  0E00               	movlw	0
 23732  003FEE  8EDB               	bsf	plusw2,7,c
 23733                           
 23734                           ;usb_device.c: 2640: }
 23735  003FF0  0012               	return	
 23736  003FF2                     i2l598:
 23737                           
 23738                           ;usb_device.c: 2641: else
 23739                           ;usb_device.c: 2642: {
 23740                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 23741  003FF2  C040  FFD9         	movff	_pBDTEntryIn,fsr2l
 23742  003FF6  C041  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23743  003FFA  0E08               	movlw	8
 23744  003FFC  6EDF               	movwf	indf2,c
 23745                           
 23746                           ;usb_device.c: 2644: pBDTEntryIn[0]->STAT.Val |= 0x80;
 23747  003FFE  C040  FFD9         	movff	_pBDTEntryIn,fsr2l
 23748  004002  C041  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23749  004006  0E00               	movlw	0
 23750  004008  8EDB               	bsf	plusw2,7,c
 23751                           
 23752                           ;usb_device.c: 2645: }
 23753                           ;usb_device.c: 2646: }
 23754                           ;usb_device.c: 2647: }
 23755  00400A  0012               	return	
 23756  00400C                     i2l595:
 23757                           
 23758                           ;usb_device.c: 2648: else
 23759                           ;usb_device.c: 2649: {
 23760                           ;usb_device.c: 2653: if(outPipes[0].info.bits.busy == 1)
 23761  00400C  BE3B               	btfsc	_outPipes+3,7,c	;volatile
 23762                           
 23763                           ;usb_device.c: 2658: }
 23764                           ;usb_device.c: 2659: outPipes[0].info.bits.busy = 0;
 23765                           
 23766                           ;usb_device.c: 2656: {
 23767                           ;usb_device.c: 2657: outPipes[0].pFunc();
 23768  00400E  9E3B               	bcf	_outPipes+3,7,c	;volatile
 23769                           
 23770                           ;usb_device.c: 2660: }
 23771                           ;usb_device.c: 2662: controlTransferState = 0;
 23772  004010  0E00               	movlw	0
 23773  004012  6E56               	movwf	_controlTransferState,c	;volatile
 23774  004014  0012               	return	
 23775  004016                     __end_of_USBCtrlTrfInHandler:
 23776                           	opt stack 0
 23777                           pclatu	equ	0xFFB
 23778                           pclath	equ	0xFFA
 23779                           tblptru	equ	0xFF8
 23780                           tblptrh	equ	0xFF7
 23781                           tblptrl	equ	0xFF6
 23782                           tablat	equ	0xFF5
 23783                           prodh	equ	0xFF4
 23784                           prodl	equ	0xFF3
 23785                           intcon	equ	0xFF2
 23786                           indf0	equ	0xFEF
 23787                           postinc0	equ	0xFEE
 23788                           fsr0h	equ	0xFEA
 23789                           fsr0l	equ	0xFE9
 23790                           wreg	equ	0xFE8
 23791                           indf1	equ	0xFE7
 23792                           postdec1	equ	0xFE5
 23793                           fsr1h	equ	0xFE2
 23794                           fsr1l	equ	0xFE1
 23795                           indf2	equ	0xFDF
 23796                           postinc2	equ	0xFDE
 23797                           postdec2	equ	0xFDD
 23798                           plusw2	equ	0xFDB
 23799                           fsr2h	equ	0xFDA
 23800                           fsr2l	equ	0xFD9
 23801                           status	equ	0xFD8
 23802                           
 23803 ;; *************** function _USBCtrlTrfTxService *****************
 23804 ;; Defined at:
 23805 ;;		line 1771 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 23806 ;; Parameters:    Size  Location     Type
 23807 ;;		None
 23808 ;; Auto vars:     Size  Location     Type
 23809 ;;  byteToSend      1    0[COMRAM] unsigned char 
 23810 ;; Return value:  Size  Location     Type
 23811 ;;                  1    wreg      void 
 23812 ;; Registers used:
 23813 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 23814 ;; Tracked objects:
 23815 ;;		On entry : 0/0
 23816 ;;		On exit  : 0/0
 23817 ;;		Unchanged: 0/0
 23818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23819 ;;      Params:         0       0       0       0       0       0       0       0       0
 23820 ;;      Locals:         1       0       0       0       0       0       0       0       0
 23821 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23822 ;;      Totals:         1       0       0       0       0       0       0       0       0
 23823 ;;Total ram usage:        1 bytes
 23824 ;; Hardware stack levels used:    1
 23825 ;; This function calls:
 23826 ;;		Nothing
 23827 ;; This function is called by:
 23828 ;;		_USBCtrlEPAllowDataStage
 23829 ;;		_USBCtrlTrfInHandler
 23830 ;; This function uses a non-reentrant model
 23831 ;;
 23832                           
 23833                           	psect	text93
 23834  003DC2                     __ptext93:
 23835                           	opt stack 0
 23836  003DC2                     _USBCtrlTrfTxService:
 23837                           	opt stack 19
 23838                           
 23839                           ;usb_device.c: 1773: uint8_t byteToSend;
 23840                           ;usb_device.c: 1777: byteToSend = 8;
 23841                           
 23842                           ;incstack = 0
 23843  003DC2  0E08               	movlw	8
 23844  003DC4  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 23845                           
 23846                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 23847  003DC6  0100               	movlb	0	; () banked
 23848  003DC8  51FE               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 23849  003DCA  E110               	bnz	i2l7540
 23850  003DCC  0E08               	movlw	8
 23851  003DCE  5DFD               	subwf	(_inPipes+4)& (0+255),w,b	;volatile
 23852  003DD0  B0D8               	btfsc	status,0,c
 23853  003DD2  D00C               	goto	i2l500
 23854                           
 23855                           ; BSR set to: 0
 23856                           ;usb_device.c: 1779: {
 23857                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 23858  003DD4  C0FD  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 23859                           
 23860                           ; BSR set to: 0
 23861                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 23862  003DD8  5057               	movf	_shortPacketStatus,w,c	;volatile
 23863  003DDA  A4D8               	btfss	status,2,c
 23864  003DDC  D002               	goto	i2l498
 23865                           
 23866                           ; BSR set to: 0
 23867                           ;usb_device.c: 1788: {
 23868                           ;usb_device.c: 1789: shortPacketStatus = 1;
 23869  003DDE  0E01               	movlw	1
 23870  003DE0  D004               	goto	L30
 23871  003DE2                     i2l498:
 23872                           
 23873                           ; BSR set to: 0
 23874                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 23875                           
 23876                           ; BSR set to: 0
 23877  003DE2  0457               	decf	_shortPacketStatus,w,c	;volatile
 23878  003DE4  A4D8               	btfss	status,2,c
 23879  003DE6  D002               	goto	i2l500
 23880                           
 23881                           ; BSR set to: 0
 23882                           ;usb_device.c: 1792: {
 23883                           ;usb_device.c: 1793: shortPacketStatus = 2;
 23884  003DE8  0E02               	movlw	2
 23885  003DEA                     L30:
 23886  003DEA  6E57               	movwf	_shortPacketStatus,c	;volatile
 23887  003DEC                     i2l500:
 23888  003DEC                     i2l7540:
 23889                           
 23890                           ; BSR set to: 0
 23891                           ;usb_device.c: 1794: }
 23892                           ;usb_device.c: 1795: }
 23893                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 23894  003DEC  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 23895  003DEE  5FFD               	subwf	(_inPipes+4)& (0+255),f,b	;volatile
 23896  003DF0  0E00               	movlw	0
 23897  003DF2  5BFE               	subwfb	(_inPipes+5)& (0+255),f,b	;volatile
 23898                           
 23899                           ; BSR set to: 0
 23900                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 23901  003DF4  EE20 F001          	lfsr	2,1
 23902  003DF8  5040               	movf	_pBDTEntryIn,w,c
 23903  003DFA  26D9               	addwf	fsr2l,f,c
 23904  003DFC  5041               	movf	_pBDTEntryIn+1,w,c
 23905  003DFE  22DA               	addwfc	fsr2h,f,c
 23906  003E00  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 23907                           
 23908                           ; BSR set to: 0
 23909                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 23910  003E04  0E38               	movlw	56
 23911  003E06  0103               	movlb	3	; () banked
 23912  003E08  6F4C               	movwf	_pDst& (0+255),b
 23913  003E0A  0E04               	movlw	4
 23914  003E0C  6F4D               	movwf	(_pDst+1)& (0+255),b
 23915                           
 23916                           ; BSR set to: 3
 23917                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 23918  003E0E  0100               	movlb	0	; () banked
 23919  003E10  A1FC               	btfss	(_inPipes+3)& (0+255),0,b	;volatile
 23920  003E12  D01D               	goto	i2l502
 23921  003E14  D03C               	goto	i2l506
 23922  003E16                     
 23923                           ;usb_device.c: 1812: {
 23924                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 23925                           
 23926                           ; BSR set to: 0
 23927  003E16  C0F9  FFF6         	movff	_inPipes,tblptrl	;volatile
 23928  003E1A  C0FA  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 23929  003E1E  6AF8               	clrf	tblptru,c
 23930  003E20  C34C  FFD9         	movff	_pDst,fsr2l
 23931  003E24  C34D  FFDA         	movff	_pDst+1,fsr2h
 23932  003E28  0E07               	movlw	(high __ramtop+-1)
 23933  003E2A  64F7               	cpfsgt	tblptrh,c
 23934  003E2C  D003               	bra	i2u578_47
 23935  003E2E  0008               	tblrd		*
 23936  003E30  50F5               	movf	tablat,w,c
 23937  003E32  D005               	bra	i2u578_40
 23938  003E34                     i2u578_47:
 23939  003E34  CFF6 FFE9          	movff	tblptrl,fsr0l
 23940  003E38  CFF7 FFEA          	movff	tblptrh,fsr0h
 23941  003E3C  50EF               	movf	indf0,w,c
 23942  003E3E                     i2u578_40:
 23943  003E3E  6EDF               	movwf	indf2,c
 23944  003E40  0100               	movlb	0	; () banked
 23945  003E42  4BF9               	infsnz	_inPipes& (0+255),f,b	;volatile
 23946  003E44  2BFA               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 23947                           
 23948                           ; BSR set to: 0
 23949  003E46  0103               	movlb	3	; () banked
 23950  003E48  4B4C               	infsnz	_pDst& (0+255),f,b
 23951  003E4A  2B4D               	incf	(_pDst+1)& (0+255),f,b
 23952                           
 23953                           ; BSR set to: 3
 23954                           ;usb_device.c: 1814: byteToSend--;
 23955  003E4C  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 23956  003E4E                     i2l502:
 23957                           
 23958                           ; BSR set to: 3
 23959  003E4E  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 23960  003E50  B4D8               	btfsc	status,2,c
 23961  003E52  0012               	return	
 23962  003E54  D7E0               	goto	i2l503
 23963  003E56                     
 23964                           ;usb_device.c: 1820: {
 23965                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 23966  003E56  C0F9  FFF6         	movff	_inPipes,tblptrl	;volatile
 23967  003E5A  C0FA  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 23968  003E5E  6AF8               	clrf	tblptru,c
 23969  003E60  C34C  FFD9         	movff	_pDst,fsr2l
 23970  003E64  C34D  FFDA         	movff	_pDst+1,fsr2h
 23971  003E68  0E07               	movlw	(high __ramtop+-1)
 23972  003E6A  64F7               	cpfsgt	tblptrh,c
 23973  003E6C  D003               	bra	i2u580_47
 23974  003E6E  0008               	tblrd		*
 23975  003E70  50F5               	movf	tablat,w,c
 23976  003E72  D005               	bra	i2u580_40
 23977  003E74                     i2u580_47:
 23978  003E74  CFF6 FFE9          	movff	tblptrl,fsr0l
 23979  003E78  CFF7 FFEA          	movff	tblptrh,fsr0h
 23980  003E7C  50EF               	movf	indf0,w,c
 23981  003E7E                     i2u580_40:
 23982  003E7E  6EDF               	movwf	indf2,c
 23983  003E80  0100               	movlb	0	; () banked
 23984  003E82  4BF9               	infsnz	_inPipes& (0+255),f,b	;volatile
 23985  003E84  2BFA               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 23986                           
 23987                           ; BSR set to: 0
 23988  003E86  0103               	movlb	3	; () banked
 23989  003E88  4B4C               	infsnz	_pDst& (0+255),f,b
 23990  003E8A  2B4D               	incf	(_pDst+1)& (0+255),f,b
 23991                           
 23992                           ; BSR set to: 3
 23993                           ;usb_device.c: 1822: byteToSend--;
 23994  003E8C  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 23995  003E8E                     i2l506:
 23996                           
 23997                           ; BSR set to: 3
 23998  003E8E  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 23999  003E90  B4D8               	btfsc	status,2,c
 24000  003E92  0012               	return	
 24001  003E94  D7E0               	goto	i2l507
 24002  003E96                     __end_of_USBCtrlTrfTxService:
 24003                           	opt stack 0
 24004                           pclatu	equ	0xFFB
 24005                           pclath	equ	0xFFA
 24006                           tblptru	equ	0xFF8
 24007                           tblptrh	equ	0xFF7
 24008                           tblptrl	equ	0xFF6
 24009                           tablat	equ	0xFF5
 24010                           prodh	equ	0xFF4
 24011                           prodl	equ	0xFF3
 24012                           intcon	equ	0xFF2
 24013                           indf0	equ	0xFEF
 24014                           postinc0	equ	0xFEE
 24015                           fsr0h	equ	0xFEA
 24016                           fsr0l	equ	0xFE9
 24017                           wreg	equ	0xFE8
 24018                           indf1	equ	0xFE7
 24019                           postdec1	equ	0xFE5
 24020                           fsr1h	equ	0xFE2
 24021                           fsr1l	equ	0xFE1
 24022                           indf2	equ	0xFDF
 24023                           postinc2	equ	0xFDE
 24024                           postdec2	equ	0xFDD
 24025                           plusw2	equ	0xFDB
 24026                           fsr2h	equ	0xFDA
 24027                           fsr2l	equ	0xFD9
 24028                           status	equ	0xFD8
 24029                           pclatu	equ	0xFFB
 24030                           pclath	equ	0xFFA
 24031                           tblptru	equ	0xFF8
 24032                           tblptrh	equ	0xFF7
 24033                           tblptrl	equ	0xFF6
 24034                           tablat	equ	0xFF5
 24035                           prodh	equ	0xFF4
 24036                           prodl	equ	0xFF3
 24037                           intcon	equ	0xFF2
 24038                           indf0	equ	0xFEF
 24039                           postinc0	equ	0xFEE
 24040                           fsr0h	equ	0xFEA
 24041                           fsr0l	equ	0xFE9
 24042                           wreg	equ	0xFE8
 24043                           indf1	equ	0xFE7
 24044                           postdec1	equ	0xFE5
 24045                           fsr1h	equ	0xFE2
 24046                           fsr1l	equ	0xFE1
 24047                           indf2	equ	0xFDF
 24048                           postinc2	equ	0xFDE
 24049                           postdec2	equ	0xFDD
 24050                           plusw2	equ	0xFDB
 24051                           fsr2h	equ	0xFDA
 24052                           fsr2l	equ	0xFD9
 24053                           status	equ	0xFD8
 24054                           
 24055                           	psect	rparam
 24056  0000                     pclatu	equ	0xFFB
 24057                           pclath	equ	0xFFA
 24058                           tblptru	equ	0xFF8
 24059                           tblptrh	equ	0xFF7
 24060                           tblptrl	equ	0xFF6
 24061                           tablat	equ	0xFF5
 24062                           prodh	equ	0xFF4
 24063                           prodl	equ	0xFF3
 24064                           intcon	equ	0xFF2
 24065                           indf0	equ	0xFEF
 24066                           postinc0	equ	0xFEE
 24067                           fsr0h	equ	0xFEA
 24068                           fsr0l	equ	0xFE9
 24069                           wreg	equ	0xFE8
 24070                           indf1	equ	0xFE7
 24071                           postdec1	equ	0xFE5
 24072                           fsr1h	equ	0xFE2
 24073                           fsr1l	equ	0xFE1
 24074                           indf2	equ	0xFDF
 24075                           postinc2	equ	0xFDE
 24076                           postdec2	equ	0xFDD
 24077                           plusw2	equ	0xFDB
 24078                           fsr2h	equ	0xFDA
 24079                           fsr2l	equ	0xFD9
 24080                           status	equ	0xFD8
 24081                           
 24082                           	psect	temp
 24083  00005F                     btemp:
 24084                           	opt stack 0
 24085  00005F                     	ds	1
 24086  0000                     int$flags	set	btemp
 24087  0000                     wtemp6	set	btemp+1
 24088                           pclatu	equ	0xFFB
 24089                           pclath	equ	0xFFA
 24090                           tblptru	equ	0xFF8
 24091                           tblptrh	equ	0xFF7
 24092                           tblptrl	equ	0xFF6
 24093                           tablat	equ	0xFF5
 24094                           prodh	equ	0xFF4
 24095                           prodl	equ	0xFF3
 24096                           intcon	equ	0xFF2
 24097                           indf0	equ	0xFEF
 24098                           postinc0	equ	0xFEE
 24099                           fsr0h	equ	0xFEA
 24100                           fsr0l	equ	0xFE9
 24101                           wreg	equ	0xFE8
 24102                           indf1	equ	0xFE7
 24103                           postdec1	equ	0xFE5
 24104                           fsr1h	equ	0xFE2
 24105                           fsr1l	equ	0xFE1
 24106                           indf2	equ	0xFDF
 24107                           postinc2	equ	0xFDE
 24108                           postdec2	equ	0xFDD
 24109                           plusw2	equ	0xFDB
 24110                           fsr2h	equ	0xFDA
 24111                           fsr2l	equ	0xFD9
 24112                           status	equ	0xFD8


Data Sizes:
    Strings     478
    Constant    536
    Data        34
    BSS         1007
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     55      94
    BANK0           160    153     160
    BANK1           256    247     256
    BANK2           256    200     255
    BANK3           256      0     231
    BANK4           192      0     100
    BANK5           128      0     100
    BANK6           256      0     250
    BANK7           256      0     250

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMl[48]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_26(CODE[16]), STR_25(CODE[7]), STR_24(CODE[14]), STR_23(CODE[8]), 
		 -> STR_22(CODE[8]), STR_21(CODE[10]), STR_20(CODE[17]), STR_19(CODE[11]), 
		 -> STR_18(CODE[5]), STR_17(CODE[32]), STR_16(CODE[7]), STR_15(CODE[11]), 
		 -> STR_14(CODE[11]), STR_13(CODE[14]), STR_12(CODE[3]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 100
		 -> recebeByteLoRaWan@frameData(BANK4[100]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 200
		 -> recebeByteLoRaWan@frameData(BANK4[100]), SYS(CODE[5]), MAC(CODE[5]), TxLoRaWan@comando(BANK1[200]), 
		 -> DataRate@comando(BANK1[12]), SetBandWidth@comando(BANK1[20]), SetSpreadingFactor@comando(BANK1[20]), MacSave@comando(BANK0[7]), 
		 -> GetAdr@comando(COMRAM[10]), SetAdr@comando(BANK1[15]), SetChannelLoRaWan@comando(BANK1[25]), MAC_JOIN_OTAA(CODE[10]), 
		 -> SYS_RESET(CODE[6]), SetAppKey@comando(BANK1[50]), SetAppEUI@comando(BANK1[32]), SetDevEUI@comando(BANK1[32]), 
		 -> GetDnctr@comando(BANK0[100]), STR_26(CODE[16]), STR_25(CODE[7]), STR_24(CODE[14]), 
		 -> STR_23(CODE[8]), STR_22(CODE[8]), STR_21(CODE[10]), STR_20(CODE[17]), 
		 -> STR_19(CODE[11]), STR_18(CODE[5]), STR_17(CODE[32]), STR_16(CODE[7]), 
		 -> STR_15(CODE[11]), STR_14(CODE[11]), STR_13(CODE[14]), STR_12(CODE[3]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 200
		 -> recebeByteLoRaWan@frameData(BANK4[100]), SYS(CODE[5]), MAC(CODE[5]), TxLoRaWan@comando(BANK1[200]), 
		 -> DataRate@comando(BANK1[12]), SetBandWidth@comando(BANK1[20]), SetSpreadingFactor@comando(BANK1[20]), MacSave@comando(BANK0[7]), 
		 -> GetAdr@comando(COMRAM[10]), SetAdr@comando(BANK1[15]), SetChannelLoRaWan@comando(BANK1[25]), MAC_JOIN_OTAA(CODE[10]), 
		 -> SYS_RESET(CODE[6]), SetAppKey@comando(BANK1[50]), SetAppEUI@comando(BANK1[32]), SetDevEUI@comando(BANK1[32]), 
		 -> GetDnctr@comando(BANK0[100]), STR_26(CODE[16]), STR_25(CODE[7]), STR_24(CODE[14]), 
		 -> STR_23(CODE[8]), STR_22(CODE[8]), STR_21(CODE[10]), STR_20(CODE[17]), 
		 -> STR_19(CODE[11]), STR_18(CODE[5]), STR_17(CODE[32]), STR_16(CODE[7]), 
		 -> STR_15(CODE[11]), STR_14(CODE[11]), STR_13(CODE[14]), STR_12(CODE[3]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 100
		 -> recebeByteLoRaWan@frameData(BANK4[100]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 150
		 -> frameBuffer(BANK6[150]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 150
		 -> frameBuffer(BANK6[150]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_26(CODE[16]), STR_25(CODE[7]), STR_24(CODE[14]), STR_23(CODE[8]), 
		 -> STR_22(CODE[8]), STR_21(CODE[10]), STR_20(CODE[17]), STR_19(CODE[11]), 
		 -> STR_18(CODE[5]), STR_17(CODE[32]), STR_16(CODE[7]), STR_15(CODE[11]), 
		 -> STR_14(CODE[11]), STR_13(CODE[14]), STR_12(CODE[3]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 100
		 -> recebeByteLoRaWan@frameData(BANK4[100]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 50
		 -> TxLoRaWan@hex(BANK1[4]), sendError@f(COMRAM[30]), addSensorInt@f(COMRAM[30]), addSensorStr@f(COMRAM[30]), 
		 -> addSensorPulso@f(COMRAM[50]), addSensorNivel@f(COMRAM[18]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 200
		 -> TxLoRaWan@comando(BANK1[200]), frameBuffer(BANK6[150]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 200
		 -> TxLoRaWan@comando(BANK1[200]), frameBuffer(BANK6[150]), 

    memset@p1	PTR void  size(2) Largest target is 150
		 -> frameBuffer(BANK6[150]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 150
		 -> frameBuffer(BANK6[150]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 100
		 -> receivePacket(BANK5[100]), response(BANK3[100]), SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 100
		 -> receivePacket(BANK5[100]), response(BANK3[100]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 2047
		 -> recebeByte@frameData(BANK7[100]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[2047]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 2047
		 -> recebeByte@frameData(BANK7[100]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[2047]), SetupPkt(BIGRAMhl[8]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_42(CODE[7]), MAC_TX_UNCNF(CODE[9]), MAC_TX_CNF(CODE[7]), MAC_SET_DR(CODE[7]), 
		 -> MAC_SET_BW(CODE[13]), MAC_SET_SF(CODE[16]), MAC_SAVE(CODE[5]), MAC_GET_ADR(CODE[8]), 
		 -> MAC_SET_ADR(CODE[8]), MAC_SET_CH_STATUS(CODE[14]), MAC_SET_APPKEY(CODE[11]), MAC_SET_APPEUI(CODE[11]), 
		 -> MAC_SET_DEVEUI(CODE[11]), MAC_GET_DNCTR(CODE[10]), STATE_ON(CODE[3]), STR_3(CODE[33]), 
		 -> STR_2(CODE[17]), STR_1(CODE[17]), STATE_OFF(CODE[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 92
		 -> STR_41(CODE[5]), STR_40(CODE[7]), STR_39(CODE[7]), STR_38(CODE[6]), 
		 -> STR_37(CODE[6]), STR_36(CODE[5]), STR_35(CODE[3]), STR_34(CODE[3]), 
		 -> STR_33(CODE[6]), STR_32(CODE[10]), STR_31(CODE[9]), STR_30(CODE[6]), 
		 -> STR_29(CODE[6]), STR_28(CODE[6]), STR_27(CODE[3]), STR_11(CODE[7]), 
		 -> STR_10(CODE[7]), STR_9(CODE[8]), STR_8(CODE[7]), STR_7(CODE[20]), 
		 -> STR_6(CODE[10]), STR_5(CODE[17]), STR_4(CODE[92]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 200
		 -> TxLoRaWan@hex(BANK1[4]), TxLoRaWan@comando(BANK1[200]), DataRate@comando(BANK1[12]), SetBandWidth@comando(BANK1[20]), 
		 -> SetSpreadingFactor@comando(BANK1[20]), MacSave@comando(BANK0[7]), GetAdr@comando(COMRAM[10]), SetAdr@comando(BANK1[15]), 
		 -> SetChannelLoRaWan@comando(BANK1[25]), SetAppKey@comando(BANK1[50]), SetAppEUI@comando(BANK1[32]), SetDevEUI@comando(BANK1[32]), 
		 -> GetDnctr@comando(BANK0[100]), sendError@f(COMRAM[30]), addSensorFloat@f(COMRAM[30]), addSensorInt@f(COMRAM[30]), 
		 -> addSensorStr@f(COMRAM[30]), addSensorPulso@f(COMRAM[50]), addSensorNivel@f(COMRAM[18]), frameBuffer(BANK6[150]), 
		 -> main@data(BANK2[150]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 150
		 -> frameBuffer(BANK6[150]), 

    enviaComando@cmd	PTR const unsigned char  size(2) Largest target is 200
		 -> TxLoRaWan@comando(BANK1[200]), DataRate@comando(BANK1[12]), SetBandWidth@comando(BANK1[20]), SetSpreadingFactor@comando(BANK1[20]), 
		 -> MacSave@comando(BANK0[7]), GetAdr@comando(COMRAM[10]), SetAdr@comando(BANK1[15]), SetChannelLoRaWan@comando(BANK1[25]), 
		 -> MAC_JOIN_OTAA(CODE[10]), SYS_RESET(CODE[6]), SetAppKey@comando(BANK1[50]), SetAppEUI@comando(BANK1[32]), 
		 -> SetDevEUI@comando(BANK1[32]), GetDnctr@comando(BANK0[100]), 

    TxLoRaWan@data	PTR const unsigned char  size(2) Largest target is 22
		 -> main@dadoPoco(BANK2[22]), 

    SetAdr@state	PTR const unsigned char  size(2) Largest target is 4
		 -> STATE_ON(CODE[3]), STATE_OFF(CODE[4]), 

    SetAppKey@state	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_3(CODE[33]), 

    SetAppEUI@state	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_2(CODE[17]), 

    SetDevEUI@state	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_1(CODE[17]), 

    MSG_LORAWAN	PTR const unsigned char [15] size(2) Largest target is 32
		 -> STR_26(CODE[16]), STR_25(CODE[7]), STR_24(CODE[14]), STR_23(CODE[8]), 
		 -> STR_22(CODE[8]), STR_21(CODE[10]), STR_20(CODE[17]), STR_19(CODE[11]), 
		 -> STR_18(CODE[5]), STR_17(CODE[32]), STR_16(CODE[7]), STR_15(CODE[11]), 
		 -> STR_14(CODE[11]), STR_13(CODE[14]), STR_12(CODE[3]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 200
		 -> TxLoRaWan@comando(BANK1[200]), frameBuffer(BANK6[150]), 

    putsUSBUSART@data	PTR unsigned char  size(2) Largest target is 150
		 -> main@data(BANK2[150]), 

    putsUSBUSART@pData	PTR unsigned char  size(2) Largest target is 150
		 -> main@data(BANK2[150]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S2362_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S2362_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S2362_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S2362_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 100
		 -> receivePacket(BANK5[100]), response(BANK3[100]), SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BIGRAMhl[64]), cdc_data_rx(BIGRAMhh[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S541$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S531$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S531$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S507$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S507$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S507$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S507$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 150
		 -> frameBuffer(BANK6[150]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _SYS_InterruptHigh in COMRAM

    _SYS_InterruptHigh->_USBDeviceTasks
    _recebeByteLoRaWan->_strncmp
    _converter->_toupper
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    _main->_MacSave
    _setup_uart->___lldiv
    _le_pulsos->_retornaDado
    _le_AD->___ftdiv
    ___ftdiv->___ftmul
    ___awtoft->___ftpack
    _verificaUSB->_CDCTxService
    _CDCTxService->_USBTransferOnePacket
    _USBDeviceInit->_memset
    _TxLoRaWan->_sprintf
    _ResetModuloLoRaWan->_enviaComando
    _JoinLoRaWan->_enviaComando
    _SetSpreadingFactor->_sprintf
    _SetDevEUI->_sprintf
    _SetChannelLoRaWan->_sprintf
    _SetBandWidth->_sprintf
    _SetAppKey->_sprintf
    _SetAppEUI->_sprintf
    _SetAdr->_sprintf
    _MacSave->_sprintf
    _DataRate->_sprintf
    _sprintf->___fttol
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___ftadd
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->_le_AD
    ___ftsub->___ftadd
    ___ftadd->___wmul
    _enviaComando->_parseLoRaWan
    _parseLoRaWan->_millis

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_TxLoRaWan
    _TxLoRaWan->_sprintf
    _SetSpreadingFactor->_sprintf
    _SetDevEUI->_sprintf
    _SetChannelLoRaWan->_sprintf
    _SetBandWidth->_sprintf
    _SetAppKey->_sprintf
    _SetAppEUI->_sprintf
    _SetAdr->_sprintf
    _MacSave->_sprintf
    _DataRate->_sprintf

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _SYS_InterruptHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _SYS_InterruptHigh in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               211   211      0 1054832
                                            237 BANK1     10    10      0
                                              0 BANK2    200   200      0
                           _DataRate
                            _MacSave
                             _SetAdr
                          _SetAppEUI
                          _SetAppKey
                       _SetBandWidth
                  _SetChannelLoRaWan
                          _SetDevEUI
                 _SetSpreadingFactor
                          _TxLoRaWan
                      _USBDeviceInit
                            ___ftmul
                            ___fttol
                              _delay
                              _le_AD
                          _le_pulsos
                             _millis
                              _putch
                       _putsUSBUSART
                        _retornaDado
                           _setup_AD
                         _setup_ccp1
                       _setup_pulsos
                         _setup_uart
                            _sprintf
                        _verificaUSB
 ---------------------------------------------------------------------------------
 (1) _setup_uart                                           8     4      4    1409
                                             13 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (1) _setup_pulsos                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup_ccp1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup_AD                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _putsUSBUSART                                         5     3      2     202
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _le_pulsos                                            9     5      4     492
                                              5 BANK0      9     5      4
                        _retornaDado (ARG)
 ---------------------------------------------------------------------------------
 (1) _le_AD                                               18    15      3   17964
                                             62 BANK0     18    15      3
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3544
                                             47 BANK0     15     9      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3    3114
                                              8 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _delay                                               16    12      4    1927
                                             13 BANK0     16    12      4
                             _millis
                        _verificaUSB
 ---------------------------------------------------------------------------------
 (1) _verificaUSB                                          0     0      0    1770
                       _CDCTxService
                    _USBDeviceAttach
                    _USBDeviceDetach
 ---------------------------------------------------------------------------------
 (2) _USBDeviceDetach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CDCTxService                                         2     2      0    1770
                                             11 BANK0      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                11     7      4    1633
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1399
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6    1197
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _TxLoRaWan                                          212   208      4  107411
                                            145 BANK0      5     1      4
                                             30 BANK1    207   207      0
                        _JoinLoRaWan
                 _ResetModuloLoRaWan
                       _enviaComando
                       _parseLoRaWan
                        _retornaDado
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (2) _strcat                                               6     2      4    1166
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _retornaDado                                          5     4      1    7054
                                              0 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (2) _ResetModuloLoRaWan                                   1     1      0    3530
                                             39 BANK0      1     1      0
                       _enviaComando
 ---------------------------------------------------------------------------------
 (2) _JoinLoRaWan                                          1     1      0    3647
                                             39 BANK0      1     1      0
                       _enviaComando
                       _parseLoRaWan
 ---------------------------------------------------------------------------------
 (1) _SetSpreadingFactor                                  22    22      0   90912
                                             30 BANK1     22    22      0
                       _enviaComando
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _SetDevEUI                                           35    33      2   91001
                                            145 BANK0      2     0      2
                                             30 BANK1     33    33      0
                       _enviaComando
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _SetChannelLoRaWan                                   28    27      1   91334
                                            145 BANK0      1     0      1
                                             30 BANK1     27    27      0
                       _enviaComando
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _SetBandWidth                                        25    23      2   91090
                                            145 BANK0      3     1      2
                                             30 BANK1     22    22      0
                       _enviaComando
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _SetAppKey                                           53    51      2   91001
                                            145 BANK0      2     0      2
                                             30 BANK1     51    51      0
                       _enviaComando
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _SetAppEUI                                           35    33      2   91001
                                            145 BANK0      2     0      2
                                             30 BANK1     33    33      0
                       _enviaComando
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _SetAdr                                              18    16      2   91268
                                            145 BANK0      2     0      2
                                             30 BANK1     16    16      0
                       _enviaComando
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _MacSave                                              8     8      0   90890
                                            145 BANK0      8     8      0
                       _enviaComando
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _DataRate                                            17    15      2   91179
                                            145 BANK0      3     1      2
                                             30 BANK1     14    14      0
                       _enviaComando
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             81    37     44   87293
                                             95 BANK0     50     6     44
                                              0 BANK1     30    30      0
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                7     4      3   21604
                                             47 BANK0      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              10     7      3   21406
                                             47 BANK0     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftadd (ARG)
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4   10745
                                             14 BANK0      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    6438
                                             32 BANK0     15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1898
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    2080
                                              6 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         15     9      6     481
                                              0 BANK0     15     9      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          12     6      6     624
                                              0 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    3092
                                              8 BANK0      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8    1049
                                             13 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8    1230
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     697
                                             80 BANK0     15    11      4
                            ___ftmul (ARG)
                              _le_AD (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    5035
                                             32 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    4638
                                             20 BANK0     12     6      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2934
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     134
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     670
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (2) _enviaComando                                        11     8      3    3507
                                             28 BANK0     11     8      3
                    _initRecebeDados
                       _parseLoRaWan
                              _putch
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               6     4      2     672
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _putch                                                1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _parseLoRaWan                                        20    20      0     117
                                              8 BANK0     20    20      0
                             _millis
 ---------------------------------------------------------------------------------
 (1) _millis                                               8     4      4      23
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _initRecebeDados                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _SYS_InterruptHigh                                   27    27      0   33452
                                             28 COMRAM    27    27      0
                     _USBDeviceTasks
                              _getch
                  _recebeByteLoRaWan
 ---------------------------------------------------------------------------------
 (7) _recebeByteLoRaWan                                   10    10      0    2515
                                              9 COMRAM    10    10      0
                          _converter
                             _strcmp
                             _strcpy
                            _strncmp
                           i2_strlen
 ---------------------------------------------------------------------------------
 (8) i2_strlen                                             6     4      2     220
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) _strncmp                                              9     3      6     668
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (8) _strcpy                                               6     2      4     253
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _strcmp                                               6     2      4     269
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _converter                                            5     4      1     675
                                              1 COMRAM     5     4      1
                            _toupper
 ---------------------------------------------------------------------------------
 (9) _toupper                                              1     1      0      67
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _getch                                                3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (7) _USBDeviceTasks                                       1     1      0   30623
                                             27 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (8) i2_USBDeviceInit                                      1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (8) _USBWakeFromSuspend                                   0     0      0    3879
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBSuspend                                           0     0      0    3879
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBStallHandler                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPService                                     1     1      0   18330
                                             26 COMRAM     1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (9) _memcpy                                              11     5      6    1478
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfSetupHandler                               0     0      0   16623
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (10) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (11) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (10) _USBCheckStdRequest                                  0     0      0   12652
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (11) _USBStdSetCfgHandler                                 1     1      0    4377
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (9) i2_memset                                             8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (11) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (11) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (11) _USBStdFeatureReqHandler                             6     6      0    4350
                                             20 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    3879
                                             12 COMRAM     8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (9) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _CDCInitEP                                            0     0      0    1187
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (10) i2_USBTransferOnePacket                             11     7      4     454
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (10) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (11) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (10) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (11) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfInHandler                                  1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (12) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DataRate
     _enviaComando
       _initRecebeDados
       _parseLoRaWan
         _millis
       _putch
       _strlen
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _le_AD (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _MacSave
     _enviaComando
       _initRecebeDados
       _parseLoRaWan
         _millis
       _putch
       _strlen
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _le_AD (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _SetAdr
     _enviaComando
       _initRecebeDados
       _parseLoRaWan
         _millis
       _putch
       _strlen
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _le_AD (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _SetAppEUI
     _enviaComando
       _initRecebeDados
       _parseLoRaWan
         _millis
       _putch
       _strlen
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _le_AD (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _SetAppKey
     _enviaComando
       _initRecebeDados
       _parseLoRaWan
         _millis
       _putch
       _strlen
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _le_AD (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _SetBandWidth
     _enviaComando
       _initRecebeDados
       _parseLoRaWan
         _millis
       _putch
       _strlen
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _le_AD (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _SetChannelLoRaWan
     _enviaComando
       _initRecebeDados
       _parseLoRaWan
         _millis
       _putch
       _strlen
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _le_AD (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _SetDevEUI
     _enviaComando
       _initRecebeDados
       _parseLoRaWan
         _millis
       _putch
       _strlen
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _le_AD (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _SetSpreadingFactor
     _enviaComando
       _initRecebeDados
       _parseLoRaWan
         _millis
       _putch
       _strlen
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _le_AD (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _TxLoRaWan
     _JoinLoRaWan
       _enviaComando
         _initRecebeDados
         _parseLoRaWan
           _millis
         _putch
         _strlen
       _parseLoRaWan
         _millis
     _ResetModuloLoRaWan
       _enviaComando
         _initRecebeDados
         _parseLoRaWan
           _millis
         _putch
         _strlen
     _enviaComando
       _initRecebeDados
       _parseLoRaWan
         _millis
       _putch
       _strlen
     _parseLoRaWan
       _millis
     _retornaDado
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _le_AD (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     _strcat
   _USBDeviceInit
     _memset
   ___ftmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftpack (ARG)
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
   ___fttol
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _le_AD (ARG)
       ___awtoft
         ___ftpack
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   _delay
     _millis
     _verificaUSB
       _CDCTxService
         _USBTransferOnePacket
       _USBDeviceAttach
       _USBDeviceDetach
   _le_AD
     ___awtoft
       ___ftpack
     ___ftadd
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   _le_pulsos
     _retornaDado (ARG)
   _millis
   _putch
   _putsUSBUSART
   _retornaDado
   _setup_AD
   _setup_ccp1
   _setup_pulsos
   _setup_uart
     ___lldiv
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg
     ___ftsub
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _le_AD (ARG)
         ___awtoft
           ___ftpack
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___lltoft
       ___ftpack
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftadd (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   _verificaUSB
     _CDCTxService
       _USBTransferOnePacket
     _USBDeviceAttach
     _USBDeviceDetach

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _USBCheckCDCRequest
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _memcpy
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USBCheckCDCRequest
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USBCheckCDCRequest
     _USER_USB_CALLBACK_EVENT_HANDLER
       _CDCInitEP
         _USBEnableEndpoint
           _USBConfigureEndpoint
         i2_USBTransferOnePacket
       _USBCheckCDCRequest
     i2_USBDeviceInit
       i2_memset
   _getch
   _recebeByteLoRaWan
     _converter
       _toupper
     _strcmp
     _strcpy
     _strncmp
     i2_strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            3FF      0       0      23        0.0%
BIGRAMhh           280      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0      FA      20       97.7%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      FA      18       97.7%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      E7      11       90.2%
BITBANK2           100      0       0       8        0.0%
BANK2              100     C8      FF       9       99.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100     F7     100       7      100.0%
BIGRAMhl            C0      0       0      22        0.0%
BITBANK4            C0      0       0      12        0.0%
BANK4               C0      0      64      13       52.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     99      A0       5      100.0%
BITBANK5            80      0       0      14        0.0%
BANK5               80      0      64      15       78.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     37      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     6A0      16        0.0%
DATA                 0      0     6A0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Fri Mar 22 14:37:33 2019

                              _USB_SD_Ptr 7C9F                              ___awdiv@sign 006B  
                             __CFG_BOR$ON 000000                                        _cs 02E0  
                recebeByte@estadoRecepcao 02E2                             _USBDeviceInit 29A8  
                     ___wmul@multiplicand 0070                               __CFG_BORV$0 000000  
                      __size_of_CDCInitEP 0066                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                              _putsUSBUSART 4DEA  
                            ___ftadd@exp1 007F                              ___ftadd@exp2 007E  
    USER_USB_CALLBACK_EVENT_HANDLER@event 000D      USER_USB_CALLBACK_EVENT_HANDLER@pdata 000F  
                            ___ftadd@sign 007D                                       l400 2A14  
                                     l402 2A50               __end_of_USBStdGetDscHandler 2FBC  
                                     l441 3506                                       l460 52DA  
                                     l437 345E                                       l439 3488  
                                     l459 52DC                                       l398 29EE  
                                     l840 4E04                                       l860 328A  
                                     l852 322E                                       _BDT 000400  
                                     l870 3312                                       l862 32CC  
                                     l854 323C                                       l838 4DF8  
                                     l871 3316                                       l863 32AA  
                                     l855 3246                                       l856 3274  
                                     l858 3334                                       l866 32F8  
                                     l867 32D6                                       l859 3286  
                                     _MAC 7DFB                              __CFG_CPB$OFF 000000  
                            __CFG_CPD$OFF 000000                                       _UIE 000F69  
                                     _UIR 000F68                                       _SYS 7DF1  
                                     _aaa 02F2                   __end_of_initRecebeDados 550E  
                              _USBSuspend 5346                              ___awmod@sign 0065  
                    USBStdSetCfgHandler@i 0015                                       prod 000FF3  
                                     wreg 000FE8                            _USBDeviceTasks 2D60  
                          _USBDeviceState 0058                     ??_USBCtrlTrfRxService 0001  
                __size_ofi2_USBDeviceInit 0140                  USBEnableEndpoint@options 0009  
                            __CFG_LVP$OFF 000000                              ___ftdiv@cntr 0098  
                            ___ftdiv@sign 009D                              __CFG_WDT$OFF 000000  
                                    l1042 52F4                                      l1051 49C6  
                                    l1044 5300                                      l1052 49C2  
                                    l1045 530E                                      l1061 0D54  
                                    l1070 137C                                      l1071 136A  
                                    l1063 0D74                                      l3000 4036  
                                    l1080 152C                                      l1081 15D8  
                                    l1073 14C2                                      l1065 0DD2  
                                    l3002 4074                                      l1066 14D4  
                                    l3003 405E                                      l1067 135C  
                                    l1059 0CE6                                      l1076 14B2  
                                    l1068 134A                                      l3005 409C  
                                    l3101 39F0                                      l3006 4092  
                                    l3030 284E                                      l3102 3A00  
                                    l1078 14D0                                      l3112 4FF2  
                                    l2312 1B10                                      l2313 1B34  
                                    l3106 5436                                      l3034 2878  
                                    l2314 1E42                                      l2322 1E3E  
                                    l2402 1DAC                                      l3131 54F0  
                                    l2331 1BBC                                      l2315 1B3C  
                                    l2091 3CB4                                      l3044 28D4  
                                    l3124 3916                                      l3116 387A  
                                    l2420 1E90                                      l2324 1B92  
                                    l2316 1B68                                      l2092 3C0C  
                                    l3053 2912                                      l3045 28CA  
                                    l3125 390A                                      l2421 1E66  
                                    l2413 1DF4                                      l2341 1BFA  
                                    l3054 2908                                      l3118 38F2  
                                    l2262 4C08                                      l2094 3CD0  
                                    l3039 28DE                                      l3127 3932  
                                    l3119 38E2                                      l3071 2C5A  
                                    l2423 1E78                                      l2407 1DC2  
                                    l3063 3A64                                      l2095 3C36  
                                    l2440 3592                                      l3056 2936  
                                    l2336 1BE4                                      l3240 5332  
                                    l3401 4D52                                      l2441 35B6  
                                    l3057 2952                                      l3161 490A  
                                    l3073 2C86                                      l2353 1C54  
                                    l3241 5320                                      l3065 3A8C  
                                    l2097 3C60                                      l3402 4D4C  
                                    l2434 35D2                                      l2442 359C  
                                    l3058 2982                                      l3162 4918  
                                    l3074 2CC0                                      l2290 4AE4  
                                    l2282 523A                                      l2346 1C2C  
                                    l3066 3ACA                                      l2451 419A  
                                    l2435 3550                                      l3171 4B44  
                                    l3083 2D48                                      l3075 2CE8  
                                    l2283 5224                                      l2427 1E7E  
                                    l2363 1C92                                      l3067 3AF0  
                                    l2099 3C8A                                      l2452 4200  
                                    l2444 3622                                      l2436 3576  
                                    l3172 4B52                                      l3084 2D3C  
                                    l2700 05B4                                      l2380 1D14  
              USBConfigureEndpoint@handle 0007                                      l2445 35EC  
                                    l2437 355C                                      l3157 48D6  
                                    l3077 2D24                                      l2701 05D6  
                                    l2285 5236                                      l2429 1E8C  
                                    l3158 48CA                                      l3078 2D14  
                                    l2390 1D5C                                      l2358 1C7C  
                                    l2439 35E2                                      l3167 4B1C  
                                    l3095 396E                                      l2631 18C8  
                                    l2375 1CEC                                      l2456 421C  
                                    l3088 46A8                                      l3168 4B10  
                                    l2632 17EA                                      l2720 0790  
                                    l2712 071E                                      l2704 0622  
                                    l2368 1CC4                                      l3089 46D8  
                                    l3097 3996                                      l2625 2520  
                                    l2721 08CA                                      l2713 0684  
                                    l2705 0608                                      l2289 4AC0  
                                    l2385 1D2A                                      l3178 4C3E  
                                    l3098 39C8                                      l2722 07E2  
                                    l2642 0020                                      l3179 4C32  
                                    l3099 39D8                                      l2635 18A2  
                                    l2715 0744                                      l2651 008C  
                                    l2643 003E                                      l2628 25F6  
                                    l2636 1A00                                      l2740 0A48  
                                    l2732 0994                                      l2724 08F0  
                                    l2716 072A                                      l2708 064E  
                                    l2741 09F6                                      l2725 08D6  
                                    l2709 0634                                      l2645 005C  
                                    l3381 4EAC                                      l2397 1D84  
                                    l2638 1AB8                                      l2734 0A32  
                                    l2718 0768                                      l2654 01E4  
                                    l2662 0100                                      l2646 0052  
                                    l3382 4EA2                                      l2735 09BA  
                                    l2727 0972                                      l2719 076C  
                                    l2671 0194                                      l2760 0C50  
                                    l2728 0936                                      l2680 028A  
                                    l2672 0182                                      l2664 0104  
                                    l2761 0B60                                      l2745 0A72  
                                    l2665 012C                                      l2657 00F6  
                                    l2746 0AA0                                      l2690 0472  
                                    l2682 0328                                      l2674 01C8  
                                    l2666 013C                                      l2658 00FC  
                                    l3378 4E92                                      l2763 0C66  
                                    l2747 0AAA                                      l2683 0392  
                                    l2659 0238                                      l2675 01A8  
                                    l2667 0136                                      l3379 4E8C  
                                    l2764 0BE0                                      l2748 0AFE  
                                    l2757 0B52                                      l2749 0AD8  
                                    l2685 03BC                                      l2669 0178  
                                    l1981 3044                                      l2942 47FE  
                                    l2758 0C78                                      l2686 03FC  
                                    l2678 01DE                                      l1982 30DA  
                                    l1974 2FCC                                      l2943 4808  
                                    l2935 47B0                                      l2951 4A56  
                                    l2679 08FA                                      l2687 04CA  
                                    l1975 2FD6                                      l2944 4816  
                                    l2936 47C0                                      l2952 4A4E  
                                    l2696 0530                                      l1976 2FF6  
                                    l2970 3168                                      l2938 47DE  
                                    l2971 3198                                      l2939 47D6  
                                    l2955 4A6E                                      l2963 51E8  
                                    l1979 2FFA                                      l2980 31EE  
                                    l2956 4A78                                      l2948 4A34  
                                    l2973 31D6                                      l2957 4A86  
                                    l2949 4A40                                      l2974 31C6  
                                    l2967 3108                                      l8016 5544  
                                    l2969 3126                                      l2979 31FA  
                                    l9030 03FC                                      l2999 4040  
                                    _ADIE 007CEE                                      _ADIF 007CF6  
                                    l9204 09FA                                      l7390 4704  
                                    l9118 072A                                      l9038 0448  
             __size_of_ResetModuloLoRaWan 0026                                      l9058 0534  
                                    l9190 09BE                                      l9094 0634  
                                    l9086 0608                                      l9272 0C50  
                                    _ADON 007E10                                      l9820 2A48  
                                    l8970 01A8                                      l8964 0182  
                                    l8798 5320                                      STR_1 7F16  
                                    l9792 29E6                                      STR_2 7F05  
                                    STR_3 7E7D                                      STR_4 7E21  
                                    STR_5 7EF4                                      STR_6 7F88  
                                    STR_7 7EBE                                      STR_8 7FDD  
                                    STR_9 7FAB                                      _GIEH 007F97  
                                    u6220 4028                                      u8000 040E  
                                    u7120 3300                                      _RCIE 007CED  
                                    u6500 4D72                                      u6260 40A6  
                                    _RCIF 007CF5                                      u7301 2C3E  
                                    u8030 0448                                      u6521 280C  
                                    u7321 2C6A                                      u8130 065C  
                                    u6507 4D68                                      u6531 2820  
                                    u6620 28A8                                      u7190 3618  
                                    u8070 056C                                      u7511 385E  
                   ??_USBCtrlTrfTxService 0001                                      u6480 420E  
                                    u6560 2840                                      u7600 48DA  
                                    u8160 0752                                      u7530 3898  
                                    u7450 3200                                      u8410 0C8A  
                                    u8170 0762                                      u6731 3956  
                                    u6660 28E6                                      u7380 2D4E  
                                    u6820 47E2                                      u8420 0CA8  
                                    u7197 360E                                      u6590 286A  
                                    u7630 4B20                                      u9310 4E1E  
                                    u7535 3890                                      u6751 397E  
                                    _UCFG 000F6F                                      u8600 541A  
                                    u6690 291A                                      u7570 391C  
                                    u9250 2A0A                                      u7810 530A  
                                    u9330 422E                                      u8380 0B06  
                                    u8620 5232                                      u9420 3020  
                                    u9340 4248                                      _UEP0 000F70  
                                    u8701 3A4C                                      _UEP1 000F71  
                                    u8390 0B28                                      u9510 1B4C  
                                    u9350 4262                                      u6880 4A5A  
                                    u9280 2AAC                                      u9360 427C  
                                    u8721 3A74                                      u7834 4BFE  
                                    u9338 4232                                      u7835 4BFA  
                                    u9435 3024                                      _UEIE 000F6B  
                                    u9348 424C                                      u7950 02C4  
                                    u9710 1C26                                      u9550 1B7A  
                                    u9358 4266                                      u9368 4280  
                                    u7955 02BA                                      u7990 03CE  
                                    _UEIR 000F6A                                      _UCON 000F6D  
                                    u9860 1CBE                                      _TXIF 007CF4  
                            __CFG_PWRT$ON 000000                           _CDCDataInHandle 02D8  
  USBStdFeatureReqHandler@current_ep_data 0018                                      _pDst 034C  
                                    _data 0600                           _USBDeviceDetach 5532  
                                    _main 0CB6                              ___ftpack@arg 0060  
                       JoinLoRaWan@status 0087                  ??i2_USBTransferOnePacket 0005  
                            ___ftpack@exp 0063                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      indf0 000FEF  
                                    fsr2h 000FDA                                      fsr0l 000FE9  
                                    indf1 000FE7                               _BaudRateGen 0326  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                           _USBDeviceAttach 52B2  
                                    btemp 005F                                      prodh 000FF4  
                                    prodl 000FF3                                      start 000E  
                           __CFG_IESO$OFF 000000                __end_of_USBCheckStdRequest 3C04  
                         __end_of_MacSave 527C                              main@dadoPoco 02B2  
                  ??_USBCtrlTrfOutHandler 0003                              _sprintf$5966 0100  
                           __CFG_MCLRE$ON 000000                              ___ftmul@cntr 008D  
                            ___param_bank 000000                              ___ftmul@sign 008E  
               ??_USBStdFeatureReqHandler 0015                             ??_JoinLoRaWan 0087  
                            __channelMask 031E                             le_AD@corrente 00A6  
                ??_USBStdGetStatusHandler 0001                              ___fttol@exp1 00BE  
                        __end_of_MAC_SAVE 7DFB                              ___fttol@lval 00BA  
                          ?_USBDeviceInit 0001                             ?_enviaComando 007C  
                           __CFG_PLLDIV$5 000000                                     l10000 2FE6  
                                   l10012 3020                                     l10604 0D4C  
                                   l10616 0D6C                                     l10576 0CD6  
                                   l10588 0D16                              _sourceMacLow 0342  
                            main@contador 02A1                                     ?_main 0001  
                         __end_of___awdiv 4820                                     _EEADR 000FA9  
                         __end_of___ftadd 29A8                                     STR_10 7FD6  
                                   STR_11 7FCF                                     STR_20 7EE3  
                                   STR_12 7F85                                     STR_21 7F7E  
                                   STR_13 7F37                                     STR_30 7FEA  
                                   STR_22 7F9B                                     STR_14 7F53  
                                   STR_31 7F92                                     STR_23 7FA3  
                                   STR_15 7F69                                     STR_40 7FBA  
                                   STR_32 7F74                                     STR_24 7F45  
                                   STR_16 7FC8                                     STR_33 7FEA  
                                   STR_41 7FF0                                     STR_25 7FC1  
                                   STR_17 7E9E                                     STR_42 7FB3  
                                   STR_26 7F27                                     STR_18 7FFA  
                                   STR_35 7FED                                     STR_43 7ED2  
                                   STR_19 7F5E                                     STR_36 7FF5  
                                   STR_28 7FEA                           __end_of___awmod 4A90  
                                   STR_29 7FEA                                     STR_37 7FE4  
                                   STR_38 7FE4                                     STR_39 7FBA  
       __size_of_USBCtrlEPServiceComplete 00FC                           __end_of___ftdiv 3B22  
                         __end_of___ftneg 5444                                     u10010 1D56  
                         __end_of___lldiv 492A                                     u10160 1DEE  
                                   u10180 1E4E                           __end_of___ftmul 3A3A  
                                   u10190 1E74                                     _T0CON 000FD5  
                                   u10700 0D68                           ___awdiv@divisor 0068  
                                   u10720 0D88                                     _T1CON 000FCD  
                         __end_of___llmod 4B64                    __end_of_USBDeviceTasks 2E8E  
                         __end_of___ftsub 501C                                     u11267 0D00  
                         __end_of___fttol 3944                                     u10805 130E  
                                   u10815 132A                                     u10735 0DF4  
                                   u10736 0DF6                                     u10680 0D16  
                                   u10921 1640                                     u10745 1078  
                                   u10755 1158                                     u10675 0CF2  
                                   u10676 0CF4                                     u10765 1182  
                                   _T3CON 000FB1                                     u10785 1254  
                                   u10795 1270                 ?_USBCtrlEPServiceComplete 0001  
                          __CFG_DEBUG$OFF 000000                                     i2l120 2706  
                                   i2l121 2734                                     i2l122 2762  
                                   i2l123 278E                                     i2l125 27A8  
                                   i2l127 27AE                                     i2l119 2798  
                                   i2l400 2B54                                     i2l402 2B90  
                                   i2l410 2D88                                     i2l251 4CE8  
                                   i2l500 3DEC                                     i2l420 2E14  
                                   i2l412 2D9A                                     i2l245 4CF4  
                                   i2l253 4CEE                                     i2l413 2DA4  
                                   i2l502 3E4E                                     i2l422 2E24  
                                   i2l503 3E16                                     i2l415 2DC8  
                                   i2l432 51A6                                     i2l408 2D74  
                                   i2l513 3386                                     i2l433 51B4  
                                   i2l441 370C                                     i2l425 2E4A  
                                   i2l417 2DDC                                     i2l409 2D80  
                                   i2l506 3E8E                                     i2l514 3364  
                                   i2l418 2DE6                                     i2l507 3E56  
                                   i2l611 3B3C                                     i2l427 2E6A  
                                   i2l419 2E0A                                     i2l516 33FA  
                                   i2l540 2F94                                     i2l612 3B42  
                                   i2l517 33E0                                     i2l437 3664  
                                   i2l533 2FA4                                     i2l525 3D2E  
                                   i2l613 3B48                                     i2l429 2E86  
                                   i2l630 2222                                     i2l542 2F9C  
                                   i2l534 2EA0                                     i2l550 435E  
                                   i2l614 3B5C                                     i2l439 368E  
                                   i2l551 42E8                                     i2l527 3DA0  
                                   i2l615 3B62                                     i2l640 231C  
                                   i2l632 2244                                     i2l536 2EB4  
                                   i2l552 42EE                                     i2l608 3BC0  
                                   i2l560 505A                                     i2l641 2396  
                                   i2l625 2168                                     i2l537 2F3C  
                                   i2l553 430C                                     i2l617 3B68  
                                   i2l609 3B32                                     i2l473 4464  
                                   i2l561 5058                                     i2l802 4150  
                                   i2l634 22C4                                     i2l626 216E  
                                   i2l546 4348                                     i2l618 3B86  
                                   i2l467 3EDE                                     i2l803 40EC  
                                   i2l539 2F44                                     i2l547 42D6  
                                   i2l619 3BA2                                     i2l475 4480  
                                   i2l644 2350                                     i2l636 228E  
                                   i2l628 21DA                                     i2l484 37CC  
                                   i2l805 4104                                     i2l637 22AA  
                                   i2l485 3776                                     i2l806 4112  
                                   i2l646 23A2                                     i2l574 45D2  
                                   i2l398 2B2E                                     i2l479 4644  
                                   i2l807 412E                                     i2l639 2310  
                                   i2l575 45CC                                     i2l808 4146  
                                   i2l568 52A6                                     i2l593 3F8E  
                                   i2l585 4C96                                     i2l489 37F6  
                                   i2l569 52A4                                     i2l498 3DE2  
                                   i2l594 3F92                                     i2l595 400C  
                                   i2l587 4CE0                                     i2l596 3FD2  
                                   i2l598 3FF2                                     _UADDR 000F6E  
                         ___awdiv@counter 006A                                     _RCREG 000FAE  
                                   _RCSTA 000FAB                                     _TMR1H 000FCF  
                                   _TMR1L 000FCE                                     _SPBRG 000FAF  
                           __CFG_USBDIV$2 000000                                     _USBIE 007D05  
                                   _USTAT 000F6C                                     _TXREG 000FAD  
      __size_of_USBCtrlEPAllowStatusStage 00C4                              ___lltoft@exp 0070  
                          __CFG_FCMEN$OFF 000000           __end_of_USBCtrlEPAllowDataStage 44B2  
                                   _sd000 7E00                                     _sd001 7D1E  
                                   _sd002 7CEA            ?_USBIncrement1msInternalTimers 0001  
                                   _dig_1 02DE                                     _dig_2 02DC  
                                   _dig_3 02DA                                     _dig_4 034E  
                                   _le_AD 2FBC                             ___awtoft@sign 006B  
                                   _delay 49AC                                i2memset@p1 0001  
                        __end_of_STATE_ON 7E0B                                     _getch 546A  
                         __end_of_dpowers 7C31                                     _scale 16A6  
                         __end_of_isdigit 54F8                                     _randx 03E3  
                                   _ticks 032A                             ___ftpack@sign 0064  
                                   _putch 5540                                     main@i 02A9  
              __size_of_SetChannelLoRaWan 006C                                     pclath 000FFA  
                                   tablat 000FF5                             _gs_encryption 7E13  
                                   plusw2 000FDB                         __end_of_CDCInitEP 4BCA  
                                   status 000FD8                          __end_of_DataRate 4F54  
                                   wtemp6 0060                           __end_of_sprintf 0CB6  
                         __end_of_strncmp 49AC                           __end_of_toupper 5522  
                        __end_ofi2_memset 53D0                            _tamanhoCommand 01F7  
            __size_of_USBStdSetCfgHandler 00DE                          __end_ofi2_strlen 4DEA  
                           setup_uart@brg 0071                           __initialization 44B2  
                            __end_of_main 16A6                     _control_signal_bitmap 02E3  
                          ??_enviaComando 007F                 __size_of_USBCtrlEPService 0096  
                                  ??_main 01ED                             ___fttol@sign1 00B9  
                     __end_of_JoinLoRaWan 5246                             __activetblptr 000002  
                         ?_USBDeviceTasks 0001                    SetChannelLoRaWan@canal 0138  
                             ?_USBSuspend 0001                        recebeByte@sizeData 0046  
                    __size_of__tdiv_to_l_ 0134                          ?_initRecebeDados 0001  
                              i2strlen@cp 0005                        recebeByteLoRaWan@b 0010  
                      recebeByteLoRaWan@i 0011                              _cdc_mem_type 02E4  
                 __end_of_USBDeviceDetach 5540                             _sourceMacHigh 033E  
                           ?_SetBandWidth 00F1                                    ?_le_AD 009E  
                                  ?_delay 006D                                    ?_getch 0001  
                 __end_of_USBDeviceAttach 52E6                                    _ADCON0 000FC2  
                                  _ADCON1 000FC1                                    _ADCON2 000FC0  
                        _CDCDataOutHandle 004A                                    _CCP1IE 007CEA  
                                  _CCP1IF 007CF2                          ___llmod@dividend 006D  
                                  ?_scale 008F                                    _ADRESH 000FC4  
                                  _ADRESL 000FC3                                    _EEDATA 000FA8  
                                  _CCPR1H 000FBF                                    _CCPR1L 000FBE  
                                  _EECON2 000FA7                          ___awdiv@dividend 0066  
                        __end_of___awtoft 520C                                    ?_putch 0001  
                        __end_of___ftpack 40C6                          __end_of___lltoft 4C88  
                   __size_of_CDCTxService 0126                                    i2l1221 5472  
                                  i2l1223 548C                                    i2l3240 53BE  
                                  i2l3241 53AE                                    i2l1481 4886  
                                  i2l3401 4DA6                                    i2l3234 4F86  
                                  i2l3402 4DA2                                    i2l3235 4F66  
                                  i2l1483 4898                                    i2l1484 48A2  
                                  i2l1476 4850                                    i2l1478 4862  
                                  i2l1479 4874                                    i2l3407 4992  
                                  i2l2471 1FB2                                    i2l3416 551E  
                                  i2l3408 492C                                    i2l2480 205E  
                                  i2l3409 498A                                    i2l2481 20CA  
                                  i2l2473 203C                                    i2l2474 1FEE  
                                  i2l2466 1F6C                                    i2l2475 201C  
                                  i2l2467 1F34                                    i2l2484 212A  
                                  i2l2468 1F6A                                    i2l2485 210C  
                                  i2l2479 20CE                                    i2l3387 4E44  
                                  i2l3395 5388                                    i2l3388 4E3C  
                                  i2l3396 5380                                TxLoRaWan@i 01EC  
                                  i2l7540 3DEC                                    i2l7642 3D26  
                                  i2l8282 4F66                                    i2l7572 53AE  
                                  i2l9500 2B26                                    i2l9412 492C  
                                  i2l9528 2B88                                    i2l9752 2E1C  
                                  _PAN_ID 0350                             CDCTxService@i 006B  
                               ??_MacSave 00F1                                    _TMR0IE 007F95  
                                  _TMR1IE 007CE8                                    _SPBRGH 000FB0  
                i2USBTransferOnePacket@ep 0009                         ??i2_USBDeviceInit 0009  
         __size_ofi2_USBTransferOnePacket 0102                            __CFG_VREGEN$ON 000000  
                     retornaDado@dadoByte 0064                         _shortPacketStatus 0057  
                                  _SetAdr 5158                            __CFG_XINST$OFF 000000  
                      __size_of_SetDevEUI 003E                        __size_of_SetAppEUI 003E  
                        __end_of__powers_ 7C58                           USBDeviceTasks@i 001C  
                      __size_of_SetAppKey 003E                              _write_values 7E17  
                             SetAdr@state 00F1               USBStdFeatureReqHandler@pUEP 0016  
                USBTransferOnePacket@data 0061                USBCtrlTrfInHandler@lastDTS 0002  
                         ??_USBDeviceInit 0068                                    ___ftge 4676  
                                  ___wmul 53D0                                 ??___awdiv 006A  
                SetSpreadingFactor@status 0132                                 ??___ftadd 007A  
                          __CFG_STVREN$ON 000000                                 ??___awmod 0064  
                               ??___ftdiv 0095                                 ??___ftneg 0063  
                       __end_of_STATE_OFF 7E08                                 ??___lldiv 0068  
                               ??___ftmul 0086                                 ??___llmod 0075  
                               ??___ftsub 0086                                 ??___fttol 00B4  
                       _USBEnableEndpoint 5196           __size_of_USBStdGetStatusHandler 00AA  
                                  le_AD@i 00AC                                    _gs_pan 7E1B  
                                  _memcpy 4F54                                    _memset 5316  
                                  _fround 23C8                                    _millis 5444  
                                  clear_0 44D8                                    clear_1 44E4  
                                  clear_2 44F0                                    clear_3 44FC  
                                  clear_4 4508                                    clear_5 4514  
                                  clear_6 4520                                    clear_7 452C  
                                  clear_8 4538                                    _nivel1 02ED  
                                  _nivel2 02EC                          ___awdiv@quotient 006C  
                        SetAppKey@comando 011E                           ___awmod@divisor 0062  
                                  _teste0 02EF                                    _teste1 02EE  
                         ___awmod@counter 0064                        __size_of_TxLoRaWan 03D0  
                      ?_USBEnableEndpoint 0009                              ?_retornaDado 0060  
                            converter@aux 0004                                    main@dr 02AE  
                                  main@sf 029F                                    _strcat 4E82  
                                  _strcmp 4E3A                                    _strcpy 5376  
                                  _strlen 4D42                     ___ftmul@f3_as_product 008A  
           __size_of_USBTransferOnePacket 0106                                 ??_isdigit 0060  
                            _CDCTxService 3212                          __end_of_setup_AD 5532  
                            __mediumconst 7C08                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                          ??_SetBandWidth 00F3                       ??_USBEnableEndpoint 000A  
                    __end_of_MAC_TX_UNCNF 7DCD                   recebeByteLoRaWan@i_4929 0013  
                               ??_sprintf 00EB                               _CtrlTrfData 000438  
                               ??_strncmp 0007                                 ??_toupper 0001  
                       __end_of_SYS_RESET 7DF1                        setup_uart@baudRate 006D  
                    _controlTransferState 0056                             ?_parseLoRaWan 0001  
                              __accesstop 0060                   __end_of__initialization 453E  
                            ?_verificaUSB 0001                           __CFG_PBADEN$OFF 000000  
                              ___ftadd@f1 0074                                ___ftadd@f2 0077  
                              ___ftge@ff1 0060                                ___ftge@ff2 0063  
                           ___rparam_used 000001                                ___ftdiv@f1 008F  
                              ___ftdiv@f2 0092                                ___ftdiv@f3 0099  
                __size_of_USBStallHandler 0042                                ___ftneg@f1 0060  
                              ___awtoft@c 0068                       __size_of_USBSuspend 0030  
                              ___ftmul@f1 0080                                ___ftmul@f2 0083  
                     recebeByte@frameData 0796                __end_of_get_preambleid_900 7E0D  
              __end_of_set_preambleid_900 7E0F                                ___ftsub@f1 0080  
                              ___ftsub@f2 0083                                ___fttol@f1 00B0  
                          __pcstackCOMRAM 0001                 __end_of_USBEnableEndpoint 51D2  
                           __end_of_sd000 7E04                             __end_of_sd001 7D52  
                           __end_of_sd002 7D1E                               _JoinLoRaWan 520C  
                            __pidataBANK3 54B4                             __end_of_le_AD 30E8  
                           __end_of_delay 4A1E                                ___lltoft@c 0068  
        __size_of_USBCtrlEPAllowDataStage 009E                             __end_of_getch 5490  
                           __end_of_scale 1ADE             __size_of_USBConfigureEndpoint 0094  
                         _retries_sending 02F4                             __end_of_putch 554E  
                              _le_AD$5962 00A3               __end_of_USBCtrlTrfInHandler 4016  
                       _MAC_SET_CH_STATUS 7D74                    i2_USBTransferOnePacket 364E  
                         _responseLoRaWan 01FF                                __div_to_l_ 30E8  
                               ?_DataRate 00F1                                _cdc_notice 0314  
                               ?i2_memset 0001                                _cdc_rx_len 0052  
                              _cdc_tx_len 0051                         __end_of_SetDevEUI 50DC  
                          main@deltaTempo 02A2                         __end_of_SetAppEUI 5158  
                       __end_of_SetAppKey 511A                        __end_of_MAC_SET_DR 7DE4  
                      __end_of_MAC_SET_BW 7D8F                                   ??_le_AD 00A1  
                      __end_of_MAC_SET_SF 7D74                                   ??_delay 0071  
                               ?i2_strlen 0001                  ??_USBCtrlTrfSetupHandler 001B  
                        ?_USBDeviceDetach 0001                   _USBTicksSinceSuspendEnd 02E5  
                                 ??_getch 0001                           __div_to_l_@exp1 006B  
             __size_of_SetSpreadingFactor 0040                           __div_to_l_@cntr 006A  
                        ?_USBDeviceAttach 0001                                   ??_scale 0092  
                         __div_to_l_@quot 0066                        __end_of_MAC_TX_CNF 7DEB  
                  _USBStdGetStatusHandler 42CA                              sprintf@width 0119  
                                 ??_putch 0060                           le_AD@leituraAux 00AA  
                      __size_of_converter 0086                            ??_parseLoRaWan 0068  
                              __pbssBANK0 00F9                      __end_of_enviaComando 364E  
                              __pbssBANK1 01F7                                __pbssBANK2 02C8  
                              __pbssBANK3 0300                                __pbssBANK4 0440  
                              __pbssBANK5 0580                                __pbssBANK6 0600  
                              __pbssBANK7 0700                        __size_of_le_pulsos 00E0  
                   recebeByteLoRaWan@port 000F                         __end_of_TxLoRaWan 1EAE  
                 SetChannelLoRaWan@ligado 00F1                            _novaMsgLoRaWan 0059  
                           __div_to_l_@f1 0060                             __div_to_l_@f2 0063  
             __size_of_USBWakeFromSuspend 0036                               _pBDTEntryIn 0040  
                 SetChannelLoRaWan@status 0137          __end_of_USBCtrlEPServiceComplete 384C  
                         SetDevEUI@status 013E                                   ?_SetAdr 00F1  
             __size_of_USBCheckCDCRequest 00AE                      USBCtrlTrfRxService@i 0001  
                                 ?___ftge 0060                                   ?___wmul 006E  
               __end_of_MAC_SET_CH_STATUS 7D82                        SetBandWidth@status 0132  
                                 _CCP1CON 000FBD                                   ?_memcpy 0001  
                                 ?_memset 0060                                   ?_fround 008F  
                                 ?_millis 0060                                _device_dsc 7D52  
                               ?___awtoft 0068                                 ?___ftpack 0060  
                        _USBCtrlEPService 454C                                _ep_data_in 02D5  
                               ?___lltoft 0068                                   ?_strcat 0060  
                                 ?_strcmp 0001                                   ?_strcpy 0001  
                                 ?_strlen 0060               __end_of_USBCtrlTrfRxService 3444  
                      _USBCheckStdRequest 3B22                       le_pulsos@freqPulses 0069  
                       _configDescriptor1 7CA7                                   i2l11196 4D0C  
                                 i2l11198 4D3C                                ??_DataRate 00F3  
                       _tamDadosRecebidos 005B                                   _GO_DONE 007E11  
                              ??i2_memset 0007               __end_of_USBCtrlTrfTxService 3E96  
                     _USBStdSetCfgHandler 3CE4                __end_of_ResetModuloLoRaWan 541E  
                   __end_of_MAC_GET_DNCTR 7DBA                                ??i2_strlen 0003  
                        _discovery_status 02F5                       ?_USBCheckStdRequest 0001  
            __size_of_USBStdGetDscHandler 012E                                   _UIEbits 000F69  
                                 _UIRbits 000F68                                _gs_channel 7E19  
                           _cdc_trf_state 00FF                                   _MacSave 5246  
                         putsUSBUSART@len 0064                     __end_of_MAC_JOIN_OTAA 7DC4  
                                 _pCDCDst 0346                                   _pCDCSrc 0349  
                       __end_of__npowers_ 7C7F                                   __Hparam 0000  
         ??_USBIncrement1msInternalTimers 0001                      ?_USBStdSetCfgHandler 0001  
                               _CDCInitEP 4B64                           SetAppEUI@status 013E  
                              _scale$5965 0092                                   __Lparam 0000  
                         __size_of_SetAdr 003E                __size_of_USBEnableEndpoint 003C  
                    __end_of_SetBandWidth 4F0E                                 ?_setup_AD 0001  
                            SetAdr@status 012D                      ??_USBCheckStdRequest 001B  
                 enviaComando@tipoComando 007E                           __size_of___ftge 0092  
           __size_of_USBCtrlTrfOutHandler 005E                                   ___awdiv 479A  
                                 ___ftadd 27FA                                   ___awmod 4A1E  
                                 ___ftdiv 3A3A                                   ___ftneg 541E  
                                 ___lldiv 48A6                          ??_USBDeviceTasks 001C  
                         __size_of___wmul 0028                                   ___ftmul 3944  
                                 ___llmod 4AFC                                   ___ftsub 4FDA  
                                 ___fttol 384C                         ??_USBStallHandler 0001  
                       __end_of_converter 48A6                                   _channel 02F8  
                                 __pcinit 44B2                         __end_of_le_pulsos 3CE4  
                         __size_of_memcpy 0044                                ??___awtoft 006B  
                              ??___ftpack 0065                           __size_of_memset 0030  
                         __size_of_fround 0270                 __end_of_configDescriptor1 7CEA  
                         __size_of_millis 0026                                   __ramtop 0800  
                              ??___lltoft 006C                                   __ptext0 0CB6  
                                 __ptext1 4374                                   __ptext2 4220  
                                 __ptext3 4F98                                   __ptext4 5522  
                                 __ptext5 4DEA                                   __ptext6 3C04  
                                 __ptext7 2FBC                                   __ptext8 3A3A  
                                 __ptext9 51D2                                   _inPipes 00F9  
                                 _command 0700               _USBDeferOUTDataStagePackets 02E6  
                         __size_of_strcat 0046                           __size_of_strcmp 0048  
                         __size_of_strcpy 002E                           __size_of_strlen 0056  
                   SYS_InterruptHigh@dig1 0030                     SYS_InterruptHigh@dig2 0032  
                   SYS_InterruptHigh@dig3 0034                     SYS_InterruptHigh@dig4 0036  
                       __end_of_hexpowers 7C9F                               ?__div_to_l_ 0060  
                                 _dpowers 7C09                              ??_USBSuspend 0015  
                                 _isdigit 54D6                      __size_of_retornaDado 0060  
                                 delay@to 0079                          ___awmod@dividend 0060  
                           _receivePacket 0580                           i2_USBDeviceInit 2AEC  
                        i2USBDeviceInit@i 0009                                   getch@RC 0002  
                           converter@aux2 0005                        __end_of_USB_CD_Ptr 7CA7  
                                 _pulsos1 01FE                                   _pulsos2 01FD  
                                 _pulsos3 01FC                                   _pulsos4 01FB  
                                 _sprintf 0012           __size_of_USBCtrlTrfSetupHandler 0092  
                                 _strncmp 492A                            __pintcode_body 2638  
                                 _toupper 550E                      end_of_initialization 453E  
                           TxLoRaWan@data 00F2                             TxLoRaWan@conf 01E6  
                      __end_of_USB_SD_Ptr 7CA5                                   memcpy@d 0007  
                                 memcpy@n 0005                                   memcpy@s 0009  
                     _pBDTEntryEP0OutNext 004C                                   memset@c 0062  
                                 memset@n 0064                                   memset@p 0066  
                           __Lmediumconst 7C08                                   int_func 2638  
                         _USB1msTickCount 02CE           _dummy_encapsulated_cmd_response 03B6  
                                 millis@m 0064                                 i2u1040_40 26A2  
                               i2u1041_40 26B4                                 i2u1040_48 26A4  
                               i2u1050_40 277A                                 i2u1042_40 26C6  
                               i2u1041_48 26B6                                 i2u1043_40 26D8  
                               i2u1042_48 26C8                                 i2u1044_40 26F0  
                               i2u1043_48 26DA                                 i2u1046_40 271E  
                ?_USBStdFeatureReqHandler 0001                                 i2u1048_40 274C  
                           enviaComando@i 0081                     ??_USBStdSetCfgHandler 0015  
                         ___lldiv@divisor 0064                      __size_of_verificaUSB 0030  
                              ?_CDCInitEP 0001                           ___lldiv@counter 006C  
                      parseLoRaWan@status 007A                  recebeByte@escapeCaracter 0050  
                      __end_of_USBSuspend 5376                   _USBCtrlEPAllowDataStage 4414  
                               _RCSTAbits 000FAB                                ??_setup_AD 0060  
                                 postdec1 000FE5                                   postdec2 000FDD  
                            _MAC_TX_UNCNF 7DC4                                   postinc0 000FEE  
                                 postinc2 000FDE                             MacSave@status 00F1  
                _USBCtrlEPServiceComplete 3750                            __tdiv_to_l_@f1 0060  
                          __tdiv_to_l_@f2 0063                       _get_channelmask_900 7E0F  
                                 strcmp@r 0006                       _set_channelmask_900 7E11  
                                 strlen@s 0060                      __end_of_parseLoRaWan 4220  
                           ??__tdiv_to_l_ 0066                _USBStatusStageEnabledFlag1 02E9  
              _USBStatusStageEnabledFlag2 02E8                        USBEnableEndpoint@p 000A  
                               _PORTCbits 000F82                                 _PORTDbits 000F83  
                               _PORTEbits 000F84                                 _STATE_OFF 7E04  
                              _setup_ccp1 4F98                             le_pulsos@freq 006A  
                           le_pulsos@modo 0065                                _setup_uart 4374  
                   __size_of_enviaComando 0104                                 _TRISCbits 000F94  
                               _TRISDbits 000F95                                 _TRISEbits 000F96  
                           ?_setup_pulsos 0001                                main@Fcanal 02AB  
                      _BothEP0OutUOWNsSet 02EA                                main@Icanal 029E  
                              main@i_3335 02B0                                main@i_3336 02B1  
                              main@i_3355 02AC                                main@i_3356 02AD  
               USBConfigureEndpoint@EPNum 0006                ?_USBCtrlEPAllowStatusStage 0001  
     USER_USB_CALLBACK_EVENT_HANDLER@size 0011                                 _USTATcopy 005D  
                __size_of_initRecebeDados 0016              __end_of_USBTransferOnePacket 354A  
                             ___ftdiv@exp 009C                                 _TXSTAbits 000FAC  
                               _SYS_RESET 7DEB                       __size_of__div_to_l_ 012A  
                             ___ftmul@exp 0089                              ?_JoinLoRaWan 0001  
                          __end_of_SetAdr 5196                    _USBCtrlTrfSetupHandler 4708  
                            le_AD@leitura 00AE                         putsUSBUSART@pData 0062  
                 ?i2_USBTransferOnePacket 0001                     __end_of_USBDeviceInit 2AEC  
                          __end_of___ftge 4708     __end_of_USBIncrement1msInternalTimers 54B4  
  __size_of_USBIncrement1msInternalTimers 0024             _USBIncrement1msInternalTimers 5490  
                          __end_of___wmul 53F8                              _enviaComando 354A  
                             _BAUDCONbits 000FB8                   __end_ofi2_USBDeviceInit 2C2C  
                           ?_putsUSBUSART 0060                            __end_of_gs_pan 7E1D  
                               i2memset@c 0003                                 i2memset@n 0005  
                               i2memset@p 0007                            __end_of_memcpy 4F98  
                          __end_of_memset 5346                            __end_of_fround 2638  
                          __end_of_millis 546A                         _USBBusIsSuspended 01F9  
                      _get_preambleid_900 7E0B                        _set_preambleid_900 7E0D  
                          __end_of_strcat 4EC8                            __end_of_strcmp 4E82  
                          __end_of_strcpy 53A4                            __end_of_strlen 4D98  
                     start_initialization 44B2                            ??_setup_pulsos 0060  
                 ?_USBStdGetStatusHandler 0001                           DataRate@comando 0120  
                             __end_of_MAC 7E00             USBCtrlTrfRxService@byteToRead 0002  
                             __end_of_SYS 7DF6                       __end_of__tdiv_to_l_ 2D60  
                       __size_of_DataRate 0046                          TxLoRaWan@comando 011E  
                             _cdc_data_rx 000540                               _cdc_data_tx 000500  
                       __size_ofi2_memset 002C              __end_of_USBConfigureEndpoint 4676  
                        TxLoRaWan@tamData 00F4           __end_of_USBStdFeatureReqHandler 23C8  
                               _SetDevEUI 509E         __end_of_USBCtrlEPAllowStatusStage 3F5A  
                       __size_ofi2_strlen 0052                                 _SetAppEUI 511A  
                               i2strlen@s 0001                                 _SetAppKey 50DC  
                __end_of_USBCtrlEPService 45E2                           ___llmod@divisor 0071  
                   __size_of_SetBandWidth 0046                           ___llmod@counter 0075  
               ??_USBCtrlEPAllowDataStage 0002                       __end_of_MAC_GET_ADR 7DD5  
                             ??_CDCInitEP 000D                            USBDeviceInit@i 0068  
                      retornaDado@dadoBit 0060                                  ??_SetAdr 00F3  
                               _TxLoRaWan 1ADE                    _pBDTEntryEP0OutCurrent 004E  
                 USBTransferOnePacket@dir 0060                   USBTransferOnePacket@len 0063  
          __end_ofi2_USBTransferOnePacket 3750                                  ??___ftge 0066  
                     __end_of_MAC_SET_ADR 7DDD                                  ??___wmul 0072  
                     _USBStdGetDscHandler 2E8E                               __pdataBANK3 03C5  
                        __CFG_LPT1OSC$OFF 000000                                  ??_memcpy 0007  
                                ??_memset 0066                            ??_putsUSBUSART 0062  
                                ??_fround 0092                                  ??_millis 0064  
                         SetAppKey@status 0150                             sprintf@tmpval 010C  
                                ??_strcat 0064                  ResetModuloLoRaWan@status 0087  
                                ??_strcmp 0005                                  ??_strcpy 0005  
                                ??_strlen 0062                               ?_setup_ccp1 0001  
               recebeByteLoRaWan@tamMsgRx 0012                    _USBActiveConfiguration 005E  
                              fround@prec 0098            __end_of_USBStdGetStatusHandler 4374  
                             ?_setup_uart 006D                         __size_of___awtoft 003A  
                       __size_of___ftpack 00B0                         __size_of___lltoft 005E  
                             __pbssCOMRAM 0038                __end_of_SetSpreadingFactor 509E  
                       _recebeByteLoRaWan 1EAE                             __pcstackBANK0 0060  
                           __pcstackBANK1 0100                             __pcstackBANK2 0200  
            __size_of_USBCtrlTrfInHandler 00BC                      __end_of_set_link_key 7E17  
                SetChannelLoRaWan@comando 011E                              _SetBandWidth 4EC8  
                      ?_recebeByteLoRaWan 0001                      ?_USBStdGetDscHandler 0001  
                            _isdigit$5386 0061                          SetDevEUI@comando 011E  
                   __end_of_gs_encryption 7E15                            SetBandWidth@bw 00F1  
                              ?_SetDevEUI 00F1                                ?_SetAppEUI 00F1  
                              ?_SetAppKey 00F1                __end_of_USBWakeFromSuspend 52B2  
                                ?_MacSave 0001                               sprintf@flag 011B  
                             sprintf@fval 0116                               sprintf@prec 010A  
                         _USBStallHandler 501C                       ??_recebeByteLoRaWan 000A  
                            _pBDTEntryOut 02C8                __end_of_USBCheckCDCRequest 4174  
                    recebeByteLoRaWan@len 000E                  __size_of_USBDeviceDetach 000E  
                __size_of_USBDeviceAttach 0034                        _ResetModuloLoRaWan 53F8  
                               _feedback1 02F1                                 _feedback2 02F0  
                               _main$5961 02A6                            SetDevEUI@state 00F1  
                       ??_initRecebeDados 0060                                ?_TxLoRaWan 00F1  
                   __size_of_parseLoRaWan 00AC                       SetBandWidth@comando 011E  
                               __pintcode 0008                             __pmediumconst 7C08  
                                ?___awdiv 0066                                  ?___ftadd 0074  
                                ?___awmod 0060                                  ?___ftdiv 008F  
                                ?___ftneg 0060                                  ?___lldiv 0060  
                                ?___ftmul 0080                                  ?___llmod 006D  
                                ?___ftsub 0080                                 __npowers_ 7C58  
                                ?___fttol 00B0                       ?_ResetModuloLoRaWan 0001  
                      enviaComando@i_4915 0083                        enviaComando@i_4916 0085  
                       __size_of_setup_AD 0010                               __preambleID 02FC  
                        ?i2_USBDeviceInit 0001                               __tdiv_to_l_ 2C2C  
               __end_of_recebeByteLoRaWan 2144                             __send_retries 02F7  
                            ??__div_to_l_ 0066                      _USBTransferOnePacket 3444  
                               _converter 4820                                  ?_isdigit 0001  
                               _le_pulsos 3C04                            SetAppEUI@state 00F1  
            __end_of_USBCtrlTrfOutHandler 4CE6                                 _hexpowers 7C7F  
                   ??_USBStdGetDscHandler 0001                               _ep_data_out 02D2  
                          __size_of_le_AD 012C                            __size_of_delay 0072  
                          __size_of_getch 0026                   parseLoRaWan@intervalMAX 0078  
                                ?_sprintf 00BF              __size_of_USBCtrlTrfRxService 010C  
                    ??_ResetModuloLoRaWan 0087                            __size_of_scale 0438  
           USBConfigureEndpoint@direction 0001                                  ?_strncmp 0001  
                                ?_toupper 0001                               _MAC_GET_ADR 7DCD  
                          __size_of_putch 000E                                 delay@time 006D  
                                _MAC_SAVE 7DF6              __size_of_USBCtrlTrfTxService 00D4  
                            _parseLoRaWan 4174                            ___wmul@product 0072  
                                _LATDbits 000F8C                                  _LATEbits 000F8D  
                             _MAC_SET_ADR 7DD5                              TxLoRaWan@hex 01E8  
              ??_USBCtrlEPServiceComplete 0002                                  _IPR1bits 000F9F  
                                _IPR2bits 000FA2                                  _PIE2bits 000FA0  
                     __size_of_setup_ccp1 0042                       __size_of_setup_uart 00A0  
                      __end_of__div_to_l_ 3212                                  _PIR2bits 000FA1  
                                i2u619_40 2336                                  i2u580_40 3E7E  
                                i2u580_47 3E74                                  i2u590_40 3D5A  
                    __end_of_setup_pulsos 42CA                                  i2u578_40 3E3E  
                                i2u594_40 2F06                                  i2u578_47 3E34  
                                i2u594_47 2EFC                                  i2u595_40 2F36  
                                i2u923_40 2E8A                                  i2u595_47 2F2C  
                                i2u597_40 2F88                                  i2u597_47 2F7E  
                                i2u880_40 2BEC                                  i2u881_40 4DC6  
                                i2u881_47 4DBC                                  i2u866_40 4E76  
                                i2u868_40 4958                                  i2u877_40 2B4A  
                                i2u893_40 205A                                  _RCONbits 000FD0  
                                i2u897_40 2130                                  i2u899_40 213E  
                        __CFG_WDTPS$32768 000000                                  _UEP0bits 000F70  
              _USBDeferINDataStagePackets 02E7               __size_of_USBCheckStdRequest 00E2  
                                _UCONbits 000F6D                                  _STATE_ON 7E08  
                    _USBConfigureEndpoint 45E2                      __size_of_JoinLoRaWan 003A  
                               getch@data 0003                               _frameBuffer 0664  
                           ??_retornaDado 0061          __size_of_USBStdFeatureReqHandler 0284  
                        _get_own_mac_high 7E1D                         ___wmul@multiplier 006E  
                   ?_USBTransferOnePacket 0060                         _SYS_InterruptHigh 0008  
                             _encryptMode 02F3                                ?_converter 0002  
                                _DataRate 4F0E                             ?_CDCTxService 0001  
                              ?_le_pulsos 0065                              _RemoteWakeup 01FA  
                               main@pisca 02AF                                 main@tempo 0296  
                                i2_memset 53A4                          main@tempoTimeOut 029A  
                      ?_SYS_InterruptHigh 0001                          putsUSBUSART@data 0060  
                 __end_of_USBStallHandler 505E                                  i2_strlen 4D98  
                        SetAppEUI@comando 011E                                 copy_data0 44C6  
                             _freqPulses1 033A                               _freqPulses2 0336  
                             _freqPulses3 0332                               _freqPulses4 032E  
             ??_USBCtrlEPAllowStatusStage 0001               __end_of_USBStdSetCfgHandler 3DC2  
                             ??_SetDevEUI 00F3                               ??_SetAppEUI 00F3  
                             ??_SetAppKey 00F3                       ??_SYS_InterruptHigh 001D  
                          _MAC_SET_DEVEUI 7DA5                      __end_of_putsUSBUSART 4E3A  
                           ??_verificaUSB 006D                            _MAC_SET_APPEUI 7D9A  
                          _MAC_SET_APPKEY 7D8F                        __end_of_device_dsc 7D64  
                        __size_of_MacSave 0036                             SetAdr@comando 011E  
                              _EECON1bits 000FA6                            DataRate@status 011E  
                 ?_USBCtrlTrfSetupHandler 0001                           TxLoRaWan@status 01E7  
                 USBStdGetStatusHandler@p 0002                                  __Hrparam 0000  
                             ??_TxLoRaWan 00F5                                 memcpy@tmp 000B  
                                __Lrparam 0000                    USBTransferOnePacket@ep 0068  
                                _Sequence 02EB                                  _SetupPkt 000430  
              recebeByteLoRaWan@frameData 0440                            SetAppKey@state 00F1  
                       ??_USBDeviceDetach 0060                     ?_USBConfigureEndpoint 0001  
                       ??_USBDeviceAttach 0060                          __size_of___awdiv 0086  
                        __size_of___ftadd 01AE                          __size_of___awmod 0072  
                        __size_of___ftdiv 00E8                          __size_of___ftneg 0026  
                        __size_of___lldiv 0084                          __size_of___ftmul 00F6  
                        __size_of___llmod 0068                          __size_of___ftsub 0042  
                        __size_of___fttol 00F8                                  ___awtoft 51D2  
                                ___ftpack 4016                 __end_of_SYS_InterruptHigh 27FA  
                                ___lltoft 4C2A                               _fround$5963 0095  
                             _fround$5964 0092                               _line_coding 03BE  
              __size_of_recebeByteLoRaWan 0296                        __end_of_gs_channel 7E1B  
                          ??_CDCTxService 006B                                sprintf@idx 0103  
                              sprintf@len 0106                                sprintf@exp 0110  
                              sprintf@val 0112                                strcat@from 0062  
                        __size_of_isdigit 0022                   __size_of_USBDeviceTasks 012E  
                     __end_of_retornaDado 4C2A                           enviaComando@cmd 007C  
                                __ptext10 49AC                                  __ptext11 52E6  
                                __ptext20 4BCA                                  __ptext12 5532  
                                __ptext21 53F8                                  __ptext13 52B2  
                                __ptext30 5246                                  __ptext22 520C  
                                __ptext14 3212                                  __ptext31 4F0E  
                                __ptext23 505E                                  __ptext15 3444  
                                __ptext40 2C2C                                  __ptext32 0012  
                                __ptext24 509E                                  __ptext16 29A8  
                                __ptext41 30E8                                  __ptext33 16A6  
                                __ptext25 4A90                                  __ptext17 5316  
                                __ptext50 4676                                  __ptext42 4C2A  
                                __ptext34 54D6                                  __ptext26 4EC8  
                                __ptext18 1ADE                                  __ptext51 354A  
                                __ptext43 4AFC                                  __ptext35 23C8  
                                __ptext27 50DC                                  __ptext19 4E82  
                                __ptext60 492A                                  __ptext52 4D42  
                                __ptext44 48A6                                  __ptext36 53D0  
                                __ptext28 511A                                  __ptext61 5376  
                                __ptext53 5540                                  __ptext45 384C  
                                __ptext37 3944                                  __ptext29 5158  
                                __ptext70 501C                                  __ptext62 4E3A  
                                __ptext54 4174                                  __ptext46 4FDA  
                                __ptext38 4A1E                                  __ptext71 5490  
                                __ptext63 4820                                  __ptext55 5444  
                                __ptext47 27FA                                  __ptext39 479A  
                                __ptext80 42CA                                  __ptext72 454C  
                                __ptext64 550E                                  __ptext56 54F8  
                                __ptext48 4016                                  __ptext81 2E8E  
                                __ptext73 4F54                                  __ptext65 546A  
                                __ptext49 541E                                  __ptext90 3338  
                                __ptext82 2144                                  __ptext74 4708  
                                __ptext66 2D60                                  __ptext58 1EAE  
                                __ptext91 3E96                                  __ptext83 4CE6  
                                __ptext75 3750                                  __ptext67 2AEC  
                                __ptext59 4D98                                  __ptext92 3F5A  
                                __ptext84 40C6                                  __ptext76 4414  
                                __ptext68 527C                                  __ptext93 3DC2  
                                __ptext85 4B64                                  __ptext77 3B22  
                                __ptext69 5346                                  __ptext86 364E  
                                __ptext78 3CE4                                  __ptext87 5196  
                                __ptext79 53A4                                  __ptext88 45E2  
                                __ptext89 4C88                                  __powers_ 7C31  
           recebeByte@checksumRecebimento 02E1                             _MAC_GET_DNCTR 7DB0  
                  __end_of_MAC_SET_DEVEUI 7DB0                    __end_of_MAC_SET_APPEUI 7DA5  
                  __end_of_MAC_SET_APPKEY 7D9A                          __size_of_sprintf 0CA4  
                        __size_of_strncmp 0082                          __size_of_toupper 0014  
                              strcpy@from 0003                            _dadosRecebidos 0300  
                                _error_AT 02FB                                  _error_RX 02F9  
                                _error_TX 005C                      parseLoRaWan@previous 0074  
          __end_of_USBCtrlTrfSetupHandler 479A                             __size_of_main 09F0  
                       ?_USBCtrlEPService 0001                                  _tamFrame 005A  
                              strncmp@len 0005                                DataRate@dr 00F1  
                      ??_USBCtrlEPService 001B                                _MAC_SET_DR 7DDD  
                              _MAC_SET_BW 7D82                             _MAC_JOIN_OTAA 7DBA  
                              _MAC_SET_SF 7D64                       _USBCtrlTrfInHandler 3F5A  
                              _MAC_TX_CNF 7DE4                       __end_of_verificaUSB 5316  
                                _response 0352                                  _setup_AD 5522  
                                _outPipes 0038                              _set_link_key 7E15  
                    _USBCtrlTrfOutHandler 4C88                                  int$flags 005F  
               _USBCtrlEPAllowStatusStage 3E96                            converter@conv1 0006  
                          converter@conv2 0002                           _get_own_mac_low 7E1F  
                                _protocol 02FA                                  main@data 0200  
                          converter@resul 0003                                  main@resp 02A0  
                  ??_USBTransferOnePacket 0064                              ??_setup_ccp1 0060  
                             _MSG_LORAWAN 03C5                     __CFG_CPUDIV$OSC1_PLL2 000000  
                            ??_setup_uart 0071                 _USBDeferStatusStagePacket 0053  
                CDCTxService@byte_to_send 006C                                 putch@data 0060  
                             ??_converter 0003               __end_of_get_channelmask_900 7E11  
                             ??_le_pulsos 0069                                _INTCONbits 000FF2  
             __end_of_set_channelmask_900 7E13                            TxLoRaWan@porta 00F1  
                    ?_USBCtrlTrfInHandler 0001                                  memcpy@d1 0001  
                                memcpy@s1 0003                           _delivery_status 02F6  
           USBCtrlTrfTxService@byteToSend 0001                                  isdigit@c 0062  
                                memset@p1 0060                                  scale@scl 0095  
                        ?_USBStallHandler 0001                  USBStdFeatureReqHandler@p 0019  
                         _initRecebeDados 54F8                                  intlevel2 0000  
                               sprintf@ap 0108                                 sprintf@cp 0104  
                        __tdiv_to_l_@exp1 006E                                 sprintf@sp 00BF  
                        __tdiv_to_l_@cntr 006D                    __size_of_USBDeviceInit 0144  
                        __tdiv_to_l_@quot 0069   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 4D42  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 005C         ??_USER_USB_CALLBACK_EVENT_HANDLER 0013  
        ?_USER_USB_CALLBACK_EVENT_HANDLER 000D           _USER_USB_CALLBACK_EVENT_HANDLER 4CE6  
            i2USBTransferOnePacket@handle 000A                          ___lldiv@dividend 0060  
                   __size_of_setup_pulsos 00AA                         _SetChannelLoRaWan 4A90  
                      _SetSpreadingFactor 505E                       parseLoRaWan@timeout 007B  
                          MacSave@comando 00F2                        ?_SetChannelLoRaWan 00F1  
                               strncmp@s1 0001                                 strncmp@s2 0003  
                      __end_of_setup_ccp1 4FDA                        __end_of_setup_uart 4414  
              i2USBTransferOnePacket@data 0002                    ??_USBConfigureEndpoint 0002  
                   ?_USBCtrlTrfOutHandler 0001                     retornaDado@selectDado 0063  
                     ?_SetSpreadingFactor 0001                       _USBCtrlTrfRxService 3338  
                      _USBWakeFromSuspend 527C                       ??_SetChannelLoRaWan 00F2  
                 _USBStdFeatureReqHandler 2144                        _USBCheckCDCRequest 40C6  
                     _USBCtrlTrfTxService 3DC2                      SetSpreadingFactor@sf 0133  
              __size_of_SYS_InterruptHigh 27F2                              ?__tdiv_to_l_ 0060  
                             _retornaDado 4BCA                           le_AD@AnalogPort 00A9  
                                sprintf@c 011D                                  sprintf@f 00C1  
                                strcat@cp 0064                 recebeByte@tamanhoMensagem 0048  
                                strcat@to 0060                       ?_USBWakeFromSuspend 0001  
                                strcmp@s1 0001                                  strcmp@s2 0003  
                        ___lldiv@quotient 0068                     ??_USBCtrlTrfInHandler 0002  
                                strcpy@cp 0005                                  strlen@cp 0064  
                                strcpy@to 0001                     _USBAlternateInterface 02FD  
                                toupper@c 0001                       ?_USBCheckCDCRequest 0001  
                    __end_of_write_values 7E19                 i2USBTransferOnePacket@dir 0001  
               i2USBTransferOnePacket@len 0004                              _setup_pulsos 4220  
                     USBEnableEndpoint@ep 000C                           _endpoint_number 0055  
                   __size_of_putsUSBUSART 0050                      ??_SetSpreadingFactor 00F1  
                    ?_USBCtrlTrfRxService 0001                 __end_of_SetChannelLoRaWan 4AFC  
                      __CFG_FOSC$HSPLL_HS 000000                  ?_USBCtrlEPAllowDataStage 0001  
                    ?_USBCtrlTrfTxService 0001                 SetSpreadingFactor@comando 011E  
                             _verificaUSB 52E6                  __end_of_get_own_mac_high 7E1F  
            _USBStatusStageTimeoutCounter 0054                      ??_USBWakeFromSuspend 0015  
              USBTransferOnePacket@handle 0069                      __end_of_CDCTxService 3338  
                 __end_of_get_own_mac_low 7E21                      ??_USBCheckCDCRequest 0001  
                              _USB_CD_Ptr 7CA5  
