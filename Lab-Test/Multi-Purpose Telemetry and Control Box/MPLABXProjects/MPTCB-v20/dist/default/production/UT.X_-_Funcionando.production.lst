

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Tue Mar 12 13:53:36 2019

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    23                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    25                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    26                           	psect	text0,global,reloc=2,class=CODE,delta=1
    27                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text2,global,reloc=2,class=CODE,delta=1
    29                           	psect	text3,global,reloc=2,class=CODE,delta=1
    30                           	psect	text4,global,reloc=2,class=CODE,delta=1
    31                           	psect	text5,global,reloc=2,class=CODE,delta=1
    32                           	psect	text6,global,reloc=2,class=CODE,delta=1
    33                           	psect	text7,global,reloc=2,class=CODE,delta=1
    34                           	psect	text8,global,reloc=2,class=CODE,delta=1
    35                           	psect	text9,global,reloc=2,class=CODE,delta=1
    36                           	psect	text10,global,reloc=2,class=CODE,delta=1
    37                           	psect	text11,global,reloc=2,class=CODE,delta=1
    38                           	psect	text12,global,reloc=2,class=CODE,delta=1
    39                           	psect	text13,global,reloc=2,class=CODE,delta=1
    40                           	psect	text14,global,reloc=2,class=CODE,delta=1
    41                           	psect	text15,global,reloc=2,class=CODE,delta=1
    42                           	psect	text16,global,reloc=2,class=CODE,delta=1
    43                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text19,global,reloc=2,class=CODE,delta=1
    46                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text21,global,reloc=2,class=CODE,delta=1
    48                           	psect	text22,global,reloc=2,class=CODE,delta=1
    49                           	psect	text23,global,reloc=2,class=CODE,delta=1
    50                           	psect	text24,global,reloc=2,class=CODE,delta=1
    51                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text27,global,reloc=2,class=CODE,delta=1
    54                           	psect	text28,global,reloc=2,class=CODE,delta=1
    55                           	psect	text29,global,reloc=2,class=CODE,delta=1
    56                           	psect	text30,global,reloc=2,class=CODE,delta=1
    57                           	psect	text31,global,reloc=2,class=CODE,delta=1
    58                           	psect	text32,global,reloc=2,class=CODE,delta=1
    59                           	psect	text33,global,reloc=2,class=CODE,delta=1
    60                           	psect	text34,global,reloc=2,class=CODE,delta=1
    61                           	psect	text35,global,reloc=2,class=CODE,delta=1
    62                           	psect	text36,global,reloc=2,class=CODE,delta=1
    63                           	psect	text37,global,reloc=2,class=CODE,delta=1
    64                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text39,global,reloc=2,class=CODE,delta=1
    66                           	psect	text40,global,reloc=2,class=CODE,delta=1
    67                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text42,global,reloc=2,class=CODE,delta=1
    69                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text57,global,reloc=2,class=CODE,delta=1
    84                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	text60,global,reloc=2,class=CODE,delta=1
    87                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    89                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    90                           	psect	text63,global,reloc=2,class=CODE,delta=1
    91                           	psect	text64,global,reloc=2,class=CODE,delta=1
    92                           	psect	text65,global,reloc=2,class=CODE,delta=1
    93                           	psect	text66,global,reloc=2,class=CODE,delta=1
    94                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
    96                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
    97                           	psect	text70,global,reloc=2,class=CODE,delta=1
    98                           	psect	text71,global,reloc=2,class=CODE,delta=1
    99                           	psect	text72,global,reloc=2,class=CODE,delta=1
   100                           	psect	text73,global,reloc=2,class=CODE,delta=1
   101                           	psect	text74,global,reloc=2,class=CODE,delta=1
   102                           	psect	text75,global,reloc=2,class=CODE,delta=1
   103                           	psect	text76,global,reloc=2,class=CODE,delta=1
   104                           	psect	text77,global,reloc=2,class=CODE,delta=1
   105                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=1
   106                           	psect	text79,global,reloc=2,class=CODE,delta=1
   107                           	psect	text80,global,reloc=2,class=CODE,delta=1
   108                           	psect	text81,global,reloc=2,class=CODE,delta=1
   109                           	psect	text82,global,reloc=2,class=CODE,delta=1
   110                           	psect	text83,global,reloc=2,class=CODE,delta=1
   111                           	psect	text84,global,reloc=2,class=CODE,delta=1
   112                           	psect	text85,global,reloc=2,class=CODE,delta=1
   113                           	psect	text86,global,reloc=2,class=CODE,delta=1
   114                           	psect	text87,global,reloc=2,class=CODE,delta=1
   115                           	psect	text88,global,reloc=2,class=CODE,delta=1
   116                           	psect	text89,global,reloc=2,class=CODE,delta=1
   117                           	psect	text90,global,reloc=2,class=CODE,delta=1
   118                           	psect	text91,global,reloc=2,class=CODE,delta=1
   119                           	psect	text92,global,reloc=2,class=CODE,delta=1
   120                           	psect	text93,global,reloc=2,class=CODE,delta=1
   121                           	psect	text94,global,reloc=2,class=CODE,delta=1
   122                           	psect	text95,global,reloc=2,class=CODE,delta=1
   123                           	psect	text96,global,reloc=2,class=CODE,delta=1
   124                           	psect	text97,global,reloc=2,class=CODE,delta=1
   125                           	psect	text98,global,reloc=2,class=CODE,delta=1
   126                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   127                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   128                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   129                           	dabs	1,0x400,48,_BDT
   130                           	dabs	1,0x500,64,_cdc_data_tx
   131                           	dabs	1,0x438,8,_CtrlTrfData
   132                           	dabs	1,0x430,8,_SetupPkt
   133                           	dabs	1,0x540,64,_cdc_data_rx
   134  0000                     
   135                           ; Version 1.44
   136                           ; Generated 14/09/2017 GMT
   137                           ; 
   138                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   139                           ; All rights reserved.
   140                           ; 
   141                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   142                           ; 
   143                           ; Redistribution and use in source and binary forms, with or without modification, are
   144                           ; permitted provided that the following conditions are met:
   145                           ; 
   146                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   147                           ;        conditions and the following disclaimer.
   148                           ; 
   149                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   150                           ;        of conditions and the following disclaimer in the documentation and/or other
   151                           ;        materials provided with the distribution.
   152                           ; 
   153                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   154                           ;        software without specific prior written permission.
   155                           ; 
   156                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   157                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   158                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   159                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   160                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   161                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   162                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   163                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   164                           ; 
   165                           ; 
   166                           ; Code-generator required, PIC18F4550 Definitions
   167                           ; 
   168                           ; SFR Addresses
   169  0000                     
   170                           	psect	idataBANK1
   171  005205                     __pidataBANK1:
   172                           	opt stack 0
   173                           
   174                           ;initializer for _randx
   175  005205  0001               	dw	1
   176  005207  0000               	dw	0
   177                           
   178                           ;initializer for _NumOfFields
   179  005209  01                 	db	1
   180                           
   181                           	psect	idataBANK2
   182  0051FA                     __pidataBANK2:
   183                           	opt stack 0
   184                           
   185                           ;initializer for _encryptEnable
   186  0051FA  01                 	db	1
   187                           
   188                           ;initializer for _Mask
   189  0051FB  FF                 	db	255
   190  0051FC  FF                 	db	255
   191  0051FD  FF                 	db	255
   192  0051FE  FF                 	db	255
   193  0051FF  FF                 	db	255
   194  005200  F7                 	db	247
   195  005201  FF                 	db	255
   196  005202  C0                 	db	192
   197                           
   198                           ;initializer for _panID
   199  005203  7F                 	db	127
   200  005204  FF                 	db	255
   201                           
   202                           	psect	idataBANK3
   203  004FFA                     __pidataBANK3:
   204                           	opt stack 0
   205                           
   206                           ;initializer for _MSG_LORAWAN
   207  004FFA  82                 	db	low (STR_18+7)
   208  004FFB  7F                 	db	high (STR_18+7)
   209  004FFC  34                 	db	low STR_10
   210  004FFD  7F                 	db	high STR_10
   211  004FFE  50                 	db	low STR_11
   212  004FFF  7F                 	db	high STR_11
   213  005000  66                 	db	low STR_12
   214  005001  7F                 	db	high STR_12
   215  005002  C4                 	db	low STR_13
   216  005003  7F                 	db	high STR_13
   217  005004  C0                 	db	low STR_14
   218  005005  7E                 	db	high STR_14
   219  005006  F5                 	db	low STR_15
   220  005007  7F                 	db	high STR_15
   221  005008  5B                 	db	low STR_16
   222  005009  7F                 	db	high STR_16
   223  00500A  02                 	db	low STR_17
   224  00500B  7F                 	db	high STR_17
   225  00500C  7B                 	db	low STR_18
   226  00500D  7F                 	db	high STR_18
   227  00500E  97                 	db	low STR_19
   228  00500F  7F                 	db	high STR_19
   229  005010  9F                 	db	low STR_20
   230  005011  7F                 	db	high STR_20
   231  005012  42                 	db	low STR_21
   232  005013  7F                 	db	high STR_21
   233  005014  BD                 	db	low STR_22
   234  005015  7F                 	db	high STR_22
   235  005016  24                 	db	low STR_23
   236  005017  7F                 	db	high STR_23
   237                           
   238                           ;initializer for _RX_ADDRESS
   239  005018  30                 	db	48
   240  005019  30                 	db	48
   241  00501A  31                 	db	49
   242  00501B  33                 	db	51
   243  00501C  41                 	db	65
   244  00501D  32                 	db	50
   245  00501E  30                 	db	48
   246  00501F  30                 	db	48
   247  005020  34                 	db	52
   248  005021  31                 	db	49
   249  005022  30                 	db	48
   250  005023  41                 	db	65
   251  005024  43                 	db	67
   252  005025  45                 	db	69
   253  005026  36                 	db	54
   254  005027  39                 	db	57
   255  005028  00                 	db	0
   256                           
   257                           	psect	mediumconst
   258  007BD2                     __pmediumconst:
   259                           	opt stack 0
   260  007BD2  00                 	db	0
   261  007BD3                     _dpowers:
   262                           	opt stack 0
   263  007BD3  0001               	dw	1
   264  007BD5  0000               	dw	0
   265  007BD7  000A               	dw	10
   266  007BD9  0000               	dw	0
   267  007BDB  0064               	dw	100
   268  007BDD  0000               	dw	0
   269  007BDF  03E8               	dw	1000
   270  007BE1  0000               	dw	0
   271  007BE3  2710               	dw	10000
   272  007BE5  0000               	dw	0
   273  007BE7  86A0               	dw	34464
   274  007BE9  0001               	dw	1
   275  007BEB  4240               	dw	16960
   276  007BED  000F               	dw	15
   277  007BEF  9680               	dw	38528
   278  007BF1  0098               	dw	152
   279  007BF3  E100               	dw	57600
   280  007BF5  05F5               	dw	1525
   281  007BF7  CA00               	dw	51712
   282  007BF9  3B9A               	dw	15258
   283  007BFB                     __end_of_dpowers:
   284                           	opt stack 0
   285  007BFB                     __powers_:
   286                           	opt stack 0
   287  007BFB  00                 	db	0
   288  007BFC  80                 	db	128
   289  007BFD  3F                 	db	63
   290  007BFE  00                 	db	0
   291  007BFF  20                 	db	32
   292  007C00  41                 	db	65
   293  007C01  00                 	db	0
   294  007C02  C8                 	db	200
   295  007C03  42                 	db	66
   296  007C04  00                 	db	0
   297  007C05  7A                 	db	122
   298  007C06  44                 	db	68
   299  007C07  40                 	db	64
   300  007C08  1C                 	db	28
   301  007C09  46                 	db	70
   302  007C0A  50                 	db	80
   303  007C0B  C3                 	db	195
   304  007C0C  47                 	db	71
   305  007C0D  24                 	db	36
   306  007C0E  74                 	db	116
   307  007C0F  49                 	db	73
   308  007C10  97                 	db	151
   309  007C11  18                 	db	24
   310  007C12  4B                 	db	75
   311  007C13  BC                 	db	188
   312  007C14  BE                 	db	190
   313  007C15  4C                 	db	76
   314  007C16  6B                 	db	107
   315  007C17  6E                 	db	110
   316  007C18  4E                 	db	78
   317  007C19  03                 	db	3
   318  007C1A  15                 	db	21
   319  007C1B  50                 	db	80
   320  007C1C  79                 	db	121
   321  007C1D  AD                 	db	173
   322  007C1E  60                 	db	96
   323  007C1F  F3                 	db	243
   324  007C20  49                 	db	73
   325  007C21  71                 	db	113
   326  007C22                     __end_of__powers_:
   327                           	opt stack 0
   328  007C22                     __npowers_:
   329                           	opt stack 0
   330  007C22  00                 	db	0
   331  007C23  80                 	db	128
   332  007C24  3F                 	db	63
   333  007C25  CD                 	db	205
   334  007C26  CC                 	db	204
   335  007C27  3D                 	db	61
   336  007C28  D7                 	db	215
   337  007C29  23                 	db	35
   338  007C2A  3C                 	db	60
   339  007C2B  12                 	db	18
   340  007C2C  83                 	db	131
   341  007C2D  3A                 	db	58
   342  007C2E  B7                 	db	183
   343  007C2F  D1                 	db	209
   344  007C30  38                 	db	56
   345  007C31  C6                 	db	198
   346  007C32  27                 	db	39
   347  007C33  37                 	db	55
   348  007C34  38                 	db	56
   349  007C35  86                 	db	134
   350  007C36  35                 	db	53
   351  007C37  C0                 	db	192
   352  007C38  D6                 	db	214
   353  007C39  33                 	db	51
   354  007C3A  CC                 	db	204
   355  007C3B  2B                 	db	43
   356  007C3C  32                 	db	50
   357  007C3D  70                 	db	112
   358  007C3E  89                 	db	137
   359  007C3F  30                 	db	48
   360  007C40  E7                 	db	231
   361  007C41  DB                 	db	219
   362  007C42  2E                 	db	46
   363  007C43  E5                 	db	229
   364  007C44  3C                 	db	60
   365  007C45  1E                 	db	30
   366  007C46  42                 	db	66
   367  007C47  A2                 	db	162
   368  007C48  0D                 	db	13
   369  007C49                     __end_of__npowers_:
   370                           	opt stack 0
   371  007C49                     _hexpowers:
   372                           	opt stack 0
   373  007C49  0001               	dw	1
   374  007C4B  0000               	dw	0
   375  007C4D  0010               	dw	16
   376  007C4F  0000               	dw	0
   377  007C51  0100               	dw	256
   378  007C53  0000               	dw	0
   379  007C55  1000               	dw	4096
   380  007C57  0000               	dw	0
   381  007C59  0000               	dw	0
   382  007C5B  0001               	dw	1
   383  007C5D  0000               	dw	0
   384  007C5F  0010               	dw	16
   385  007C61  0000               	dw	0
   386  007C63  0100               	dw	256
   387  007C65  0000               	dw	0
   388  007C67  1000               	dw	4096
   389  007C69                     __end_of_hexpowers:
   390                           	opt stack 0
   391  007C69                     _USB_SD_Ptr:
   392                           	opt stack 0
   393  007C69  E2                 	db	low _sd000
   394  007C6A  7D                 	db	high _sd000
   395  007C6B  EF                 	db	low _sd001
   396  007C6C  7C                 	db	high _sd001
   397  007C6D  BB                 	db	low _sd002
   398  007C6E  7C                 	db	high _sd002
   399  007C6F                     __end_of_USB_SD_Ptr:
   400                           	opt stack 0
   401  007C6F                     _STATE_OFF:
   402                           	opt stack 0
   403  007C6F  6F                 	db	111
   404  007C70  66                 	db	102
   405  007C71  66                 	db	102
   406  007C72  00                 	db	0
   407  007C73                     __end_of_STATE_OFF:
   408                           	opt stack 0
   409  007C73                     _STATE_ON:
   410                           	opt stack 0
   411  007C73  6F                 	db	111
   412  007C74  6E                 	db	110
   413  007C75  00                 	db	0
   414  007C76                     __end_of_STATE_ON:
   415                           	opt stack 0
   416  007C76                     _USB_CD_Ptr:
   417                           	opt stack 0
   418  007C76  78                 	db	low _configDescriptor1
   419  007C77  7C                 	db	high _configDescriptor1
   420  007C78                     __end_of_USB_CD_Ptr:
   421                           	opt stack 0
   422  007C78                     _configDescriptor1:
   423                           	opt stack 0
   424  007C78  09                 	db	9
   425  007C79  02                 	db	2
   426  007C7A  43                 	db	67
   427  007C7B  00                 	db	0
   428  007C7C  02                 	db	2
   429  007C7D  01                 	db	1
   430  007C7E  00                 	db	0
   431  007C7F  C0                 	db	192
   432  007C80  32                 	db	50
   433  007C81  09                 	db	9
   434  007C82  04                 	db	4
   435  007C83  00                 	db	0
   436  007C84  00                 	db	0
   437  007C85  01                 	db	1
   438  007C86  02                 	db	2
   439  007C87  02                 	db	2
   440  007C88  01                 	db	1
   441  007C89  00                 	db	0
   442  007C8A  05                 	db	5
   443  007C8B  24                 	db	36
   444  007C8C  00                 	db	0
   445  007C8D  10                 	db	16
   446  007C8E  01                 	db	1
   447  007C8F  04                 	db	4
   448  007C90  24                 	db	36
   449  007C91  02                 	db	2
   450  007C92  02                 	db	2
   451  007C93  05                 	db	5
   452  007C94  24                 	db	36
   453  007C95  06                 	db	6
   454  007C96  00                 	db	0
   455  007C97  01                 	db	1
   456  007C98  05                 	db	5
   457  007C99  24                 	db	36
   458  007C9A  01                 	db	1
   459  007C9B  00                 	db	0
   460  007C9C  01                 	db	1
   461  007C9D  07                 	db	7
   462  007C9E  05                 	db	5
   463  007C9F  81                 	db	129
   464  007CA0  03                 	db	3
   465  007CA1  08                 	db	8
   466  007CA2  00                 	db	0
   467  007CA3  02                 	db	2
   468  007CA4  09                 	db	9
   469  007CA5  04                 	db	4
   470  007CA6  01                 	db	1
   471  007CA7  00                 	db	0
   472  007CA8  02                 	db	2
   473  007CA9  0A                 	db	10
   474  007CAA  00                 	db	0
   475  007CAB  00                 	db	0
   476  007CAC  00                 	db	0
   477  007CAD  07                 	db	7
   478  007CAE  05                 	db	5
   479  007CAF  02                 	db	2
   480  007CB0  02                 	db	2
   481  007CB1  40                 	db	64
   482  007CB2  00                 	db	0
   483  007CB3  00                 	db	0
   484  007CB4  07                 	db	7
   485  007CB5  05                 	db	5
   486  007CB6  82                 	db	130
   487  007CB7  02                 	db	2
   488  007CB8  40                 	db	64
   489  007CB9  00                 	db	0
   490  007CBA  00                 	db	0
   491  007CBB                     __end_of_configDescriptor1:
   492                           	opt stack 0
   493  007CBB                     _sd002:
   494                           	opt stack 0
   495  007CBB  34                 	db	52
   496  007CBC  03                 	db	3
   497  007CBD  0043               	dw	67
   498  007CBF  0044               	dw	68
   499  007CC1  0043               	dw	67
   500  007CC3  0020               	dw	32
   501  007CC5  0052               	dw	82
   502  007CC7  0053               	dw	83
   503  007CC9  002D               	dw	45
   504  007CCB  0032               	dw	50
   505  007CCD  0033               	dw	51
   506  007CCF  0032               	dw	50
   507  007CD1  0020               	dw	32
   508  007CD3  0045               	dw	69
   509  007CD5  006D               	dw	109
   510  007CD7  0075               	dw	117
   511  007CD9  006C               	dw	108
   512  007CDB  0061               	dw	97
   513  007CDD  0074               	dw	116
   514  007CDF  0069               	dw	105
   515  007CE1  006F               	dw	111
   516  007CE3  006E               	dw	110
   517  007CE5  0020               	dw	32
   518  007CE7  0044               	dw	68
   519  007CE9  0065               	dw	101
   520  007CEB  006D               	dw	109
   521  007CED  006F               	dw	111
   522  007CEF                     __end_of_sd002:
   523                           	opt stack 0
   524  007CEF                     _sd001:
   525                           	opt stack 0
   526  007CEF  34                 	db	52
   527  007CF0  03                 	db	3
   528  007CF1  004D               	dw	77
   529  007CF3  0069               	dw	105
   530  007CF5  0063               	dw	99
   531  007CF7  0072               	dw	114
   532  007CF9  006F               	dw	111
   533  007CFB  0063               	dw	99
   534  007CFD  0068               	dw	104
   535  007CFF  0069               	dw	105
   536  007D01  0070               	dw	112
   537  007D03  0020               	dw	32
   538  007D05  0054               	dw	84
   539  007D07  0065               	dw	101
   540  007D09  0063               	dw	99
   541  007D0B  0068               	dw	104
   542  007D0D  006E               	dw	110
   543  007D0F  006F               	dw	111
   544  007D11  006C               	dw	108
   545  007D13  006F               	dw	111
   546  007D15  0067               	dw	103
   547  007D17  0079               	dw	121
   548  007D19  0020               	dw	32
   549  007D1B  0049               	dw	73
   550  007D1D  006E               	dw	110
   551  007D1F  0063               	dw	99
   552  007D21  002E               	dw	46
   553  007D23                     __end_of_sd001:
   554                           	opt stack 0
   555  007D23                     _device_dsc:
   556                           	opt stack 0
   557  007D23  12                 	db	18
   558  007D24  01                 	db	1
   559  007D25  0200               	dw	512
   560  007D27  02                 	db	2
   561  007D28  00                 	db	0
   562  007D29  00                 	db	0
   563  007D2A  08                 	db	8
   564  007D2B  04D8               	dw	1240
   565  007D2D  000A               	dw	10
   566  007D2F  0100               	dw	256
   567  007D31  01                 	db	1
   568  007D32  02                 	db	2
   569  007D33  00                 	db	0
   570  007D34  01                 	db	1
   571  007D35                     __end_of_device_dsc:
   572                           	opt stack 0
   573  007D35                     _encryptKey:
   574                           	opt stack 0
   575  007D35  4D                 	db	77
   576  007D36  36                 	db	54
   577  007D37  6A                 	db	106
   578  007D38  33                 	db	51
   579  007D39  62                 	db	98
   580  007D3A  34                 	db	52
   581  007D3B  35                 	db	53
   582  007D3C  36                 	db	54
   583  007D3D  49                 	db	73
   584  007D3E  49                 	db	73
   585  007D3F  4F                 	db	79
   586  007D40  54                 	db	84
   587  007D41  4B                 	db	75
   588  007D42  65                 	db	101
   589  007D43  79                 	db	121
   590  007D44  21                 	db	33
   591  007D45  00                 	db	0
   592  007D46                     __end_of_encryptKey:
   593                           	opt stack 0
   594  007D46                     _MAC_SET_SF:
   595                           	opt stack 0
   596  007D46  72                 	db	114
   597  007D47  61                 	db	97
   598  007D48  64                 	db	100
   599  007D49  69                 	db	105
   600  007D4A  6F                 	db	111
   601  007D4B  20                 	db	32
   602  007D4C  73                 	db	115
   603  007D4D  65                 	db	101
   604  007D4E  74                 	db	116
   605  007D4F  20                 	db	32
   606  007D50  73                 	db	115
   607  007D51  66                 	db	102
   608  007D52  20                 	db	32
   609  007D53  53                 	db	83
   610  007D54  46                 	db	70
   611  007D55  00                 	db	0
   612  007D56                     __end_of_MAC_SET_SF:
   613                           	opt stack 0
   614  007D56                     _MAC_SET_CH_STATUS:
   615                           	opt stack 0
   616  007D56  73                 	db	115
   617  007D57  65                 	db	101
   618  007D58  74                 	db	116
   619  007D59  20                 	db	32
   620  007D5A  63                 	db	99
   621  007D5B  68                 	db	104
   622  007D5C  20                 	db	32
   623  007D5D  73                 	db	115
   624  007D5E  74                 	db	116
   625  007D5F  61                 	db	97
   626  007D60  74                 	db	116
   627  007D61  75                 	db	117
   628  007D62  73                 	db	115
   629  007D63  00                 	db	0
   630  007D64                     __end_of_MAC_SET_CH_STATUS:
   631                           	opt stack 0
   632  007D64                     _MAC_SET_BW:
   633                           	opt stack 0
   634  007D64  72                 	db	114
   635  007D65  61                 	db	97
   636  007D66  64                 	db	100
   637  007D67  69                 	db	105
   638  007D68  6F                 	db	111
   639  007D69  20                 	db	32
   640  007D6A  73                 	db	115
   641  007D6B  65                 	db	101
   642  007D6C  74                 	db	116
   643  007D6D  20                 	db	32
   644  007D6E  62                 	db	98
   645  007D6F  77                 	db	119
   646  007D70  00                 	db	0
   647  007D71                     __end_of_MAC_SET_BW:
   648                           	opt stack 0
   649  007D71                     _MAC_SET_APPKEY:
   650                           	opt stack 0
   651  007D71  73                 	db	115
   652  007D72  65                 	db	101
   653  007D73  74                 	db	116
   654  007D74  20                 	db	32
   655  007D75  61                 	db	97
   656  007D76  70                 	db	112
   657  007D77  70                 	db	112
   658  007D78  6B                 	db	107
   659  007D79  65                 	db	101
   660  007D7A  79                 	db	121
   661  007D7B  00                 	db	0
   662  007D7C                     __end_of_MAC_SET_APPKEY:
   663                           	opt stack 0
   664  007D7C                     _MAC_SET_APPEUI:
   665                           	opt stack 0
   666  007D7C  73                 	db	115
   667  007D7D  65                 	db	101
   668  007D7E  74                 	db	116
   669  007D7F  20                 	db	32
   670  007D80  61                 	db	97
   671  007D81  70                 	db	112
   672  007D82  70                 	db	112
   673  007D83  65                 	db	101
   674  007D84  75                 	db	117
   675  007D85  69                 	db	105
   676  007D86  00                 	db	0
   677  007D87                     __end_of_MAC_SET_APPEUI:
   678                           	opt stack 0
   679  007D87                     _MAC_SET_DEVEUI:
   680                           	opt stack 0
   681  007D87  73                 	db	115
   682  007D88  65                 	db	101
   683  007D89  74                 	db	116
   684  007D8A  20                 	db	32
   685  007D8B  64                 	db	100
   686  007D8C  65                 	db	101
   687  007D8D  76                 	db	118
   688  007D8E  65                 	db	101
   689  007D8F  75                 	db	117
   690  007D90  69                 	db	105
   691  007D91  00                 	db	0
   692  007D92                     __end_of_MAC_SET_DEVEUI:
   693                           	opt stack 0
   694  007D92                     _MAC_GET_DNCTR:
   695                           	opt stack 0
   696  007D92  67                 	db	103
   697  007D93  65                 	db	101
   698  007D94  74                 	db	116
   699  007D95  20                 	db	32
   700  007D96  64                 	db	100
   701  007D97  6E                 	db	110
   702  007D98  63                 	db	99
   703  007D99  74                 	db	116
   704  007D9A  72                 	db	114
   705  007D9B  00                 	db	0
   706  007D9C                     __end_of_MAC_GET_DNCTR:
   707                           	opt stack 0
   708  007D9C                     _MAC_JOIN_OTAA:
   709                           	opt stack 0
   710  007D9C  6A                 	db	106
   711  007D9D  6F                 	db	111
   712  007D9E  69                 	db	105
   713  007D9F  6E                 	db	110
   714  007DA0  20                 	db	32
   715  007DA1  6F                 	db	111
   716  007DA2  74                 	db	116
   717  007DA3  61                 	db	97
   718  007DA4  61                 	db	97
   719  007DA5  00                 	db	0
   720  007DA6                     __end_of_MAC_JOIN_OTAA:
   721                           	opt stack 0
   722  007DA6                     _MAC_TX_UNCNF:
   723                           	opt stack 0
   724  007DA6  74                 	db	116
   725  007DA7  78                 	db	120
   726  007DA8  20                 	db	32
   727  007DA9  75                 	db	117
   728  007DAA  6E                 	db	110
   729  007DAB  63                 	db	99
   730  007DAC  6E                 	db	110
   731  007DAD  66                 	db	102
   732  007DAE  00                 	db	0
   733  007DAF                     __end_of_MAC_TX_UNCNF:
   734                           	opt stack 0
   735  007DAF                     _MAC_GET_ADR:
   736                           	opt stack 0
   737  007DAF  67                 	db	103
   738  007DB0  65                 	db	101
   739  007DB1  74                 	db	116
   740  007DB2  20                 	db	32
   741  007DB3  61                 	db	97
   742  007DB4  64                 	db	100
   743  007DB5  72                 	db	114
   744  007DB6  00                 	db	0
   745  007DB7                     __end_of_MAC_GET_ADR:
   746                           	opt stack 0
   747  007DB7                     _MAC_SET_ADR:
   748                           	opt stack 0
   749  007DB7  73                 	db	115
   750  007DB8  65                 	db	101
   751  007DB9  74                 	db	116
   752  007DBA  20                 	db	32
   753  007DBB  61                 	db	97
   754  007DBC  64                 	db	100
   755  007DBD  72                 	db	114
   756  007DBE  00                 	db	0
   757  007DBF                     __end_of_MAC_SET_ADR:
   758                           	opt stack 0
   759  007DBF                     _MAC_SET_DR:
   760                           	opt stack 0
   761  007DBF  73                 	db	115
   762  007DC0  65                 	db	101
   763  007DC1  74                 	db	116
   764  007DC2  20                 	db	32
   765  007DC3  64                 	db	100
   766  007DC4  72                 	db	114
   767  007DC5  00                 	db	0
   768  007DC6                     __end_of_MAC_SET_DR:
   769                           	opt stack 0
   770  007DC6                     _MAC_TX_CNF:
   771                           	opt stack 0
   772  007DC6  74                 	db	116
   773  007DC7  78                 	db	120
   774  007DC8  20                 	db	32
   775  007DC9  63                 	db	99
   776  007DCA  6E                 	db	110
   777  007DCB  66                 	db	102
   778  007DCC  00                 	db	0
   779  007DCD                     __end_of_MAC_TX_CNF:
   780                           	opt stack 0
   781  007DCD                     _SYS_RESET:
   782                           	opt stack 0
   783  007DCD  72                 	db	114
   784  007DCE  65                 	db	101
   785  007DCF  73                 	db	115
   786  007DD0  65                 	db	101
   787  007DD1  74                 	db	116
   788  007DD2  00                 	db	0
   789  007DD3                     __end_of_SYS_RESET:
   790                           	opt stack 0
   791  007DD3                     _SYS:
   792                           	opt stack 0
   793  007DD3  73                 	db	115
   794  007DD4  79                 	db	121
   795  007DD5  73                 	db	115
   796  007DD6  20                 	db	32
   797  007DD7  00                 	db	0
   798  007DD8                     __end_of_SYS:
   799                           	opt stack 0
   800  007DD8                     _MAC_SAVE:
   801                           	opt stack 0
   802  007DD8  73                 	db	115
   803  007DD9  61                 	db	97
   804  007DDA  76                 	db	118
   805  007DDB  65                 	db	101
   806  007DDC  00                 	db	0
   807  007DDD                     __end_of_MAC_SAVE:
   808                           	opt stack 0
   809  007DDD                     _MAC:
   810                           	opt stack 0
   811  007DDD  6D                 	db	109
   812  007DDE  61                 	db	97
   813  007DDF  63                 	db	99
   814  007DE0  20                 	db	32
   815  007DE1  00                 	db	0
   816  007DE2                     __end_of_MAC:
   817                           	opt stack 0
   818  007DE2                     _sd000:
   819                           	opt stack 0
   820  007DE2  04                 	db	4
   821  007DE3  03                 	db	3
   822  007DE4  0409               	dw	1033
   823  007DE6                     __end_of_sd000:
   824                           	opt stack 0
   825  007DE6                     _get_preambleid_900:
   826                           	opt stack 0
   827  007DE6  48                 	db	72
   828  007DE7  50                 	db	80
   829  007DE8                     __end_of_get_preambleid_900:
   830                           	opt stack 0
   831  007DE8                     _set_preambleid_900:
   832                           	opt stack 0
   833  007DE8  48                 	db	72
   834  007DE9  50                 	db	80
   835  007DEA                     __end_of_set_preambleid_900:
   836                           	opt stack 0
   837  007DEA                     _get_channelmask_900:
   838                           	opt stack 0
   839  007DEA  43                 	db	67
   840  007DEB  4D                 	db	77
   841  007DEC                     __end_of_get_channelmask_900:
   842                           	opt stack 0
   843  007DEC                     _set_channelmask_900:
   844                           	opt stack 0
   845  007DEC  43                 	db	67
   846  007DED  4D                 	db	77
   847  007DEE                     __end_of_set_channelmask_900:
   848                           	opt stack 0
   849  007DEE                     _gs_encryption:
   850                           	opt stack 0
   851  007DEE  45                 	db	69
   852  007DEF  45                 	db	69
   853  007DF0                     __end_of_gs_encryption:
   854                           	opt stack 0
   855  007DF0                     _set_link_key:
   856                           	opt stack 0
   857  007DF0  4B                 	db	75
   858  007DF1  59                 	db	89
   859  007DF2                     __end_of_set_link_key:
   860                           	opt stack 0
   861  007DF2                     _write_values:
   862                           	opt stack 0
   863  007DF2  57                 	db	87
   864  007DF3  52                 	db	82
   865  007DF4                     __end_of_write_values:
   866                           	opt stack 0
   867  007DF4                     _gs_channel:
   868                           	opt stack 0
   869  007DF4  43                 	db	67
   870  007DF5  48                 	db	72
   871  007DF6                     __end_of_gs_channel:
   872                           	opt stack 0
   873  007DF6                     _gs_pan:
   874                           	opt stack 0
   875  007DF6  49                 	db	73
   876  007DF7  44                 	db	68
   877  007DF8                     __end_of_gs_pan:
   878                           	opt stack 0
   879  007DF8                     _get_own_mac_high:
   880                           	opt stack 0
   881  007DF8  53                 	db	83
   882  007DF9  48                 	db	72
   883  007DFA                     __end_of_get_own_mac_high:
   884                           	opt stack 0
   885  007DFA                     _get_own_mac_low:
   886                           	opt stack 0
   887  007DFA  53                 	db	83
   888  007DFB  4C                 	db	76
   889  007DFC                     __end_of_get_own_mac_low:
   890                           	opt stack 0
   891  0000                     _EECON2	set	4007
   892  0000                     _EECON1bits	set	4006
   893  0000                     _EEDATA	set	4008
   894  0000                     _EEADR	set	4009
   895  0000                     _ADRESL	set	4035
   896  0000                     _ADRESH	set	4036
   897  0000                     _ADCON0	set	4034
   898  0000                     _ADCON2	set	4032
   899  0000                     _ADCON1	set	4033
   900  0000                     _IPR1bits	set	3999
   901  0000                     _CCP1CON	set	4029
   902  0000                     _CCPR1L	set	4030
   903  0000                     _CCPR1H	set	4031
   904  0000                     _TMR1L	set	4046
   905  0000                     _TMR1H	set	4047
   906  0000                     _T3CON	set	4017
   907  0000                     _T0CON	set	4053
   908  0000                     _T1CON	set	4045
   909  0000                     _RCREG	set	4014
   910  0000                     _RCSTA	set	4011
   911  0000                     _TXREG	set	4013
   912  0000                     _RCSTAbits	set	4011
   913  0000                     _SPBRGH	set	4016
   914  0000                     _SPBRG	set	4015
   915  0000                     _BAUDCONbits	set	4024
   916  0000                     _TXSTAbits	set	4012
   917  0000                     _TRISCbits	set	3988
   918  0000                     _PORTEbits	set	3972
   919  0000                     _TRISDbits	set	3989
   920  0000                     _TRISEbits	set	3990
   921  0000                     _UEP0bits	set	3952
   922  0000                     _INTCONbits	set	4082
   923  0000                     _IPR2bits	set	4002
   924  0000                     _RCONbits	set	4048
   925  0000                     _PORTCbits	set	3970
   926  0000                     _UCON	set	3949
   927  0000                     _USTAT	set	3948
   928  0000                     _PIR2bits	set	4001
   929  0000                     _UIEbits	set	3945
   930  0000                     _UIRbits	set	3944
   931  0000                     _UADDR	set	3950
   932  0000                     _UCONbits	set	3949
   933  0000                     _UIE	set	3945
   934  0000                     _UEIE	set	3947
   935  0000                     _UCFG	set	3951
   936  0000                     _UIR	set	3944
   937  0000                     _UEIR	set	3946
   938  0000                     _PIE2bits	set	4000
   939  0000                     _PORTDbits	set	3971
   940  0000                     _UEP1	set	3953
   941  0000                     _UEP0	set	3952
   942  0000                     _GO_DONE	set	32273
   943  0000                     _ADIE	set	31982
   944  0000                     _ADIF	set	31990
   945  0000                     _ADON	set	32272
   946  0000                     _TMR0IE	set	32661
   947  0000                     _GIEH	set	32663
   948  0000                     _TMR1IE	set	31976
   949  0000                     _TXIF	set	31988
   950  0000                     _USBIE	set	32005
   951  0000                     _RCIF	set	31989
   952  0000                     _RCIE	set	31981
   953  0000                     _CCP1IE	set	31978
   954  0000                     _CCP1IF	set	31986
   955  007DFC                     STR_3:
   956  007DFC  72                 	db	114	;'r'
   957  007DFD  65                 	db	101	;'e'
   958  007DFE  73                 	db	115	;'s'
   959  007DFF  70                 	db	112	;'p'
   960  007E00  6F                 	db	111	;'o'
   961  007E01  73                 	db	115	;'s'
   962  007E02  74                 	db	116	;'t'
   963  007E03  61                 	db	97	;'a'
   964  007E04  3A                 	db	58	;':'
   965  007E05  20                 	db	32
   966  007E06  25                 	db	37
   967  007E07  32                 	db	50	;'2'
   968  007E08  58                 	db	88	;'X'
   969  007E09  20                 	db	32
   970  007E0A  25                 	db	37
   971  007E0B  32                 	db	50	;'2'
   972  007E0C  58                 	db	88	;'X'
   973  007E0D  20                 	db	32
   974  007E0E  25                 	db	37
   975  007E0F  32                 	db	50	;'2'
   976  007E10  58                 	db	88	;'X'
   977  007E11  20                 	db	32
   978  007E12  25                 	db	37
   979  007E13  32                 	db	50	;'2'
   980  007E14  58                 	db	88	;'X'
   981  007E15  20                 	db	32
   982  007E16  25                 	db	37
   983  007E17  32                 	db	50	;'2'
   984  007E18  58                 	db	88	;'X'
   985  007E19  20                 	db	32
   986  007E1A  25                 	db	37
   987  007E1B  32                 	db	50	;'2'
   988  007E1C  58                 	db	88	;'X'
   989  007E1D  20                 	db	32
   990  007E1E  25                 	db	37
   991  007E1F  32                 	db	50	;'2'
   992  007E20  58                 	db	88	;'X'
   993  007E21  20                 	db	32
   994  007E22  25                 	db	37
   995  007E23  32                 	db	50	;'2'
   996  007E24  58                 	db	88	;'X'
   997  007E25  20                 	db	32
   998  007E26  25                 	db	37
   999  007E27  32                 	db	50	;'2'
  1000  007E28  58                 	db	88	;'X'
  1001  007E29  20                 	db	32
  1002  007E2A  25                 	db	37
  1003  007E2B  32                 	db	50	;'2'
  1004  007E2C  58                 	db	88	;'X'
  1005  007E2D  20                 	db	32
  1006  007E2E  20                 	db	32
  1007  007E2F  25                 	db	37
  1008  007E30  64                 	db	100	;'d'
  1009  007E31  20                 	db	32
  1010  007E32  20                 	db	32
  1011  007E33  25                 	db	37
  1012  007E34  64                 	db	100	;'d'
  1013  007E35  20                 	db	32
  1014  007E36  20                 	db	32
  1015  007E37  25                 	db	37
  1016  007E38  64                 	db	100	;'d'
  1017  007E39  20                 	db	32
  1018  007E3A  20                 	db	32
  1019  007E3B  25                 	db	37
  1020  007E3C  64                 	db	100	;'d'
  1021  007E3D  20                 	db	32
  1022  007E3E  20                 	db	32
  1023  007E3F  25                 	db	37
  1024  007E40  64                 	db	100	;'d'
  1025  007E41  20                 	db	32
  1026  007E42  20                 	db	32
  1027  007E43  25                 	db	37
  1028  007E44  64                 	db	100	;'d'
  1029  007E45  20                 	db	32
  1030  007E46  20                 	db	32
  1031  007E47  25                 	db	37
  1032  007E48  64                 	db	100	;'d'
  1033  007E49  20                 	db	32
  1034  007E4A  20                 	db	32
  1035  007E4B  25                 	db	37
  1036  007E4C  64                 	db	100	;'d'
  1037  007E4D  20                 	db	32
  1038  007E4E  20                 	db	32
  1039  007E4F  25                 	db	37
  1040  007E50  64                 	db	100	;'d'
  1041  007E51  20                 	db	32
  1042  007E52  20                 	db	32
  1043  007E53  25                 	db	37
  1044  007E54  64                 	db	100	;'d'
  1045  007E55  0A                 	db	10
  1046  007E56  0D                 	db	13
  1047  007E57  00                 	db	0
  1048  007E58  25                 	db	37
  1049  007E59  73                 	db	115	;'s'
  1050  007E5A  20                 	db	32
  1051  007E5B  25                 	db	37
  1052  007E5C  2E                 	db	46
  1053  007E5D  32                 	db	50	;'2'
  1054  007E5E  78                 	db	120	;'x'
  1055  007E5F  25                 	db	37
  1056  007E60  2E                 	db	46
  1057  007E61  32                 	db	50	;'2'
  1058  007E62  78                 	db	120	;'x'
  1059  007E63  25                 	db	37
  1060  007E64  2E                 	db	46
  1061  007E65  32                 	db	50	;'2'
  1062  007E66  78                 	db	120	;'x'
  1063  007E67  25                 	db	37
  1064  007E68  2E                 	db	46
  1065  007E69  32                 	db	50	;'2'
  1066  007E6A  78                 	db	120	;'x'
  1067  007E6B  25                 	db	37
  1068  007E6C  2E                 	db	46
  1069  007E6D  32                 	db	50	;'2'
  1070  007E6E  78                 	db	120	;'x'
  1071  007E6F  25                 	db	37
  1072  007E70  2E                 	db	46
  1073  007E71  32                 	db	50	;'2'
  1074  007E72  78                 	db	120	;'x'
  1075  007E73  25                 	db	37
  1076  007E74  2E                 	db	46
  1077  007E75  32                 	db	50	;'2'
  1078  007E76  78                 	db	120	;'x'
  1079  007E77  25                 	db	37
  1080  007E78  2E                 	db	46
  1081  007E79  32                 	db	50	;'2'
  1082  007E7A  78                 	db	120	;'x'
  1083  007E7B  25                 	db	37
  1084  007E7C  2E                 	db	46
  1085  007E7D  32                 	db	50	;'2'
  1086  007E7E  78                 	db	120	;'x'
  1087  007E7F  25                 	db	37
  1088  007E80  2E                 	db	46
  1089  007E81  32                 	db	50	;'2'
  1090  007E82  78                 	db	120	;'x'
  1091  007E83  25                 	db	37
  1092  007E84  2E                 	db	46
  1093  007E85  32                 	db	50	;'2'
  1094  007E86  78                 	db	120	;'x'
  1095  007E87  25                 	db	37
  1096  007E88  2E                 	db	46
  1097  007E89  32                 	db	50	;'2'
  1098  007E8A  78                 	db	120	;'x'
  1099  007E8B  25                 	db	37
  1100  007E8C  2E                 	db	46
  1101  007E8D  32                 	db	50	;'2'
  1102  007E8E  78                 	db	120	;'x'
  1103  007E8F  25                 	db	37
  1104  007E90  2E                 	db	46
  1105  007E91  32                 	db	50	;'2'
  1106  007E92  78                 	db	120	;'x'
  1107  007E93  25                 	db	37
  1108  007E94  2E                 	db	46
  1109  007E95  32                 	db	50	;'2'
  1110  007E96  78                 	db	120	;'x'
  1111  007E97  25                 	db	37
  1112  007E98  2E                 	db	46
  1113  007E99  32                 	db	50	;'2'
  1114  007E9A  78                 	db	120	;'x'
  1115  007E9B  00                 	db	0
  1116  007E9C                     STR_25:
  1117  007E9C  25                 	db	37
  1118  007E9D  73                 	db	115	;'s'
  1119  007E9E  20                 	db	32
  1120  007E9F  25                 	db	37
  1121  007EA0  2E                 	db	46
  1122  007EA1  32                 	db	50	;'2'
  1123  007EA2  78                 	db	120	;'x'
  1124  007EA3  25                 	db	37
  1125  007EA4  2E                 	db	46
  1126  007EA5  32                 	db	50	;'2'
  1127  007EA6  78                 	db	120	;'x'
  1128  007EA7  25                 	db	37
  1129  007EA8  2E                 	db	46
  1130  007EA9  32                 	db	50	;'2'
  1131  007EAA  78                 	db	120	;'x'
  1132  007EAB  25                 	db	37
  1133  007EAC  2E                 	db	46
  1134  007EAD  32                 	db	50	;'2'
  1135  007EAE  78                 	db	120	;'x'
  1136  007EAF  25                 	db	37
  1137  007EB0  2E                 	db	46
  1138  007EB1  32                 	db	50	;'2'
  1139  007EB2  78                 	db	120	;'x'
  1140  007EB3  25                 	db	37
  1141  007EB4  2E                 	db	46
  1142  007EB5  32                 	db	50	;'2'
  1143  007EB6  78                 	db	120	;'x'
  1144  007EB7  25                 	db	37
  1145  007EB8  2E                 	db	46
  1146  007EB9  32                 	db	50	;'2'
  1147  007EBA  78                 	db	120	;'x'
  1148  007EBB  25                 	db	37
  1149  007EBC  2E                 	db	46
  1150  007EBD  32                 	db	50	;'2'
  1151  007EBE  78                 	db	120	;'x'
  1152  007EBF  00                 	db	0
  1153  007EC0                     STR_14:
  1154  007EC0  66                 	db	102	;'f'
  1155  007EC1  72                 	db	114	;'r'
  1156  007EC2  61                 	db	97	;'a'
  1157  007EC3  6D                 	db	109	;'m'
  1158  007EC4  65                 	db	101	;'e'
  1159  007EC5  5F                 	db	95	;'_'
  1160  007EC6  63                 	db	99	;'c'
  1161  007EC7  6F                 	db	111	;'o'
  1162  007EC8  75                 	db	117	;'u'
  1163  007EC9  6E                 	db	110	;'n'
  1164  007ECA  74                 	db	116	;'t'
  1165  007ECB  65                 	db	101	;'e'
  1166  007ECC  72                 	db	114	;'r'
  1167  007ECD  5F                 	db	95	;'_'
  1168  007ECE  65                 	db	101	;'e'
  1169  007ECF  72                 	db	114	;'r'
  1170  007ED0  72                 	db	114	;'r'
  1171  007ED1  5F                 	db	95	;'_'
  1172  007ED2  72                 	db	114	;'r'
  1173  007ED3  65                 	db	101	;'e'
  1174  007ED4  6A                 	db	106	;'j'
  1175  007ED5  6F                 	db	111	;'o'
  1176  007ED6  69                 	db	105	;'i'
  1177  007ED7  6E                 	db	110	;'n'
  1178  007ED8  5F                 	db	95	;'_'
  1179  007ED9  6E                 	db	110	;'n'
  1180  007EDA  65                 	db	101	;'e'
  1181  007EDB  65                 	db	101	;'e'
  1182  007EDC  64                 	db	100	;'d'
  1183  007EDD  65                 	db	101	;'e'
  1184  007EDE  64                 	db	100	;'d'
  1185  007EDF  00                 	db	0
  1186  007EE0                     STR_40:
  1187  007EE0  30                 	db	48	;'0'
  1188  007EE1  31                 	db	49	;'1'
  1189  007EE2  32                 	db	50	;'2'
  1190  007EE3  33                 	db	51	;'3'
  1191  007EE4  34                 	db	52	;'4'
  1192  007EE5  35                 	db	53	;'5'
  1193  007EE6  36                 	db	54	;'6'
  1194  007EE7  37                 	db	55	;'7'
  1195  007EE8  38                 	db	56	;'8'
  1196  007EE9  39                 	db	57	;'9'
  1197  007EEA  41                 	db	65	;'A'
  1198  007EEB  42                 	db	66	;'B'
  1199  007EEC  43                 	db	67	;'C'
  1200  007EED  44                 	db	68	;'D'
  1201  007EEE  45                 	db	69	;'E'
  1202  007EEF  46                 	db	70	;'F'
  1203  007EF0  00                 	db	0
  1204  007EF1                     STR_41:
  1205  007EF1  30                 	db	48	;'0'
  1206  007EF2  31                 	db	49	;'1'
  1207  007EF3  32                 	db	50	;'2'
  1208  007EF4  33                 	db	51	;'3'
  1209  007EF5  34                 	db	52	;'4'
  1210  007EF6  35                 	db	53	;'5'
  1211  007EF7  36                 	db	54	;'6'
  1212  007EF8  37                 	db	55	;'7'
  1213  007EF9  38                 	db	56	;'8'
  1214  007EFA  39                 	db	57	;'9'
  1215  007EFB  61                 	db	97	;'a'
  1216  007EFC  62                 	db	98	;'b'
  1217  007EFD  63                 	db	99	;'c'
  1218  007EFE  64                 	db	100	;'d'
  1219  007EFF  65                 	db	101	;'e'
  1220  007F00  66                 	db	102	;'f'
  1221  007F01  00                 	db	0
  1222  007F02                     STR_17:
  1223  007F02  69                 	db	105	;'i'
  1224  007F03  6E                 	db	110	;'n'
  1225  007F04  76                 	db	118	;'v'
  1226  007F05  61                 	db	97	;'a'
  1227  007F06  6C                 	db	108	;'l'
  1228  007F07  69                 	db	105	;'i'
  1229  007F08  64                 	db	100	;'d'
  1230  007F09  5F                 	db	95	;'_'
  1231  007F0A  64                 	db	100	;'d'
  1232  007F0B  61                 	db	97	;'a'
  1233  007F0C  74                 	db	116	;'t'
  1234  007F0D  61                 	db	97	;'a'
  1235  007F0E  5F                 	db	95	;'_'
  1236  007F0F  6C                 	db	108	;'l'
  1237  007F10  65                 	db	101	;'e'
  1238  007F11  6E                 	db	110	;'n'
  1239  007F12  00                 	db	0
  1240  007F13                     STR_4:
  1241  007F13  3C                 	db	60	;'<'
  1242  007F14  3D                 	db	61	;'='
  1243  007F15  3E                 	db	62	;'>'
  1244  007F16  80                 	db	-128
  1245  007F17  4E                 	db	78	;'N'
  1246  007F18  23                 	db	35
  1247  007F19  25                 	db	37
  1248  007F1A  6C                 	db	108	;'l'
  1249  007F1B  64                 	db	100	;'d'
  1250  007F1C  23                 	db	35
  1251  007F1D  25                 	db	37
  1252  007F1E  73                 	db	115	;'s'
  1253  007F1F  23                 	db	35
  1254  007F20  25                 	db	37
  1255  007F21  64                 	db	100	;'d'
  1256  007F22  23                 	db	35
  1257  007F23  00                 	db	0
  1258  007F24                     STR_23:
  1259  007F24  61                 	db	97	;'a'
  1260  007F25  63                 	db	99	;'c'
  1261  007F26  63                 	db	99	;'c'
  1262  007F27  65                 	db	101	;'e'
  1263  007F28  70                 	db	112	;'p'
  1264  007F29  74                 	db	116	;'t'
  1265  007F2A  65                 	db	101	;'e'
  1266  007F2B  64                 	db	100	;'d'
  1267  007F2C  52                 	db	82	;'R'
  1268  007F2D  4E                 	db	78	;'N'
  1269  007F2E  32                 	db	50	;'2'
  1270  007F2F  39                 	db	57	;'9'
  1271  007F30  30                 	db	48	;'0'
  1272  007F31  33                 	db	51	;'3'
  1273  007F32  20                 	db	32
  1274  007F33  00                 	db	0
  1275  007F34                     STR_10:
  1276  007F34  69                 	db	105	;'i'
  1277  007F35  6E                 	db	110	;'n'
  1278  007F36  76                 	db	118	;'v'
  1279  007F37  61                 	db	97	;'a'
  1280  007F38  6C                 	db	108	;'l'
  1281  007F39  69                 	db	105	;'i'
  1282  007F3A  64                 	db	100	;'d'
  1283  007F3B  5F                 	db	95	;'_'
  1284  007F3C  70                 	db	112	;'p'
  1285  007F3D  61                 	db	97	;'a'
  1286  007F3E  72                 	db	114	;'r'
  1287  007F3F  61                 	db	97	;'a'
  1288  007F40  6D                 	db	109	;'m'
  1289  007F41  00                 	db	0
  1290  007F42                     STR_21:
  1291  007F42  6B                 	db	107	;'k'
  1292  007F43  65                 	db	101	;'e'
  1293  007F44  79                 	db	121	;'y'
  1294  007F45  73                 	db	115	;'s'
  1295  007F46  5F                 	db	95	;'_'
  1296  007F47  6E                 	db	110	;'n'
  1297  007F48  6F                 	db	111	;'o'
  1298  007F49  74                 	db	116	;'t'
  1299  007F4A  5F                 	db	95	;'_'
  1300  007F4B  69                 	db	105	;'i'
  1301  007F4C  6E                 	db	110	;'n'
  1302  007F4D  69                 	db	105	;'i'
  1303  007F4E  74                 	db	116	;'t'
  1304  007F4F  00                 	db	0
  1305  007F50                     STR_11:
  1306  007F50  6E                 	db	110	;'n'
  1307  007F51  6F                 	db	111	;'o'
  1308  007F52  74                 	db	116	;'t'
  1309  007F53  5F                 	db	95	;'_'
  1310  007F54  6A                 	db	106	;'j'
  1311  007F55  6F                 	db	111	;'o'
  1312  007F56  69                 	db	105	;'i'
  1313  007F57  6E                 	db	110	;'n'
  1314  007F58  65                 	db	101	;'e'
  1315  007F59  64                 	db	100	;'d'
  1316  007F5A  00                 	db	0
  1317  007F5B                     STR_16:
  1318  007F5B  6D                 	db	109	;'m'
  1319  007F5C  61                 	db	97	;'a'
  1320  007F5D  63                 	db	99	;'c'
  1321  007F5E  5F                 	db	95	;'_'
  1322  007F5F  70                 	db	112	;'p'
  1323  007F60  61                 	db	97	;'a'
  1324  007F61  75                 	db	117	;'u'
  1325  007F62  73                 	db	115	;'s'
  1326  007F63  65                 	db	101	;'e'
  1327  007F64  64                 	db	100	;'d'
  1328  007F65  00                 	db	0
  1329  007F66                     STR_12:
  1330  007F66  6E                 	db	110	;'n'
  1331  007F67  6F                 	db	111	;'o'
  1332  007F68  5F                 	db	95	;'_'
  1333  007F69  66                 	db	102	;'f'
  1334  007F6A  72                 	db	114	;'r'
  1335  007F6B  65                 	db	101	;'e'
  1336  007F6C  65                 	db	101	;'e'
  1337  007F6D  5F                 	db	95	;'_'
  1338  007F6E  63                 	db	99	;'c'
  1339  007F6F  68                 	db	104	;'h'
  1340  007F70  00                 	db	0
  1341  007F71  25                 	db	37
  1342  007F72  73                 	db	115	;'s'
  1343  007F73  20                 	db	32
  1344  007F74  25                 	db	37
  1345  007F75  64                 	db	100	;'d'
  1346  007F76  20                 	db	32
  1347  007F77  6F                 	db	111	;'o'
  1348  007F78  66                 	db	102	;'f'
  1349  007F79  66                 	db	102	;'f'
  1350  007F7A  00                 	db	0
  1351  007F7B                     STR_18:
  1352  007F7B  6D                 	db	109	;'m'
  1353  007F7C  61                 	db	97	;'a'
  1354  007F7D  63                 	db	99	;'c'
  1355  007F7E  5F                 	db	95	;'_'
  1356  007F7F  74                 	db	116	;'t'
  1357  007F80  78                 	db	120	;'x'
  1358  007F81  5F                 	db	95	;'_'
  1359  007F82  6F                 	db	111	;'o'
  1360  007F83  6B                 	db	107	;'k'
  1361  007F84  00                 	db	0
  1362  007F85  25                 	db	37
  1363  007F86  73                 	db	115	;'s'
  1364  007F87  20                 	db	32
  1365  007F88  25                 	db	37
  1366  007F89  64                 	db	100	;'d'
  1367  007F8A  20                 	db	32
  1368  007F8B  6F                 	db	111	;'o'
  1369  007F8C  6E                 	db	110	;'n'
  1370  007F8D  00                 	db	0
  1371  007F8E                     STR_5:
  1372  007F8E  25                 	db	37
  1373  007F8F  73                 	db	115	;'s'
  1374  007F90  3A                 	db	58	;':'
  1375  007F91  25                 	db	37
  1376  007F92  73                 	db	115	;'s'
  1377  007F93  3B                 	db	59	;';'
  1378  007F94  25                 	db	37
  1379  007F95  73                 	db	115	;'s'
  1380  007F96  00                 	db	0
  1381  007F97                     STR_19:
  1382  007F97  6D                 	db	109	;'m'
  1383  007F98  61                 	db	97	;'a'
  1384  007F99  63                 	db	99	;'c'
  1385  007F9A  5F                 	db	95	;'_'
  1386  007F9B  72                 	db	114	;'r'
  1387  007F9C  78                 	db	120	;'x'
  1388  007F9D  20                 	db	32
  1389  007F9E  00                 	db	0
  1390  007F9F                     STR_20:
  1391  007F9F  6D                 	db	109	;'m'
  1392  007FA0  61                 	db	97	;'a'
  1393  007FA1  63                 	db	99	;'c'
  1394  007FA2  5F                 	db	95	;'_'
  1395  007FA3  65                 	db	101	;'e'
  1396  007FA4  72                 	db	114	;'r'
  1397  007FA5  72                 	db	114	;'r'
  1398  007FA6  00                 	db	0
  1399  007FA7  25                 	db	37
  1400  007FA8  73                 	db	115	;'s'
  1401  007FA9  3A                 	db	58	;':'
  1402  007FAA  25                 	db	37
  1403  007FAB  6C                 	db	108	;'l'
  1404  007FAC  75                 	db	117	;'u'
  1405  007FAD  23                 	db	35
  1406  007FAE  00                 	db	0
  1407  007FAF                     STR_39:
  1408  007FAF  28                 	db	40
  1409  007FB0  6E                 	db	110	;'n'
  1410  007FB1  75                 	db	117	;'u'
  1411  007FB2  6C                 	db	108	;'l'
  1412  007FB3  6C                 	db	108	;'l'
  1413  007FB4  29                 	db	41
  1414  007FB5  00                 	db	0
  1415  007FB6                     STR_36:
  1416  007FB6  25                 	db	37
  1417  007FB7  73                 	db	115	;'s'
  1418  007FB8  20                 	db	32
  1419  007FB9  25                 	db	37
  1420  007FBA  64                 	db	100	;'d'
  1421  007FBB  20                 	db	32
  1422  007FBC  00                 	db	0
  1423  007FBD                     STR_22:
  1424  007FBD  64                 	db	100	;'d'
  1425  007FBE  65                 	db	101	;'e'
  1426  007FBF  6E                 	db	110	;'n'
  1427  007FC0  69                 	db	105	;'i'
  1428  007FC1  65                 	db	101	;'e'
  1429  007FC2  64                 	db	100	;'d'
  1430  007FC3  00                 	db	0
  1431  007FC4                     STR_13:
  1432  007FC4  73                 	db	115	;'s'
  1433  007FC5  69                 	db	105	;'i'
  1434  007FC6  6C                 	db	108	;'l'
  1435  007FC7  65                 	db	101	;'e'
  1436  007FC8  6E                 	db	110	;'n'
  1437  007FC9  74                 	db	116	;'t'
  1438  007FCA  00                 	db	0
  1439  007FCB  25                 	db	37
  1440  007FCC  73                 	db	115	;'s'
  1441  007FCD  3A                 	db	58	;':'
  1442  007FCE  25                 	db	37
  1443  007FCF  66                 	db	102	;'f'
  1444  007FD0  23                 	db	35
  1445  007FD1  00                 	db	0
  1446  007FD2  25                 	db	37
  1447  007FD3  73                 	db	115	;'s'
  1448  007FD4  3A                 	db	58	;':'
  1449  007FD5  25                 	db	37
  1450  007FD6  73                 	db	115	;'s'
  1451  007FD7  23                 	db	35
  1452  007FD8  00                 	db	0
  1453  007FD9                     STR_34:
  1454  007FD9  25                 	db	37
  1455  007FDA  73                 	db	115	;'s'
  1456  007FDB  20                 	db	32
  1457  007FDC  25                 	db	37
  1458  007FDD  64                 	db	100	;'d'
  1459  007FDE  00                 	db	0
  1460  007FDF                     STR_30:
  1461  007FDF  25                 	db	37
  1462  007FE0  73                 	db	115	;'s'
  1463  007FE1  20                 	db	32
  1464  007FE2  25                 	db	37
  1465  007FE3  73                 	db	115	;'s'
  1466  007FE4  00                 	db	0
  1467  007FE5                     STR_2:
  1468  007FE5  4E                 	db	78	;'N'
  1469  007FE6  49                 	db	73	;'I'
  1470  007FE7  56                 	db	86	;'V'
  1471  007FE8  45                 	db	69	;'E'
  1472  007FE9  4C                 	db	76	;'L'
  1473  007FEA  00                 	db	0
  1474  007FEB  25                 	db	37
  1475  007FEC  30                 	db	48	;'0'
  1476  007FED  32                 	db	50	;'2'
  1477  007FEE  58                 	db	88	;'X'
  1478  007FEF  00                 	db	0
  1479  007FF0  25                 	db	37
  1480  007FF1  73                 	db	115	;'s'
  1481  007FF2  25                 	db	37
  1482  007FF3  64                 	db	100	;'d'
  1483  007FF4  00                 	db	0
  1484  007FF5                     STR_15:
  1485  007FF5  62                 	db	98	;'b'
  1486  007FF6  75                 	db	117	;'u'
  1487  007FF7  73                 	db	115	;'s'
  1488  007FF8  79                 	db	121	;'y'
  1489  007FF9  00                 	db	0
  1490  007FFA                     STR_1:
  1491  007FFA  70                 	db	112	;'p'
  1492  007FFB  6F                 	db	111	;'o'
  1493  007FFC  63                 	db	99	;'c'
  1494  007FFD  6F                 	db	111	;'o'
  1495  007FFE  00                 	db	0
  1496  0000                     
  1497                           ; #config settings
  1498  007FFF  00                 	db	0	; dummy byte at the end
  1499  0000                     
  1500                           	psect	cinit
  1501  0034B4                     __pcinit:
  1502                           	opt stack 0
  1503  0034B4                     start_initialization:
  1504                           	opt stack 0
  1505  0034B4                     __initialization:
  1506                           	opt stack 0
  1507                           
  1508                           ; Initialize objects allocated to BANK3 (47 bytes)
  1509                           ; load TBLPTR registers with __pidataBANK3
  1510  0034B4  0EFA               	movlw	low __pidataBANK3
  1511  0034B6  6EF6               	movwf	tblptrl,c
  1512  0034B8  0E4F               	movlw	high __pidataBANK3
  1513  0034BA  6EF7               	movwf	tblptrh,c
  1514  0034BC  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1515  0034BE  6EF8               	movwf	tblptru,c
  1516  0034C0  EE03  F06E         	lfsr	0,__pdataBANK3
  1517  0034C4  EE10 F02F          	lfsr	1,47
  1518  0034C8                     copy_data0:
  1519  0034C8  0009               	tblrd		*+
  1520  0034CA  CFF5 FFEE          	movff	tablat,postinc0
  1521  0034CE  50E5               	movf	postdec1,w,c
  1522  0034D0  50E1               	movf	fsr1l,w,c
  1523  0034D2  E1FA               	bnz	copy_data0
  1524                           
  1525                           ; Initialize objects allocated to BANK2 (11 bytes)
  1526                           ; load TBLPTR registers with __pidataBANK2
  1527  0034D4  0EFA               	movlw	low __pidataBANK2
  1528  0034D6  6EF6               	movwf	tblptrl,c
  1529  0034D8  0E51               	movlw	high __pidataBANK2
  1530  0034DA  6EF7               	movwf	tblptrh,c
  1531  0034DC  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1532  0034DE  6EF8               	movwf	tblptru,c
  1533  0034E0  EE02  F0EE         	lfsr	0,__pdataBANK2
  1534  0034E4  EE10 F00B          	lfsr	1,11
  1535  0034E8                     copy_data1:
  1536  0034E8  0009               	tblrd		*+
  1537  0034EA  CFF5 FFEE          	movff	tablat,postinc0
  1538  0034EE  50E5               	movf	postdec1,w,c
  1539  0034F0  50E1               	movf	fsr1l,w,c
  1540  0034F2  E1FA               	bnz	copy_data1
  1541                           
  1542                           ; Initialize objects allocated to BANK1 (5 bytes)
  1543                           ; load TBLPTR registers with __pidataBANK1
  1544  0034F4  0E05               	movlw	low __pidataBANK1
  1545  0034F6  6EF6               	movwf	tblptrl,c
  1546  0034F8  0E52               	movlw	high __pidataBANK1
  1547  0034FA  6EF7               	movwf	tblptrh,c
  1548  0034FC  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1549  0034FE  6EF8               	movwf	tblptru,c
  1550  003500  EE01  F0FA         	lfsr	0,__pdataBANK1
  1551  003504  EE10 F005          	lfsr	1,5
  1552  003508                     copy_data2:
  1553  003508  0009               	tblrd		*+
  1554  00350A  CFF5 FFEE          	movff	tablat,postinc0
  1555  00350E  50E5               	movf	postdec1,w,c
  1556  003510  50E1               	movf	fsr1l,w,c
  1557  003512  E1FA               	bnz	copy_data2
  1558                           
  1559                           ; Clear objects allocated to BIGRAMl (300 bytes)
  1560  003514  EE06  F0C8         	lfsr	0,__pbssBIGRAMl
  1561  003518  EE11 F02C          	lfsr	1,300
  1562  00351C                     clear_0:
  1563  00351C  6AEE               	clrf	postinc0,c
  1564  00351E  50E5               	movf	postdec1,w,c
  1565  003520  50E1               	movf	fsr1l,w,c
  1566  003522  E1FC               	bnz	clear_0
  1567  003524  50E2               	movf	fsr1h,w,c
  1568  003526  E1FA               	bnz	clear_0
  1569                           
  1570                           ; Clear objects allocated to BANK6 (200 bytes)
  1571  003528  EE06  F000         	lfsr	0,__pbssBANK6
  1572  00352C  0EC8               	movlw	200
  1573  00352E                     clear_1:
  1574  00352E  6AEE               	clrf	postinc0,c
  1575  003530  06E8               	decf	wreg,f,c
  1576  003532  E1FD               	bnz	clear_1
  1577                           
  1578                           ; Clear objects allocated to BANK3 (110 bytes)
  1579  003534  EE03  F000         	lfsr	0,__pbssBANK3
  1580  003538  0E6E               	movlw	110
  1581  00353A                     clear_2:
  1582  00353A  6AEE               	clrf	postinc0,c
  1583  00353C  06E8               	decf	wreg,f,c
  1584  00353E  E1FD               	bnz	clear_2
  1585                           
  1586                           ; Clear objects allocated to BANK2 (47 bytes)
  1587  003540  EE02  F0BF         	lfsr	0,__pbssBANK2
  1588  003544  0E2F               	movlw	47
  1589  003546                     clear_3:
  1590  003546  6AEE               	clrf	postinc0,c
  1591  003548  06E8               	decf	wreg,f,c
  1592  00354A  E1FD               	bnz	clear_3
  1593                           
  1594                           ; Clear objects allocated to BANK1 (118 bytes)
  1595  00354C  EE01  F084         	lfsr	0,__pbssBANK1
  1596  003550  0E76               	movlw	118
  1597  003552                     clear_4:
  1598  003552  6AEE               	clrf	postinc0,c
  1599  003554  06E8               	decf	wreg,f,c
  1600  003556  E1FD               	bnz	clear_4
  1601                           
  1602                           ; Clear objects allocated to BANK4 (100 bytes)
  1603  003558  EE04  F040         	lfsr	0,__pbssBANK4
  1604  00355C  0E64               	movlw	100
  1605  00355E                     clear_5:
  1606  00355E  6AEE               	clrf	postinc0,c
  1607  003560  06E8               	decf	wreg,f,c
  1608  003562  E1FD               	bnz	clear_5
  1609                           
  1610                           ; Clear objects allocated to BANK0 (7 bytes)
  1611  003564  EE00  F0F9         	lfsr	0,__pbssBANK0
  1612  003568  0E07               	movlw	7
  1613  00356A                     clear_6:
  1614  00356A  6AEE               	clrf	postinc0,c
  1615  00356C  06E8               	decf	wreg,f,c
  1616  00356E  E1FD               	bnz	clear_6
  1617                           
  1618                           ; Clear objects allocated to BANK5 (100 bytes)
  1619  003570  EE05  F080         	lfsr	0,__pbssBANK5
  1620  003574  0E64               	movlw	100
  1621  003576                     clear_7:
  1622  003576  6AEE               	clrf	postinc0,c
  1623  003578  06E8               	decf	wreg,f,c
  1624  00357A  E1FD               	bnz	clear_7
  1625                           
  1626                           ; Clear objects allocated to COMRAM (39 bytes)
  1627  00357C  EE00  F038         	lfsr	0,__pbssCOMRAM
  1628  003580  0E27               	movlw	39
  1629  003582                     clear_8:
  1630  003582  6AEE               	clrf	postinc0,c
  1631  003584  06E8               	decf	wreg,f,c
  1632  003586  E1FD               	bnz	clear_8
  1633  003588                     end_of_initialization:
  1634                           	opt stack 0
  1635  003588                     __end_of__initialization:
  1636                           	opt stack 0
  1637  003588  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1638  00358A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1639  00358C  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1640  00358E  6EF8               	movwf	tblptru,c
  1641  003590  0100               	movlb	0
  1642  003592  EF39  F009         	goto	_main	;jump to C main() function
  1643                           tblptru	equ	0xFF8
  1644                           tblptrh	equ	0xFF7
  1645                           tblptrl	equ	0xFF6
  1646                           tablat	equ	0xFF5
  1647                           postinc0	equ	0xFEE
  1648                           wreg	equ	0xFE8
  1649                           postdec1	equ	0xFE5
  1650                           fsr1h	equ	0xFE2
  1651                           fsr1l	equ	0xFE1
  1652                           
  1653                           	psect	bssCOMRAM
  1654  000038                     __pbssCOMRAM:
  1655                           	opt stack 0
  1656  000038                     _outPipes:
  1657                           	opt stack 0
  1658  000038                     	ds	8
  1659  000040                     _pBDTEntryIn:
  1660                           	opt stack 0
  1661  000040                     	ds	6
  1662  000046                     recebeByte@sizeData:
  1663                           	opt stack 0
  1664  000046                     	ds	2
  1665  000048                     recebeByte@tamanhoMensagem:
  1666                           	opt stack 0
  1667  000048                     	ds	2
  1668  00004A                     _CDCDataOutHandle:
  1669                           	opt stack 0
  1670  00004A                     	ds	2
  1671  00004C                     _pBDTEntryEP0OutNext:
  1672                           	opt stack 0
  1673  00004C                     	ds	2
  1674  00004E                     _pBDTEntryEP0OutCurrent:
  1675                           	opt stack 0
  1676  00004E                     	ds	2
  1677  000050                     recebeByte@escapeCaracter:
  1678                           	opt stack 0
  1679  000050                     	ds	1
  1680  000051                     _cdc_tx_len:
  1681                           	opt stack 0
  1682  000051                     	ds	1
  1683  000052                     _cdc_rx_len:
  1684                           	opt stack 0
  1685  000052                     	ds	1
  1686  000053                     _USBDeferStatusStagePacket:
  1687                           	opt stack 0
  1688  000053                     	ds	1
  1689  000054                     _USBStatusStageTimeoutCounter:
  1690                           	opt stack 0
  1691  000054                     	ds	1
  1692  000055                     _endpoint_number:
  1693                           	opt stack 0
  1694  000055                     	ds	1
  1695  000056                     _controlTransferState:
  1696                           	opt stack 0
  1697  000056                     	ds	1
  1698  000057                     _shortPacketStatus:
  1699                           	opt stack 0
  1700  000057                     	ds	1
  1701  000058                     _USBDeviceState:
  1702                           	opt stack 0
  1703  000058                     	ds	1
  1704  000059                     _novaMsgLoRaWan:
  1705                           	opt stack 0
  1706  000059                     	ds	1
  1707  00005A                     _tamFrame:
  1708                           	opt stack 0
  1709  00005A                     	ds	1
  1710  00005B                     _tamDadosRecebidos:
  1711                           	opt stack 0
  1712  00005B                     	ds	1
  1713  00005C                     _command:
  1714                           	opt stack 0
  1715  00005C                     	ds	1
  1716  00005D                     _USTATcopy:
  1717                           	opt stack 0
  1718  00005D                     	ds	1
  1719  00005E                     _USBActiveConfiguration:
  1720                           	opt stack 0
  1721  00005E                     	ds	1
  1722                           tblptru	equ	0xFF8
  1723                           tblptrh	equ	0xFF7
  1724                           tblptrl	equ	0xFF6
  1725                           tablat	equ	0xFF5
  1726                           postinc0	equ	0xFEE
  1727                           wreg	equ	0xFE8
  1728                           postdec1	equ	0xFE5
  1729                           fsr1h	equ	0xFE2
  1730                           fsr1l	equ	0xFE1
  1731                           
  1732                           	psect	bssBANK0
  1733  0000F9                     __pbssBANK0:
  1734                           	opt stack 0
  1735  0000F9                     _inPipes:
  1736                           	opt stack 0
  1737  0000F9                     	ds	6
  1738  0000FF                     _cdc_trf_state:
  1739                           	opt stack 0
  1740  0000FF                     	ds	1
  1741                           tblptru	equ	0xFF8
  1742                           tblptrh	equ	0xFF7
  1743                           tblptrl	equ	0xFF6
  1744                           tablat	equ	0xFF5
  1745                           postinc0	equ	0xFEE
  1746                           wreg	equ	0xFE8
  1747                           postdec1	equ	0xFE5
  1748                           fsr1h	equ	0xFE2
  1749                           fsr1l	equ	0xFE1
  1750                           
  1751                           	psect	bssBANK1
  1752  000184                     __pbssBANK1:
  1753                           	opt stack 0
  1754  000184                     __channelMask:
  1755                           	opt stack 0
  1756  000184                     	ds	8
  1757  00018C                     _pBDTEntryOut:
  1758                           	opt stack 0
  1759  00018C                     	ds	6
  1760  000192                     _USB1msTickCount:
  1761                           	opt stack 0
  1762  000192                     	ds	4
  1763  000196                     _ticks:
  1764                           	opt stack 0
  1765  000196                     	ds	4
  1766  00019A                     _freqPulses4:
  1767                           	opt stack 0
  1768  00019A                     	ds	4
  1769  00019E                     _freqPulses3:
  1770                           	opt stack 0
  1771  00019E                     	ds	4
  1772  0001A2                     _freqPulses2:
  1773                           	opt stack 0
  1774  0001A2                     	ds	4
  1775  0001A6                     _freqPulses1:
  1776                           	opt stack 0
  1777  0001A6                     	ds	4
  1778  0001AA                     _sourceMacHigh:
  1779                           	opt stack 0
  1780  0001AA                     	ds	4
  1781  0001AE                     _sourceMacLow:
  1782                           	opt stack 0
  1783  0001AE                     	ds	4
  1784  0001B2                     _pCDCDst:
  1785                           	opt stack 0
  1786  0001B2                     	ds	3
  1787  0001B5                     _pCDCSrc:
  1788                           	opt stack 0
  1789  0001B5                     	ds	3
  1790  0001B8                     _ep_data_out:
  1791                           	opt stack 0
  1792  0001B8                     	ds	3
  1793  0001BB                     _ep_data_in:
  1794                           	opt stack 0
  1795  0001BB                     	ds	3
  1796  0001BE                     _tamanhoCommand:
  1797                           	opt stack 0
  1798  0001BE                     	ds	2
  1799  0001C0                     _CDCDataInHandle:
  1800                           	opt stack 0
  1801  0001C0                     	ds	2
  1802  0001C2                     _pDst:
  1803                           	opt stack 0
  1804  0001C2                     	ds	2
  1805  0001C4                     _dig_4:
  1806                           	opt stack 0
  1807  0001C4                     	ds	2
  1808  0001C6                     _dig_3:
  1809                           	opt stack 0
  1810  0001C6                     	ds	2
  1811  0001C8                     _dig_2:
  1812                           	opt stack 0
  1813  0001C8                     	ds	2
  1814  0001CA                     _dig_1:
  1815                           	opt stack 0
  1816  0001CA                     	ds	2
  1817  0001CC                     _PAN_ID:
  1818                           	opt stack 0
  1819  0001CC                     	ds	2
  1820  0001CE                     _cs:
  1821                           	opt stack 0
  1822  0001CE                     	ds	1
  1823  0001CF                     recebeByte@checksumRecebimento:
  1824                           	opt stack 0
  1825  0001CF                     	ds	1
  1826  0001D0                     recebeByte@estadoRecepcao:
  1827                           	opt stack 0
  1828  0001D0                     	ds	1
  1829  0001D1                     _control_signal_bitmap:
  1830                           	opt stack 0
  1831  0001D1                     	ds	1
  1832  0001D2                     _cdc_mem_type:
  1833                           	opt stack 0
  1834  0001D2                     	ds	1
  1835  0001D3                     _USBTicksSinceSuspendEnd:
  1836                           	opt stack 0
  1837  0001D3                     	ds	1
  1838  0001D4                     _USBDeferOUTDataStagePackets:
  1839                           	opt stack 0
  1840  0001D4                     	ds	1
  1841  0001D5                     _USBDeferINDataStagePackets:
  1842                           	opt stack 0
  1843  0001D5                     	ds	1
  1844  0001D6                     _USBStatusStageEnabledFlag2:
  1845                           	opt stack 0
  1846  0001D6                     	ds	1
  1847  0001D7                     _USBStatusStageEnabledFlag1:
  1848                           	opt stack 0
  1849  0001D7                     	ds	1
  1850  0001D8                     _BothEP0OutUOWNsSet:
  1851                           	opt stack 0
  1852  0001D8                     	ds	1
  1853  0001D9                     _USBBusIsSuspended:
  1854                           	opt stack 0
  1855  0001D9                     	ds	1
  1856  0001DA                     _RemoteWakeup:
  1857                           	opt stack 0
  1858  0001DA                     	ds	1
  1859  0001DB                     _pulsos4:
  1860                           	opt stack 0
  1861  0001DB                     	ds	1
  1862  0001DC                     _pulsos3:
  1863                           	opt stack 0
  1864  0001DC                     	ds	1
  1865  0001DD                     _pulsos2:
  1866                           	opt stack 0
  1867  0001DD                     	ds	1
  1868  0001DE                     _pulsos1:
  1869                           	opt stack 0
  1870  0001DE                     	ds	1
  1871  0001DF                     _nivel2:
  1872                           	opt stack 0
  1873  0001DF                     	ds	1
  1874  0001E0                     _nivel1:
  1875                           	opt stack 0
  1876  0001E0                     	ds	1
  1877  0001E1                     _teste1:
  1878                           	opt stack 0
  1879  0001E1                     	ds	1
  1880  0001E2                     _feedback2:
  1881                           	opt stack 0
  1882  0001E2                     	ds	1
  1883  0001E3                     _feedback1:
  1884                           	opt stack 0
  1885  0001E3                     	ds	1
  1886  0001E4                     _responseLoRaWan:
  1887                           	opt stack 0
  1888  0001E4                     	ds	1
  1889  0001E5                     _aaa:
  1890                           	opt stack 0
  1891  0001E5                     	ds	1
  1892  0001E6                     _encryptMode:
  1893                           	opt stack 0
  1894  0001E6                     	ds	1
  1895  0001E7                     _retries_sending:
  1896                           	opt stack 0
  1897  0001E7                     	ds	1
  1898  0001E8                     _discovery_status:
  1899                           	opt stack 0
  1900  0001E8                     	ds	1
  1901  0001E9                     _delivery_status:
  1902                           	opt stack 0
  1903  0001E9                     	ds	1
  1904  0001EA                     __send_retries:
  1905                           	opt stack 0
  1906  0001EA                     	ds	1
  1907  0001EB                     _channel:
  1908                           	opt stack 0
  1909  0001EB                     	ds	1
  1910  0001EC                     _error_TX:
  1911                           	opt stack 0
  1912  0001EC                     	ds	1
  1913  0001ED                     _error_RX:
  1914                           	opt stack 0
  1915  0001ED                     	ds	1
  1916  0001EE                     _protocol:
  1917                           	opt stack 0
  1918  0001EE                     	ds	1
  1919  0001EF                     _error_AT:
  1920                           	opt stack 0
  1921  0001EF                     	ds	1
  1922  0001F0                     __preambleID:
  1923                           	opt stack 0
  1924  0001F0                     	ds	1
  1925  0001F1                     _line_coding:
  1926                           	opt stack 0
  1927  0001F1                     	ds	7
  1928  0001F8                     _USBAlternateInterface:
  1929                           	opt stack 0
  1930  0001F8                     	ds	2
  1931                           tblptru	equ	0xFF8
  1932                           tblptrh	equ	0xFF7
  1933                           tblptrl	equ	0xFF6
  1934                           tablat	equ	0xFF5
  1935                           postinc0	equ	0xFEE
  1936                           wreg	equ	0xFE8
  1937                           postdec1	equ	0xFE5
  1938                           fsr1h	equ	0xFE2
  1939                           fsr1l	equ	0xFE1
  1940                           
  1941                           	psect	dataBANK1
  1942  0001FA                     __pdataBANK1:
  1943                           	opt stack 0
  1944  0001FA                     _randx:
  1945                           	opt stack 0
  1946  0001FA                     	ds	4
  1947  0001FE                     _NumOfFields:
  1948                           	opt stack 0
  1949  0001FE                     	ds	1
  1950                           tblptru	equ	0xFF8
  1951                           tblptrh	equ	0xFF7
  1952                           tblptrl	equ	0xFF6
  1953                           tablat	equ	0xFF5
  1954                           postinc0	equ	0xFEE
  1955                           wreg	equ	0xFE8
  1956                           postdec1	equ	0xFE5
  1957                           fsr1h	equ	0xFE2
  1958                           fsr1l	equ	0xFE1
  1959                           
  1960                           	psect	bssBANK2
  1961  0002BF                     __pbssBANK2:
  1962                           	opt stack 0
  1963  0002BF                     _dadosRecebidos:
  1964                           	opt stack 0
  1965  0002BF                     	ds	20
  1966  0002D3                     _BaudRateGen:
  1967                           	opt stack 0
  1968  0002D3                     	ds	4
  1969  0002D7                     _Sequence:
  1970                           	opt stack 0
  1971  0002D7                     	ds	1
  1972  0002D8                     _teste0:
  1973                           	opt stack 0
  1974  0002D8                     	ds	1
  1975  0002D9                     _preambleID:
  1976                           	opt stack 0
  1977  0002D9                     	ds	1
  1978  0002DA                     itoaVitor@buffer:
  1979                           	opt stack 0
  1980  0002DA                     	ds	12
  1981  0002E6                     _dummy_encapsulated_cmd_response:
  1982                           	opt stack 0
  1983  0002E6                     	ds	8
  1984                           tblptru	equ	0xFF8
  1985                           tblptrh	equ	0xFF7
  1986                           tblptrl	equ	0xFF6
  1987                           tablat	equ	0xFF5
  1988                           postinc0	equ	0xFEE
  1989                           wreg	equ	0xFE8
  1990                           postdec1	equ	0xFE5
  1991                           fsr1h	equ	0xFE2
  1992                           fsr1l	equ	0xFE1
  1993                           
  1994                           	psect	dataBANK2
  1995  0002EE                     __pdataBANK2:
  1996                           	opt stack 0
  1997  0002EE                     _encryptEnable:
  1998                           	opt stack 0
  1999  0002EE                     	ds	1
  2000  0002EF                     _Mask:
  2001                           	opt stack 0
  2002  0002EF                     	ds	8
  2003  0002F7                     _panID:
  2004                           	opt stack 0
  2005  0002F7                     	ds	2
  2006                           tblptru	equ	0xFF8
  2007                           tblptrh	equ	0xFF7
  2008                           tblptrl	equ	0xFF6
  2009                           tablat	equ	0xFF5
  2010                           postinc0	equ	0xFEE
  2011                           wreg	equ	0xFE8
  2012                           postdec1	equ	0xFE5
  2013                           fsr1h	equ	0xFE2
  2014                           fsr1l	equ	0xFE1
  2015                           
  2016                           	psect	bssBANK3
  2017  000300                     __pbssBANK3:
  2018                           	opt stack 0
  2019  000300                     _cdc_notice:
  2020                           	opt stack 0
  2021  000300                     	ds	10
  2022  00030A                     _response:
  2023                           	opt stack 0
  2024  00030A                     	ds	100
  2025                           tblptru	equ	0xFF8
  2026                           tblptrh	equ	0xFF7
  2027                           tblptrl	equ	0xFF6
  2028                           tablat	equ	0xFF5
  2029                           postinc0	equ	0xFEE
  2030                           wreg	equ	0xFE8
  2031                           postdec1	equ	0xFE5
  2032                           fsr1h	equ	0xFE2
  2033                           fsr1l	equ	0xFE1
  2034                           
  2035                           	psect	dataBANK3
  2036  00036E                     __pdataBANK3:
  2037                           	opt stack 0
  2038  00036E                     _MSG_LORAWAN:
  2039                           	opt stack 0
  2040  00036E                     	ds	30
  2041  00038C                     _RX_ADDRESS:
  2042                           	opt stack 0
  2043  00038C                     	ds	17
  2044                           tblptru	equ	0xFF8
  2045                           tblptrh	equ	0xFF7
  2046                           tblptrl	equ	0xFF6
  2047                           tablat	equ	0xFF5
  2048                           postinc0	equ	0xFEE
  2049                           wreg	equ	0xFE8
  2050                           postdec1	equ	0xFE5
  2051                           fsr1h	equ	0xFE2
  2052                           fsr1l	equ	0xFE1
  2053                           
  2054                           	psect	bssBANK4
  2055  000440                     __pbssBANK4:
  2056                           	opt stack 0
  2057  000440                     recebeByteLoRaWan@frameData:
  2058                           	opt stack 0
  2059  000440                     	ds	100
  2060                           tblptru	equ	0xFF8
  2061                           tblptrh	equ	0xFF7
  2062                           tblptrl	equ	0xFF6
  2063                           tablat	equ	0xFF5
  2064                           postinc0	equ	0xFEE
  2065                           wreg	equ	0xFE8
  2066                           postdec1	equ	0xFE5
  2067                           fsr1h	equ	0xFE2
  2068                           fsr1l	equ	0xFE1
  2069                           
  2070                           	psect	bssBANK5
  2071  000580                     __pbssBANK5:
  2072                           	opt stack 0
  2073  000580                     _receivePacket:
  2074                           	opt stack 0
  2075  000580                     	ds	100
  2076                           tblptru	equ	0xFF8
  2077                           tblptrh	equ	0xFF7
  2078                           tblptrl	equ	0xFF6
  2079                           tablat	equ	0xFF5
  2080                           postinc0	equ	0xFEE
  2081                           wreg	equ	0xFE8
  2082                           postdec1	equ	0xFE5
  2083                           fsr1h	equ	0xFE2
  2084                           fsr1l	equ	0xFE1
  2085                           
  2086                           	psect	bssBANK6
  2087  000600                     __pbssBANK6:
  2088                           	opt stack 0
  2089  000600                     _data:
  2090                           	opt stack 0
  2091  000600                     	ds	100
  2092  000664                     recebeByte@frameData:
  2093                           	opt stack 0
  2094  000664                     	ds	100
  2095                           tblptru	equ	0xFF8
  2096                           tblptrh	equ	0xFF7
  2097                           tblptrl	equ	0xFF6
  2098                           tablat	equ	0xFF5
  2099                           postinc0	equ	0xFEE
  2100                           wreg	equ	0xFE8
  2101                           postdec1	equ	0xFE5
  2102                           fsr1h	equ	0xFE2
  2103                           fsr1l	equ	0xFE1
  2104                           
  2105                           	psect	bssBIGRAMl
  2106  0006C8                     __pbssBIGRAMl:
  2107                           	opt stack 0
  2108  0006C8                     _frameBuffer:
  2109                           	opt stack 0
  2110  0006C8                     	ds	300
  2111                           tblptru	equ	0xFF8
  2112                           tblptrh	equ	0xFF7
  2113                           tblptrl	equ	0xFF6
  2114                           tablat	equ	0xFF5
  2115                           postinc0	equ	0xFEE
  2116                           wreg	equ	0xFE8
  2117                           postdec1	equ	0xFE5
  2118                           fsr1h	equ	0xFE2
  2119                           fsr1l	equ	0xFE1
  2120                           
  2121                           	psect	cstackBANK2
  2122  000200                     __pcstackBANK2:
  2123                           	opt stack 0
  2124  000200                     main@data:
  2125                           	opt stack 0
  2126                           
  2127                           ; 150 bytes @ 0x0
  2128  000200                     	ds	150
  2129  000296                     main@resp:
  2130                           	opt stack 0
  2131                           
  2132                           ; 1 bytes @ 0x96
  2133  000296                     	ds	1
  2134  000297                     main@tempo:
  2135                           	opt stack 0
  2136                           
  2137                           ; 4 bytes @ 0x97
  2138  000297                     	ds	4
  2139  00029B                     main@tempoTimeOut:
  2140                           	opt stack 0
  2141                           
  2142                           ; 4 bytes @ 0x9B
  2143  00029B                     	ds	4
  2144  00029F                     main@deltaTempo:
  2145                           	opt stack 0
  2146                           
  2147                           ; 4 bytes @ 0x9F
  2148  00029F                     	ds	4
  2149  0002A3                     _main$5946:
  2150                           	opt stack 0
  2151                           
  2152                           ; 3 bytes @ 0xA3
  2153  0002A3                     	ds	3
  2154  0002A6                     main@i:
  2155                           	opt stack 0
  2156                           
  2157                           ; 2 bytes @ 0xA6
  2158  0002A6                     	ds	2
  2159  0002A8                     main@pisca:
  2160                           	opt stack 0
  2161                           
  2162                           ; 1 bytes @ 0xA8
  2163  0002A8                     	ds	1
  2164  0002A9                     main@dadoPoco:
  2165                           	opt stack 0
  2166                           
  2167                           ; 22 bytes @ 0xA9
  2168  0002A9                     	ds	22
  2169                           tblptru	equ	0xFF8
  2170                           tblptrh	equ	0xFF7
  2171                           tblptrl	equ	0xFF6
  2172                           tablat	equ	0xFF5
  2173                           postinc0	equ	0xFEE
  2174                           wreg	equ	0xFE8
  2175                           postdec1	equ	0xFE5
  2176                           fsr1h	equ	0xFE2
  2177                           fsr1l	equ	0xFE1
  2178                           
  2179                           	psect	cstackBANK1
  2180  000100                     __pcstackBANK1:
  2181                           	opt stack 0
  2182  000100                     _sprintf$5951:
  2183                           	opt stack 0
  2184                           
  2185                           ; 3 bytes @ 0x0
  2186  000100                     	ds	3
  2187  000103                     _sprintf$5142:
  2188                           	opt stack 0
  2189                           
  2190                           ; 2 bytes @ 0x3
  2191  000103                     	ds	2
  2192  000105                     sprintf@idx:
  2193                           	opt stack 0
  2194                           
  2195                           ; 1 bytes @ 0x5
  2196  000105                     	ds	1
  2197  000106                     sprintf@cp:
  2198                           	opt stack 0
  2199                           
  2200                           ; 2 bytes @ 0x6
  2201  000106                     	ds	2
  2202  000108                     sprintf@len:
  2203                           	opt stack 0
  2204                           
  2205                           ; 2 bytes @ 0x8
  2206  000108                     	ds	2
  2207  00010A                     sprintf@ap:
  2208                           	opt stack 0
  2209                           
  2210                           ; 2 bytes @ 0xA
  2211  00010A                     	ds	2
  2212  00010C                     sprintf@tmpval:
  2213                           	opt stack 0
  2214                           
  2215                           ; 4 bytes @ 0xC
  2216  00010C                     	ds	4
  2217  000110                     sprintf@exp:
  2218                           	opt stack 0
  2219                           
  2220                           ; 2 bytes @ 0x10
  2221  000110                     	ds	2
  2222  000112                     sprintf@val:
  2223                           	opt stack 0
  2224                           
  2225                           ; 4 bytes @ 0x12
  2226  000112                     	ds	4
  2227  000116                     sprintf@fval:
  2228                           	opt stack 0
  2229                           
  2230                           ; 3 bytes @ 0x16
  2231  000116                     	ds	3
  2232  000119                     sprintf@width:
  2233                           	opt stack 0
  2234                           
  2235                           ; 2 bytes @ 0x19
  2236  000119                     	ds	2
  2237  00011B                     sprintf@flag:
  2238                           	opt stack 0
  2239                           
  2240                           ; 2 bytes @ 0x1B
  2241  00011B                     	ds	2
  2242  00011D                     sprintf@prec:
  2243                           	opt stack 0
  2244                           
  2245                           ; 2 bytes @ 0x1D
  2246  00011D                     	ds	2
  2247  00011F                     sprintf@c:
  2248                           	opt stack 0
  2249                           
  2250                           ; 1 bytes @ 0x1F
  2251  00011F                     	ds	1
  2252  000120                     addSensor@f:
  2253                           	opt stack 0
  2254                           
  2255                           ; 100 bytes @ 0x20
  2256  000120                     	ds	100
  2257                           tblptru	equ	0xFF8
  2258                           tblptrh	equ	0xFF7
  2259                           tblptrl	equ	0xFF6
  2260                           tablat	equ	0xFF5
  2261                           postinc0	equ	0xFEE
  2262                           wreg	equ	0xFE8
  2263                           postdec1	equ	0xFE5
  2264                           fsr1h	equ	0xFE2
  2265                           fsr1l	equ	0xFE1
  2266                           
  2267                           	psect	cstackBANK0
  2268  000060                     __pcstackBANK0:
  2269                           	opt stack 0
  2270  000060                     ??_setup_pulsos:
  2271  000060                     ??_isdigit:
  2272  000060                     ??_resetXBee:
  2273  000060                     ?_USBTransferOnePacket:
  2274                           	opt stack 0
  2275  000060                     ?_strlen:
  2276                           	opt stack 0
  2277  000060                     ?___awmod:
  2278                           	opt stack 0
  2279  000060                     ?___ftpack:
  2280                           	opt stack 0
  2281  000060                     ?___ftneg:
  2282                           	opt stack 0
  2283  000060                     ?_millis:
  2284                           	opt stack 0
  2285  000060                     ?_le_pulsos:
  2286                           	opt stack 0
  2287  000060                     ?__tdiv_to_l_:
  2288                           	opt stack 0
  2289  000060                     ?__div_to_l_:
  2290                           	opt stack 0
  2291  000060                     ?___lmul:
  2292                           	opt stack 0
  2293  000060                     ?___lldiv:
  2294                           	opt stack 0
  2295  000060                     USBTransferOnePacket@dir:
  2296                           	opt stack 0
  2297  000060                     putch@data:
  2298                           	opt stack 0
  2299  000060                     le_pulsos@modo:
  2300                           	opt stack 0
  2301  000060                     ___lbdiv@divisor:
  2302                           	opt stack 0
  2303  000060                     toupper@c:
  2304                           	opt stack 0
  2305  000060                     putsUSBUSART@data:
  2306                           	opt stack 0
  2307  000060                     ___awmod@dividend:
  2308                           	opt stack 0
  2309  000060                     memset@p1:
  2310                           	opt stack 0
  2311  000060                     strcat@to:
  2312                           	opt stack 0
  2313  000060                     strlen@s:
  2314                           	opt stack 0
  2315  000060                     __div_to_l_@f1:
  2316                           	opt stack 0
  2317  000060                     ___ftpack@arg:
  2318                           	opt stack 0
  2319  000060                     __tdiv_to_l_@f1:
  2320                           	opt stack 0
  2321  000060                     ___ftge@ff1:
  2322                           	opt stack 0
  2323  000060                     ___ftneg@f1:
  2324                           	opt stack 0
  2325  000060                     ___lmul@multiplier:
  2326                           	opt stack 0
  2327  000060                     ___lldiv@dividend:
  2328                           	opt stack 0
  2329                           
  2330                           ; 4 bytes @ 0x0
  2331  000060                     	ds	1
  2332  000061                     converter@conv2:
  2333                           	opt stack 0
  2334  000061                     gen_send@error_int:
  2335                           	opt stack 0
  2336  000061                     _isdigit$5368:
  2337                           	opt stack 0
  2338  000061                     ___lbdiv@dividend:
  2339                           	opt stack 0
  2340  000061                     USBTransferOnePacket@data:
  2341                           	opt stack 0
  2342                           
  2343                           ; 2 bytes @ 0x1
  2344  000061                     	ds	1
  2345  000062                     ??_strlen:
  2346  000062                     converter@resul:
  2347                           	opt stack 0
  2348  000062                     isdigit@c:
  2349                           	opt stack 0
  2350  000062                     ___lbdiv@counter:
  2351                           	opt stack 0
  2352  000062                     putsUSBUSART@pData:
  2353                           	opt stack 0
  2354  000062                     gen_send@i:
  2355                           	opt stack 0
  2356  000062                     ___awmod@divisor:
  2357                           	opt stack 0
  2358  000062                     memset@c:
  2359                           	opt stack 0
  2360  000062                     strcat@from:
  2361                           	opt stack 0
  2362                           
  2363                           ; 2 bytes @ 0x2
  2364  000062                     	ds	1
  2365  000063                     USBTransferOnePacket@len:
  2366                           	opt stack 0
  2367  000063                     converter@aux:
  2368                           	opt stack 0
  2369  000063                     ___ftpack@exp:
  2370                           	opt stack 0
  2371  000063                     ___lbdiv@quotient:
  2372                           	opt stack 0
  2373  000063                     __div_to_l_@f2:
  2374                           	opt stack 0
  2375  000063                     __tdiv_to_l_@f2:
  2376                           	opt stack 0
  2377  000063                     ___ftge@ff2:
  2378                           	opt stack 0
  2379                           
  2380                           ; 3 bytes @ 0x3
  2381  000063                     	ds	1
  2382  000064                     ??_USBTransferOnePacket:
  2383  000064                     putsUSBUSART@len:
  2384                           	opt stack 0
  2385  000064                     converter@aux2:
  2386                           	opt stack 0
  2387  000064                     le_pulsos@freqPulses:
  2388                           	opt stack 0
  2389  000064                     ___awmod@counter:
  2390                           	opt stack 0
  2391  000064                     ___ftpack@sign:
  2392                           	opt stack 0
  2393  000064                     memset@n:
  2394                           	opt stack 0
  2395  000064                     strcat@cp:
  2396                           	opt stack 0
  2397  000064                     strlen@cp:
  2398                           	opt stack 0
  2399  000064                     millis@m:
  2400                           	opt stack 0
  2401  000064                     ___lmul@multiplicand:
  2402                           	opt stack 0
  2403  000064                     ___lldiv@divisor:
  2404                           	opt stack 0
  2405                           
  2406                           ; 4 bytes @ 0x4
  2407  000064                     	ds	1
  2408  000065                     ??___ftpack:
  2409  000065                     converter@conv1:
  2410                           	opt stack 0
  2411  000065                     ___awmod@sign:
  2412                           	opt stack 0
  2413  000065                     le_pulsos@freq:
  2414                           	opt stack 0
  2415                           
  2416                           ; 4 bytes @ 0x5
  2417  000065                     	ds	1
  2418  000066                     ??__tdiv_to_l_:
  2419  000066                     ??___ftge:
  2420  000066                     ?_itoaVitor:
  2421                           	opt stack 0
  2422  000066                     ?___awdiv:
  2423                           	opt stack 0
  2424  000066                     addByteCommand@calcChecksum:
  2425                           	opt stack 0
  2426  000066                     ___awdiv@dividend:
  2427                           	opt stack 0
  2428  000066                     memset@p:
  2429                           	opt stack 0
  2430  000066                     __div_to_l_@quot:
  2431                           	opt stack 0
  2432                           
  2433                           ; 4 bytes @ 0x6
  2434  000066                     	ds	1
  2435  000067                     addByteCommand@b:
  2436                           	opt stack 0
  2437                           
  2438                           ; 1 bytes @ 0x7
  2439  000067                     	ds	1
  2440  000068                     ??_txZBStatusResponse:
  2441  000068                     ?___awtoft:
  2442                           	opt stack 0
  2443  000068                     ?___lltoft:
  2444                           	opt stack 0
  2445  000068                     USBDeviceInit@i:
  2446                           	opt stack 0
  2447  000068                     USBTransferOnePacket@ep:
  2448                           	opt stack 0
  2449  000068                     gen_data@data:
  2450                           	opt stack 0
  2451  000068                     itoaVitor@original:
  2452                           	opt stack 0
  2453  000068                     ___awdiv@divisor:
  2454                           	opt stack 0
  2455  000068                     ___awtoft@c:
  2456                           	opt stack 0
  2457  000068                     ___lmul@product:
  2458                           	opt stack 0
  2459  000068                     ___lldiv@quotient:
  2460                           	opt stack 0
  2461  000068                     ___lltoft@c:
  2462                           	opt stack 0
  2463                           
  2464                           ; 4 bytes @ 0x8
  2465  000068                     	ds	1
  2466  000069                     USBTransferOnePacket@handle:
  2467                           	opt stack 0
  2468  000069                     __tdiv_to_l_@quot:
  2469                           	opt stack 0
  2470                           
  2471                           ; 4 bytes @ 0x9
  2472  000069                     	ds	1
  2473  00006A                     ___awdiv@counter:
  2474                           	opt stack 0
  2475  00006A                     __div_to_l_@cntr:
  2476                           	opt stack 0
  2477  00006A                     gen_data@param:
  2478                           	opt stack 0
  2479  00006A                     itoaVitor@c:
  2480                           	opt stack 0
  2481                           
  2482                           ; 2 bytes @ 0xA
  2483  00006A                     	ds	1
  2484  00006B                     CDCTxService@i:
  2485                           	opt stack 0
  2486  00006B                     ___awdiv@sign:
  2487                           	opt stack 0
  2488  00006B                     ___awtoft@sign:
  2489                           	opt stack 0
  2490  00006B                     __div_to_l_@exp1:
  2491                           	opt stack 0
  2492                           
  2493                           ; 1 bytes @ 0xB
  2494  00006B                     	ds	1
  2495  00006C                     ??___lltoft:
  2496  00006C                     ?_rand:
  2497                           	opt stack 0
  2498  00006C                     CDCTxService@byte_to_send:
  2499                           	opt stack 0
  2500  00006C                     gen_data@sizeParam:
  2501                           	opt stack 0
  2502  00006C                     itoaVitor@value:
  2503                           	opt stack 0
  2504  00006C                     ___lldiv@counter:
  2505                           	opt stack 0
  2506  00006C                     ___awdiv@quotient:
  2507                           	opt stack 0
  2508                           
  2509                           ; 2 bytes @ 0xC
  2510  00006C                     	ds	1
  2511  00006D                     ??_gen_data:
  2512  00006D                     __tdiv_to_l_@cntr:
  2513                           	opt stack 0
  2514  00006D                     delay@time:
  2515                           	opt stack 0
  2516  00006D                     setup_uart@baudRate:
  2517                           	opt stack 0
  2518                           
  2519                           ; 4 bytes @ 0xD
  2520  00006D                     	ds	1
  2521  00006E                     ?___wmul:
  2522                           	opt stack 0
  2523  00006E                     ?___llmod:
  2524                           	opt stack 0
  2525  00006E                     __tdiv_to_l_@exp1:
  2526                           	opt stack 0
  2527  00006E                     ___wmul@multiplier:
  2528                           	opt stack 0
  2529  00006E                     ___llmod@dividend:
  2530                           	opt stack 0
  2531                           
  2532                           ; 4 bytes @ 0xE
  2533  00006E                     	ds	1
  2534  00006F                     gen_data@size:
  2535                           	opt stack 0
  2536                           
  2537                           ; 2 bytes @ 0xF
  2538  00006F                     	ds	1
  2539  000070                     ___lltoft@exp:
  2540                           	opt stack 0
  2541  000070                     ___wmul@multiplicand:
  2542                           	opt stack 0
  2543                           
  2544                           ; 2 bytes @ 0x10
  2545  000070                     	ds	1
  2546  000071                     ??_delay:
  2547  000071                     gen_data@i:
  2548                           	opt stack 0
  2549  000071                     setup_uart@brg:
  2550                           	opt stack 0
  2551                           
  2552                           ; 4 bytes @ 0x11
  2553  000071                     	ds	1
  2554  000072                     ??_setPreambleID:
  2555  000072                     setEncryptionMode@error:
  2556                           	opt stack 0
  2557  000072                     setPAN@PANID:
  2558                           	opt stack 0
  2559  000072                     setChannelMask@mask:
  2560                           	opt stack 0
  2561  000072                     setLinkKey@key:
  2562                           	opt stack 0
  2563  000072                     ___wmul@product:
  2564                           	opt stack 0
  2565  000072                     ___llmod@divisor:
  2566                           	opt stack 0
  2567                           
  2568                           ; 4 bytes @ 0x12
  2569  000072                     	ds	1
  2570  000073                     setEncryptionMode@mode:
  2571                           	opt stack 0
  2572                           
  2573                           ; 1 bytes @ 0x13
  2574  000073                     	ds	1
  2575  000074                     ?___ftadd:
  2576                           	opt stack 0
  2577  000074                     setPAN@error:
  2578                           	opt stack 0
  2579  000074                     setChannelMask@error:
  2580                           	opt stack 0
  2581  000074                     setPreambleID@error:
  2582                           	opt stack 0
  2583  000074                     setLinkKey@error:
  2584                           	opt stack 0
  2585  000074                     ___ftadd@f1:
  2586                           	opt stack 0
  2587  000074                     txZBStatusResponse@previous:
  2588                           	opt stack 0
  2589                           
  2590                           ; 4 bytes @ 0x14
  2591  000074                     	ds	1
  2592  000075                     setPreambleID@preambleID:
  2593                           	opt stack 0
  2594                           
  2595                           ; 1 bytes @ 0x15
  2596  000075                     	ds	1
  2597  000076                     ___llmod@counter:
  2598                           	opt stack 0
  2599                           
  2600                           ; 1 bytes @ 0x16
  2601  000076                     	ds	1
  2602  000077                     ___ftadd@f2:
  2603                           	opt stack 0
  2604                           
  2605                           ; 3 bytes @ 0x17
  2606  000077                     	ds	1
  2607  000078                     txZBStatusResponse@intervalMAX:
  2608                           	opt stack 0
  2609                           
  2610                           ; 2 bytes @ 0x18
  2611  000078                     	ds	1
  2612  000079                     delay@to:
  2613                           	opt stack 0
  2614                           
  2615                           ; 4 bytes @ 0x19
  2616  000079                     	ds	1
  2617  00007A                     ??___ftadd:
  2618  00007A                     txZBStatusResponse@timeout:
  2619                           	opt stack 0
  2620                           
  2621                           ; 1 bytes @ 0x1A
  2622  00007A                     	ds	1
  2623  00007B                     sendXBeePriv@i:
  2624                           	opt stack 0
  2625                           
  2626                           ; 2 bytes @ 0x1B
  2627  00007B                     	ds	2
  2628  00007D                     ___ftadd@sign:
  2629                           	opt stack 0
  2630  00007D                     send@macAddress:
  2631                           	opt stack 0
  2632                           
  2633                           ; 2 bytes @ 0x1D
  2634  00007D                     	ds	1
  2635  00007E                     ___ftadd@exp2:
  2636                           	opt stack 0
  2637                           
  2638                           ; 1 bytes @ 0x1E
  2639  00007E                     	ds	1
  2640  00007F                     ___ftadd@exp1:
  2641                           	opt stack 0
  2642  00007F                     send@pointer:
  2643                           	opt stack 0
  2644                           
  2645                           ; 2 bytes @ 0x1F
  2646  00007F                     	ds	1
  2647  000080                     ?___ftmul:
  2648                           	opt stack 0
  2649  000080                     ?___ftsub:
  2650                           	opt stack 0
  2651  000080                     ___ftmul@f1:
  2652                           	opt stack 0
  2653  000080                     ___ftsub@f1:
  2654                           	opt stack 0
  2655                           
  2656                           ; 3 bytes @ 0x20
  2657  000080                     	ds	1
  2658  000081                     send@length:
  2659                           	opt stack 0
  2660                           
  2661                           ; 2 bytes @ 0x21
  2662  000081                     	ds	2
  2663  000083                     ??_send:
  2664  000083                     ___ftmul@f2:
  2665                           	opt stack 0
  2666  000083                     ___ftsub@f2:
  2667                           	opt stack 0
  2668                           
  2669                           ; 3 bytes @ 0x23
  2670  000083                     	ds	1
  2671  000084                     send@r:
  2672                           	opt stack 0
  2673                           
  2674                           ; 4 bytes @ 0x24
  2675  000084                     	ds	2
  2676  000086                     ??___ftmul:
  2677  000086                     
  2678                           ; 1 bytes @ 0x26
  2679  000086                     	ds	2
  2680  000088                     send@i_4001:
  2681                           	opt stack 0
  2682                           
  2683                           ; 4 bytes @ 0x28
  2684  000088                     	ds	1
  2685  000089                     ___ftmul@exp:
  2686                           	opt stack 0
  2687                           
  2688                           ; 1 bytes @ 0x29
  2689  000089                     	ds	1
  2690  00008A                     ___ftmul@f3_as_product:
  2691                           	opt stack 0
  2692                           
  2693                           ; 3 bytes @ 0x2A
  2694  00008A                     	ds	2
  2695  00008C                     send@size:
  2696                           	opt stack 0
  2697                           
  2698                           ; 2 bytes @ 0x2C
  2699  00008C                     	ds	1
  2700  00008D                     ___ftmul@cntr:
  2701                           	opt stack 0
  2702                           
  2703                           ; 1 bytes @ 0x2D
  2704  00008D                     	ds	1
  2705  00008E                     ___ftmul@sign:
  2706                           	opt stack 0
  2707  00008E                     send@i_3998:
  2708                           	opt stack 0
  2709                           
  2710                           ; 2 bytes @ 0x2E
  2711  00008E                     	ds	1
  2712  00008F                     ?___ftdiv:
  2713                           	opt stack 0
  2714  00008F                     ?_fround:
  2715                           	opt stack 0
  2716  00008F                     ?_scale:
  2717                           	opt stack 0
  2718  00008F                     ___ftdiv@f1:
  2719                           	opt stack 0
  2720                           
  2721                           ; 3 bytes @ 0x2F
  2722  00008F                     	ds	1
  2723  000090                     send@MAX_RETRIES:
  2724                           	opt stack 0
  2725                           
  2726                           ; 1 bytes @ 0x30
  2727  000090                     	ds	1
  2728  000091                     send@i_3999:
  2729                           	opt stack 0
  2730                           
  2731                           ; 1 bytes @ 0x31
  2732  000091                     	ds	1
  2733  000092                     send@maxPayload:
  2734                           	opt stack 0
  2735  000092                     ___ftdiv@f2:
  2736                           	opt stack 0
  2737  000092                     _fround$5949:
  2738                           	opt stack 0
  2739  000092                     _scale$5950:
  2740                           	opt stack 0
  2741                           
  2742                           ; 3 bytes @ 0x32
  2743  000092                     	ds	2
  2744  000094                     send@i:
  2745                           	opt stack 0
  2746                           
  2747                           ; 1 bytes @ 0x34
  2748  000094                     	ds	1
  2749  000095                     ??___ftdiv:
  2750  000095                     scale@scl:
  2751                           	opt stack 0
  2752  000095                     _fround$5948:
  2753                           	opt stack 0
  2754                           
  2755                           ; 3 bytes @ 0x35
  2756  000095                     	ds	3
  2757  000098                     fround@prec:
  2758                           	opt stack 0
  2759  000098                     ___ftdiv@cntr:
  2760                           	opt stack 0
  2761                           
  2762                           ; 1 bytes @ 0x38
  2763  000098                     	ds	1
  2764  000099                     ___ftdiv@f3:
  2765                           	opt stack 0
  2766                           
  2767                           ; 3 bytes @ 0x39
  2768  000099                     	ds	3
  2769  00009C                     ___ftdiv@exp:
  2770                           	opt stack 0
  2771                           
  2772                           ; 1 bytes @ 0x3C
  2773  00009C                     	ds	1
  2774  00009D                     ___ftdiv@sign:
  2775                           	opt stack 0
  2776                           
  2777                           ; 1 bytes @ 0x3D
  2778  00009D                     	ds	1
  2779  00009E                     ?_le_AD:
  2780                           	opt stack 0
  2781                           
  2782                           ; 3 bytes @ 0x3E
  2783  00009E                     	ds	3
  2784  0000A1                     ??_le_AD:
  2785                           
  2786                           ; 1 bytes @ 0x41
  2787  0000A1                     	ds	2
  2788  0000A3                     _le_AD$5947:
  2789                           	opt stack 0
  2790                           
  2791                           ; 3 bytes @ 0x43
  2792  0000A3                     	ds	3
  2793  0000A6                     le_AD@corrente:
  2794                           	opt stack 0
  2795                           
  2796                           ; 3 bytes @ 0x46
  2797  0000A6                     	ds	3
  2798  0000A9                     le_AD@AnalogPort:
  2799                           	opt stack 0
  2800                           
  2801                           ; 1 bytes @ 0x49
  2802  0000A9                     	ds	1
  2803  0000AA                     le_AD@leituraAux:
  2804                           	opt stack 0
  2805                           
  2806                           ; 2 bytes @ 0x4A
  2807  0000AA                     	ds	2
  2808  0000AC                     le_AD@i:
  2809                           	opt stack 0
  2810                           
  2811                           ; 2 bytes @ 0x4C
  2812  0000AC                     	ds	2
  2813  0000AE                     le_AD@leitura:
  2814                           	opt stack 0
  2815                           
  2816                           ; 2 bytes @ 0x4E
  2817  0000AE                     	ds	2
  2818  0000B0                     ?___fttol:
  2819                           	opt stack 0
  2820  0000B0                     ___fttol@f1:
  2821                           	opt stack 0
  2822                           
  2823                           ; 3 bytes @ 0x50
  2824  0000B0                     	ds	4
  2825  0000B4                     ??___fttol:
  2826                           
  2827                           ; 1 bytes @ 0x54
  2828  0000B4                     	ds	5
  2829  0000B9                     ___fttol@sign1:
  2830                           	opt stack 0
  2831                           
  2832                           ; 1 bytes @ 0x59
  2833  0000B9                     	ds	1
  2834  0000BA                     ___fttol@lval:
  2835                           	opt stack 0
  2836                           
  2837                           ; 4 bytes @ 0x5A
  2838  0000BA                     	ds	4
  2839  0000BE                     ___fttol@exp1:
  2840                           	opt stack 0
  2841                           
  2842                           ; 1 bytes @ 0x5E
  2843  0000BE                     	ds	1
  2844  0000BF                     ?_sprintf:
  2845                           	opt stack 0
  2846  0000BF                     sprintf@sp:
  2847                           	opt stack 0
  2848                           
  2849                           ; 2 bytes @ 0x5F
  2850  0000BF                     	ds	2
  2851  0000C1                     sprintf@f:
  2852                           	opt stack 0
  2853                           
  2854                           ; 2 bytes @ 0x61
  2855  0000C1                     	ds	42
  2856  0000EB                     ??_sprintf:
  2857                           
  2858                           ; 1 bytes @ 0x8B
  2859  0000EB                     	ds	6
  2860  0000F1                     createFrameHeader@WaspID:
  2861                           	opt stack 0
  2862  0000F1                     addSensor@sensor:
  2863                           	opt stack 0
  2864                           
  2865                           ; 2 bytes @ 0x91
  2866  0000F1                     	ds	2
  2867  0000F3                     createFrameHeader@Sequencia:
  2868                           	opt stack 0
  2869  0000F3                     addSensor@nivel1:
  2870                           	opt stack 0
  2871                           
  2872                           ; 1 bytes @ 0x93
  2873  0000F3                     	ds	1
  2874  0000F4                     addSensor@nivel2:
  2875                           	opt stack 0
  2876                           
  2877                           ; 1 bytes @ 0x94
  2878  0000F4                     	ds	1
  2879  0000F5                     ??_main:
  2880                           
  2881                           ; 1 bytes @ 0x95
  2882  0000F5                     	ds	4
  2883                           tblptru	equ	0xFF8
  2884                           tblptrh	equ	0xFF7
  2885                           tblptrl	equ	0xFF6
  2886                           tablat	equ	0xFF5
  2887                           postinc0	equ	0xFEE
  2888                           wreg	equ	0xFE8
  2889                           postdec1	equ	0xFE5
  2890                           fsr1h	equ	0xFE2
  2891                           fsr1l	equ	0xFE1
  2892                           
  2893                           	psect	cstackCOMRAM
  2894  000001                     __pcstackCOMRAM:
  2895                           	opt stack 0
  2896  000001                     ??_getch:
  2897  000001                     ??_USBStdGetDscHandler:
  2898  000001                     ??_USBStdGetStatusHandler:
  2899  000001                     ?_strcmp:
  2900                           	opt stack 0
  2901  000001                     ?_strncmp:
  2902                           	opt stack 0
  2903  000001                     ?i2_USBTransferOnePacket:
  2904                           	opt stack 0
  2905  000001                     ?i2_strlen:
  2906                           	opt stack 0
  2907  000001                     USBConfigureEndpoint@direction:
  2908                           	opt stack 0
  2909  000001                     USBCtrlTrfTxService@byteToSend:
  2910                           	opt stack 0
  2911  000001                     USBCtrlTrfRxService@i:
  2912                           	opt stack 0
  2913  000001                     i2USBTransferOnePacket@dir:
  2914                           	opt stack 0
  2915  000001                     i2toupper@c:
  2916                           	opt stack 0
  2917  000001                     memcpy@d1:
  2918                           	opt stack 0
  2919  000001                     strcmp@s1:
  2920                           	opt stack 0
  2921  000001                     strcpy@to:
  2922                           	opt stack 0
  2923  000001                     strncmp@s1:
  2924                           	opt stack 0
  2925  000001                     i2memset@p1:
  2926                           	opt stack 0
  2927  000001                     i2strlen@s:
  2928                           	opt stack 0
  2929                           
  2930                           ; 2 bytes @ 0x0
  2931  000001                     	ds	1
  2932  000002                     ??_USBConfigureEndpoint:
  2933  000002                     USBCtrlTrfRxService@byteToRead:
  2934                           	opt stack 0
  2935  000002                     USBCtrlTrfInHandler@lastDTS:
  2936                           	opt stack 0
  2937  000002                     getch@RC:
  2938                           	opt stack 0
  2939  000002                     i2converter@conv2:
  2940                           	opt stack 0
  2941  000002                     USBStdGetStatusHandler@p:
  2942                           	opt stack 0
  2943  000002                     i2USBTransferOnePacket@data:
  2944                           	opt stack 0
  2945                           
  2946                           ; 2 bytes @ 0x1
  2947  000002                     	ds	1
  2948  000003                     ??i2_strlen:
  2949  000003                     getch@data:
  2950                           	opt stack 0
  2951  000003                     i2converter@resul:
  2952                           	opt stack 0
  2953  000003                     memcpy@s1:
  2954                           	opt stack 0
  2955  000003                     strcmp@s2:
  2956                           	opt stack 0
  2957  000003                     strcpy@from:
  2958                           	opt stack 0
  2959  000003                     strncmp@s2:
  2960                           	opt stack 0
  2961  000003                     i2memset@c:
  2962                           	opt stack 0
  2963                           
  2964                           ; 2 bytes @ 0x2
  2965  000003                     	ds	1
  2966  000004                     i2USBTransferOnePacket@len:
  2967                           	opt stack 0
  2968  000004                     i2converter@aux:
  2969                           	opt stack 0
  2970                           
  2971                           ; 1 bytes @ 0x3
  2972  000004                     	ds	1
  2973  000005                     ??_strcmp:
  2974  000005                     ??i2_USBTransferOnePacket:
  2975  000005                     i2converter@aux2:
  2976                           	opt stack 0
  2977  000005                     memcpy@n:
  2978                           	opt stack 0
  2979  000005                     strcpy@cp:
  2980                           	opt stack 0
  2981  000005                     strncmp@len:
  2982                           	opt stack 0
  2983  000005                     i2memset@n:
  2984                           	opt stack 0
  2985  000005                     i2strlen@cp:
  2986                           	opt stack 0
  2987                           
  2988                           ; 2 bytes @ 0x4
  2989  000005                     	ds	1
  2990  000006                     USBConfigureEndpoint@EPNum:
  2991                           	opt stack 0
  2992  000006                     strcmp@r:
  2993                           	opt stack 0
  2994  000006                     i2converter@conv1:
  2995                           	opt stack 0
  2996                           
  2997                           ; 1 bytes @ 0x5
  2998  000006                     	ds	1
  2999  000007                     ??_strncmp:
  3000  000007                     USBConfigureEndpoint@handle:
  3001                           	opt stack 0
  3002  000007                     memcpy@d:
  3003                           	opt stack 0
  3004  000007                     i2memset@p:
  3005                           	opt stack 0
  3006                           
  3007                           ; 2 bytes @ 0x6
  3008  000007                     	ds	2
  3009  000009                     USBEnableEndpoint@options:
  3010                           	opt stack 0
  3011  000009                     i2USBDeviceInit@i:
  3012                           	opt stack 0
  3013  000009                     i2USBTransferOnePacket@ep:
  3014                           	opt stack 0
  3015  000009                     memcpy@s:
  3016                           	opt stack 0
  3017                           
  3018                           ; 2 bytes @ 0x8
  3019  000009                     	ds	1
  3020  00000A                     ??_recebeByteLoRaWan:
  3021  00000A                     USBEnableEndpoint@p:
  3022                           	opt stack 0
  3023  00000A                     i2USBTransferOnePacket@handle:
  3024                           	opt stack 0
  3025                           
  3026                           ; 2 bytes @ 0x9
  3027  00000A                     	ds	1
  3028  00000B                     memcpy@tmp:
  3029                           	opt stack 0
  3030                           
  3031                           ; 1 bytes @ 0xA
  3032  00000B                     	ds	1
  3033  00000C                     USBEnableEndpoint@ep:
  3034                           	opt stack 0
  3035                           
  3036                           ; 1 bytes @ 0xB
  3037  00000C                     	ds	1
  3038  00000D                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3039                           	opt stack 0
  3040                           
  3041                           ; 2 bytes @ 0xC
  3042  00000D                     	ds	1
  3043  00000E                     recebeByteLoRaWan@len:
  3044                           	opt stack 0
  3045                           
  3046                           ; 1 bytes @ 0xD
  3047  00000E                     	ds	1
  3048  00000F                     recebeByteLoRaWan@port:
  3049                           	opt stack 0
  3050  00000F                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3051                           	opt stack 0
  3052                           
  3053                           ; 2 bytes @ 0xE
  3054  00000F                     	ds	1
  3055  000010                     recebeByteLoRaWan@b:
  3056                           	opt stack 0
  3057                           
  3058                           ; 1 bytes @ 0xF
  3059  000010                     	ds	1
  3060  000011                     recebeByteLoRaWan@i:
  3061                           	opt stack 0
  3062  000011                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3063                           	opt stack 0
  3064                           
  3065                           ; 2 bytes @ 0x10
  3066  000011                     	ds	1
  3067  000012                     recebeByteLoRaWan@tamMsgRx:
  3068                           	opt stack 0
  3069                           
  3070                           ; 1 bytes @ 0x11
  3071  000012                     	ds	1
  3072  000013                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3073  000013                     recebeByteLoRaWan@i_4900:
  3074                           	opt stack 0
  3075                           
  3076                           ; 1 bytes @ 0x12
  3077  000013                     	ds	2
  3078  000015                     ??_USBStdFeatureReqHandler:
  3079  000015                     USBStdSetCfgHandler@i:
  3080                           	opt stack 0
  3081                           
  3082                           ; 1 bytes @ 0x14
  3083  000015                     	ds	1
  3084  000016                     USBStdFeatureReqHandler@pUEP:
  3085                           	opt stack 0
  3086                           
  3087                           ; 2 bytes @ 0x15
  3088  000016                     	ds	2
  3089  000018                     USBStdFeatureReqHandler@current_ep_data:
  3090                           	opt stack 0
  3091                           
  3092                           ; 1 bytes @ 0x17
  3093  000018                     	ds	1
  3094  000019                     USBStdFeatureReqHandler@p:
  3095                           	opt stack 0
  3096                           
  3097                           ; 2 bytes @ 0x18
  3098  000019                     	ds	2
  3099  00001B                     ??_USBCtrlEPService:
  3100  00001B                     
  3101                           ; 1 bytes @ 0x1A
  3102  00001B                     	ds	1
  3103  00001C                     USBDeviceTasks@i:
  3104                           	opt stack 0
  3105                           
  3106                           ; 1 bytes @ 0x1B
  3107  00001C                     	ds	1
  3108  00001D                     ??_SYS_InterruptHigh:
  3109                           
  3110                           ; 1 bytes @ 0x1C
  3111  00001D                     	ds	19
  3112  000030                     SYS_InterruptHigh@dig1:
  3113                           	opt stack 0
  3114                           
  3115                           ; 2 bytes @ 0x2F
  3116  000030                     	ds	2
  3117  000032                     SYS_InterruptHigh@dig2:
  3118                           	opt stack 0
  3119                           
  3120                           ; 2 bytes @ 0x31
  3121  000032                     	ds	2
  3122  000034                     SYS_InterruptHigh@dig3:
  3123                           	opt stack 0
  3124                           
  3125                           ; 2 bytes @ 0x33
  3126  000034                     	ds	2
  3127  000036                     SYS_InterruptHigh@dig4:
  3128                           	opt stack 0
  3129                           
  3130                           ; 2 bytes @ 0x35
  3131  000036                     	ds	2
  3132                           tblptru	equ	0xFF8
  3133                           tblptrh	equ	0xFF7
  3134                           tblptrl	equ	0xFF6
  3135                           tablat	equ	0xFF5
  3136                           postinc0	equ	0xFEE
  3137                           wreg	equ	0xFE8
  3138                           postdec1	equ	0xFE5
  3139                           fsr1h	equ	0xFE2
  3140                           fsr1l	equ	0xFE1
  3141                           
  3142 ;;
  3143 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  3144 ;;
  3145 ;; *************** function _main *****************
  3146 ;; Defined at:
  3147 ;;		line 42 in file "UT.c"
  3148 ;; Parameters:    Size  Location     Type
  3149 ;;		None
  3150 ;; Auto vars:     Size  Location     Type
  3151 ;;  tempoTimeOut    4  155[BANK2 ] unsigned long 
  3152 ;;  data          150    0[BANK2 ] unsigned char [150]
  3153 ;;  deltaTempo      4  159[BANK2 ] unsigned long 
  3154 ;;  tempo           4  151[BANK2 ] unsigned long 
  3155 ;;  resp            1  150[BANK2 ] unsigned char 
  3156 ;;  i               2  166[BANK2 ] int 
  3157 ;;  dadoPoco       22  169[BANK2 ] struct .
  3158 ;;  pisca           1  168[BANK2 ] unsigned char 
  3159 ;;  valor           1    0        unsigned char 
  3160 ;;  contador        1    0        unsigned char 
  3161 ;; Return value:  Size  Location     Type
  3162 ;;                  1    wreg      void 
  3163 ;; Registers used:
  3164 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3165 ;; Tracked objects:
  3166 ;;		On entry : 0/0
  3167 ;;		On exit  : 0/0
  3168 ;;		Unchanged: 0/0
  3169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3170 ;;      Params:         0       0       0       0       0       0       0       0       0
  3171 ;;      Locals:         0       0       0     191       0       0       0       0       0
  3172 ;;      Temps:          0       4       0       0       0       0       0       0       0
  3173 ;;      Totals:         0       4       0     191       0       0       0       0       0
  3174 ;;Total ram usage:      195 bytes
  3175 ;; Hardware stack levels required when called:   15
  3176 ;; This function calls:
  3177 ;;		_USBDeviceInit
  3178 ;;		___ftmul
  3179 ;;		___fttol
  3180 ;;		_addSensor
  3181 ;;		_createFrameHeader
  3182 ;;		_delay
  3183 ;;		_init_XBee
  3184 ;;		_le_AD
  3185 ;;		_le_pulsos
  3186 ;;		_millis
  3187 ;;		_putsUSBUSART
  3188 ;;		_send
  3189 ;;		_setChannelMask
  3190 ;;		_setEncryptionMode
  3191 ;;		_setLinkKey
  3192 ;;		_setPAN
  3193 ;;		_setPreambleID
  3194 ;;		_setup_AD
  3195 ;;		_setup_ccp1
  3196 ;;		_setup_pulsos
  3197 ;;		_setup_uart
  3198 ;;		_sprintf
  3199 ;;		_strlen
  3200 ;;		_verificaUSB
  3201 ;; This function is called by:
  3202 ;;		Startup code after reset
  3203 ;; This function uses a non-reentrant model
  3204 ;;
  3205                           
  3206                           	psect	text0
  3207  001272                     __ptext0:
  3208                           	opt stack 0
  3209  001272                     _main:
  3210                           	opt stack 16
  3211                           
  3212                           ;UT.c: 43: uint8_t contador;
  3213                           ;UT.c: 44: uint8_t pisca=0;
  3214                           
  3215                           ;incstack = 0
  3216  001272  0E00               	movlw	0
  3217  001274  0102               	movlb	2	; () banked
  3218  001276  6FA8               	movwf	main@pisca& (0+255),b
  3219                           
  3220                           ; BSR set to: 2
  3221                           ;UT.c: 46: TRISEbits.RE2=0;
  3222  001278  9496               	bcf	3990,2,c	;volatile
  3223                           
  3224                           ; BSR set to: 2
  3225                           ;UT.c: 47: PORTDbits.RD4=0;
  3226  00127A  9883               	bcf	3971,4,c	;volatile
  3227                           
  3228                           ; BSR set to: 2
  3229                           ;UT.c: 48: TRISDbits.RD4=0;
  3230  00127C  9895               	bcf	3989,4,c	;volatile
  3231                           
  3232                           ; BSR set to: 2
  3233                           ;UT.c: 49: PORTDbits.RD5=0;
  3234  00127E  9A83               	bcf	3971,5,c	;volatile
  3235                           
  3236                           ; BSR set to: 2
  3237                           ;UT.c: 50: TRISDbits.RD5=0;
  3238  001280  9A95               	bcf	3989,5,c	;volatile
  3239                           
  3240                           ; BSR set to: 2
  3241                           ;UT.c: 51: PORTDbits.RD6=0;
  3242  001282  9C83               	bcf	3971,6,c	;volatile
  3243                           
  3244                           ; BSR set to: 2
  3245                           ;UT.c: 52: TRISDbits.RD6=0;
  3246  001284  9C95               	bcf	3989,6,c	;volatile
  3247                           
  3248                           ; BSR set to: 2
  3249                           ;UT.c: 53: PORTDbits.RD7=0;
  3250  001286  9E83               	bcf	3971,7,c	;volatile
  3251                           
  3252                           ; BSR set to: 2
  3253                           ;UT.c: 54: TRISDbits.RD7=0;
  3254  001288  9E95               	bcf	3989,7,c	;volatile
  3255                           
  3256                           ;UT.c: 57: for (int i=0;i<25;i++)
  3257  00128A  0E00               	movlw	0
  3258  00128C  6FA7               	movwf	(main@i+1)& (0+255),b
  3259  00128E  0E00               	movlw	0
  3260  001290  6FA6               	movwf	main@i& (0+255),b
  3261  001292                     l10727:
  3262                           
  3263                           ; BSR set to: 2
  3264  001292  BFA7               	btfsc	(main@i+1)& (0+255),7,b
  3265  001294  D006               	goto	l1107
  3266  001296  51A7               	movf	(main@i+1)& (0+255),w,b
  3267  001298  E11C               	bnz	l10739
  3268  00129A  0E19               	movlw	25
  3269  00129C  5DA6               	subwf	main@i& (0+255),w,b
  3270  00129E  B0D8               	btfsc	status,0,c
  3271  0012A0  D018               	goto	u10370
  3272  0012A2                     l1107:
  3273                           
  3274                           ; BSR set to: 2
  3275                           ;UT.c: 58: {
  3276                           ;UT.c: 59: pisca ^= 1;
  3277                           
  3278                           ; BSR set to: 2
  3279  0012A2  0E01               	movlw	1
  3280  0012A4  1BA8               	xorwf	main@pisca& (0+255),f,b
  3281                           
  3282                           ; BSR set to: 2
  3283                           ;UT.c: 60: PORTEbits.RE2 = pisca;
  3284  0012A6  B1A8               	btfsc	main@pisca& (0+255),0,b
  3285  0012A8  D002               	bra	u10365
  3286  0012AA  9484               	bcf	3972,2,c	;volatile
  3287  0012AC  D001               	bra	u10366
  3288  0012AE                     u10365:
  3289  0012AE  8484               	bsf	3972,2,c	;volatile
  3290  0012B0                     u10366:
  3291                           
  3292                           ;UT.c: 61: _delay((unsigned long)((200)*(48000000/4000.0)));
  3293  0012B0  0E0D               	movlw	13
  3294  0012B2  0100               	movlb	0	; () banked
  3295  0012B4  6FF6               	movwf	(??_main+1)& (0+255),b
  3296  0012B6  0E2D               	movlw	45
  3297  0012B8  6FF5               	movwf	??_main& (0+255),b
  3298  0012BA  0ED7               	movlw	215
  3299  0012BC                     u11437:
  3300  0012BC  2EE8               	decfsz	wreg,f,c
  3301  0012BE  D7FE               	bra	u11437
  3302  0012C0  2FF5               	decfsz	??_main& (0+255),f,b
  3303  0012C2  D7FC               	bra	u11437
  3304  0012C4  2FF6               	decfsz	(??_main+1)& (0+255),f,b
  3305  0012C6  D7FA               	bra	u11437
  3306  0012C8  D000               	nop2	
  3307  0012CA  0102               	movlb	2	; () banked
  3308  0012CC  4BA6               	infsnz	main@i& (0+255),f,b
  3309  0012CE  2BA7               	incf	(main@i+1)& (0+255),f,b
  3310  0012D0  D7E0               	goto	l10727
  3311  0012D2                     u10370:
  3312  0012D2                     l10739:
  3313                           
  3314                           ; BSR set to: 2
  3315                           ;UT.c: 62: }
  3316                           ;UT.c: 65: setup_uart(115200);
  3317  0012D2  0E00               	movlw	0
  3318  0012D4  0100               	movlb	0	; () banked
  3319  0012D6  6F6D               	movwf	setup_uart@baudRate& (0+255),b
  3320  0012D8  0EC2               	movlw	194
  3321  0012DA  6F6E               	movwf	(setup_uart@baudRate+1)& (0+255),b
  3322  0012DC  0E01               	movlw	1
  3323  0012DE  6F6F               	movwf	(setup_uart@baudRate+2)& (0+255),b
  3324  0012E0  0E00               	movlw	0
  3325  0012E2  6F70               	movwf	(setup_uart@baudRate+3)& (0+255),b
  3326  0012E4  EC6E  F01F         	call	_setup_uart	;wreg free
  3327                           
  3328                           ;UT.c: 72: setup_uart(115200);
  3329  0012E8  0E00               	movlw	0
  3330  0012EA  0100               	movlb	0	; () banked
  3331  0012EC  6F6D               	movwf	setup_uart@baudRate& (0+255),b
  3332  0012EE  0EC2               	movlw	194
  3333  0012F0  6F6E               	movwf	(setup_uart@baudRate+1)& (0+255),b
  3334  0012F2  0E01               	movlw	1
  3335  0012F4  6F6F               	movwf	(setup_uart@baudRate+2)& (0+255),b
  3336  0012F6  0E00               	movlw	0
  3337  0012F8  6F70               	movwf	(setup_uart@baudRate+3)& (0+255),b
  3338  0012FA  EC6E  F01F         	call	_setup_uart	;wreg free
  3339                           
  3340                           ;UT.c: 75: USBDeviceInit();
  3341  0012FE  ECAD  F011         	call	_USBDeviceInit	;wreg free
  3342                           
  3343                           ;UT.c: 76: setup_AD();
  3344  001302  ECE7  F028         	call	_setup_AD	;wreg free
  3345                           
  3346                           ;UT.c: 77: setup_pulsos();
  3347  001306  ECC4  F01E         	call	_setup_pulsos	;wreg free
  3348                           
  3349                           ;UT.c: 78: setup_ccp1();
  3350  00130A  ECA8  F026         	call	_setup_ccp1	;wreg free
  3351                           
  3352                           ;UT.c: 80: verificaUSB();
  3353  00130E  ECCD  F027         	call	_verificaUSB	;wreg free
  3354                           
  3355                           ;UT.c: 82: init_XBee();
  3356  001312  ECD3  F028         	call	_init_XBee	;wreg free
  3357                           
  3358                           ;UT.c: 84: setPAN(panID);
  3359  001316  0EF7               	movlw	low _panID
  3360  001318  0100               	movlb	0	; () banked
  3361  00131A  6F72               	movwf	setPAN@PANID& (0+255),b
  3362  00131C  0E02               	movlw	high _panID
  3363  00131E  6F73               	movwf	(setPAN@PANID+1)& (0+255),b
  3364  001320  EC97  F024         	call	_setPAN	;wreg free
  3365                           
  3366                           ;UT.c: 85: setChannelMask(Mask);
  3367  001324  0EEF               	movlw	low _Mask
  3368  001326  0100               	movlb	0	; () banked
  3369  001328  6F72               	movwf	setChannelMask@mask& (0+255),b
  3370  00132A  0E02               	movlw	high _Mask
  3371  00132C  6F73               	movwf	(setChannelMask@mask+1)& (0+255),b
  3372  00132E  EC85  F01C         	call	_setChannelMask	;wreg free
  3373                           
  3374                           ;UT.c: 86: setPreambleID(preambleID);
  3375  001332  0102               	movlb	2	; () banked
  3376  001334  51D9               	movf	_preambleID& (0+255),w,b
  3377  001336  EC01  F026         	call	_setPreambleID
  3378                           
  3379                           ;UT.c: 87: setEncryptionMode(encryptEnable);
  3380  00133A  0102               	movlb	2	; () banked
  3381  00133C  51EE               	movf	_encryptEnable& (0+255),w,b
  3382  00133E  EC96  F025         	call	_setEncryptionMode
  3383                           
  3384                           ;UT.c: 88: setLinkKey(encryptKey);
  3385  001342  0E35               	movlw	low _encryptKey
  3386  001344  0100               	movlb	0	; () banked
  3387  001346  6F72               	movwf	setLinkKey@key& (0+255),b
  3388  001348  0E7D               	movlw	high _encryptKey
  3389  00134A  6F73               	movwf	(setLinkKey@key+1)& (0+255),b
  3390  00134C  ECB5  F027         	call	_setLinkKey	;wreg free
  3391  001350                     
  3392                           ;UT.c: 122: {
  3393                           ;UT.c: 123: uint32_t tempo=millis();
  3394  001350  EC6D  F028         	call	_millis	;wreg free
  3395  001354  C060  F297         	movff	?_millis,main@tempo
  3396  001358  C061  F298         	movff	?_millis+1,main@tempo+1
  3397  00135C  C062  F299         	movff	?_millis+2,main@tempo+2
  3398  001360  C063  F29A         	movff	?_millis+3,main@tempo+3
  3399                           
  3400                           ;UT.c: 124: pisca ^= 1;
  3401  001364  0E01               	movlw	1
  3402  001366  0102               	movlb	2	; () banked
  3403  001368  1BA8               	xorwf	main@pisca& (0+255),f,b
  3404                           
  3405                           ; BSR set to: 2
  3406                           ;UT.c: 125: PORTEbits.RE2 = pisca;
  3407  00136A  B1A8               	btfsc	main@pisca& (0+255),0,b
  3408  00136C  D002               	bra	u10385
  3409  00136E  9484               	bcf	3972,2,c	;volatile
  3410  001370  D001               	bra	u10386
  3411  001372                     u10385:
  3412  001372  8484               	bsf	3972,2,c	;volatile
  3413  001374                     u10386:
  3414                           
  3415                           ;UT.c: 128: dadoPoco.nivel1 =(uint16_t)(le_AD(0)*1000.0);
  3416  001374  0E00               	movlw	0
  3417  001376  ECB5  F014         	call	_le_AD
  3418  00137A  C09E  F2A3         	movff	?_le_AD,_main$5946
  3419  00137E  C09F  F2A4         	movff	?_le_AD+1,_main$5946+1
  3420  001382  C0A0  F2A5         	movff	?_le_AD+2,_main$5946+2
  3421                           
  3422                           ;UT.c: 128: dadoPoco.nivel1 =(uint16_t)(le_AD(0)*1000.0);
  3423  001386  0E00               	movlw	0
  3424  001388  0100               	movlb	0	; () banked
  3425  00138A  6F83               	movwf	___ftmul@f2& (0+255),b
  3426  00138C  0E7A               	movlw	122
  3427  00138E  6F84               	movwf	(___ftmul@f2+1)& (0+255),b
  3428  001390  0E44               	movlw	68
  3429  001392  6F85               	movwf	(___ftmul@f2+2)& (0+255),b
  3430  001394  C2A3  F080         	movff	_main$5946,___ftmul@f1
  3431  001398  C2A4  F081         	movff	_main$5946+1,___ftmul@f1+1
  3432  00139C  C2A5  F082         	movff	_main$5946+2,___ftmul@f1+2
  3433  0013A0  ECF6  F018         	call	___ftmul	;wreg free
  3434  0013A4  C080  F0B0         	movff	?___ftmul,___fttol@f1
  3435  0013A8  C081  F0B1         	movff	?___ftmul+1,___fttol@f1+1
  3436  0013AC  C082  F0B2         	movff	?___ftmul+2,___fttol@f1+2
  3437  0013B0  EC7A  F018         	call	___fttol	;wreg free
  3438  0013B4  C0B0  F2AB         	movff	?___fttol,main@dadoPoco+2
  3439  0013B8  C0B1  F2AC         	movff	?___fttol+1,main@dadoPoco+3
  3440                           
  3441                           ;UT.c: 129: dadoPoco.nivel2 =(uint16_t)(le_AD(1)*1000.0);
  3442  0013BC  0E01               	movlw	1
  3443  0013BE  ECB5  F014         	call	_le_AD
  3444  0013C2  C09E  F2A3         	movff	?_le_AD,_main$5946
  3445  0013C6  C09F  F2A4         	movff	?_le_AD+1,_main$5946+1
  3446  0013CA  C0A0  F2A5         	movff	?_le_AD+2,_main$5946+2
  3447                           
  3448                           ;UT.c: 129: dadoPoco.nivel2 =(uint16_t)(le_AD(1)*1000.0);
  3449  0013CE  0E00               	movlw	0
  3450  0013D0  0100               	movlb	0	; () banked
  3451  0013D2  6F83               	movwf	___ftmul@f2& (0+255),b
  3452  0013D4  0E7A               	movlw	122
  3453  0013D6  6F84               	movwf	(___ftmul@f2+1)& (0+255),b
  3454  0013D8  0E44               	movlw	68
  3455  0013DA  6F85               	movwf	(___ftmul@f2+2)& (0+255),b
  3456  0013DC  C2A3  F080         	movff	_main$5946,___ftmul@f1
  3457  0013E0  C2A4  F081         	movff	_main$5946+1,___ftmul@f1+1
  3458  0013E4  C2A5  F082         	movff	_main$5946+2,___ftmul@f1+2
  3459  0013E8  ECF6  F018         	call	___ftmul	;wreg free
  3460  0013EC  C080  F0B0         	movff	?___ftmul,___fttol@f1
  3461  0013F0  C081  F0B1         	movff	?___ftmul+1,___fttol@f1+1
  3462  0013F4  C082  F0B2         	movff	?___ftmul+2,___fttol@f1+2
  3463  0013F8  EC7A  F018         	call	___fttol	;wreg free
  3464  0013FC  C0B0  F2AD         	movff	?___fttol,main@dadoPoco+4
  3465  001400  C0B1  F2AE         	movff	?___fttol+1,main@dadoPoco+5
  3466                           
  3467                           ;UT.c: 130: dadoPoco.pulsos1 =le_pulsos(1,0);
  3468  001404  0E00               	movlw	0
  3469  001406  0100               	movlb	0	; () banked
  3470  001408  6F60               	movwf	le_pulsos@modo& (0+255),b
  3471  00140A  0E01               	movlw	1
  3472  00140C  EC3C  F01B         	call	_le_pulsos
  3473  001410  C060  F2AF         	movff	?_le_pulsos,main@dadoPoco+6
  3474  001414  C061  F2B0         	movff	?_le_pulsos+1,main@dadoPoco+7
  3475  001418  C062  F2B1         	movff	?_le_pulsos+2,main@dadoPoco+8
  3476  00141C  C063  F2B2         	movff	?_le_pulsos+3,main@dadoPoco+9
  3477                           
  3478                           ;UT.c: 131: dadoPoco.pulsos2 =le_pulsos(2,0);
  3479  001420  0E00               	movlw	0
  3480  001422  0100               	movlb	0	; () banked
  3481  001424  6F60               	movwf	le_pulsos@modo& (0+255),b
  3482  001426  0E02               	movlw	2
  3483  001428  EC3C  F01B         	call	_le_pulsos
  3484  00142C  C060  F2B3         	movff	?_le_pulsos,main@dadoPoco+10
  3485  001430  C061  F2B4         	movff	?_le_pulsos+1,main@dadoPoco+11
  3486  001434  C062  F2B5         	movff	?_le_pulsos+2,main@dadoPoco+12
  3487  001438  C063  F2B6         	movff	?_le_pulsos+3,main@dadoPoco+13
  3488                           
  3489                           ;UT.c: 132: dadoPoco.pulsos3 =le_pulsos(3,0);
  3490  00143C  0E00               	movlw	0
  3491  00143E  0100               	movlb	0	; () banked
  3492  001440  6F60               	movwf	le_pulsos@modo& (0+255),b
  3493  001442  0E03               	movlw	3
  3494  001444  EC3C  F01B         	call	_le_pulsos
  3495  001448  C060  F2B7         	movff	?_le_pulsos,main@dadoPoco+14
  3496  00144C  C061  F2B8         	movff	?_le_pulsos+1,main@dadoPoco+15
  3497  001450  C062  F2B9         	movff	?_le_pulsos+2,main@dadoPoco+16
  3498  001454  C063  F2BA         	movff	?_le_pulsos+3,main@dadoPoco+17
  3499                           
  3500                           ;UT.c: 133: dadoPoco.pulsos4 =le_pulsos(4,0);
  3501  001458  0E00               	movlw	0
  3502  00145A  0100               	movlb	0	; () banked
  3503  00145C  6F60               	movwf	le_pulsos@modo& (0+255),b
  3504  00145E  0E04               	movlw	4
  3505  001460  EC3C  F01B         	call	_le_pulsos
  3506  001464  C060  F2BB         	movff	?_le_pulsos,main@dadoPoco+18
  3507  001468  C061  F2BC         	movff	?_le_pulsos+1,main@dadoPoco+19
  3508  00146C  C062  F2BD         	movff	?_le_pulsos+2,main@dadoPoco+20
  3509  001470  C063  F2BE         	movff	?_le_pulsos+3,main@dadoPoco+21
  3510                           
  3511                           ;UT.c: 135: createFrameHeader("poco", Sequence);
  3512  001474  0EFA               	movlw	low STR_1
  3513  001476  0100               	movlb	0	; () banked
  3514  001478  6FF1               	movwf	createFrameHeader@WaspID& (0+255),b
  3515  00147A  0E7F               	movlw	high STR_1
  3516  00147C  6FF2               	movwf	(createFrameHeader@WaspID+1)& (0+255),b
  3517  00147E  C2D7  F0F3         	movff	_Sequence,createFrameHeader@Sequencia
  3518  001482  EC27  F027         	call	_createFrameHeader	;wreg free
  3519                           
  3520                           ;UT.c: 136: Sequence++;
  3521  001486  0102               	movlb	2	; () banked
  3522  001488  2BD7               	incf	_Sequence& (0+255),f,b
  3523                           
  3524                           ; BSR set to: 2
  3525                           ;UT.c: 140: addSensor("NIVEL",123,123);
  3526  00148A  0EE5               	movlw	low STR_2
  3527  00148C  0100               	movlb	0	; () banked
  3528  00148E  6FF1               	movwf	addSensor@sensor& (0+255),b
  3529  001490  0E7F               	movlw	high STR_2
  3530  001492  6FF2               	movwf	(addSensor@sensor+1)& (0+255),b
  3531  001494  0E7B               	movlw	123
  3532  001496  6FF3               	movwf	addSensor@nivel1& (0+255),b
  3533  001498  0E7B               	movlw	123
  3534  00149A  6FF4               	movwf	addSensor@nivel2& (0+255),b
  3535  00149C  EC1A  F025         	call	_addSensor	;wreg free
  3536                           
  3537                           ;UT.c: 143: uint8_t resp=send(RX_ADDRESS, (uint8_t*)frameBuffer, strlen((const char*) fr
      +                          ameBuffer));
  3538  0014A0  0E8C               	movlw	low _RX_ADDRESS
  3539  0014A2  0100               	movlb	0	; () banked
  3540  0014A4  6F7D               	movwf	send@macAddress& (0+255),b
  3541  0014A6  0E03               	movlw	high _RX_ADDRESS
  3542  0014A8  6F7E               	movwf	(send@macAddress+1)& (0+255),b
  3543  0014AA  0EC8               	movlw	low _frameBuffer
  3544  0014AC  6F7F               	movwf	send@pointer& (0+255),b
  3545  0014AE  0E06               	movlw	high _frameBuffer
  3546  0014B0  6F80               	movwf	(send@pointer+1)& (0+255),b
  3547  0014B2  0EC8               	movlw	low _frameBuffer
  3548  0014B4  6F60               	movwf	strlen@s& (0+255),b
  3549  0014B6  0E06               	movlw	high _frameBuffer
  3550  0014B8  6F61               	movwf	(strlen@s+1)& (0+255),b
  3551  0014BA  ECEF  F024         	call	_strlen	;wreg free
  3552  0014BE  C060  F081         	movff	?_strlen,send@length
  3553  0014C2  C061  F082         	movff	?_strlen+1,send@length+1
  3554  0014C6  ECE3  F00E         	call	_send	;wreg free
  3555  0014CA  0102               	movlb	2	; () banked
  3556  0014CC  6F96               	movwf	main@resp& (0+255),b
  3557                           
  3558                           ; BSR set to: 2
  3559                           ;UT.c: 230: if (verificaUSB() && (cdc_trf_state == 0))
  3560  0014CE  ECCD  F027         	call	_verificaUSB	;wreg free
  3561  0014D2  0900               	iorlw	0
  3562  0014D4  B4D8               	btfsc	status,2,c
  3563  0014D6  D051               	goto	l1110
  3564  0014D8  0100               	movlb	0	; () banked
  3565  0014DA  51FF               	movf	_cdc_trf_state& (0+255),w,b
  3566  0014DC  A4D8               	btfss	status,2,c
  3567  0014DE  D04D               	goto	l1110
  3568                           
  3569                           ; BSR set to: 0
  3570                           ;UT.c: 231: {
  3571                           ;UT.c: 232: char data[150];
  3572                           ;UT.c: 234: sprintf(data,"resposta: %2X %2X %2X %2X %2X %2X %2X %2X %2X %2X  %d  %d  %d 
      +                           %d  %d  %d  %d  %d  %d  %d\n\r",
  3573                           ;UT.c: 235: dadosRecebidos[0].data,
  3574                           ;UT.c: 236: dadosRecebidos[1].data,
  3575                           ;UT.c: 237: dadosRecebidos[2].data,
  3576                           ;UT.c: 238: dadosRecebidos[3].data,
  3577                           ;UT.c: 239: dadosRecebidos[4].data,
  3578                           ;UT.c: 240: dadosRecebidos[5].data,
  3579                           ;UT.c: 241: dadosRecebidos[6].data,
  3580                           ;UT.c: 242: dadosRecebidos[7].data,
  3581                           ;UT.c: 243: dadosRecebidos[8].data,
  3582                           ;UT.c: 244: dadosRecebidos[9].data,
  3583  0014E0  0E00               	movlw	low main@data
  3584  0014E2  6FBF               	movwf	sprintf@sp& (0+255),b
  3585  0014E4  0E02               	movlw	high main@data
  3586  0014E6  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  3587  0014E8  0EFC               	movlw	low STR_3
  3588  0014EA  6FC1               	movwf	sprintf@f& (0+255),b
  3589  0014EC  0E7D               	movlw	high STR_3
  3590  0014EE  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  3591  0014F0  C2C0  F0C3         	movff	_dadosRecebidos+1,?_sprintf+4	;volatile
  3592  0014F4  6BC4               	clrf	(?_sprintf+5)& (0+255),b
  3593  0014F6  C2C2  F0C5         	movff	_dadosRecebidos+3,?_sprintf+6	;volatile
  3594  0014FA  6BC6               	clrf	(?_sprintf+7)& (0+255),b
  3595  0014FC  C2C4  F0C7         	movff	_dadosRecebidos+5,?_sprintf+8	;volatile
  3596  001500  6BC8               	clrf	(?_sprintf+9)& (0+255),b
  3597  001502  C2C6  F0C9         	movff	_dadosRecebidos+7,?_sprintf+10	;volatile
  3598  001506  6BCA               	clrf	(?_sprintf+11)& (0+255),b
  3599  001508  C2C8  F0CB         	movff	_dadosRecebidos+9,?_sprintf+12	;volatile
  3600  00150C  6BCC               	clrf	(?_sprintf+13)& (0+255),b
  3601  00150E  C2CA  F0CD         	movff	_dadosRecebidos+11,?_sprintf+14	;volatile
  3602  001512  6BCE               	clrf	(?_sprintf+15)& (0+255),b
  3603  001514  C2CC  F0CF         	movff	_dadosRecebidos+13,?_sprintf+16	;volatile
  3604  001518  6BD0               	clrf	(?_sprintf+17)& (0+255),b
  3605  00151A  C2CE  F0D1         	movff	_dadosRecebidos+15,?_sprintf+18	;volatile
  3606  00151E  6BD2               	clrf	(?_sprintf+19)& (0+255),b
  3607  001520  C2D0  F0D3         	movff	_dadosRecebidos+17,?_sprintf+20	;volatile
  3608  001524  6BD4               	clrf	(?_sprintf+21)& (0+255),b
  3609  001526  C2D2  F0D5         	movff	_dadosRecebidos+19,?_sprintf+22	;volatile
  3610  00152A  6BD6               	clrf	(?_sprintf+23)& (0+255),b
  3611  00152C  C2BF  F0D7         	movff	_dadosRecebidos,?_sprintf+24	;volatile
  3612  001530  6BD8               	clrf	(?_sprintf+25)& (0+255),b
  3613  001532  C2C1  F0D9         	movff	_dadosRecebidos+2,?_sprintf+26	;volatile
  3614  001536  6BDA               	clrf	(?_sprintf+27)& (0+255),b
  3615  001538  C2C3  F0DB         	movff	_dadosRecebidos+4,?_sprintf+28	;volatile
  3616  00153C  6BDC               	clrf	(?_sprintf+29)& (0+255),b
  3617  00153E  C2C5  F0DD         	movff	_dadosRecebidos+6,?_sprintf+30	;volatile
  3618  001542  6BDE               	clrf	(?_sprintf+31)& (0+255),b
  3619  001544  C2C7  F0DF         	movff	_dadosRecebidos+8,?_sprintf+32	;volatile
  3620  001548  6BE0               	clrf	(?_sprintf+33)& (0+255),b
  3621  00154A  C2C9  F0E1         	movff	_dadosRecebidos+10,?_sprintf+34	;volatile
  3622  00154E  6BE2               	clrf	(?_sprintf+35)& (0+255),b
  3623  001550  C2CB  F0E3         	movff	_dadosRecebidos+12,?_sprintf+36	;volatile
  3624  001554  6BE4               	clrf	(?_sprintf+37)& (0+255),b
  3625  001556  C2CD  F0E5         	movff	_dadosRecebidos+14,?_sprintf+38	;volatile
  3626  00155A  6BE6               	clrf	(?_sprintf+39)& (0+255),b
  3627  00155C  C2CF  F0E7         	movff	_dadosRecebidos+16,?_sprintf+40	;volatile
  3628  001560  6BE8               	clrf	(?_sprintf+41)& (0+255),b
  3629  001562  C2D8  F0E9         	movff	_teste0,?_sprintf+42
  3630  001566  6BEA               	clrf	(?_sprintf+43)& (0+255),b
  3631  001568  EC09  F000         	call	_sprintf	;wreg free
  3632                           
  3633                           ;UT.c: 256: putsUSBUSART(data);
  3634  00156C  0E00               	movlw	low main@data
  3635  00156E  0100               	movlb	0	; () banked
  3636  001570  6F60               	movwf	putsUSBUSART@data& (0+255),b
  3637  001572  0E02               	movlw	high main@data
  3638  001574  6F61               	movwf	(putsUSBUSART@data+1)& (0+255),b
  3639  001576  EC6E  F025         	call	_putsUSBUSART	;wreg free
  3640  00157A                     l1110:
  3641                           
  3642                           ;UT.c: 257: }
  3643                           ;UT.c: 258: uint32_t deltaTempo=(millis()-tempo);
  3644  00157A  C297  F0F5         	movff	main@tempo,??_main
  3645  00157E  C298  F0F6         	movff	main@tempo+1,??_main+1
  3646  001582  C299  F0F7         	movff	main@tempo+2,??_main+2
  3647  001586  C29A  F0F8         	movff	main@tempo+3,??_main+3
  3648  00158A  0100               	movlb	0	; () banked
  3649  00158C  1FF5               	comf	??_main& (0+255),f,b
  3650  00158E  1FF6               	comf	(??_main+1)& (0+255),f,b
  3651  001590  1FF7               	comf	(??_main+2)& (0+255),f,b
  3652  001592  1FF8               	comf	(??_main+3)& (0+255),f,b
  3653  001594  2BF5               	incf	??_main& (0+255),f,b
  3654  001596  0E00               	movlw	0
  3655  001598  23F6               	addwfc	(??_main+1)& (0+255),f,b
  3656  00159A  23F7               	addwfc	(??_main+2)& (0+255),f,b
  3657  00159C  23F8               	addwfc	(??_main+3)& (0+255),f,b
  3658  00159E  EC6D  F028         	call	_millis	;wreg free
  3659  0015A2  0100               	movlb	0	; () banked
  3660  0015A4  51F5               	movf	??_main& (0+255),w,b
  3661  0015A6  2560               	addwf	?_millis& (0+255),w,b
  3662  0015A8  0102               	movlb	2	; () banked
  3663  0015AA  6F9F               	movwf	main@deltaTempo& (0+255),b
  3664  0015AC  0100               	movlb	0	; () banked
  3665  0015AE  51F6               	movf	(??_main+1)& (0+255),w,b
  3666  0015B0  2161               	addwfc	(?_millis+1)& (0+255),w,b
  3667  0015B2  0102               	movlb	2	; () banked
  3668  0015B4  6FA0               	movwf	(main@deltaTempo+1)& (0+255),b
  3669  0015B6  0100               	movlb	0	; () banked
  3670  0015B8  51F7               	movf	(??_main+2)& (0+255),w,b
  3671  0015BA  2162               	addwfc	(?_millis+2)& (0+255),w,b
  3672  0015BC  0102               	movlb	2	; () banked
  3673  0015BE  6FA1               	movwf	(main@deltaTempo+2)& (0+255),b
  3674  0015C0  0100               	movlb	0	; () banked
  3675  0015C2  51F8               	movf	(??_main+3)& (0+255),w,b
  3676  0015C4  2163               	addwfc	(?_millis+3)& (0+255),w,b
  3677  0015C6  0102               	movlb	2	; () banked
  3678  0015C8  6FA2               	movwf	(main@deltaTempo+3)& (0+255),b
  3679                           
  3680                           ; BSR set to: 2
  3681                           ;UT.c: 259: if (deltaTempo<30000)
  3682  0015CA  51A2               	movf	(main@deltaTempo+3)& (0+255),w,b
  3683  0015CC  11A1               	iorwf	(main@deltaTempo+2)& (0+255),w,b
  3684  0015CE  E105               	bnz	u10411
  3685  0015D0  0E30               	movlw	48
  3686  0015D2  5D9F               	subwf	main@deltaTempo& (0+255),w,b
  3687  0015D4  0E75               	movlw	117
  3688  0015D6  59A0               	subwfb	(main@deltaTempo+1)& (0+255),w,b
  3689  0015D8  B0D8               	btfsc	status,0,c
  3690  0015DA                     u10411:
  3691  0015DA  D6BA               	goto	l1109
  3692                           
  3693                           ; BSR set to: 2
  3694                           ;UT.c: 260: {
  3695                           ;UT.c: 261: uint32_t tempoTimeOut=30000-deltaTempo;
  3696  0015DC  C29F  F0F5         	movff	main@deltaTempo,??_main
  3697  0015E0  C2A0  F0F6         	movff	main@deltaTempo+1,??_main+1
  3698  0015E4  C2A1  F0F7         	movff	main@deltaTempo+2,??_main+2
  3699  0015E8  C2A2  F0F8         	movff	main@deltaTempo+3,??_main+3
  3700  0015EC  0100               	movlb	0	; () banked
  3701  0015EE  1FF5               	comf	??_main& (0+255),f,b
  3702  0015F0  1FF6               	comf	(??_main+1)& (0+255),f,b
  3703  0015F2  1FF7               	comf	(??_main+2)& (0+255),f,b
  3704  0015F4  1FF8               	comf	(??_main+3)& (0+255),f,b
  3705  0015F6  2BF5               	incf	??_main& (0+255),f,b
  3706  0015F8  0E00               	movlw	0
  3707  0015FA  23F6               	addwfc	(??_main+1)& (0+255),f,b
  3708  0015FC  23F7               	addwfc	(??_main+2)& (0+255),f,b
  3709  0015FE  23F8               	addwfc	(??_main+3)& (0+255),f,b
  3710  001600  0E30               	movlw	48
  3711  001602  25F5               	addwf	??_main& (0+255),w,b
  3712  001604  0102               	movlb	2	; () banked
  3713  001606  6F9B               	movwf	main@tempoTimeOut& (0+255),b
  3714  001608  0E75               	movlw	117
  3715  00160A  0100               	movlb	0	; () banked
  3716  00160C  21F6               	addwfc	(??_main+1)& (0+255),w,b
  3717  00160E  0102               	movlb	2	; () banked
  3718  001610  6F9C               	movwf	(main@tempoTimeOut+1)& (0+255),b
  3719  001612  0E00               	movlw	0
  3720  001614  0100               	movlb	0	; () banked
  3721  001616  21F7               	addwfc	(??_main+2)& (0+255),w,b
  3722  001618  0102               	movlb	2	; () banked
  3723  00161A  6F9D               	movwf	(main@tempoTimeOut+2)& (0+255),b
  3724  00161C  0E00               	movlw	0
  3725  00161E  0100               	movlb	0	; () banked
  3726  001620  21F8               	addwfc	(??_main+3)& (0+255),w,b
  3727  001622  0102               	movlb	2	; () banked
  3728  001624  6F9E               	movwf	(main@tempoTimeOut+3)& (0+255),b
  3729                           
  3730                           ; BSR set to: 2
  3731                           ;UT.c: 262: delay(tempoTimeOut);
  3732  001626  C29B  F06D         	movff	main@tempoTimeOut,delay@time
  3733  00162A  C29C  F06E         	movff	main@tempoTimeOut+1,delay@time+1
  3734  00162E  C29D  F06F         	movff	main@tempoTimeOut+2,delay@time+2
  3735  001632  C29E  F070         	movff	main@tempoTimeOut+3,delay@time+3
  3736  001636  EC04  F023         	call	_delay	;wreg free
  3737  00163A  D68A               	goto	l1109
  3738  00163C                     __end_of_main:
  3739                           	opt stack 0
  3740                           tblptru	equ	0xFF8
  3741                           tblptrh	equ	0xFF7
  3742                           tblptrl	equ	0xFF6
  3743                           tablat	equ	0xFF5
  3744                           postinc0	equ	0xFEE
  3745                           wreg	equ	0xFE8
  3746                           postdec1	equ	0xFE5
  3747                           fsr1h	equ	0xFE2
  3748                           fsr1l	equ	0xFE1
  3749                           status	equ	0xFD8
  3750                           
  3751 ;; *************** function _strlen *****************
  3752 ;; Defined at:
  3753 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strlen.c"
  3754 ;; Parameters:    Size  Location     Type
  3755 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  3756 ;;		 -> recebeByteLoRaWan@frameData(100), SYS(5), MAC(5), TxLoRaWan@comando(200), 
  3757 ;;		 -> DataRate@comando(200), SetBandWidth@comando(200), SetSpreadingFactor@comando(200), MacSave@comando(200), 
  3758 ;;		 -> GetAdr@comando(200), SetAdr@comando(200), SetChannelLoRaWan@comando(200), MAC_JOIN_OTAA(10), 
  3759 ;;		 -> SYS_RESET(6), SetAppKey@comando(200), SetAppEUI@comando(200), SetDevEUI@comando(200), 
  3760 ;;		 -> GetDnctr@comando(200), STR_23(16), STR_22(7), STR_21(14), 
  3761 ;;		 -> STR_20(8), STR_19(8), STR_18(10), STR_17(17), 
  3762 ;;		 -> STR_16(11), STR_15(5), STR_14(32), STR_13(7), 
  3763 ;;		 -> STR_12(11), STR_11(11), STR_10(14), STR_9(3), 
  3764 ;;		 -> frameBuffer(300), 
  3765 ;; Auto vars:     Size  Location     Type
  3766 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
  3767 ;;		 -> recebeByteLoRaWan@frameData(100), SYS(5), MAC(5), TxLoRaWan@comando(200), 
  3768 ;;		 -> DataRate@comando(200), SetBandWidth@comando(200), SetSpreadingFactor@comando(200), MacSave@comando(200), 
  3769 ;;		 -> GetAdr@comando(200), SetAdr@comando(200), SetChannelLoRaWan@comando(200), MAC_JOIN_OTAA(10), 
  3770 ;;		 -> SYS_RESET(6), SetAppKey@comando(200), SetAppEUI@comando(200), SetDevEUI@comando(200), 
  3771 ;;		 -> GetDnctr@comando(200), STR_23(16), STR_22(7), STR_21(14), 
  3772 ;;		 -> STR_20(8), STR_19(8), STR_18(10), STR_17(17), 
  3773 ;;		 -> STR_16(11), STR_15(5), STR_14(32), STR_13(7), 
  3774 ;;		 -> STR_12(11), STR_11(11), STR_10(14), STR_9(3), 
  3775 ;;		 -> frameBuffer(300), 
  3776 ;; Return value:  Size  Location     Type
  3777 ;;                  2    0[BANK0 ] unsigned int 
  3778 ;; Registers used:
  3779 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  3780 ;; Tracked objects:
  3781 ;;		On entry : 0/0
  3782 ;;		On exit  : 0/0
  3783 ;;		Unchanged: 0/0
  3784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3785 ;;      Params:         0       2       0       0       0       0       0       0       0
  3786 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3787 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3788 ;;      Totals:         0       6       0       0       0       0       0       0       0
  3789 ;;Total ram usage:        6 bytes
  3790 ;; Hardware stack levels used:    1
  3791 ;; Hardware stack levels required when called:   10
  3792 ;; This function calls:
  3793 ;;		Nothing
  3794 ;; This function is called by:
  3795 ;;		_main
  3796 ;;		_enviaComando
  3797 ;; This function uses a non-reentrant model
  3798 ;;
  3799                           
  3800                           	psect	text1
  3801  0049DE                     __ptext1:
  3802                           	opt stack 0
  3803  0049DE                     _strlen:
  3804                           	opt stack 20
  3805                           
  3806                           ;incstack = 0
  3807  0049DE  C060  F064         	movff	strlen@s,strlen@cp
  3808  0049E2  C061  F065         	movff	strlen@s+1,strlen@cp+1
  3809  0049E6  D003               	goto	l3556
  3810  0049E8  0100               	movlb	0	; () banked
  3811  0049EA  4B64               	infsnz	strlen@cp& (0+255),f,b
  3812  0049EC  2B65               	incf	(strlen@cp+1)& (0+255),f,b
  3813  0049EE                     l3556:
  3814                           
  3815                           ; BSR set to: 0
  3816  0049EE  C064  FFF6         	movff	strlen@cp,tblptrl
  3817  0049F2  C065  FFF7         	movff	strlen@cp+1,tblptrh
  3818  0049F6  6AF8               	clrf	tblptru,c
  3819  0049F8  0E07               	movlw	(high __ramtop+-1)
  3820  0049FA  64F7               	cpfsgt	tblptrh,c
  3821  0049FC  D003               	bra	u9847
  3822  0049FE  0008               	tblrd		*
  3823  004A00  50F5               	movf	tablat,w,c
  3824  004A02  D005               	bra	u9840
  3825  004A04                     u9847:
  3826  004A04  CFF6 FFE9          	movff	tblptrl,fsr0l
  3827  004A08  CFF7 FFEA          	movff	tblptrh,fsr0h
  3828  004A0C  50EF               	movf	indf0,w,c
  3829  004A0E                     u9840:
  3830  004A0E  0900               	iorlw	0
  3831  004A10  A4D8               	btfss	status,2,c
  3832  004A12  D7EA               	goto	l3557
  3833  004A14  C060  F062         	movff	strlen@s,??_strlen
  3834  004A18  C061  F063         	movff	strlen@s+1,??_strlen+1
  3835  004A1C  0100               	movlb	0	; () banked
  3836  004A1E  1F62               	comf	??_strlen& (0+255),f,b
  3837  004A20  1F63               	comf	(??_strlen+1)& (0+255),f,b
  3838  004A22  4B62               	infsnz	??_strlen& (0+255),f,b
  3839  004A24  2B63               	incf	(??_strlen+1)& (0+255),f,b
  3840  004A26  5164               	movf	strlen@cp& (0+255),w,b
  3841  004A28  2562               	addwf	??_strlen& (0+255),w,b
  3842  004A2A  6F60               	movwf	?_strlen& (0+255),b
  3843  004A2C  5165               	movf	(strlen@cp+1)& (0+255),w,b
  3844  004A2E  2163               	addwfc	(??_strlen+1)& (0+255),w,b
  3845  004A30  6F61               	movwf	(?_strlen+1)& (0+255),b
  3846  004A32  0012               	return	
  3847  004A34                     __end_of_strlen:
  3848                           	opt stack 0
  3849                           tblptru	equ	0xFF8
  3850                           tblptrh	equ	0xFF7
  3851                           tblptrl	equ	0xFF6
  3852                           tablat	equ	0xFF5
  3853                           indf0	equ	0xFEF
  3854                           postinc0	equ	0xFEE
  3855                           fsr0h	equ	0xFEA
  3856                           fsr0l	equ	0xFE9
  3857                           wreg	equ	0xFE8
  3858                           postdec1	equ	0xFE5
  3859                           fsr1h	equ	0xFE2
  3860                           fsr1l	equ	0xFE1
  3861                           status	equ	0xFD8
  3862                           
  3863 ;; *************** function _setup_uart *****************
  3864 ;; Defined at:
  3865 ;;		line 13 in file "uart/uart.c"
  3866 ;; Parameters:    Size  Location     Type
  3867 ;;  baudRate        4   13[BANK0 ] unsigned long 
  3868 ;; Auto vars:     Size  Location     Type
  3869 ;;  brg             4   17[BANK0 ] unsigned long 
  3870 ;; Return value:  Size  Location     Type
  3871 ;;                  1    wreg      void 
  3872 ;; Registers used:
  3873 ;;		wreg, status,2, status,0, cstack
  3874 ;; Tracked objects:
  3875 ;;		On entry : 0/0
  3876 ;;		On exit  : 0/0
  3877 ;;		Unchanged: 0/0
  3878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3879 ;;      Params:         0       4       0       0       0       0       0       0       0
  3880 ;;      Locals:         0       4       0       0       0       0       0       0       0
  3881 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3882 ;;      Totals:         0       8       0       0       0       0       0       0       0
  3883 ;;Total ram usage:        8 bytes
  3884 ;; Hardware stack levels used:    1
  3885 ;; Hardware stack levels required when called:   11
  3886 ;; This function calls:
  3887 ;;		___lldiv
  3888 ;; This function is called by:
  3889 ;;		_main
  3890 ;; This function uses a non-reentrant model
  3891 ;;
  3892                           
  3893                           	psect	text2
  3894  003EDC                     __ptext2:
  3895                           	opt stack 0
  3896  003EDC                     _setup_uart:
  3897                           	opt stack 19
  3898                           
  3899                           ;uart.c: 15: uint32_t brg;
  3900                           ;uart.c: 17: PORTCbits.RC6=1;
  3901                           
  3902                           ; BSR set to: 0
  3903                           ;incstack = 0
  3904  003EDC  8C82               	bsf	3970,6,c	;volatile
  3905                           
  3906                           ;uart.c: 18: TRISCbits.RC6=0;
  3907  003EDE  9C94               	bcf	3988,6,c	;volatile
  3908                           
  3909                           ;uart.c: 20: PORTCbits.RC7=1;
  3910  003EE0  8E82               	bsf	3970,7,c	;volatile
  3911                           
  3912                           ;uart.c: 21: TRISCbits.RC7=1;
  3913  003EE2  8E94               	bsf	3988,7,c	;volatile
  3914                           
  3915                           ;uart.c: 23: TXSTAbits.BRGH=1;
  3916  003EE4  84AC               	bsf	4012,2,c	;volatile
  3917                           
  3918                           ;uart.c: 24: BAUDCONbits.BRG16=1;
  3919  003EE6  86B8               	bsf	4024,3,c	;volatile
  3920                           
  3921                           ;uart.c: 25: brg = ((48000000*10/4)/(baudRate)-5);
  3922  003EE8  0E00               	movlw	0
  3923  003EEA  0100               	movlb	0	; () banked
  3924  003EEC  6F60               	movwf	___lldiv@dividend& (0+255),b
  3925  003EEE  0E0E               	movlw	14
  3926  003EF0  6F61               	movwf	(___lldiv@dividend+1)& (0+255),b
  3927  003EF2  0E27               	movlw	39
  3928  003EF4  6F62               	movwf	(___lldiv@dividend+2)& (0+255),b
  3929  003EF6  0E07               	movlw	7
  3930  003EF8  6F63               	movwf	(___lldiv@dividend+3)& (0+255),b
  3931  003EFA  C06D  F064         	movff	setup_uart@baudRate,___lldiv@divisor
  3932  003EFE  C06E  F065         	movff	setup_uart@baudRate+1,___lldiv@divisor+1
  3933  003F02  C06F  F066         	movff	setup_uart@baudRate+2,___lldiv@divisor+2
  3934  003F06  C070  F067         	movff	setup_uart@baudRate+3,___lldiv@divisor+3
  3935  003F0A  EC47  F022         	call	___lldiv	;wreg free
  3936  003F0E  0EFB               	movlw	251
  3937  003F10  0100               	movlb	0	; () banked
  3938  003F12  2560               	addwf	?___lldiv& (0+255),w,b
  3939  003F14  6F71               	movwf	setup_uart@brg& (0+255),b
  3940  003F16  0EFF               	movlw	255
  3941  003F18  2161               	addwfc	(?___lldiv+1)& (0+255),w,b
  3942  003F1A  6F72               	movwf	(setup_uart@brg+1)& (0+255),b
  3943  003F1C  0EFF               	movlw	255
  3944  003F1E  2162               	addwfc	(?___lldiv+2)& (0+255),w,b
  3945  003F20  6F73               	movwf	(setup_uart@brg+2)& (0+255),b
  3946  003F22  0EFF               	movlw	255
  3947  003F24  2163               	addwfc	(?___lldiv+3)& (0+255),w,b
  3948  003F26  6F74               	movwf	(setup_uart@brg+3)& (0+255),b
  3949                           
  3950                           ;uart.c: 26: brg /= 10;
  3951  003F28  C071  F060         	movff	setup_uart@brg,___lldiv@dividend
  3952  003F2C  C072  F061         	movff	setup_uart@brg+1,___lldiv@dividend+1
  3953  003F30  C073  F062         	movff	setup_uart@brg+2,___lldiv@dividend+2
  3954  003F34  C074  F063         	movff	setup_uart@brg+3,___lldiv@dividend+3
  3955  003F38  0E0A               	movlw	10
  3956  003F3A  6F64               	movwf	___lldiv@divisor& (0+255),b
  3957  003F3C  0E00               	movlw	0
  3958  003F3E  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  3959  003F40  0E00               	movlw	0
  3960  003F42  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  3961  003F44  0E00               	movlw	0
  3962  003F46  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  3963  003F48  EC47  F022         	call	___lldiv	;wreg free
  3964  003F4C  C060  F071         	movff	?___lldiv,setup_uart@brg
  3965  003F50  C061  F072         	movff	?___lldiv+1,setup_uart@brg+1
  3966  003F54  C062  F073         	movff	?___lldiv+2,setup_uart@brg+2
  3967  003F58  C063  F074         	movff	?___lldiv+3,setup_uart@brg+3
  3968                           
  3969                           ;uart.c: 27: SPBRG=(uint8_t)brg;
  3970  003F5C  C071  FFAF         	movff	setup_uart@brg,4015	;volatile
  3971                           
  3972                           ;uart.c: 28: SPBRGH=(uint8_t)(brg >> 8);
  3973  003F60  C072  FFB0         	movff	setup_uart@brg+1,4016	;volatile
  3974                           
  3975                           ;uart.c: 30: TXSTAbits.SYNC=0;
  3976  003F64  98AC               	bcf	4012,4,c	;volatile
  3977                           
  3978                           ;uart.c: 31: TXSTAbits.SENDB=0;
  3979  003F66  96AC               	bcf	4012,3,c	;volatile
  3980                           
  3981                           ;uart.c: 32: RCSTAbits.SPEN=1;
  3982  003F68  8EAB               	bsf	4011,7,c	;volatile
  3983                           
  3984                           ;uart.c: 34: BAUDCONbits.TXCKP=0;
  3985  003F6A  98B8               	bcf	4024,4,c	;volatile
  3986                           
  3987                           ;uart.c: 35: BAUDCONbits.RXDTP=0;
  3988  003F6C  9AB8               	bcf	4024,5,c	;volatile
  3989                           
  3990                           ;uart.c: 36: BAUDCONbits.ABDEN=0;
  3991  003F6E  90B8               	bcf	4024,0,c	;volatile
  3992                           
  3993                           ;uart.c: 37: TXSTAbits.TX9=0;
  3994  003F70  9CAC               	bcf	4012,6,c	;volatile
  3995                           
  3996                           ;uart.c: 38: RCSTAbits.RX9=0;
  3997  003F72  9CAB               	bcf	4011,6,c	;volatile
  3998                           
  3999                           ;uart.c: 40: RCSTAbits.CREN=1;
  4000  003F74  88AB               	bsf	4011,4,c	;volatile
  4001                           
  4002                           ;uart.c: 41: TXSTAbits.TXEN=1;
  4003  003F76  8AAC               	bsf	4012,5,c	;volatile
  4004                           
  4005                           ;uart.c: 43: RCIE=1;
  4006  003F78  8A9D               	bsf	3997,5,c	;volatile
  4007  003F7A  0012               	return		;funcret
  4008  003F7C                     __end_of_setup_uart:
  4009                           	opt stack 0
  4010                           tblptru	equ	0xFF8
  4011                           tblptrh	equ	0xFF7
  4012                           tblptrl	equ	0xFF6
  4013                           tablat	equ	0xFF5
  4014                           indf0	equ	0xFEF
  4015                           postinc0	equ	0xFEE
  4016                           fsr0h	equ	0xFEA
  4017                           fsr0l	equ	0xFE9
  4018                           wreg	equ	0xFE8
  4019                           postdec1	equ	0xFE5
  4020                           fsr1h	equ	0xFE2
  4021                           fsr1l	equ	0xFE1
  4022                           status	equ	0xFD8
  4023                           
  4024 ;; *************** function _setup_pulsos *****************
  4025 ;; Defined at:
  4026 ;;		line 10 in file "Pulses.c"
  4027 ;; Parameters:    Size  Location     Type
  4028 ;;		None
  4029 ;; Auto vars:     Size  Location     Type
  4030 ;;		None
  4031 ;; Return value:  Size  Location     Type
  4032 ;;                  1    wreg      void 
  4033 ;; Registers used:
  4034 ;;		wreg, status,2
  4035 ;; Tracked objects:
  4036 ;;		On entry : 0/0
  4037 ;;		On exit  : 0/0
  4038 ;;		Unchanged: 0/0
  4039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4040 ;;      Params:         0       0       0       0       0       0       0       0       0
  4041 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4042 ;;      Temps:          0       1       0       0       0       0       0       0       0
  4043 ;;      Totals:         0       1       0       0       0       0       0       0       0
  4044 ;;Total ram usage:        1 bytes
  4045 ;; Hardware stack levels used:    1
  4046 ;; Hardware stack levels required when called:   10
  4047 ;; This function calls:
  4048 ;;		Nothing
  4049 ;; This function is called by:
  4050 ;;		_main
  4051 ;; This function uses a non-reentrant model
  4052 ;;
  4053                           
  4054                           	psect	text3
  4055  003D88                     __ptext3:
  4056                           	opt stack 0
  4057  003D88                     _setup_pulsos:
  4058                           	opt stack 20
  4059                           
  4060                           ;Pulses.c: 12: TRISDbits.RD0=1;
  4061                           
  4062                           ;incstack = 0
  4063  003D88  8095               	bsf	3989,0,c	;volatile
  4064                           
  4065                           ;Pulses.c: 13: dig_1=PORTDbits.RD0;
  4066  003D8A  A083               	btfss	3971,0,c	;volatile
  4067  003D8C  D004               	goto	u9640
  4068  003D8E  0100               	movlb	0	; () banked
  4069  003D90  6B60               	clrf	??_setup_pulsos& (0+255),b
  4070  003D92  2B60               	incf	??_setup_pulsos& (0+255),f,b
  4071  003D94  D002               	goto	u9648
  4072  003D96                     u9640:
  4073  003D96  0100               	movlb	0	; () banked
  4074  003D98  6B60               	clrf	??_setup_pulsos& (0+255),b
  4075  003D9A                     u9648:
  4076  003D9A  5160               	movf	??_setup_pulsos& (0+255),w,b
  4077  003D9C  0101               	movlb	1	; () banked
  4078  003D9E  6FCA               	movwf	_dig_1& (0+255),b	;volatile
  4079  003DA0  6BCB               	clrf	(_dig_1+1)& (0+255),b	;volatile
  4080                           
  4081                           ; BSR set to: 1
  4082                           ;Pulses.c: 14: TRISDbits.RD1=1;
  4083  003DA2  8295               	bsf	3989,1,c	;volatile
  4084                           
  4085                           ;Pulses.c: 15: dig_2=PORTDbits.RD1;
  4086  003DA4  A283               	btfss	3971,1,c	;volatile
  4087  003DA6  D004               	goto	u9650
  4088  003DA8  0100               	movlb	0	; () banked
  4089  003DAA  6B60               	clrf	??_setup_pulsos& (0+255),b
  4090  003DAC  2B60               	incf	??_setup_pulsos& (0+255),f,b
  4091  003DAE  D002               	goto	u9658
  4092  003DB0                     u9650:
  4093  003DB0  0100               	movlb	0	; () banked
  4094  003DB2  6B60               	clrf	??_setup_pulsos& (0+255),b
  4095  003DB4                     u9658:
  4096  003DB4  5160               	movf	??_setup_pulsos& (0+255),w,b
  4097  003DB6  0101               	movlb	1	; () banked
  4098  003DB8  6FC8               	movwf	_dig_2& (0+255),b	;volatile
  4099  003DBA  6BC9               	clrf	(_dig_2+1)& (0+255),b	;volatile
  4100                           
  4101                           ; BSR set to: 1
  4102                           ;Pulses.c: 16: TRISDbits.RD2=1;
  4103  003DBC  8495               	bsf	3989,2,c	;volatile
  4104                           
  4105                           ;Pulses.c: 17: dig_3=PORTDbits.RD2;
  4106  003DBE  A483               	btfss	3971,2,c	;volatile
  4107  003DC0  D004               	goto	u9660
  4108  003DC2  0100               	movlb	0	; () banked
  4109  003DC4  6B60               	clrf	??_setup_pulsos& (0+255),b
  4110  003DC6  2B60               	incf	??_setup_pulsos& (0+255),f,b
  4111  003DC8  D002               	goto	u9668
  4112  003DCA                     u9660:
  4113  003DCA  0100               	movlb	0	; () banked
  4114  003DCC  6B60               	clrf	??_setup_pulsos& (0+255),b
  4115  003DCE                     u9668:
  4116  003DCE  5160               	movf	??_setup_pulsos& (0+255),w,b
  4117  003DD0  0101               	movlb	1	; () banked
  4118  003DD2  6FC6               	movwf	_dig_3& (0+255),b	;volatile
  4119  003DD4  6BC7               	clrf	(_dig_3+1)& (0+255),b	;volatile
  4120                           
  4121                           ; BSR set to: 1
  4122                           ;Pulses.c: 18: TRISDbits.RD3=1;
  4123  003DD6  8695               	bsf	3989,3,c	;volatile
  4124                           
  4125                           ;Pulses.c: 19: dig_4=PORTDbits.RD3;
  4126  003DD8  A683               	btfss	3971,3,c	;volatile
  4127  003DDA  D004               	goto	u9670
  4128  003DDC  0100               	movlb	0	; () banked
  4129  003DDE  6B60               	clrf	??_setup_pulsos& (0+255),b
  4130  003DE0  2B60               	incf	??_setup_pulsos& (0+255),f,b
  4131  003DE2  D002               	goto	u9678
  4132  003DE4                     u9670:
  4133  003DE4  0100               	movlb	0	; () banked
  4134  003DE6  6B60               	clrf	??_setup_pulsos& (0+255),b
  4135  003DE8                     u9678:
  4136  003DE8  5160               	movf	??_setup_pulsos& (0+255),w,b
  4137  003DEA  0101               	movlb	1	; () banked
  4138  003DEC  6FC4               	movwf	_dig_4& (0+255),b	;volatile
  4139  003DEE  6BC5               	clrf	(_dig_4+1)& (0+255),b	;volatile
  4140                           
  4141                           ;Pulses.c: 20: freqPulses1=0;
  4142  003DF0  0E00               	movlw	0
  4143  003DF2  6FA6               	movwf	_freqPulses1& (0+255),b	;volatile
  4144  003DF4  0E00               	movlw	0
  4145  003DF6  6FA7               	movwf	(_freqPulses1+1)& (0+255),b	;volatile
  4146  003DF8  0E00               	movlw	0
  4147  003DFA  6FA8               	movwf	(_freqPulses1+2)& (0+255),b	;volatile
  4148  003DFC  0E00               	movlw	0
  4149  003DFE  6FA9               	movwf	(_freqPulses1+3)& (0+255),b	;volatile
  4150                           
  4151                           ;Pulses.c: 21: freqPulses2=0;
  4152  003E00  0E00               	movlw	0
  4153  003E02  6FA2               	movwf	_freqPulses2& (0+255),b	;volatile
  4154  003E04  0E00               	movlw	0
  4155  003E06  6FA3               	movwf	(_freqPulses2+1)& (0+255),b	;volatile
  4156  003E08  0E00               	movlw	0
  4157  003E0A  6FA4               	movwf	(_freqPulses2+2)& (0+255),b	;volatile
  4158  003E0C  0E00               	movlw	0
  4159  003E0E  6FA5               	movwf	(_freqPulses2+3)& (0+255),b	;volatile
  4160                           
  4161                           ;Pulses.c: 22: freqPulses3=0;
  4162  003E10  0E00               	movlw	0
  4163  003E12  6F9E               	movwf	_freqPulses3& (0+255),b	;volatile
  4164  003E14  0E00               	movlw	0
  4165  003E16  6F9F               	movwf	(_freqPulses3+1)& (0+255),b	;volatile
  4166  003E18  0E00               	movlw	0
  4167  003E1A  6FA0               	movwf	(_freqPulses3+2)& (0+255),b	;volatile
  4168  003E1C  0E00               	movlw	0
  4169  003E1E  6FA1               	movwf	(_freqPulses3+3)& (0+255),b	;volatile
  4170                           
  4171                           ;Pulses.c: 23: freqPulses4=0;
  4172  003E20  0E00               	movlw	0
  4173  003E22  6F9A               	movwf	_freqPulses4& (0+255),b	;volatile
  4174  003E24  0E00               	movlw	0
  4175  003E26  6F9B               	movwf	(_freqPulses4+1)& (0+255),b	;volatile
  4176  003E28  0E00               	movlw	0
  4177  003E2A  6F9C               	movwf	(_freqPulses4+2)& (0+255),b	;volatile
  4178  003E2C  0E00               	movlw	0
  4179  003E2E  6F9D               	movwf	(_freqPulses4+3)& (0+255),b	;volatile
  4180                           
  4181                           ; BSR set to: 1
  4182  003E30  0012               	return		;funcret
  4183  003E32                     __end_of_setup_pulsos:
  4184                           	opt stack 0
  4185                           tblptru	equ	0xFF8
  4186                           tblptrh	equ	0xFF7
  4187                           tblptrl	equ	0xFF6
  4188                           tablat	equ	0xFF5
  4189                           indf0	equ	0xFEF
  4190                           postinc0	equ	0xFEE
  4191                           fsr0h	equ	0xFEA
  4192                           fsr0l	equ	0xFE9
  4193                           wreg	equ	0xFE8
  4194                           postdec1	equ	0xFE5
  4195                           fsr1h	equ	0xFE2
  4196                           fsr1l	equ	0xFE1
  4197                           status	equ	0xFD8
  4198                           
  4199 ;; *************** function _setup_ccp1 *****************
  4200 ;; Defined at:
  4201 ;;		line 27 in file "Timer.c"
  4202 ;; Parameters:    Size  Location     Type
  4203 ;;		None
  4204 ;; Auto vars:     Size  Location     Type
  4205 ;;		None
  4206 ;; Return value:  Size  Location     Type
  4207 ;;                  1    wreg      void 
  4208 ;; Registers used:
  4209 ;;		wreg, status,2
  4210 ;; Tracked objects:
  4211 ;;		On entry : 0/0
  4212 ;;		On exit  : 0/0
  4213 ;;		Unchanged: 0/0
  4214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4215 ;;      Params:         0       0       0       0       0       0       0       0       0
  4216 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4217 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4218 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4219 ;;Total ram usage:        0 bytes
  4220 ;; Hardware stack levels used:    1
  4221 ;; Hardware stack levels required when called:   10
  4222 ;; This function calls:
  4223 ;;		Nothing
  4224 ;; This function is called by:
  4225 ;;		_main
  4226 ;; This function uses a non-reentrant model
  4227 ;;
  4228                           
  4229                           	psect	text4
  4230  004D50                     __ptext4:
  4231                           	opt stack 0
  4232  004D50                     _setup_ccp1:
  4233                           	opt stack 20
  4234                           
  4235                           ;Timer.c: 29: aaa = 1;
  4236                           
  4237                           ; BSR set to: 1
  4238                           ;incstack = 0
  4239  004D50  0E01               	movlw	1
  4240  004D52  0101               	movlb	1	; () banked
  4241  004D54  6FE5               	movwf	_aaa& (0+255),b
  4242                           
  4243                           ; BSR set to: 1
  4244                           ;Timer.c: 30: GIEH = 0;
  4245  004D56  9EF2               	bcf	intcon,7,c	;volatile
  4246                           
  4247                           ;Timer.c: 31: T3CON=0b10111000;
  4248  004D58  0EB8               	movlw	184
  4249  004D5A  6EB1               	movwf	4017,c	;volatile
  4250                           
  4251                           ;Timer.c: 32: TMR1H=0x00;
  4252  004D5C  0E00               	movlw	0
  4253  004D5E  6ECF               	movwf	4047,c	;volatile
  4254                           
  4255                           ;Timer.c: 33: TMR1L=0x00;
  4256  004D60  0E00               	movlw	0
  4257  004D62  6ECE               	movwf	4046,c	;volatile
  4258                           
  4259                           ;Timer.c: 34: CCPR1H=0x05;
  4260  004D64  0E05               	movlw	5
  4261  004D66  6EBF               	movwf	4031,c	;volatile
  4262                           
  4263                           ;Timer.c: 35: CCPR1L=0xDC;
  4264  004D68  0EDC               	movlw	220
  4265  004D6A  6EBE               	movwf	4030,c	;volatile
  4266                           
  4267                           ;Timer.c: 36: ticks=0;
  4268  004D6C  0E00               	movlw	0
  4269  004D6E  6F96               	movwf	_ticks& (0+255),b	;volatile
  4270  004D70  0E00               	movlw	0
  4271  004D72  6F97               	movwf	(_ticks+1)& (0+255),b	;volatile
  4272  004D74  0E00               	movlw	0
  4273  004D76  6F98               	movwf	(_ticks+2)& (0+255),b	;volatile
  4274  004D78  0E00               	movlw	0
  4275  004D7A  6F99               	movwf	(_ticks+3)& (0+255),b	;volatile
  4276                           
  4277                           ; BSR set to: 1
  4278                           ;Timer.c: 38: CCP1IF=0;
  4279  004D7C  949E               	bcf	3998,2,c	;volatile
  4280                           
  4281                           ;Timer.c: 39: T1CON=0b11110001;
  4282  004D7E  0EF1               	movlw	241
  4283  004D80  6ECD               	movwf	4045,c	;volatile
  4284                           
  4285                           ;Timer.c: 40: CCP1CON = 0b00001011;
  4286  004D82  0E0B               	movlw	11
  4287  004D84  6EBD               	movwf	4029,c	;volatile
  4288                           
  4289                           ; BSR set to: 1
  4290                           ;Timer.c: 41: CCP1IE=1;
  4291  004D86  849D               	bsf	3997,2,c	;volatile
  4292                           
  4293                           ; BSR set to: 1
  4294                           ;Timer.c: 42: IPR1bits.CCP1IP=1;
  4295  004D88  849F               	bsf	3999,2,c	;volatile
  4296                           
  4297                           ; BSR set to: 1
  4298                           ;Timer.c: 43: RCONbits.IPEN = 1;
  4299  004D8A  8ED0               	bsf	4048,7,c	;volatile
  4300                           
  4301                           ; BSR set to: 1
  4302                           ;Timer.c: 44: GIEH = 1;
  4303  004D8C  8EF2               	bsf	intcon,7,c	;volatile
  4304                           
  4305                           ; BSR set to: 1
  4306  004D8E  0012               	return		;funcret
  4307  004D90                     __end_of_setup_ccp1:
  4308                           	opt stack 0
  4309                           tblptru	equ	0xFF8
  4310                           tblptrh	equ	0xFF7
  4311                           tblptrl	equ	0xFF6
  4312                           tablat	equ	0xFF5
  4313                           intcon	equ	0xFF2
  4314                           indf0	equ	0xFEF
  4315                           postinc0	equ	0xFEE
  4316                           fsr0h	equ	0xFEA
  4317                           fsr0l	equ	0xFE9
  4318                           wreg	equ	0xFE8
  4319                           postdec1	equ	0xFE5
  4320                           fsr1h	equ	0xFE2
  4321                           fsr1l	equ	0xFE1
  4322                           status	equ	0xFD8
  4323                           
  4324 ;; *************** function _setup_AD *****************
  4325 ;; Defined at:
  4326 ;;		line 10 in file "AD.c"
  4327 ;; Parameters:    Size  Location     Type
  4328 ;;		None
  4329 ;; Auto vars:     Size  Location     Type
  4330 ;;		None
  4331 ;; Return value:  Size  Location     Type
  4332 ;;                  1    wreg      void 
  4333 ;; Registers used:
  4334 ;;		wreg, status,2
  4335 ;; Tracked objects:
  4336 ;;		On entry : 0/0
  4337 ;;		On exit  : 0/0
  4338 ;;		Unchanged: 0/0
  4339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4340 ;;      Params:         0       0       0       0       0       0       0       0       0
  4341 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4342 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4343 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4344 ;;Total ram usage:        0 bytes
  4345 ;; Hardware stack levels used:    1
  4346 ;; Hardware stack levels required when called:   10
  4347 ;; This function calls:
  4348 ;;		Nothing
  4349 ;; This function is called by:
  4350 ;;		_main
  4351 ;; This function uses a non-reentrant model
  4352 ;;
  4353                           
  4354                           	psect	text5
  4355  0051CE                     __ptext5:
  4356                           	opt stack 0
  4357  0051CE                     _setup_AD:
  4358                           	opt stack 20
  4359                           
  4360                           ;AD.c: 12: ADON=0;
  4361                           
  4362                           ; BSR set to: 1
  4363                           ;incstack = 0
  4364  0051CE  90C2               	bcf	4034,0,c	;volatile
  4365                           
  4366                           ;AD.c: 13: ADCON1=0b00001101;
  4367  0051D0  0E0D               	movlw	13
  4368  0051D2  6EC1               	movwf	4033,c	;volatile
  4369                           
  4370                           ;AD.c: 14: ADCON2=0b10111110;
  4371  0051D4  0EBE               	movlw	190
  4372  0051D6  6EC0               	movwf	4032,c	;volatile
  4373                           
  4374                           ;AD.c: 16: ADIF=0;
  4375  0051D8  9C9E               	bcf	3998,6,c	;volatile
  4376                           
  4377                           ;AD.c: 17: ADIE=0;
  4378  0051DA  9C9D               	bcf	3997,6,c	;volatile
  4379  0051DC  0012               	return		;funcret
  4380  0051DE                     __end_of_setup_AD:
  4381                           	opt stack 0
  4382                           tblptru	equ	0xFF8
  4383                           tblptrh	equ	0xFF7
  4384                           tblptrl	equ	0xFF6
  4385                           tablat	equ	0xFF5
  4386                           intcon	equ	0xFF2
  4387                           indf0	equ	0xFEF
  4388                           postinc0	equ	0xFEE
  4389                           fsr0h	equ	0xFEA
  4390                           fsr0l	equ	0xFE9
  4391                           wreg	equ	0xFE8
  4392                           postdec1	equ	0xFE5
  4393                           fsr1h	equ	0xFE2
  4394                           fsr1l	equ	0xFE1
  4395                           status	equ	0xFD8
  4396                           
  4397 ;; *************** function _setPreambleID *****************
  4398 ;; Defined at:
  4399 ;;		line 783 in file "XBeeCore.c"
  4400 ;; Parameters:    Size  Location     Type
  4401 ;;  preambleID      1    wreg     unsigned char 
  4402 ;; Auto vars:     Size  Location     Type
  4403 ;;  preambleID      1   21[BANK0 ] unsigned char 
  4404 ;;  buffer         20    0        unsigned char [20]
  4405 ;;  error           1   20[BANK0 ] char 
  4406 ;; Return value:  Size  Location     Type
  4407 ;;                  1    wreg      unsigned char 
  4408 ;; Registers used:
  4409 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4410 ;; Tracked objects:
  4411 ;;		On entry : 0/0
  4412 ;;		On exit  : 0/0
  4413 ;;		Unchanged: 0/0
  4414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4415 ;;      Params:         0       0       0       0       0       0       0       0       0
  4416 ;;      Locals:         0       2       0       0       0       0       0       0       0
  4417 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4418 ;;      Totals:         0       4       0       0       0       0       0       0       0
  4419 ;;Total ram usage:        4 bytes
  4420 ;; Hardware stack levels used:    1
  4421 ;; Hardware stack levels required when called:   12
  4422 ;; This function calls:
  4423 ;;		_gen_data
  4424 ;;		_gen_send
  4425 ;; This function is called by:
  4426 ;;		_main
  4427 ;; This function uses a non-reentrant model
  4428 ;;
  4429                           
  4430                           	psect	text6
  4431  004C02                     __ptext6:
  4432                           	opt stack 0
  4433  004C02                     _setPreambleID:
  4434                           	opt stack 18
  4435                           
  4436                           ;incstack = 0
  4437                           ;setPreambleID@preambleID stored from wreg
  4438  004C02  0100               	movlb	0	; () banked
  4439  004C04  6F75               	movwf	setPreambleID@preambleID& (0+255),b
  4440                           
  4441                           ;XBeeCore.c: 785: int8_t error=2;
  4442  004C06  0E02               	movlw	2
  4443  004C08  0100               	movlb	0	; () banked
  4444  004C0A  6F74               	movwf	setPreambleID@error& (0+255),b
  4445                           
  4446                           ;XBeeCore.c: 786: error_AT=2;
  4447  004C0C  0E02               	movlw	2
  4448  004C0E  0101               	movlb	1	; () banked
  4449  004C10  6FEF               	movwf	_error_AT& (0+255),b
  4450                           
  4451                           ; BSR set to: 1
  4452                           ;XBeeCore.c: 787: char buffer[20];
  4453                           ;XBeeCore.c: 789: gen_data(set_preambleid_900, (uint8_t*)preambleID,0);
  4454  004C12  0EE8               	movlw	low _set_preambleid_900
  4455  004C14  0100               	movlb	0	; () banked
  4456  004C16  6F68               	movwf	gen_data@data& (0+255),b
  4457  004C18  0E7D               	movlw	high _set_preambleid_900
  4458  004C1A  6F69               	movwf	(gen_data@data+1)& (0+255),b
  4459  004C1C  5175               	movf	setPreambleID@preambleID& (0+255),w,b
  4460  004C1E  6F72               	movwf	??_setPreambleID& (0+255),b
  4461  004C20  6B73               	clrf	(??_setPreambleID+1)& (0+255),b
  4462  004C22  C072  F06A         	movff	??_setPreambleID,gen_data@param
  4463  004C26  C073  F06B         	movff	??_setPreambleID+1,gen_data@param+1
  4464  004C2A  0E00               	movlw	0
  4465  004C2C  6F6C               	movwf	gen_data@sizeParam& (0+255),b
  4466  004C2E  EC71  F019         	call	_gen_data	;wreg free
  4467                           
  4468                           ;XBeeCore.c: 790: error = gen_send();
  4469  004C32  ECC8  F026         	call	_gen_send	;wreg free
  4470  004C36  0100               	movlb	0	; () banked
  4471  004C38  6F74               	movwf	setPreambleID@error& (0+255),b
  4472                           
  4473                           ; BSR set to: 0
  4474                           ;XBeeCore.c: 792: if( error == 0 )
  4475  004C3A  5174               	movf	setPreambleID@error& (0+255),w,b
  4476  004C3C  A4D8               	btfss	status,2,c
  4477  004C3E  0012               	return	
  4478                           
  4479                           ; BSR set to: 0
  4480                           ;XBeeCore.c: 793: {
  4481                           ;XBeeCore.c: 794: _preambleID = preambleID;
  4482  004C40  C075  F1F0         	movff	setPreambleID@preambleID,__preambleID
  4483  004C44  0012               	return	
  4484  004C46                     __end_of_setPreambleID:
  4485                           	opt stack 0
  4486                           tblptru	equ	0xFF8
  4487                           tblptrh	equ	0xFF7
  4488                           tblptrl	equ	0xFF6
  4489                           tablat	equ	0xFF5
  4490                           intcon	equ	0xFF2
  4491                           indf0	equ	0xFEF
  4492                           postinc0	equ	0xFEE
  4493                           fsr0h	equ	0xFEA
  4494                           fsr0l	equ	0xFE9
  4495                           wreg	equ	0xFE8
  4496                           postdec1	equ	0xFE5
  4497                           fsr1h	equ	0xFE2
  4498                           fsr1l	equ	0xFE1
  4499                           status	equ	0xFD8
  4500                           
  4501 ;; *************** function _setPAN *****************
  4502 ;; Defined at:
  4503 ;;		line 481 in file "XBeeCore.c"
  4504 ;; Parameters:    Size  Location     Type
  4505 ;;  PANID           2   18[BANK0 ] PTR unsigned char 
  4506 ;;		 -> panID(2), 
  4507 ;; Auto vars:     Size  Location     Type
  4508 ;;  error           1   20[BANK0 ] char 
  4509 ;; Return value:  Size  Location     Type
  4510 ;;                  1    wreg      unsigned char 
  4511 ;; Registers used:
  4512 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4513 ;; Tracked objects:
  4514 ;;		On entry : 0/0
  4515 ;;		On exit  : 0/0
  4516 ;;		Unchanged: 0/0
  4517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4518 ;;      Params:         0       2       0       0       0       0       0       0       0
  4519 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4520 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4521 ;;      Totals:         0       3       0       0       0       0       0       0       0
  4522 ;;Total ram usage:        3 bytes
  4523 ;; Hardware stack levels used:    1
  4524 ;; Hardware stack levels required when called:   12
  4525 ;; This function calls:
  4526 ;;		_gen_data
  4527 ;;		_gen_send
  4528 ;; This function is called by:
  4529 ;;		_main
  4530 ;; This function uses a non-reentrant model
  4531 ;;
  4532                           
  4533                           	psect	text7
  4534  00492E                     __ptext7:
  4535                           	opt stack 0
  4536  00492E                     _setPAN:
  4537                           	opt stack 18
  4538                           
  4539                           ;XBeeCore.c: 483: int8_t error=2;
  4540                           
  4541                           ; BSR set to: 0
  4542                           ;incstack = 0
  4543  00492E  0E02               	movlw	2
  4544  004930  0100               	movlb	0	; () banked
  4545  004932  6F74               	movwf	setPAN@error& (0+255),b
  4546                           
  4547                           ;XBeeCore.c: 485: error_AT=2;
  4548  004934  0E02               	movlw	2
  4549  004936  0101               	movlb	1	; () banked
  4550  004938  6FEF               	movwf	_error_AT& (0+255),b
  4551                           
  4552                           ; BSR set to: 1
  4553                           ;XBeeCore.c: 487: gen_data(gs_pan,PANID,2);
  4554  00493A  0EF6               	movlw	low _gs_pan
  4555  00493C  0100               	movlb	0	; () banked
  4556  00493E  6F68               	movwf	gen_data@data& (0+255),b
  4557  004940  0E7D               	movlw	high _gs_pan
  4558  004942  6F69               	movwf	(gen_data@data+1)& (0+255),b
  4559  004944  C072  F06A         	movff	setPAN@PANID,gen_data@param
  4560  004948  C073  F06B         	movff	setPAN@PANID+1,gen_data@param+1
  4561  00494C  0E02               	movlw	2
  4562  00494E  6F6C               	movwf	gen_data@sizeParam& (0+255),b
  4563  004950  EC71  F019         	call	_gen_data	;wreg free
  4564                           
  4565                           ;XBeeCore.c: 488: error=gen_send();
  4566  004954  ECC8  F026         	call	_gen_send	;wreg free
  4567  004958  0100               	movlb	0	; () banked
  4568  00495A  6F74               	movwf	setPAN@error& (0+255),b
  4569                           
  4570                           ; BSR set to: 0
  4571                           ;XBeeCore.c: 490: if(!error)
  4572  00495C  5174               	movf	setPAN@error& (0+255),w,b
  4573  00495E  A4D8               	btfss	status,2,c
  4574  004960  0012               	return	
  4575                           
  4576                           ; BSR set to: 0
  4577                           ;XBeeCore.c: 491: {
  4578                           ;XBeeCore.c: 492: PAN_ID[0] = PANID[0];
  4579  004962  C072  FFD9         	movff	setPAN@PANID,fsr2l
  4580  004966  C073  FFDA         	movff	setPAN@PANID+1,fsr2h
  4581  00496A  50DF               	movf	indf2,w,c
  4582  00496C  0101               	movlb	1	; () banked
  4583  00496E  6FCC               	movwf	_PAN_ID& (0+255),b
  4584                           
  4585                           ; BSR set to: 1
  4586                           ;XBeeCore.c: 493: PAN_ID[1] = PANID[1];
  4587  004970  0100               	movlb	0	; () banked
  4588  004972  EE20 F001          	lfsr	2,1
  4589  004976  5172               	movf	setPAN@PANID& (0+255),w,b
  4590  004978  26D9               	addwf	fsr2l,f,c
  4591  00497A  5173               	movf	(setPAN@PANID+1)& (0+255),w,b
  4592  00497C  22DA               	addwfc	fsr2h,f,c
  4593  00497E  50DF               	movf	indf2,w,c
  4594  004980  0101               	movlb	1	; () banked
  4595  004982  6FCD               	movwf	(_PAN_ID+1)& (0+255),b
  4596                           
  4597                           ; BSR set to: 1
  4598  004984  0012               	return	
  4599  004986                     __end_of_setPAN:
  4600                           	opt stack 0
  4601                           tblptru	equ	0xFF8
  4602                           tblptrh	equ	0xFF7
  4603                           tblptrl	equ	0xFF6
  4604                           tablat	equ	0xFF5
  4605                           intcon	equ	0xFF2
  4606                           indf0	equ	0xFEF
  4607                           postinc0	equ	0xFEE
  4608                           fsr0h	equ	0xFEA
  4609                           fsr0l	equ	0xFE9
  4610                           wreg	equ	0xFE8
  4611                           postdec1	equ	0xFE5
  4612                           fsr1h	equ	0xFE2
  4613                           fsr1l	equ	0xFE1
  4614                           indf2	equ	0xFDF
  4615                           fsr2h	equ	0xFDA
  4616                           fsr2l	equ	0xFD9
  4617                           status	equ	0xFD8
  4618                           
  4619 ;; *************** function _setLinkKey *****************
  4620 ;; Defined at:
  4621 ;;		line 896 in file "XBeeCore.c"
  4622 ;; Parameters:    Size  Location     Type
  4623 ;;  key             2   18[BANK0 ] PTR const unsigned char 
  4624 ;;		 -> encryptKey(17), 
  4625 ;; Auto vars:     Size  Location     Type
  4626 ;;  error           1   20[BANK0 ] char 
  4627 ;; Return value:  Size  Location     Type
  4628 ;;                  1    wreg      unsigned char 
  4629 ;; Registers used:
  4630 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4631 ;; Tracked objects:
  4632 ;;		On entry : 0/0
  4633 ;;		On exit  : 0/0
  4634 ;;		Unchanged: 0/0
  4635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4636 ;;      Params:         0       2       0       0       0       0       0       0       0
  4637 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4638 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4639 ;;      Totals:         0       3       0       0       0       0       0       0       0
  4640 ;;Total ram usage:        3 bytes
  4641 ;; Hardware stack levels used:    1
  4642 ;; Hardware stack levels required when called:   12
  4643 ;; This function calls:
  4644 ;;		_gen_data
  4645 ;;		_gen_send
  4646 ;; This function is called by:
  4647 ;;		_main
  4648 ;; This function uses a non-reentrant model
  4649 ;;
  4650                           
  4651                           	psect	text8
  4652  004F6A                     __ptext8:
  4653                           	opt stack 0
  4654  004F6A                     _setLinkKey:
  4655                           	opt stack 18
  4656                           
  4657                           ;XBeeCore.c: 898: int8_t error=2;
  4658                           
  4659                           ;incstack = 0
  4660  004F6A  0E02               	movlw	2
  4661  004F6C  0100               	movlb	0	; () banked
  4662  004F6E  6F74               	movwf	setLinkKey@error& (0+255),b
  4663                           
  4664                           ;XBeeCore.c: 899: error_AT=2;
  4665  004F70  0E02               	movlw	2
  4666  004F72  0101               	movlb	1	; () banked
  4667  004F74  6FEF               	movwf	_error_AT& (0+255),b
  4668                           
  4669                           ; BSR set to: 1
  4670                           ;XBeeCore.c: 902: gen_data(set_link_key,(uint8_t*) key,16);
  4671  004F76  0EF0               	movlw	low _set_link_key
  4672  004F78  0100               	movlb	0	; () banked
  4673  004F7A  6F68               	movwf	gen_data@data& (0+255),b
  4674  004F7C  0E7D               	movlw	high _set_link_key
  4675  004F7E  6F69               	movwf	(gen_data@data+1)& (0+255),b
  4676  004F80  C072  F06A         	movff	setLinkKey@key,gen_data@param
  4677  004F84  C073  F06B         	movff	setLinkKey@key+1,gen_data@param+1
  4678  004F88  0E10               	movlw	16
  4679  004F8A  6F6C               	movwf	gen_data@sizeParam& (0+255),b
  4680  004F8C  EC71  F019         	call	_gen_data	;wreg free
  4681                           
  4682                           ;XBeeCore.c: 903: error=gen_send();
  4683  004F90  ECC8  F026         	call	_gen_send	;wreg free
  4684  004F94  0100               	movlb	0	; () banked
  4685  004F96  6F74               	movwf	setLinkKey@error& (0+255),b
  4686  004F98  0012               	return	
  4687  004F9A                     __end_of_setLinkKey:
  4688                           	opt stack 0
  4689                           tblptru	equ	0xFF8
  4690                           tblptrh	equ	0xFF7
  4691                           tblptrl	equ	0xFF6
  4692                           tablat	equ	0xFF5
  4693                           intcon	equ	0xFF2
  4694                           indf0	equ	0xFEF
  4695                           postinc0	equ	0xFEE
  4696                           fsr0h	equ	0xFEA
  4697                           fsr0l	equ	0xFE9
  4698                           wreg	equ	0xFE8
  4699                           postdec1	equ	0xFE5
  4700                           fsr1h	equ	0xFE2
  4701                           fsr1l	equ	0xFE1
  4702                           indf2	equ	0xFDF
  4703                           fsr2h	equ	0xFDA
  4704                           fsr2l	equ	0xFD9
  4705                           status	equ	0xFD8
  4706                           
  4707 ;; *************** function _setEncryptionMode *****************
  4708 ;; Defined at:
  4709 ;;		line 918 in file "XBeeCore.c"
  4710 ;; Parameters:    Size  Location     Type
  4711 ;;  mode            1    wreg     unsigned char 
  4712 ;; Auto vars:     Size  Location     Type
  4713 ;;  mode            1   19[BANK0 ] unsigned char 
  4714 ;;  error           1   18[BANK0 ] char 
  4715 ;; Return value:  Size  Location     Type
  4716 ;;                  1    wreg      unsigned char 
  4717 ;; Registers used:
  4718 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4719 ;; Tracked objects:
  4720 ;;		On entry : 0/0
  4721 ;;		On exit  : 0/0
  4722 ;;		Unchanged: 0/0
  4723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4724 ;;      Params:         0       0       0       0       0       0       0       0       0
  4725 ;;      Locals:         0       2       0       0       0       0       0       0       0
  4726 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4727 ;;      Totals:         0       2       0       0       0       0       0       0       0
  4728 ;;Total ram usage:        2 bytes
  4729 ;; Hardware stack levels used:    1
  4730 ;; Hardware stack levels required when called:   12
  4731 ;; This function calls:
  4732 ;;		_gen_data
  4733 ;;		_gen_send
  4734 ;; This function is called by:
  4735 ;;		_main
  4736 ;; This function uses a non-reentrant model
  4737 ;;
  4738                           
  4739                           	psect	text9
  4740  004B2C                     __ptext9:
  4741                           	opt stack 0
  4742  004B2C                     _setEncryptionMode:
  4743                           	opt stack 18
  4744                           
  4745                           ; BSR set to: 0
  4746                           ;incstack = 0
  4747                           ;setEncryptionMode@mode stored from wreg
  4748  004B2C  0100               	movlb	0	; () banked
  4749  004B2E  6F73               	movwf	setEncryptionMode@mode& (0+255),b
  4750                           
  4751                           ;XBeeCore.c: 920: int8_t error=2;
  4752  004B30  0E02               	movlw	2
  4753  004B32  0100               	movlb	0	; () banked
  4754  004B34  6F72               	movwf	setEncryptionMode@error& (0+255),b
  4755                           
  4756                           ;XBeeCore.c: 921: error_AT=2;
  4757  004B36  0E02               	movlw	2
  4758  004B38  0101               	movlb	1	; () banked
  4759  004B3A  6FEF               	movwf	_error_AT& (0+255),b
  4760                           
  4761                           ; BSR set to: 1
  4762                           ;XBeeCore.c: 923: if (mode)
  4763  004B3C  0100               	movlb	0	; () banked
  4764  004B3E  5173               	movf	setEncryptionMode@mode& (0+255),w,b
  4765  004B40  B4D8               	btfsc	status,2,c
  4766  004B42  D002               	goto	l1637
  4767                           
  4768                           ; BSR set to: 0
  4769                           ;XBeeCore.c: 924: mode=1;
  4770  004B44  0E01               	movlw	1
  4771  004B46  6F73               	movwf	setEncryptionMode@mode& (0+255),b
  4772  004B48                     l1637:
  4773                           
  4774                           ; BSR set to: 0
  4775                           ;XBeeCore.c: 927: gen_data(gs_encryption,&mode,1);
  4776                           
  4777                           ; BSR set to: 0
  4778  004B48  0EEE               	movlw	low _gs_encryption
  4779  004B4A  6F68               	movwf	gen_data@data& (0+255),b
  4780  004B4C  0E7D               	movlw	high _gs_encryption
  4781  004B4E  6F69               	movwf	(gen_data@data+1)& (0+255),b
  4782  004B50  0E73               	movlw	low setEncryptionMode@mode
  4783  004B52  6F6A               	movwf	gen_data@param& (0+255),b
  4784  004B54  0E00               	movlw	high setEncryptionMode@mode
  4785  004B56  6F6B               	movwf	(gen_data@param+1)& (0+255),b
  4786  004B58  0E01               	movlw	1
  4787  004B5A  6F6C               	movwf	gen_data@sizeParam& (0+255),b
  4788  004B5C  EC71  F019         	call	_gen_data	;wreg free
  4789                           
  4790                           ;XBeeCore.c: 928: error=gen_send();
  4791  004B60  ECC8  F026         	call	_gen_send	;wreg free
  4792  004B64  0100               	movlb	0	; () banked
  4793  004B66  6F72               	movwf	setEncryptionMode@error& (0+255),b
  4794                           
  4795                           ; BSR set to: 0
  4796                           ;XBeeCore.c: 930: if(!error)
  4797  004B68  5172               	movf	setEncryptionMode@error& (0+255),w,b
  4798  004B6A  A4D8               	btfss	status,2,c
  4799  004B6C  0012               	return	
  4800                           
  4801                           ; BSR set to: 0
  4802                           ;XBeeCore.c: 931: {
  4803                           ;XBeeCore.c: 932: encryptMode=mode;
  4804  004B6E  C073  F1E6         	movff	setEncryptionMode@mode,_encryptMode
  4805  004B72  0012               	return	
  4806  004B74                     __end_of_setEncryptionMode:
  4807                           	opt stack 0
  4808                           tblptru	equ	0xFF8
  4809                           tblptrh	equ	0xFF7
  4810                           tblptrl	equ	0xFF6
  4811                           tablat	equ	0xFF5
  4812                           intcon	equ	0xFF2
  4813                           indf0	equ	0xFEF
  4814                           postinc0	equ	0xFEE
  4815                           fsr0h	equ	0xFEA
  4816                           fsr0l	equ	0xFE9
  4817                           wreg	equ	0xFE8
  4818                           postdec1	equ	0xFE5
  4819                           fsr1h	equ	0xFE2
  4820                           fsr1l	equ	0xFE1
  4821                           indf2	equ	0xFDF
  4822                           fsr2h	equ	0xFDA
  4823                           fsr2l	equ	0xFD9
  4824                           status	equ	0xFD8
  4825                           
  4826 ;; *************** function _setChannelMask *****************
  4827 ;; Defined at:
  4828 ;;		line 720 in file "XBeeCore.c"
  4829 ;; Parameters:    Size  Location     Type
  4830 ;;  mask            2   18[BANK0 ] PTR unsigned char 
  4831 ;;		 -> Mask(8), 
  4832 ;; Auto vars:     Size  Location     Type
  4833 ;;  buffer         50    0        unsigned char [50]
  4834 ;;  error           1   20[BANK0 ] char 
  4835 ;; Return value:  Size  Location     Type
  4836 ;;                  1    wreg      unsigned char 
  4837 ;; Registers used:
  4838 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4839 ;; Tracked objects:
  4840 ;;		On entry : 0/0
  4841 ;;		On exit  : 0/0
  4842 ;;		Unchanged: 0/0
  4843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4844 ;;      Params:         0       2       0       0       0       0       0       0       0
  4845 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4846 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4847 ;;      Totals:         0       3       0       0       0       0       0       0       0
  4848 ;;Total ram usage:        3 bytes
  4849 ;; Hardware stack levels used:    1
  4850 ;; Hardware stack levels required when called:   12
  4851 ;; This function calls:
  4852 ;;		_gen_data
  4853 ;;		_gen_send
  4854 ;; This function is called by:
  4855 ;;		_main
  4856 ;; This function uses a non-reentrant model
  4857 ;;
  4858                           
  4859                           	psect	text10
  4860  00390A                     __ptext10:
  4861                           	opt stack 0
  4862  00390A                     _setChannelMask:
  4863                           	opt stack 18
  4864                           
  4865                           ;XBeeCore.c: 722: int8_t error=2;
  4866                           
  4867                           ; BSR set to: 0
  4868                           ;incstack = 0
  4869  00390A  0E02               	movlw	2
  4870  00390C  0100               	movlb	0	; () banked
  4871  00390E  6F74               	movwf	setChannelMask@error& (0+255),b
  4872                           
  4873                           ;XBeeCore.c: 723: error_AT=2;
  4874  003910  0E02               	movlw	2
  4875  003912  0101               	movlb	1	; () banked
  4876  003914  6FEF               	movwf	_error_AT& (0+255),b
  4877                           
  4878                           ; BSR set to: 1
  4879                           ;XBeeCore.c: 724: char buffer[50];
  4880                           ;XBeeCore.c: 733: gen_data(set_channelmask_900, mask,0);
  4881  003916  0EEC               	movlw	low _set_channelmask_900
  4882  003918  0100               	movlb	0	; () banked
  4883  00391A  6F68               	movwf	gen_data@data& (0+255),b
  4884  00391C  0E7D               	movlw	high _set_channelmask_900
  4885  00391E  6F69               	movwf	(gen_data@data+1)& (0+255),b
  4886  003920  C072  F06A         	movff	setChannelMask@mask,gen_data@param
  4887  003924  C073  F06B         	movff	setChannelMask@mask+1,gen_data@param+1
  4888  003928  0E00               	movlw	0
  4889  00392A  6F6C               	movwf	gen_data@sizeParam& (0+255),b
  4890  00392C  EC71  F019         	call	_gen_data	;wreg free
  4891                           
  4892                           ;XBeeCore.c: 734: error = gen_send();
  4893  003930  ECC8  F026         	call	_gen_send	;wreg free
  4894  003934  0100               	movlb	0	; () banked
  4895  003936  6F74               	movwf	setChannelMask@error& (0+255),b
  4896                           
  4897                           ; BSR set to: 0
  4898                           ;XBeeCore.c: 736: if( error == 0 )
  4899  003938  5174               	movf	setChannelMask@error& (0+255),w,b
  4900  00393A  A4D8               	btfss	status,2,c
  4901  00393C  0012               	return	
  4902                           
  4903                           ; BSR set to: 0
  4904                           ;XBeeCore.c: 737: {
  4905                           ;XBeeCore.c: 738: _channelMask[0] = mask[0];
  4906  00393E  C072  FFD9         	movff	setChannelMask@mask,fsr2l
  4907  003942  C073  FFDA         	movff	setChannelMask@mask+1,fsr2h
  4908  003946  50DF               	movf	indf2,w,c
  4909  003948  0101               	movlb	1	; () banked
  4910  00394A  6F84               	movwf	__channelMask& (0+255),b
  4911                           
  4912                           ; BSR set to: 1
  4913                           ;XBeeCore.c: 739: _channelMask[1] = mask[1];
  4914  00394C  0100               	movlb	0	; () banked
  4915  00394E  EE20 F001          	lfsr	2,1
  4916  003952  5172               	movf	setChannelMask@mask& (0+255),w,b
  4917  003954  26D9               	addwf	fsr2l,f,c
  4918  003956  5173               	movf	(setChannelMask@mask+1)& (0+255),w,b
  4919  003958  22DA               	addwfc	fsr2h,f,c
  4920  00395A  50DF               	movf	indf2,w,c
  4921  00395C  0101               	movlb	1	; () banked
  4922  00395E  6F85               	movwf	(__channelMask+1)& (0+255),b
  4923                           
  4924                           ; BSR set to: 1
  4925                           ;XBeeCore.c: 740: _channelMask[2] = mask[2];
  4926  003960  0100               	movlb	0	; () banked
  4927  003962  EE20 F002          	lfsr	2,2
  4928  003966  5172               	movf	setChannelMask@mask& (0+255),w,b
  4929  003968  26D9               	addwf	fsr2l,f,c
  4930  00396A  5173               	movf	(setChannelMask@mask+1)& (0+255),w,b
  4931  00396C  22DA               	addwfc	fsr2h,f,c
  4932  00396E  50DF               	movf	indf2,w,c
  4933  003970  0101               	movlb	1	; () banked
  4934  003972  6F86               	movwf	(__channelMask+2)& (0+255),b
  4935                           
  4936                           ; BSR set to: 1
  4937                           ;XBeeCore.c: 741: _channelMask[3] = mask[3];
  4938  003974  0100               	movlb	0	; () banked
  4939  003976  EE20 F003          	lfsr	2,3
  4940  00397A  5172               	movf	setChannelMask@mask& (0+255),w,b
  4941  00397C  26D9               	addwf	fsr2l,f,c
  4942  00397E  5173               	movf	(setChannelMask@mask+1)& (0+255),w,b
  4943  003980  22DA               	addwfc	fsr2h,f,c
  4944  003982  50DF               	movf	indf2,w,c
  4945  003984  0101               	movlb	1	; () banked
  4946  003986  6F87               	movwf	(__channelMask+3)& (0+255),b
  4947                           
  4948                           ; BSR set to: 1
  4949                           ;XBeeCore.c: 742: _channelMask[4] = mask[4];
  4950  003988  0100               	movlb	0	; () banked
  4951  00398A  EE20 F004          	lfsr	2,4
  4952  00398E  5172               	movf	setChannelMask@mask& (0+255),w,b
  4953  003990  26D9               	addwf	fsr2l,f,c
  4954  003992  5173               	movf	(setChannelMask@mask+1)& (0+255),w,b
  4955  003994  22DA               	addwfc	fsr2h,f,c
  4956  003996  50DF               	movf	indf2,w,c
  4957  003998  0101               	movlb	1	; () banked
  4958  00399A  6F88               	movwf	(__channelMask+4)& (0+255),b
  4959                           
  4960                           ; BSR set to: 1
  4961                           ;XBeeCore.c: 743: _channelMask[5] = mask[5];
  4962  00399C  0100               	movlb	0	; () banked
  4963  00399E  EE20 F005          	lfsr	2,5
  4964  0039A2  5172               	movf	setChannelMask@mask& (0+255),w,b
  4965  0039A4  26D9               	addwf	fsr2l,f,c
  4966  0039A6  5173               	movf	(setChannelMask@mask+1)& (0+255),w,b
  4967  0039A8  22DA               	addwfc	fsr2h,f,c
  4968  0039AA  50DF               	movf	indf2,w,c
  4969  0039AC  0101               	movlb	1	; () banked
  4970  0039AE  6F89               	movwf	(__channelMask+5)& (0+255),b
  4971                           
  4972                           ; BSR set to: 1
  4973                           ;XBeeCore.c: 744: _channelMask[6] = mask[6];
  4974  0039B0  0100               	movlb	0	; () banked
  4975  0039B2  EE20 F006          	lfsr	2,6
  4976  0039B6  5172               	movf	setChannelMask@mask& (0+255),w,b
  4977  0039B8  26D9               	addwf	fsr2l,f,c
  4978  0039BA  5173               	movf	(setChannelMask@mask+1)& (0+255),w,b
  4979  0039BC  22DA               	addwfc	fsr2h,f,c
  4980  0039BE  50DF               	movf	indf2,w,c
  4981  0039C0  0101               	movlb	1	; () banked
  4982  0039C2  6F8A               	movwf	(__channelMask+6)& (0+255),b
  4983                           
  4984                           ; BSR set to: 1
  4985                           ;XBeeCore.c: 745: _channelMask[7] = mask[7];
  4986  0039C4  0100               	movlb	0	; () banked
  4987  0039C6  EE20 F007          	lfsr	2,7
  4988  0039CA  5172               	movf	setChannelMask@mask& (0+255),w,b
  4989  0039CC  26D9               	addwf	fsr2l,f,c
  4990  0039CE  5173               	movf	(setChannelMask@mask+1)& (0+255),w,b
  4991  0039D0  22DA               	addwfc	fsr2h,f,c
  4992  0039D2  50DF               	movf	indf2,w,c
  4993  0039D4  0101               	movlb	1	; () banked
  4994  0039D6  6F8B               	movwf	(__channelMask+7)& (0+255),b
  4995                           
  4996                           ; BSR set to: 1
  4997  0039D8  0012               	return	
  4998  0039DA                     __end_of_setChannelMask:
  4999                           	opt stack 0
  5000                           tblptru	equ	0xFF8
  5001                           tblptrh	equ	0xFF7
  5002                           tblptrl	equ	0xFF6
  5003                           tablat	equ	0xFF5
  5004                           intcon	equ	0xFF2
  5005                           indf0	equ	0xFEF
  5006                           postinc0	equ	0xFEE
  5007                           fsr0h	equ	0xFEA
  5008                           fsr0l	equ	0xFE9
  5009                           wreg	equ	0xFE8
  5010                           postdec1	equ	0xFE5
  5011                           fsr1h	equ	0xFE2
  5012                           fsr1l	equ	0xFE1
  5013                           indf2	equ	0xFDF
  5014                           fsr2h	equ	0xFDA
  5015                           fsr2l	equ	0xFD9
  5016                           status	equ	0xFD8
  5017                           
  5018 ;; *************** function _gen_send *****************
  5019 ;; Defined at:
  5020 ;;		line 412 in file "XBeeCore.c"
  5021 ;; Parameters:    Size  Location     Type
  5022 ;;		None
  5023 ;; Auto vars:     Size  Location     Type
  5024 ;;  i               2    2[BANK0 ] unsigned int 
  5025 ;;  error_int       1    1[BANK0 ] unsigned char 
  5026 ;; Return value:  Size  Location     Type
  5027 ;;                  1    wreg      unsigned char 
  5028 ;; Registers used:
  5029 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5030 ;; Tracked objects:
  5031 ;;		On entry : 0/0
  5032 ;;		On exit  : 0/0
  5033 ;;		Unchanged: 0/0
  5034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5035 ;;      Params:         0       0       0       0       0       0       0       0       0
  5036 ;;      Locals:         0       3       0       0       0       0       0       0       0
  5037 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5038 ;;      Totals:         0       3       0       0       0       0       0       0       0
  5039 ;;Total ram usage:        3 bytes
  5040 ;; Hardware stack levels used:    1
  5041 ;; Hardware stack levels required when called:   11
  5042 ;; This function calls:
  5043 ;;		_putch
  5044 ;; This function is called by:
  5045 ;;		_setPAN
  5046 ;;		_setChannelMask
  5047 ;;		_setPreambleID
  5048 ;;		_setLinkKey
  5049 ;;		_setEncryptionMode
  5050 ;;		_getOwnMacLow
  5051 ;;		_getOwnMacHigh
  5052 ;;		_getPAN
  5053 ;;		_writeValues
  5054 ;;		_setChannel
  5055 ;;		_getChannel
  5056 ;;		_getChannelMask
  5057 ;;		_getPreambleID
  5058 ;;		_getEncryptionMode
  5059 ;; This function uses a non-reentrant model
  5060 ;;
  5061                           
  5062                           	psect	text11
  5063  004D90                     __ptext11:
  5064                           	opt stack 0
  5065  004D90                     _gen_send:
  5066                           	opt stack 18
  5067                           
  5068                           ;XBeeCore.c: 414: uint8_t error_int=2;
  5069                           
  5070                           ;incstack = 0
  5071  004D90  0E02               	movlw	2
  5072  004D92  0100               	movlb	0	; () banked
  5073  004D94  6F61               	movwf	gen_send@error_int& (0+255),b
  5074                           
  5075                           ;XBeeCore.c: 416: for (uint16_t i = 0; i < tamanhoCommand; i++)
  5076  004D96  0E00               	movlw	0
  5077  004D98  6F63               	movwf	(gen_send@i+1)& (0+255),b
  5078  004D9A  0E00               	movlw	0
  5079  004D9C  6F62               	movwf	gen_send@i& (0+255),b
  5080  004D9E  D00C               	goto	l1541
  5081  004DA0                     
  5082                           ; BSR set to: 0
  5083                           ;XBeeCore.c: 417: {
  5084                           ;XBeeCore.c: 418: putch((char)command[i]);
  5085                           
  5086                           ; BSR set to: 0
  5087  004DA0  0E5C               	movlw	low _command
  5088  004DA2  2562               	addwf	gen_send@i& (0+255),w,b
  5089  004DA4  6ED9               	movwf	fsr2l,c
  5090  004DA6  0E00               	movlw	high _command
  5091  004DA8  2163               	addwfc	(gen_send@i+1)& (0+255),w,b
  5092  004DAA  6EDA               	movwf	fsr2h,c
  5093  004DAC  50DF               	movf	indf2,w,c
  5094  004DAE  ECEF  F028         	call	_putch
  5095  004DB2  0100               	movlb	0	; () banked
  5096  004DB4  4B62               	infsnz	gen_send@i& (0+255),f,b
  5097  004DB6  2B63               	incf	(gen_send@i+1)& (0+255),f,b
  5098  004DB8                     l1541:
  5099                           
  5100                           ; BSR set to: 0
  5101                           
  5102                           ; BSR set to: 0
  5103  004DB8  0101               	movlb	1	; () banked
  5104  004DBA  51BE               	movf	_tamanhoCommand& (0+255),w,b
  5105  004DBC  0100               	movlb	0	; () banked
  5106  004DBE  5D62               	subwf	gen_send@i& (0+255),w,b
  5107  004DC0  0101               	movlb	1	; () banked
  5108  004DC2  51BF               	movf	(_tamanhoCommand+1)& (0+255),w,b
  5109  004DC4  0100               	movlb	0	; () banked
  5110  004DC6  5963               	subwfb	(gen_send@i+1)& (0+255),w,b
  5111  004DC8  A0D8               	btfss	status,0,c
  5112  004DCA  D7EA               	goto	l1542
  5113                           
  5114                           ; BSR set to: 0
  5115                           ;XBeeCore.c: 419: }
  5116                           ;XBeeCore.c: 423: return error_int;
  5117                           
  5118                           ; BSR set to: 0
  5119  004DCC  5161               	movf	gen_send@error_int& (0+255),w,b
  5120  004DCE  0012               	return	
  5121  004DD0                     __end_of_gen_send:
  5122                           	opt stack 0
  5123                           tblptru	equ	0xFF8
  5124                           tblptrh	equ	0xFF7
  5125                           tblptrl	equ	0xFF6
  5126                           tablat	equ	0xFF5
  5127                           intcon	equ	0xFF2
  5128                           indf0	equ	0xFEF
  5129                           postinc0	equ	0xFEE
  5130                           fsr0h	equ	0xFEA
  5131                           fsr0l	equ	0xFE9
  5132                           wreg	equ	0xFE8
  5133                           postdec1	equ	0xFE5
  5134                           fsr1h	equ	0xFE2
  5135                           fsr1l	equ	0xFE1
  5136                           indf2	equ	0xFDF
  5137                           fsr2h	equ	0xFDA
  5138                           fsr2l	equ	0xFD9
  5139                           status	equ	0xFD8
  5140                           
  5141 ;; *************** function _gen_data *****************
  5142 ;; Defined at:
  5143 ;;		line 335 in file "XBeeCore.c"
  5144 ;; Parameters:    Size  Location     Type
  5145 ;;  data            2    8[BANK0 ] PTR const unsigned char 
  5146 ;;		 -> gs_encryption(2), set_link_key(2), get_preambleid_900(2), set_preambleid_900(2), 
  5147 ;;		 -> get_channelmask_900(2), set_channelmask_900(2), gs_channel(2), write_values(2), 
  5148 ;;		 -> gs_pan(2), get_own_mac_high(2), get_own_mac_low(2), 
  5149 ;;  param           2   10[BANK0 ] PTR unsigned char 
  5150 ;;		 -> setEncryptionMode@mode(1), setChannel@_channel(1), encryptKey(17), Mask(8), 
  5151 ;;		 -> panID(2), RAM(2047), NULL(0), 
  5152 ;;  sizeParam       1   12[BANK0 ] unsigned char 
  5153 ;; Auto vars:     Size  Location     Type
  5154 ;;  i               1   17[BANK0 ] unsigned char 
  5155 ;;  size            2   15[BANK0 ] int 
  5156 ;; Return value:  Size  Location     Type
  5157 ;;                  1    wreg      void 
  5158 ;; Registers used:
  5159 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5160 ;; Tracked objects:
  5161 ;;		On entry : 0/0
  5162 ;;		On exit  : 0/0
  5163 ;;		Unchanged: 0/0
  5164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5165 ;;      Params:         0       5       0       0       0       0       0       0       0
  5166 ;;      Locals:         0       3       0       0       0       0       0       0       0
  5167 ;;      Temps:          0       2       0       0       0       0       0       0       0
  5168 ;;      Totals:         0      10       0       0       0       0       0       0       0
  5169 ;;Total ram usage:       10 bytes
  5170 ;; Hardware stack levels used:    1
  5171 ;; Hardware stack levels required when called:   11
  5172 ;; This function calls:
  5173 ;;		_addByteCommand
  5174 ;; This function is called by:
  5175 ;;		_setPAN
  5176 ;;		_setChannelMask
  5177 ;;		_setPreambleID
  5178 ;;		_setLinkKey
  5179 ;;		_setEncryptionMode
  5180 ;;		_getOwnMacLow
  5181 ;;		_getOwnMacHigh
  5182 ;;		_getPAN
  5183 ;;		_writeValues
  5184 ;;		_setChannel
  5185 ;;		_getChannel
  5186 ;;		_getChannelMask
  5187 ;;		_getPreambleID
  5188 ;;		_getEncryptionMode
  5189 ;; This function uses a non-reentrant model
  5190 ;;
  5191                           
  5192                           	psect	text12
  5193  0032E2                     __ptext12:
  5194                           	opt stack 0
  5195  0032E2                     _gen_data:
  5196                           	opt stack 18
  5197                           
  5198                           ;XBeeCore.c: 337: int16_t size=sizeParam + 4;
  5199                           
  5200                           ; BSR set to: 0
  5201                           ;incstack = 0
  5202  0032E2  0E04               	movlw	4
  5203  0032E4  0100               	movlb	0	; () banked
  5204  0032E6  256C               	addwf	gen_data@sizeParam& (0+255),w,b
  5205  0032E8  6F6F               	movwf	gen_data@size& (0+255),b
  5206  0032EA  6B70               	clrf	(gen_data@size+1)& (0+255),b
  5207  0032EC  0E00               	movlw	0
  5208  0032EE  2370               	addwfc	(gen_data@size+1)& (0+255),f,b
  5209                           
  5210                           ; BSR set to: 0
  5211                           ;XBeeCore.c: 338: tamanhoCommand=0;
  5212  0032F0  0E00               	movlw	0
  5213  0032F2  0101               	movlb	1	; () banked
  5214  0032F4  6FBF               	movwf	(_tamanhoCommand+1)& (0+255),b
  5215  0032F6  0E00               	movlw	0
  5216  0032F8  6FBE               	movwf	_tamanhoCommand& (0+255),b
  5217                           
  5218                           ; BSR set to: 1
  5219                           ;XBeeCore.c: 339: addByteCommand(0x7E,0);
  5220  0032FA  0E00               	movlw	0
  5221  0032FC  0100               	movlb	0	; () banked
  5222  0032FE  6F66               	movwf	addByteCommand@calcChecksum& (0+255),b
  5223  003300  0E7E               	movlw	126
  5224  003302  ECCA  F022         	call	_addByteCommand
  5225                           
  5226                           ;XBeeCore.c: 340: addByteCommand(size >> 8,0);
  5227  003306  0E00               	movlw	0
  5228  003308  0100               	movlb	0	; () banked
  5229  00330A  6F66               	movwf	addByteCommand@calcChecksum& (0+255),b
  5230  00330C  5170               	movf	(gen_data@size+1)& (0+255),w,b
  5231  00330E  ECCA  F022         	call	_addByteCommand
  5232                           
  5233                           ;XBeeCore.c: 341: addByteCommand(size,0);
  5234  003312  0E00               	movlw	0
  5235  003314  0100               	movlb	0	; () banked
  5236  003316  6F66               	movwf	addByteCommand@calcChecksum& (0+255),b
  5237  003318  516F               	movf	gen_data@size& (0+255),w,b
  5238  00331A  ECCA  F022         	call	_addByteCommand
  5239                           
  5240                           ;XBeeCore.c: 342: addByteCommand(0x08,1);
  5241  00331E  0E01               	movlw	1
  5242  003320  0100               	movlb	0	; () banked
  5243  003322  6F66               	movwf	addByteCommand@calcChecksum& (0+255),b
  5244  003324  0E08               	movlw	8
  5245  003326  ECCA  F022         	call	_addByteCommand
  5246                           
  5247                           ;XBeeCore.c: 343: addByteCommand(0x52,1);
  5248  00332A  0E01               	movlw	1
  5249  00332C  0100               	movlb	0	; () banked
  5250  00332E  6F66               	movwf	addByteCommand@calcChecksum& (0+255),b
  5251  003330  0E52               	movlw	82
  5252  003332  ECCA  F022         	call	_addByteCommand
  5253                           
  5254                           ;XBeeCore.c: 344: addByteCommand(data[0],1);
  5255  003336  0E01               	movlw	1
  5256  003338  0100               	movlb	0	; () banked
  5257  00333A  6F66               	movwf	addByteCommand@calcChecksum& (0+255),b
  5258  00333C  C068  FFF6         	movff	gen_data@data,tblptrl
  5259  003340  C069  FFF7         	movff	gen_data@data+1,tblptrh
  5260  003344                     	if	0	;tblptru may be non-zero
  5261  003344                     	endif
  5262  003344                     	if	0	;tblptru may be non-zero
  5263  003344                     	endif
  5264  003344  0008               	tblrd		*
  5265  003346  50F5               	movf	tablat,w,c
  5266  003348  ECCA  F022         	call	_addByteCommand
  5267                           
  5268                           ;XBeeCore.c: 345: addByteCommand(data[1],1);
  5269  00334C  0E01               	movlw	1
  5270  00334E  0100               	movlb	0	; () banked
  5271  003350  6F66               	movwf	addByteCommand@calcChecksum& (0+255),b
  5272  003352  0E01               	movlw	1
  5273  003354  2568               	addwf	gen_data@data& (0+255),w,b
  5274  003356  6F6D               	movwf	??_gen_data& (0+255),b
  5275  003358  0E00               	movlw	0
  5276  00335A  2169               	addwfc	(gen_data@data+1)& (0+255),w,b
  5277  00335C  6F6E               	movwf	(??_gen_data+1)& (0+255),b
  5278  00335E  C06D  FFF6         	movff	??_gen_data,tblptrl
  5279  003362  C06E  FFF7         	movff	??_gen_data+1,tblptrh
  5280  003366                     	if	0	;tblptru may be non-zero
  5281  003366                     	endif
  5282  003366                     	if	0	;tblptru may be non-zero
  5283  003366                     	endif
  5284  003366  0008               	tblrd		*
  5285  003368  50F5               	movf	tablat,w,c
  5286  00336A  ECCA  F022         	call	_addByteCommand
  5287                           
  5288                           ;XBeeCore.c: 347: for (uint8_t i=0 ; i<sizeParam ; i++)
  5289  00336E  0E00               	movlw	0
  5290  003370  0100               	movlb	0	; () banked
  5291  003372  6F71               	movwf	gen_data@i& (0+255),b
  5292  003374  D020               	goto	l1523
  5293  003376                     
  5294                           ; BSR set to: 0
  5295                           ;XBeeCore.c: 348: {
  5296                           ;XBeeCore.c: 349: addByteCommand(param[i],1);
  5297                           
  5298                           ; BSR set to: 0
  5299  003376  0E01               	movlw	1
  5300  003378  6F66               	movwf	addByteCommand@calcChecksum& (0+255),b
  5301  00337A  5171               	movf	gen_data@i& (0+255),w,b
  5302  00337C  0D01               	mullw	1
  5303  00337E  C06A  F06D         	movff	gen_data@param,??_gen_data
  5304  003382  C06B  F06E         	movff	gen_data@param+1,??_gen_data+1
  5305  003386  50F3               	movf	prodl,w,c
  5306  003388  276D               	addwf	??_gen_data& (0+255),f,b
  5307  00338A  50F4               	movf	prodh,w,c
  5308  00338C  236E               	addwfc	(??_gen_data+1)& (0+255),f,b
  5309  00338E  C06D  FFF6         	movff	??_gen_data,tblptrl
  5310  003392  C06E  FFF7         	movff	??_gen_data+1,tblptrh
  5311  003396  6AF8               	clrf	tblptru,c
  5312  003398  0E07               	movlw	(high __ramtop+-1)
  5313  00339A  64F7               	cpfsgt	tblptrh,c
  5314  00339C  D003               	bra	u8697
  5315  00339E  0008               	tblrd		*
  5316  0033A0  50F5               	movf	tablat,w,c
  5317  0033A2  D005               	bra	u8690
  5318  0033A4                     u8697:
  5319  0033A4  CFF6 FFE9          	movff	tblptrl,fsr0l
  5320  0033A8  CFF7 FFEA          	movff	tblptrh,fsr0h
  5321  0033AC  50EF               	movf	indf0,w,c
  5322  0033AE                     u8690:
  5323  0033AE  ECCA  F022         	call	_addByteCommand
  5324  0033B2  0100               	movlb	0	; () banked
  5325  0033B4  2B71               	incf	gen_data@i& (0+255),f,b
  5326  0033B6                     l1523:
  5327                           
  5328                           ; BSR set to: 0
  5329                           
  5330                           ; BSR set to: 0
  5331  0033B6  516C               	movf	gen_data@sizeParam& (0+255),w,b
  5332  0033B8  5D71               	subwf	gen_data@i& (0+255),w,b
  5333  0033BA  A0D8               	btfss	status,0,c
  5334  0033BC  D7DC               	goto	l1524
  5335                           
  5336                           ; BSR set to: 0
  5337                           ;XBeeCore.c: 350: }
  5338                           ;XBeeCore.c: 352: addByteCommand(cs,0);
  5339                           
  5340                           ; BSR set to: 0
  5341  0033BE  0E00               	movlw	0
  5342  0033C0  6F66               	movwf	addByteCommand@calcChecksum& (0+255),b
  5343  0033C2  0101               	movlb	1	; () banked
  5344  0033C4  51CE               	movf	_cs& (0+255),w,b
  5345  0033C6  ECCA  F022         	call	_addByteCommand
  5346  0033CA  0012               	return		;funcret
  5347  0033CC                     __end_of_gen_data:
  5348                           	opt stack 0
  5349                           tblptru	equ	0xFF8
  5350                           tblptrh	equ	0xFF7
  5351                           tblptrl	equ	0xFF6
  5352                           tablat	equ	0xFF5
  5353                           prodh	equ	0xFF4
  5354                           prodl	equ	0xFF3
  5355                           intcon	equ	0xFF2
  5356                           indf0	equ	0xFEF
  5357                           postinc0	equ	0xFEE
  5358                           fsr0h	equ	0xFEA
  5359                           fsr0l	equ	0xFE9
  5360                           wreg	equ	0xFE8
  5361                           postdec1	equ	0xFE5
  5362                           fsr1h	equ	0xFE2
  5363                           fsr1l	equ	0xFE1
  5364                           indf2	equ	0xFDF
  5365                           fsr2h	equ	0xFDA
  5366                           fsr2l	equ	0xFD9
  5367                           status	equ	0xFD8
  5368                           
  5369 ;; *************** function _send *****************
  5370 ;; Defined at:
  5371 ;;		line 611 in file "XBeeCore.c"
  5372 ;; Parameters:    Size  Location     Type
  5373 ;;  macAddress      2   29[BANK0 ] PTR unsigned char 
  5374 ;;		 -> RX_ADDRESS(17), 
  5375 ;;  pointer         2   31[BANK0 ] PTR unsigned char 
  5376 ;;		 -> frameBuffer(300), 
  5377 ;;  length          2   33[BANK0 ] unsigned int 
  5378 ;; Auto vars:     Size  Location     Type
  5379 ;;  i               4   40[BANK0 ] unsigned long 
  5380 ;;  r               4   36[BANK0 ] unsigned long 
  5381 ;;  i               1   49[BANK0 ] unsigned char 
  5382 ;;  i               2   46[BANK0 ] unsigned int 
  5383 ;;  i               1   52[BANK0 ] unsigned char 
  5384 ;;  maxPayload      2   50[BANK0 ] unsigned int 
  5385 ;;  size            2   44[BANK0 ] int 
  5386 ;;  MAX_RETRIES     1   48[BANK0 ] const unsigned char 
  5387 ;; Return value:  Size  Location     Type
  5388 ;;                  1    wreg      unsigned char 
  5389 ;; Registers used:
  5390 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5391 ;; Tracked objects:
  5392 ;;		On entry : 0/0
  5393 ;;		On exit  : 0/0
  5394 ;;		Unchanged: 0/0
  5395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5396 ;;      Params:         0       6       0       0       0       0       0       0       0
  5397 ;;      Locals:         0      17       0       0       0       0       0       0       0
  5398 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5399 ;;      Totals:         0      24       0       0       0       0       0       0       0
  5400 ;;Total ram usage:       24 bytes
  5401 ;; Hardware stack levels used:    1
  5402 ;; Hardware stack levels required when called:   13
  5403 ;; This function calls:
  5404 ;;		___llmod
  5405 ;;		_addByteCommand
  5406 ;;		_converter
  5407 ;;		_rand
  5408 ;;		_sendXBeePriv
  5409 ;; This function is called by:
  5410 ;;		_main
  5411 ;; This function uses a non-reentrant model
  5412 ;;
  5413                           
  5414                           	psect	text13
  5415  001DC6                     __ptext13:
  5416                           	opt stack 0
  5417  001DC6                     _send:
  5418                           	opt stack 17
  5419                           
  5420                           ;XBeeCore.c: 613: const uint8_t MAX_RETRIES = _send_retries;
  5421                           
  5422                           ;incstack = 0
  5423  001DC6  C1EA  F090         	movff	__send_retries,send@MAX_RETRIES
  5424                           
  5425                           ;XBeeCore.c: 614: uint16_t maxPayload=0;
  5426  001DCA  0E00               	movlw	0
  5427  001DCC  0100               	movlb	0	; () banked
  5428  001DCE  6F93               	movwf	(send@maxPayload+1)& (0+255),b
  5429  001DD0  0E00               	movlw	0
  5430  001DD2  6F92               	movwf	send@maxPayload& (0+255),b
  5431                           
  5432                           ;XBeeCore.c: 618: switch (protocol)
  5433  001DD4  D019               	goto	l1577
  5434  001DD6                     
  5435                           ; BSR set to: 0
  5436  001DD6  0E00               	movlw	0
  5437  001DD8  0100               	movlb	0	; () banked
  5438  001DDA  6F93               	movwf	(send@maxPayload+1)& (0+255),b
  5439  001DDC  0E49               	movlw	73
  5440  001DDE  D00D               	goto	L2
  5441  001DE0                     
  5442                           ; BSR set to: 0
  5443  001DE0  0101               	movlb	1	; () banked
  5444  001DE2  51E6               	movf	_encryptMode& (0+255),w,b
  5445  001DE4  B4D8               	btfsc	status,2,c
  5446  001DE6  D005               	goto	l1581
  5447                           
  5448                           ; BSR set to: 1
  5449  001DE8  0E00               	movlw	0
  5450  001DEA  0100               	movlb	0	; () banked
  5451  001DEC  6F93               	movwf	(send@maxPayload+1)& (0+255),b
  5452  001DEE  0E50               	movlw	80
  5453  001DF0  D004               	goto	L2
  5454  001DF2                     l1581:
  5455                           
  5456                           ;XBeeCore.c: 625: else maxPayload=100;
  5457                           
  5458                           ; BSR set to: 0
  5459  001DF2  0E00               	movlw	0
  5460  001DF4  0100               	movlb	0	; () banked
  5461  001DF6  6F93               	movwf	(send@maxPayload+1)& (0+255),b
  5462  001DF8  0E64               	movlw	100
  5463  001DFA                     L2:
  5464  001DFA  6F92               	movwf	send@maxPayload& (0+255),b
  5465                           
  5466                           ; BSR set to: 0
  5467                           ;XBeeCore.c: 626: break;
  5468  001DFC  D010               	goto	l1579
  5469  001DFE                     
  5470                           ; BSR set to: 0
  5471  001DFE  0E00               	movlw	0
  5472  001E00  0100               	movlb	0	; () banked
  5473  001E02  6F93               	movwf	(send@maxPayload+1)& (0+255),b
  5474  001E04  6992               	setf	send@maxPayload& (0+255),b
  5475                           
  5476                           ; BSR set to: 0
  5477                           ;XBeeCore.c: 631: }
  5478                           
  5479                           ; BSR set to: 0
  5480                           
  5481                           ;XBeeCore.c: 629: default: break;
  5482                           
  5483                           ;XBeeCore.c: 628: break;
  5484  001E06  D00B               	goto	l1579
  5485  001E08                     l1577:
  5486                           
  5487                           ; BSR set to: 0
  5488                           
  5489                           ; BSR set to: 0
  5490  001E08  0101               	movlb	1	; () banked
  5491  001E0A  51EE               	movf	_protocol& (0+255),w,b
  5492                           
  5493                           ; Switch size 1, requested type "space"
  5494                           ; Number of cases is 3, Range of values is 3 to 6
  5495                           ; switch strategies available:
  5496                           ; Name         Instructions Cycles
  5497                           ; simple_byte           10     6 (average)
  5498                           ;	Chosen strategy is simple_byte
  5499  001E0C  0A03               	xorlw	3	; case 3
  5500  001E0E  B4D8               	btfsc	status,2,c
  5501  001E10  D7E2               	goto	l1578
  5502  001E12  0A07               	xorlw	7	; case 4
  5503  001E14  B4D8               	btfsc	status,2,c
  5504  001E16  D7E4               	goto	l1580
  5505  001E18  0A02               	xorlw	2	; case 6
  5506  001E1A  B4D8               	btfsc	status,2,c
  5507  001E1C  D7F0               	goto	l1583
  5508  001E1E                     l1579:
  5509                           
  5510                           ;XBeeCore.c: 635: if(length > maxPayload)
  5511                           
  5512                           ; BSR set to: 1
  5513  001E1E  0100               	movlb	0	; () banked
  5514  001E20  5181               	movf	send@length& (0+255),w,b
  5515  001E22  5D92               	subwf	send@maxPayload& (0+255),w,b
  5516  001E24  5182               	movf	(send@length+1)& (0+255),w,b
  5517  001E26  5993               	subwfb	(send@maxPayload+1)& (0+255),w,b
  5518  001E28  B0D8               	btfsc	status,0,c
  5519  001E2A  D004               	goto	l1585
  5520                           
  5521                           ; BSR set to: 0
  5522                           ;XBeeCore.c: 636: {
  5523                           ;XBeeCore.c: 638: length=maxPayload;
  5524  001E2C  C092  F081         	movff	send@maxPayload,send@length
  5525  001E30  C093  F082         	movff	send@maxPayload+1,send@length+1
  5526  001E34                     l1585:
  5527                           
  5528                           ; BSR set to: 0
  5529                           ;XBeeCore.c: 639: }
  5530                           ;XBeeCore.c: 641: int16_t size=length + 14;
  5531                           
  5532                           ; BSR set to: 0
  5533  001E34  0E0E               	movlw	14
  5534  001E36  2581               	addwf	send@length& (0+255),w,b
  5535  001E38  6F8C               	movwf	send@size& (0+255),b
  5536  001E3A  0E00               	movlw	0
  5537  001E3C  2182               	addwfc	(send@length+1)& (0+255),w,b
  5538  001E3E  6F8D               	movwf	(send@size+1)& (0+255),b
  5539                           
  5540                           ; BSR set to: 0
  5541                           ;XBeeCore.c: 643: tamanhoCommand=0;
  5542  001E40  0E00               	movlw	0
  5543  001E42  0101               	movlb	1	; () banked
  5544  001E44  6FBF               	movwf	(_tamanhoCommand+1)& (0+255),b
  5545  001E46  0E00               	movlw	0
  5546  001E48  6FBE               	movwf	_tamanhoCommand& (0+255),b
  5547                           
  5548                           ; BSR set to: 1
  5549                           ;XBeeCore.c: 644: addByteCommand(0x7E,0);
  5550  001E4A  0E00               	movlw	0
  5551  001E4C  0100               	movlb	0	; () banked
  5552  001E4E  6F66               	movwf	addByteCommand@calcChecksum& (0+255),b
  5553  001E50  0E7E               	movlw	126
  5554  001E52  ECCA  F022         	call	_addByteCommand
  5555                           
  5556                           ;XBeeCore.c: 645: addByteCommand(size >> 8,0);
  5557  001E56  0E00               	movlw	0
  5558  001E58  0100               	movlb	0	; () banked
  5559  001E5A  6F66               	movwf	addByteCommand@calcChecksum& (0+255),b
  5560  001E5C  518D               	movf	(send@size+1)& (0+255),w,b
  5561  001E5E  ECCA  F022         	call	_addByteCommand
  5562                           
  5563                           ;XBeeCore.c: 646: addByteCommand(size,0);
  5564  001E62  0E00               	movlw	0
  5565  001E64  0100               	movlb	0	; () banked
  5566  001E66  6F66               	movwf	addByteCommand@calcChecksum& (0+255),b
  5567  001E68  518C               	movf	send@size& (0+255),w,b
  5568  001E6A  ECCA  F022         	call	_addByteCommand
  5569                           
  5570                           ;XBeeCore.c: 647: addByteCommand(0x10,1);
  5571  001E6E  0E01               	movlw	1
  5572  001E70  0100               	movlb	0	; () banked
  5573  001E72  6F66               	movwf	addByteCommand@calcChecksum& (0+255),b
  5574  001E74  0E10               	movlw	16
  5575  001E76  ECCA  F022         	call	_addByteCommand
  5576                           
  5577                           ;XBeeCore.c: 648: addByteCommand(0x01,1);
  5578  001E7A  0E01               	movlw	1
  5579  001E7C  0100               	movlb	0	; () banked
  5580  001E7E  6F66               	movwf	addByteCommand@calcChecksum& (0+255),b
  5581  001E80  0E01               	movlw	1
  5582  001E82  ECCA  F022         	call	_addByteCommand
  5583                           
  5584                           ;XBeeCore.c: 649: for (uint8_t i=0;i<8;i++)
  5585  001E86  0E00               	movlw	0
  5586  001E88  0100               	movlb	0	; () banked
  5587  001E8A  6F94               	movwf	send@i& (0+255),b
  5588  001E8C                     l10447:
  5589                           
  5590                           ; BSR set to: 0
  5591  001E8C  0E07               	movlw	7
  5592  001E8E  6594               	cpfsgt	send@i& (0+255),b
  5593  001E90  D001               	goto	l1586
  5594  001E92  D020               	goto	u9890
  5595  001E94                     l1586:
  5596                           
  5597                           ; BSR set to: 0
  5598                           ;XBeeCore.c: 650: {
  5599                           ;XBeeCore.c: 651: addByteCommand(converter(macAddress[i*2],macAddress[i*2+1]),1);
  5600                           
  5601                           ; BSR set to: 0
  5602  001E94  0E01               	movlw	1
  5603  001E96  6F66               	movwf	addByteCommand@calcChecksum& (0+255),b
  5604  001E98  5194               	movf	send@i& (0+255),w,b
  5605  001E9A  0D02               	mullw	2
  5606  001E9C  0E01               	movlw	1
  5607  001E9E  26F3               	addwf	prodl,f,c
  5608  001EA0  0E00               	movlw	0
  5609  001EA2  22F4               	addwfc	prodh,f,c
  5610  001EA4  50F3               	movf	prodl,w,c
  5611  001EA6  257D               	addwf	send@macAddress& (0+255),w,b
  5612  001EA8  6ED9               	movwf	fsr2l,c
  5613  001EAA  50F4               	movf	prodh,w,c
  5614  001EAC  217E               	addwfc	(send@macAddress+1)& (0+255),w,b
  5615  001EAE  6EDA               	movwf	fsr2h,c
  5616  001EB0  50DF               	movf	indf2,w,c
  5617  001EB2  6F61               	movwf	converter@conv2& (0+255),b
  5618  001EB4  5194               	movf	send@i& (0+255),w,b
  5619  001EB6  0D02               	mullw	2
  5620  001EB8  50F3               	movf	prodl,w,c
  5621  001EBA  257D               	addwf	send@macAddress& (0+255),w,b
  5622  001EBC  6ED9               	movwf	fsr2l,c
  5623  001EBE  50F4               	movf	prodh,w,c
  5624  001EC0  217E               	addwfc	(send@macAddress+1)& (0+255),w,b
  5625  001EC2  6EDA               	movwf	fsr2h,c
  5626  001EC4  50DF               	movf	indf2,w,c
  5627  001EC6  EC34  F021         	call	_converter
  5628  001ECA  ECCA  F022         	call	_addByteCommand
  5629  001ECE  0100               	movlb	0	; () banked
  5630  001ED0  2B94               	incf	send@i& (0+255),f,b
  5631  001ED2  D7DC               	goto	l10447
  5632  001ED4                     u9890:
  5633                           
  5634                           ; BSR set to: 0
  5635                           ;XBeeCore.c: 652: }
  5636                           ;XBeeCore.c: 653: addByteCommand(0xFF,1);
  5637                           
  5638                           ; BSR set to: 0
  5639  001ED4  0E01               	movlw	1
  5640  001ED6  6F66               	movwf	addByteCommand@calcChecksum& (0+255),b
  5641  001ED8  0EFF               	movlw	255
  5642  001EDA  ECCA  F022         	call	_addByteCommand
  5643                           
  5644                           ;XBeeCore.c: 654: addByteCommand(0xFE,1);
  5645  001EDE  0E01               	movlw	1
  5646  001EE0  0100               	movlb	0	; () banked
  5647  001EE2  6F66               	movwf	addByteCommand@calcChecksum& (0+255),b
  5648  001EE4  0EFE               	movlw	254
  5649  001EE6  ECCA  F022         	call	_addByteCommand
  5650                           
  5651                           ;XBeeCore.c: 655: addByteCommand(0x00,1);
  5652  001EEA  0E01               	movlw	1
  5653  001EEC  0100               	movlb	0	; () banked
  5654  001EEE  6F66               	movwf	addByteCommand@calcChecksum& (0+255),b
  5655  001EF0  0E00               	movlw	0
  5656  001EF2  ECCA  F022         	call	_addByteCommand
  5657                           
  5658                           ;XBeeCore.c: 656: addByteCommand(0x00,1);
  5659  001EF6  0E01               	movlw	1
  5660  001EF8  0100               	movlb	0	; () banked
  5661  001EFA  6F66               	movwf	addByteCommand@calcChecksum& (0+255),b
  5662  001EFC  0E00               	movlw	0
  5663  001EFE  ECCA  F022         	call	_addByteCommand
  5664                           
  5665                           ;XBeeCore.c: 658: for (uint16_t i=0;i<length;i++)
  5666  001F02  0E00               	movlw	0
  5667  001F04  0100               	movlb	0	; () banked
  5668  001F06  6F8F               	movwf	(send@i_3998+1)& (0+255),b
  5669  001F08  0E00               	movlw	0
  5670  001F0A  6F8E               	movwf	send@i_3998& (0+255),b
  5671  001F0C  D00E               	goto	l1588
  5672  001F0E                     
  5673                           ; BSR set to: 0
  5674                           ;XBeeCore.c: 659: {
  5675                           ;XBeeCore.c: 660: addByteCommand(pointer[i],1);
  5676                           
  5677                           ; BSR set to: 0
  5678  001F0E  0E01               	movlw	1
  5679  001F10  6F66               	movwf	addByteCommand@calcChecksum& (0+255),b
  5680  001F12  518E               	movf	send@i_3998& (0+255),w,b
  5681  001F14  257F               	addwf	send@pointer& (0+255),w,b
  5682  001F16  6ED9               	movwf	fsr2l,c
  5683  001F18  518F               	movf	(send@i_3998+1)& (0+255),w,b
  5684  001F1A  2180               	addwfc	(send@pointer+1)& (0+255),w,b
  5685  001F1C  6EDA               	movwf	fsr2h,c
  5686  001F1E  50DF               	movf	indf2,w,c
  5687  001F20  ECCA  F022         	call	_addByteCommand
  5688  001F24  0100               	movlb	0	; () banked
  5689  001F26  4B8E               	infsnz	send@i_3998& (0+255),f,b
  5690  001F28  2B8F               	incf	(send@i_3998+1)& (0+255),f,b
  5691  001F2A                     l1588:
  5692                           
  5693                           ; BSR set to: 0
  5694                           
  5695                           ; BSR set to: 0
  5696  001F2A  5181               	movf	send@length& (0+255),w,b
  5697  001F2C  5D8E               	subwf	send@i_3998& (0+255),w,b
  5698  001F2E  5182               	movf	(send@length+1)& (0+255),w,b
  5699  001F30  598F               	subwfb	(send@i_3998+1)& (0+255),w,b
  5700  001F32  A0D8               	btfss	status,0,c
  5701  001F34  D7EC               	goto	l1589
  5702                           
  5703                           ; BSR set to: 0
  5704                           ;XBeeCore.c: 661: }
  5705                           ;XBeeCore.c: 663: addByteCommand(cs,0);
  5706                           
  5707                           ; BSR set to: 0
  5708  001F36  0E00               	movlw	0
  5709  001F38  6F66               	movwf	addByteCommand@calcChecksum& (0+255),b
  5710  001F3A  0101               	movlb	1	; () banked
  5711  001F3C  51CE               	movf	_cs& (0+255),w,b
  5712  001F3E  ECCA  F022         	call	_addByteCommand
  5713                           
  5714                           ;XBeeCore.c: 665: for (uint8_t i=0;i<=MAX_RETRIES;i++)
  5715  001F42  0E00               	movlw	0
  5716  001F44  0100               	movlb	0	; () banked
  5717  001F46  6F91               	movwf	send@i_3999& (0+255),b
  5718  001F48                     l10471:
  5719                           
  5720                           ; BSR set to: 0
  5721  001F48  5191               	movf	send@i_3999& (0+255),w,b
  5722  001F4A  5D90               	subwf	send@MAX_RETRIES& (0+255),w,b
  5723  001F4C  A0D8               	btfss	status,0,c
  5724  001F4E  D051               	goto	u9940
  5725                           
  5726                           ; BSR set to: 0
  5727                           ;XBeeCore.c: 666: {
  5728                           ;XBeeCore.c: 667: sendXBeePriv();
  5729                           
  5730                           ; BSR set to: 0
  5731                           
  5732                           ; BSR set to: 0
  5733  001F50  EC45  F026         	call	_sendXBeePriv	;wreg free
  5734                           
  5735                           ;XBeeCore.c: 670: if( error_TX == 0 )
  5736  001F54  0101               	movlb	1	; () banked
  5737  001F56  51EC               	movf	_error_TX& (0+255),w,b
  5738  001F58  A4D8               	btfss	status,2,c
  5739  001F5A  D002               	goto	l1593
  5740                           
  5741                           ; BSR set to: 1
  5742                           ;XBeeCore.c: 671: {
  5743                           ;XBeeCore.c: 673: return 0;
  5744  001F5C  0E00               	movlw	0
  5745                           
  5746                           ; BSR set to: 1
  5747  001F5E  0012               	return	
  5748  001F60                     l1593:
  5749                           
  5750                           ; BSR set to: 1
  5751                           ;XBeeCore.c: 675: else
  5752                           ;XBeeCore.c: 676: {
  5753                           ;XBeeCore.c: 680: unsigned long r=(unsigned long)rand()%400LU + 100LU;
  5754                           
  5755                           ; BSR set to: 1
  5756  001F60  EC3B  F024         	call	_rand	;wreg free
  5757  001F64  0100               	movlb	0	; () banked
  5758  001F66  C06C  F06E         	movff	?_rand,___llmod@dividend
  5759  001F6A  C06D  F06F         	movff	?_rand+1,___llmod@dividend+1
  5760  001F6E  0E00               	movlw	0
  5761  001F70  BF6F               	btfsc	(___llmod@dividend+1)& (0+255),7,b
  5762  001F72  0EFF               	movlw	-1
  5763  001F74  6F70               	movwf	(___llmod@dividend+2)& (0+255),b
  5764  001F76  6F71               	movwf	(___llmod@dividend+3)& (0+255),b
  5765  001F78  0E90               	movlw	144
  5766  001F7A  6F72               	movwf	___llmod@divisor& (0+255),b
  5767  001F7C  0E01               	movlw	1
  5768  001F7E  6F73               	movwf	(___llmod@divisor+1)& (0+255),b
  5769  001F80  0E00               	movlw	0
  5770  001F82  6F74               	movwf	(___llmod@divisor+2)& (0+255),b
  5771  001F84  0E00               	movlw	0
  5772  001F86  6F75               	movwf	(___llmod@divisor+3)& (0+255),b
  5773  001F88  EC76  F023         	call	___llmod	;wreg free
  5774  001F8C  0E64               	movlw	100
  5775  001F8E  0100               	movlb	0	; () banked
  5776  001F90  256E               	addwf	?___llmod& (0+255),w,b
  5777  001F92  6F84               	movwf	send@r& (0+255),b
  5778  001F94  0E00               	movlw	0
  5779  001F96  216F               	addwfc	(?___llmod+1)& (0+255),w,b
  5780  001F98  6F85               	movwf	(send@r+1)& (0+255),b
  5781  001F9A  0E00               	movlw	0
  5782  001F9C  2170               	addwfc	(?___llmod+2)& (0+255),w,b
  5783  001F9E  6F86               	movwf	(send@r+2)& (0+255),b
  5784  001FA0  0E00               	movlw	0
  5785  001FA2  2171               	addwfc	(?___llmod+3)& (0+255),w,b
  5786  001FA4  6F87               	movwf	(send@r+3)& (0+255),b
  5787                           
  5788                           ; BSR set to: 0
  5789                           ;XBeeCore.c: 681: for (unsigned long i=0;i<r;i++)
  5790  001FA6  0E00               	movlw	0
  5791  001FA8  6F88               	movwf	send@i_4001& (0+255),b
  5792  001FAA  0E00               	movlw	0
  5793  001FAC  6F89               	movwf	(send@i_4001+1)& (0+255),b
  5794  001FAE  0E00               	movlw	0
  5795  001FB0  6F8A               	movwf	(send@i_4001+2)& (0+255),b
  5796  001FB2  0E00               	movlw	0
  5797  001FB4  6F8B               	movwf	(send@i_4001+3)& (0+255),b
  5798  001FB6  D010               	goto	l1596
  5799  001FB8                     
  5800                           ; BSR set to: 0
  5801                           ;XBeeCore.c: 682: {
  5802                           ;XBeeCore.c: 683: _delay((unsigned long)((1)*(48000000/4000.0)));
  5803                           
  5804                           ; BSR set to: 0
  5805  001FB8  0E10               	movlw	16
  5806  001FBA  0100               	movlb	0	; () banked
  5807  001FBC  6F83               	movwf	??_send& (0+255),b
  5808  001FBE  0E94               	movlw	148
  5809  001FC0                     u11447:
  5810  001FC0  2EE8               	decfsz	wreg,f,c
  5811  001FC2  D7FE               	bra	u11447
  5812  001FC4  2F83               	decfsz	??_send& (0+255),f,b
  5813  001FC6  D7FC               	bra	u11447
  5814  001FC8  F000               	nop	
  5815  001FCA  0E01               	movlw	1
  5816  001FCC  0100               	movlb	0	; () banked
  5817  001FCE  2788               	addwf	send@i_4001& (0+255),f,b
  5818  001FD0  0E00               	movlw	0
  5819  001FD2  2389               	addwfc	(send@i_4001+1)& (0+255),f,b
  5820  001FD4  238A               	addwfc	(send@i_4001+2)& (0+255),f,b
  5821  001FD6  238B               	addwfc	(send@i_4001+3)& (0+255),f,b
  5822  001FD8                     l1596:
  5823                           
  5824                           ; BSR set to: 0
  5825                           
  5826                           ; BSR set to: 0
  5827  001FD8  5184               	movf	send@r& (0+255),w,b
  5828  001FDA  5D88               	subwf	send@i_4001& (0+255),w,b
  5829  001FDC  5185               	movf	(send@r+1)& (0+255),w,b
  5830  001FDE  5989               	subwfb	(send@i_4001+1)& (0+255),w,b
  5831  001FE0  5186               	movf	(send@r+2)& (0+255),w,b
  5832  001FE2  598A               	subwfb	(send@i_4001+2)& (0+255),w,b
  5833  001FE4  5187               	movf	(send@r+3)& (0+255),w,b
  5834  001FE6  598B               	subwfb	(send@i_4001+3)& (0+255),w,b
  5835  001FE8  A0D8               	btfss	status,0,c
  5836  001FEA  D7E6               	goto	l1597
  5837                           
  5838                           ; BSR set to: 0
  5839                           
  5840                           ; BSR set to: 0
  5841  001FEC  0100               	movlb	0	; () banked
  5842  001FEE  2B91               	incf	send@i_3999& (0+255),f,b
  5843  001FF0  D7AB               	goto	l10471
  5844  001FF2                     u9940:
  5845                           
  5846                           ; BSR set to: 0
  5847                           ;XBeeCore.c: 684: }
  5848                           ;XBeeCore.c: 685: }
  5849                           ;XBeeCore.c: 686: }
  5850                           ;XBeeCore.c: 688: return 1;
  5851                           
  5852                           ; BSR set to: 0
  5853  001FF2  0E01               	movlw	1
  5854  001FF4  0012               	return	
  5855  001FF6                     __end_of_send:
  5856                           	opt stack 0
  5857                           tblptru	equ	0xFF8
  5858                           tblptrh	equ	0xFF7
  5859                           tblptrl	equ	0xFF6
  5860                           tablat	equ	0xFF5
  5861                           prodh	equ	0xFF4
  5862                           prodl	equ	0xFF3
  5863                           intcon	equ	0xFF2
  5864                           indf0	equ	0xFEF
  5865                           postinc0	equ	0xFEE
  5866                           fsr0h	equ	0xFEA
  5867                           fsr0l	equ	0xFE9
  5868                           wreg	equ	0xFE8
  5869                           postdec1	equ	0xFE5
  5870                           fsr1h	equ	0xFE2
  5871                           fsr1l	equ	0xFE1
  5872                           indf2	equ	0xFDF
  5873                           fsr2h	equ	0xFDA
  5874                           fsr2l	equ	0xFD9
  5875                           status	equ	0xFD8
  5876                           
  5877 ;; *************** function _sendXBeePriv *****************
  5878 ;; Defined at:
  5879 ;;		line 823 in file "XBeeCore.c"
  5880 ;; Parameters:    Size  Location     Type
  5881 ;;		None
  5882 ;; Auto vars:     Size  Location     Type
  5883 ;;  i               2   27[BANK0 ] unsigned int 
  5884 ;; Return value:  Size  Location     Type
  5885 ;;                  1    wreg      unsigned char 
  5886 ;; Registers used:
  5887 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5888 ;; Tracked objects:
  5889 ;;		On entry : 0/0
  5890 ;;		On exit  : 0/0
  5891 ;;		Unchanged: 0/0
  5892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5893 ;;      Params:         0       0       0       0       0       0       0       0       0
  5894 ;;      Locals:         0       2       0       0       0       0       0       0       0
  5895 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5896 ;;      Totals:         0       2       0       0       0       0       0       0       0
  5897 ;;Total ram usage:        2 bytes
  5898 ;; Hardware stack levels used:    1
  5899 ;; Hardware stack levels required when called:   12
  5900 ;; This function calls:
  5901 ;;		_putch
  5902 ;;		_txZBStatusResponse
  5903 ;; This function is called by:
  5904 ;;		_send
  5905 ;; This function uses a non-reentrant model
  5906 ;;
  5907                           
  5908                           	psect	text14
  5909  004C8A                     __ptext14:
  5910                           	opt stack 0
  5911  004C8A                     _sendXBeePriv:
  5912                           	opt stack 17
  5913                           
  5914                           ;XBeeCore.c: 825: for (uint16_t i = 0; i < tamanhoCommand; i++)
  5915                           
  5916                           ;incstack = 0
  5917  004C8A  0E00               	movlw	0
  5918  004C8C  0100               	movlb	0	; () banked
  5919  004C8E  6F7C               	movwf	(sendXBeePriv@i+1)& (0+255),b
  5920  004C90  0E00               	movlw	0
  5921  004C92  6F7B               	movwf	sendXBeePriv@i& (0+255),b
  5922  004C94  D00C               	goto	l1617
  5923  004C96                     
  5924                           ; BSR set to: 0
  5925                           ;XBeeCore.c: 826: {
  5926                           ;XBeeCore.c: 827: putch((char)command[i]);
  5927                           
  5928                           ; BSR set to: 0
  5929  004C96  0E5C               	movlw	low _command
  5930  004C98  257B               	addwf	sendXBeePriv@i& (0+255),w,b
  5931  004C9A  6ED9               	movwf	fsr2l,c
  5932  004C9C  0E00               	movlw	high _command
  5933  004C9E  217C               	addwfc	(sendXBeePriv@i+1)& (0+255),w,b
  5934  004CA0  6EDA               	movwf	fsr2h,c
  5935  004CA2  50DF               	movf	indf2,w,c
  5936  004CA4  ECEF  F028         	call	_putch
  5937  004CA8  0100               	movlb	0	; () banked
  5938  004CAA  4B7B               	infsnz	sendXBeePriv@i& (0+255),f,b
  5939  004CAC  2B7C               	incf	(sendXBeePriv@i+1)& (0+255),f,b
  5940  004CAE                     l1617:
  5941                           
  5942                           ; BSR set to: 0
  5943                           
  5944                           ; BSR set to: 0
  5945  004CAE  0101               	movlb	1	; () banked
  5946  004CB0  51BE               	movf	_tamanhoCommand& (0+255),w,b
  5947  004CB2  0100               	movlb	0	; () banked
  5948  004CB4  5D7B               	subwf	sendXBeePriv@i& (0+255),w,b
  5949  004CB6  0101               	movlb	1	; () banked
  5950  004CB8  51BF               	movf	(_tamanhoCommand+1)& (0+255),w,b
  5951  004CBA  0100               	movlb	0	; () banked
  5952  004CBC  597C               	subwfb	(sendXBeePriv@i+1)& (0+255),w,b
  5953  004CBE  A0D8               	btfss	status,0,c
  5954  004CC0  D7EA               	goto	l1618
  5955                           
  5956                           ; BSR set to: 0
  5957                           ;XBeeCore.c: 828: }
  5958                           ;XBeeCore.c: 831: error_TX=txZBStatusResponse();
  5959                           
  5960                           ; BSR set to: 0
  5961  004CC2  ECED  F01C         	call	_txZBStatusResponse	;wreg free
  5962  004CC6  0101               	movlb	1	; () banked
  5963  004CC8  6FEC               	movwf	_error_TX& (0+255),b
  5964  004CCA  0012               	return	
  5965  004CCC                     __end_of_sendXBeePriv:
  5966                           	opt stack 0
  5967                           tblptru	equ	0xFF8
  5968                           tblptrh	equ	0xFF7
  5969                           tblptrl	equ	0xFF6
  5970                           tablat	equ	0xFF5
  5971                           prodh	equ	0xFF4
  5972                           prodl	equ	0xFF3
  5973                           intcon	equ	0xFF2
  5974                           indf0	equ	0xFEF
  5975                           postinc0	equ	0xFEE
  5976                           fsr0h	equ	0xFEA
  5977                           fsr0l	equ	0xFE9
  5978                           wreg	equ	0xFE8
  5979                           postdec1	equ	0xFE5
  5980                           fsr1h	equ	0xFE2
  5981                           fsr1l	equ	0xFE1
  5982                           indf2	equ	0xFDF
  5983                           fsr2h	equ	0xFDA
  5984                           fsr2l	equ	0xFD9
  5985                           status	equ	0xFD8
  5986                           
  5987 ;; *************** function _txZBStatusResponse *****************
  5988 ;; Defined at:
  5989 ;;		line 849 in file "XBeeCore.c"
  5990 ;; Parameters:    Size  Location     Type
  5991 ;;		None
  5992 ;; Auto vars:     Size  Location     Type
  5993 ;;  previous        4   20[BANK0 ] unsigned long 
  5994 ;;  intervalMAX     2   24[BANK0 ] unsigned int 
  5995 ;;  timeout         1   26[BANK0 ] unsigned char 
  5996 ;; Return value:  Size  Location     Type
  5997 ;;                  1    wreg      unsigned char 
  5998 ;; Registers used:
  5999 ;;		wreg, status,2, status,0, cstack
  6000 ;; Tracked objects:
  6001 ;;		On entry : 0/0
  6002 ;;		On exit  : 0/0
  6003 ;;		Unchanged: 0/0
  6004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6005 ;;      Params:         0       0       0       0       0       0       0       0       0
  6006 ;;      Locals:         0       7       0       0       0       0       0       0       0
  6007 ;;      Temps:          0      12       0       0       0       0       0       0       0
  6008 ;;      Totals:         0      19       0       0       0       0       0       0       0
  6009 ;;Total ram usage:       19 bytes
  6010 ;; Hardware stack levels used:    1
  6011 ;; Hardware stack levels required when called:   11
  6012 ;; This function calls:
  6013 ;;		_millis
  6014 ;; This function is called by:
  6015 ;;		_sendXBeePriv
  6016 ;; This function uses a non-reentrant model
  6017 ;;
  6018                           
  6019                           	psect	text15
  6020  0039DA                     __ptext15:
  6021                           	opt stack 0
  6022  0039DA                     _txZBStatusResponse:
  6023                           	opt stack 17
  6024                           
  6025                           ;XBeeCore.c: 851: uint16_t intervalMAX=40000;
  6026                           
  6027                           ; BSR set to: 1
  6028                           ;incstack = 0
  6029  0039DA  0E9C               	movlw	156
  6030  0039DC  0100               	movlb	0	; () banked
  6031  0039DE  6F79               	movwf	(txZBStatusResponse@intervalMAX+1)& (0+255),b
  6032  0039E0  0E40               	movlw	64
  6033  0039E2  6F78               	movwf	txZBStatusResponse@intervalMAX& (0+255),b
  6034                           
  6035                           ;XBeeCore.c: 852: bool timeout=0;
  6036  0039E4  0E00               	movlw	0
  6037  0039E6  6F7A               	movwf	txZBStatusResponse@timeout& (0+255),b
  6038                           
  6039                           ; BSR set to: 0
  6040                           ;XBeeCore.c: 853: uint32_t previous=millis();
  6041  0039E8  EC6D  F028         	call	_millis	;wreg free
  6042  0039EC  C060  F074         	movff	?_millis,txZBStatusResponse@previous
  6043  0039F0  C061  F075         	movff	?_millis+1,txZBStatusResponse@previous+1
  6044  0039F4  C062  F076         	movff	?_millis+2,txZBStatusResponse@previous+2
  6045  0039F8  C063  F077         	movff	?_millis+3,txZBStatusResponse@previous+3
  6046                           
  6047                           ;XBeeCore.c: 855: response.transmitStatus.frameType=0;
  6048  0039FC  0E00               	movlw	0
  6049  0039FE  0103               	movlb	3	; () banked
  6050  003A00  6F0C               	movwf	(_response+2)& (0+255),b	;volatile
  6051                           
  6052                           ;XBeeCore.c: 858: while ((!timeout) && (response.transmitStatus.frameType!=0x8B))
  6053  003A02  D033               	goto	l1625
  6054  003A04                     
  6055                           ; BSR set to: 3
  6056                           ;XBeeCore.c: 859: {
  6057                           ;XBeeCore.c: 867: if ((millis()-previous) > intervalMAX)
  6058                           
  6059                           ; BSR set to: 3
  6060  003A04  C074  F068         	movff	txZBStatusResponse@previous,??_txZBStatusResponse
  6061  003A08  C075  F069         	movff	txZBStatusResponse@previous+1,??_txZBStatusResponse+1
  6062  003A0C  C076  F06A         	movff	txZBStatusResponse@previous+2,??_txZBStatusResponse+2
  6063  003A10  C077  F06B         	movff	txZBStatusResponse@previous+3,??_txZBStatusResponse+3
  6064  003A14  0100               	movlb	0	; () banked
  6065  003A16  1F68               	comf	??_txZBStatusResponse& (0+255),f,b
  6066  003A18  1F69               	comf	(??_txZBStatusResponse+1)& (0+255),f,b
  6067  003A1A  1F6A               	comf	(??_txZBStatusResponse+2)& (0+255),f,b
  6068  003A1C  1F6B               	comf	(??_txZBStatusResponse+3)& (0+255),f,b
  6069  003A1E  2B68               	incf	??_txZBStatusResponse& (0+255),f,b
  6070  003A20  0E00               	movlw	0
  6071  003A22  2369               	addwfc	(??_txZBStatusResponse+1)& (0+255),f,b
  6072  003A24  236A               	addwfc	(??_txZBStatusResponse+2)& (0+255),f,b
  6073  003A26  236B               	addwfc	(??_txZBStatusResponse+3)& (0+255),f,b
  6074  003A28  EC6D  F028         	call	_millis	;wreg free
  6075  003A2C  0100               	movlb	0	; () banked
  6076  003A2E  5168               	movf	??_txZBStatusResponse& (0+255),w,b
  6077  003A30  2560               	addwf	?_millis& (0+255),w,b
  6078  003A32  6F6C               	movwf	(??_txZBStatusResponse+4)& (0+255),b
  6079  003A34  5169               	movf	(??_txZBStatusResponse+1)& (0+255),w,b
  6080  003A36  2161               	addwfc	(?_millis+1)& (0+255),w,b
  6081  003A38  6F6D               	movwf	(??_txZBStatusResponse+5)& (0+255),b
  6082  003A3A  516A               	movf	(??_txZBStatusResponse+2)& (0+255),w,b
  6083  003A3C  2162               	addwfc	(?_millis+2)& (0+255),w,b
  6084  003A3E  6F6E               	movwf	(??_txZBStatusResponse+6)& (0+255),b
  6085  003A40  516B               	movf	(??_txZBStatusResponse+3)& (0+255),w,b
  6086  003A42  2163               	addwfc	(?_millis+3)& (0+255),w,b
  6087  003A44  6F6F               	movwf	(??_txZBStatusResponse+7)& (0+255),b
  6088  003A46  5178               	movf	txZBStatusResponse@intervalMAX& (0+255),w,b
  6089  003A48  6F70               	movwf	(??_txZBStatusResponse+8)& (0+255),b
  6090  003A4A  5179               	movf	(txZBStatusResponse@intervalMAX+1)& (0+255),w,b
  6091  003A4C  6F71               	movwf	(??_txZBStatusResponse+9)& (0+255),b
  6092  003A4E  6B72               	clrf	(??_txZBStatusResponse+10)& (0+255),b
  6093  003A50  6B73               	clrf	(??_txZBStatusResponse+11)& (0+255),b
  6094  003A52  516C               	movf	(??_txZBStatusResponse+4)& (0+255),w,b
  6095  003A54  5D70               	subwf	(??_txZBStatusResponse+8)& (0+255),w,b
  6096  003A56  516D               	movf	(??_txZBStatusResponse+5)& (0+255),w,b
  6097  003A58  5971               	subwfb	(??_txZBStatusResponse+9)& (0+255),w,b
  6098  003A5A  516E               	movf	(??_txZBStatusResponse+6)& (0+255),w,b
  6099  003A5C  5972               	subwfb	(??_txZBStatusResponse+10)& (0+255),w,b
  6100  003A5E  516F               	movf	(??_txZBStatusResponse+7)& (0+255),w,b
  6101  003A60  5973               	subwfb	(??_txZBStatusResponse+11)& (0+255),w,b
  6102  003A62  B0D8               	btfsc	status,0,c
  6103  003A64  D002               	goto	l1625
  6104                           
  6105                           ; BSR set to: 0
  6106                           ;XBeeCore.c: 868: {
  6107                           ;XBeeCore.c: 869: timeout=1;
  6108  003A66  0E01               	movlw	1
  6109  003A68  6F7A               	movwf	txZBStatusResponse@timeout& (0+255),b
  6110  003A6A                     l1625:
  6111                           
  6112                           ; BSR set to: 0
  6113  003A6A  0100               	movlb	0	; () banked
  6114  003A6C  517A               	movf	txZBStatusResponse@timeout& (0+255),w,b
  6115  003A6E  A4D8               	btfss	status,2,c
  6116  003A70  D005               	goto	u7250
  6117                           
  6118                           ; BSR set to: 0
  6119  003A72  0E8B               	movlw	139
  6120  003A74  0103               	movlb	3	; () banked
  6121  003A76  190C               	xorwf	(_response+2)& (0+255),w,b	;volatile
  6122  003A78  A4D8               	btfss	status,2,c
  6123  003A7A  D7C4               	goto	l1624
  6124  003A7C                     u7250:
  6125                           
  6126                           ;XBeeCore.c: 870: }
  6127                           ;XBeeCore.c: 871: }
  6128                           ;XBeeCore.c: 873: error_TX=1;
  6129                           
  6130                           ; BSR set to: 3
  6131                           
  6132                           ; BSR set to: 3
  6133  003A7C  0E01               	movlw	1
  6134  003A7E  0101               	movlb	1	; () banked
  6135  003A80  6FEC               	movwf	_error_TX& (0+255),b
  6136                           
  6137                           ; BSR set to: 1
  6138                           ;XBeeCore.c: 874: if (response.transmitStatus.frameType==0x8B)
  6139  003A82  0E8B               	movlw	139
  6140  003A84  0103               	movlb	3	; () banked
  6141  003A86  190C               	xorwf	(_response+2)& (0+255),w,b	;volatile
  6142  003A88  A4D8               	btfss	status,2,c
  6143  003A8A  D00C               	goto	l1630
  6144                           
  6145                           ; BSR set to: 3
  6146                           ;XBeeCore.c: 875: {
  6147                           ;XBeeCore.c: 876: retries_sending=response.transmitStatus.transmitRetryCount;
  6148  003A8C  C310  F1E7         	movff	_response+6,_retries_sending	;volatile
  6149                           
  6150                           ;XBeeCore.c: 877: discovery_status=response.transmitStatus.discoveryStatus;
  6151  003A90  C312  F1E8         	movff	_response+8,_discovery_status	;volatile
  6152                           
  6153                           ;XBeeCore.c: 878: delivery_status=response.transmitStatus.deliveryStatus;
  6154  003A94  C311  F1E9         	movff	_response+7,_delivery_status	;volatile
  6155                           
  6156                           ; BSR set to: 3
  6157                           ;XBeeCore.c: 879: if (delivery_status==0)
  6158  003A98  0101               	movlb	1	; () banked
  6159  003A9A  51E9               	movf	_delivery_status& (0+255),w,b
  6160  003A9C  A4D8               	btfss	status,2,c
  6161  003A9E  D002               	goto	l1630
  6162                           
  6163                           ; BSR set to: 1
  6164                           ;XBeeCore.c: 880: error_TX=0;
  6165  003AA0  0E00               	movlw	0
  6166  003AA2  6FEC               	movwf	_error_TX& (0+255),b
  6167  003AA4                     l1630:
  6168                           
  6169                           ;XBeeCore.c: 881: }
  6170                           ;XBeeCore.c: 883: return error_TX;
  6171                           
  6172                           ; BSR set to: 1
  6173  003AA4  0101               	movlb	1	; () banked
  6174  003AA6  51EC               	movf	_error_TX& (0+255),w,b
  6175  003AA8  0012               	return	
  6176  003AAA                     __end_of_txZBStatusResponse:
  6177                           	opt stack 0
  6178                           tblptru	equ	0xFF8
  6179                           tblptrh	equ	0xFF7
  6180                           tblptrl	equ	0xFF6
  6181                           tablat	equ	0xFF5
  6182                           prodh	equ	0xFF4
  6183                           prodl	equ	0xFF3
  6184                           intcon	equ	0xFF2
  6185                           indf0	equ	0xFEF
  6186                           postinc0	equ	0xFEE
  6187                           fsr0h	equ	0xFEA
  6188                           fsr0l	equ	0xFE9
  6189                           wreg	equ	0xFE8
  6190                           postdec1	equ	0xFE5
  6191                           fsr1h	equ	0xFE2
  6192                           fsr1l	equ	0xFE1
  6193                           indf2	equ	0xFDF
  6194                           fsr2h	equ	0xFDA
  6195                           fsr2l	equ	0xFD9
  6196                           status	equ	0xFD8
  6197                           
  6198 ;; *************** function _putch *****************
  6199 ;; Defined at:
  6200 ;;		line 46 in file "uart/uart.c"
  6201 ;; Parameters:    Size  Location     Type
  6202 ;;  data            1    wreg     unsigned char 
  6203 ;; Auto vars:     Size  Location     Type
  6204 ;;  data            1    0[BANK0 ] unsigned char 
  6205 ;; Return value:  Size  Location     Type
  6206 ;;                  1    wreg      void 
  6207 ;; Registers used:
  6208 ;;		wreg
  6209 ;; Tracked objects:
  6210 ;;		On entry : 0/0
  6211 ;;		On exit  : 0/0
  6212 ;;		Unchanged: 0/0
  6213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6214 ;;      Params:         0       0       0       0       0       0       0       0       0
  6215 ;;      Locals:         0       1       0       0       0       0       0       0       0
  6216 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6217 ;;      Totals:         0       1       0       0       0       0       0       0       0
  6218 ;;Total ram usage:        1 bytes
  6219 ;; Hardware stack levels used:    1
  6220 ;; Hardware stack levels required when called:   10
  6221 ;; This function calls:
  6222 ;;		Nothing
  6223 ;; This function is called by:
  6224 ;;		_gen_send
  6225 ;;		_sendXBeePriv
  6226 ;;		_enviaComando
  6227 ;; This function uses a non-reentrant model
  6228 ;;
  6229                           
  6230                           	psect	text16
  6231  0051DE                     __ptext16:
  6232                           	opt stack 0
  6233  0051DE                     _putch:
  6234                           	opt stack 18
  6235                           
  6236                           ; BSR set to: 1
  6237                           ;incstack = 0
  6238                           ;putch@data stored from wreg
  6239  0051DE  0100               	movlb	0	; () banked
  6240  0051E0  6F60               	movwf	putch@data& (0+255),b
  6241  0051E2                     
  6242                           ;uart.c: 48: while (!TXIF);
  6243  0051E2  A89E               	btfss	3998,4,c	;volatile
  6244  0051E4  D7FE               	goto	l8577
  6245                           
  6246                           ;uart.c: 49: TXREG=data;
  6247  0051E6  C060  FFAD         	movff	putch@data,4013	;volatile
  6248  0051EA  0012               	return		;funcret
  6249  0051EC                     __end_of_putch:
  6250                           	opt stack 0
  6251                           tblptru	equ	0xFF8
  6252                           tblptrh	equ	0xFF7
  6253                           tblptrl	equ	0xFF6
  6254                           tablat	equ	0xFF5
  6255                           prodh	equ	0xFF4
  6256                           prodl	equ	0xFF3
  6257                           intcon	equ	0xFF2
  6258                           indf0	equ	0xFEF
  6259                           postinc0	equ	0xFEE
  6260                           fsr0h	equ	0xFEA
  6261                           fsr0l	equ	0xFE9
  6262                           wreg	equ	0xFE8
  6263                           postdec1	equ	0xFE5
  6264                           fsr1h	equ	0xFE2
  6265                           fsr1l	equ	0xFE1
  6266                           indf2	equ	0xFDF
  6267                           fsr2h	equ	0xFDA
  6268                           fsr2l	equ	0xFD9
  6269                           status	equ	0xFD8
  6270                           
  6271 ;; *************** function _rand *****************
  6272 ;; Defined at:
  6273 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\rand.c"
  6274 ;; Parameters:    Size  Location     Type
  6275 ;;		None
  6276 ;; Auto vars:     Size  Location     Type
  6277 ;;		None
  6278 ;; Return value:  Size  Location     Type
  6279 ;;                  2   12[BANK0 ] int 
  6280 ;; Registers used:
  6281 ;;		wreg, status,2, status,0, cstack
  6282 ;; Tracked objects:
  6283 ;;		On entry : 0/0
  6284 ;;		On exit  : 0/0
  6285 ;;		Unchanged: 0/0
  6286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6287 ;;      Params:         0       2       0       0       0       0       0       0       0
  6288 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6289 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6290 ;;      Totals:         0       2       0       0       0       0       0       0       0
  6291 ;;Total ram usage:        2 bytes
  6292 ;; Hardware stack levels used:    1
  6293 ;; Hardware stack levels required when called:   11
  6294 ;; This function calls:
  6295 ;;		___lmul
  6296 ;; This function is called by:
  6297 ;;		_send
  6298 ;; This function uses a non-reentrant model
  6299 ;;
  6300                           
  6301                           	psect	text17
  6302  004876                     __ptext17:
  6303                           	opt stack 0
  6304  004876                     _rand:
  6305                           	opt stack 18
  6306                           
  6307                           ;incstack = 0
  6308  004876  C1FA  F060         	movff	_randx,___lmul@multiplier
  6309  00487A  C1FB  F061         	movff	_randx+1,___lmul@multiplier+1
  6310  00487E  C1FC  F062         	movff	_randx+2,___lmul@multiplier+2
  6311  004882  C1FD  F063         	movff	_randx+3,___lmul@multiplier+3
  6312  004886  0E6D               	movlw	109
  6313  004888  0100               	movlb	0	; () banked
  6314  00488A  6F64               	movwf	___lmul@multiplicand& (0+255),b
  6315  00488C  0E4E               	movlw	78
  6316  00488E  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6317  004890  0EC6               	movlw	198
  6318  004892  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6319  004894  0E41               	movlw	65
  6320  004896  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6321  004898  ECC3  F024         	call	___lmul	;wreg free
  6322  00489C  C060  F1FA         	movff	?___lmul,_randx
  6323  0048A0  C061  F1FB         	movff	?___lmul+1,_randx+1
  6324  0048A4  C062  F1FC         	movff	?___lmul+2,_randx+2
  6325  0048A8  C063  F1FD         	movff	?___lmul+3,_randx+3
  6326  0048AC  0E39               	movlw	57
  6327  0048AE  0101               	movlb	1	; () banked
  6328  0048B0  27FA               	addwf	_randx& (0+255),f,b
  6329  0048B2  0E30               	movlw	48
  6330  0048B4  23FB               	addwfc	(_randx+1)& (0+255),f,b
  6331  0048B6  0E00               	movlw	0
  6332  0048B8  23FC               	addwfc	(_randx+2)& (0+255),f,b
  6333  0048BA  0E00               	movlw	0
  6334  0048BC  23FD               	addwfc	(_randx+3)& (0+255),f,b
  6335                           
  6336                           ; BSR set to: 1
  6337  0048BE  0EFF               	movlw	255
  6338  0048C0  15FC               	andwf	(_randx+2)& (0+255),w,b
  6339  0048C2  0100               	movlb	0	; () banked
  6340  0048C4  6F6C               	movwf	?_rand& (0+255),b
  6341  0048C6  0E7F               	movlw	127
  6342  0048C8  0101               	movlb	1	; () banked
  6343  0048CA  15FD               	andwf	(_randx+3)& (0+255),w,b
  6344  0048CC  0100               	movlb	0	; () banked
  6345  0048CE  6F6D               	movwf	(?_rand+1)& (0+255),b
  6346  0048D0  0012               	return	
  6347  0048D2                     __end_of_rand:
  6348                           	opt stack 0
  6349                           tblptru	equ	0xFF8
  6350                           tblptrh	equ	0xFF7
  6351                           tblptrl	equ	0xFF6
  6352                           tablat	equ	0xFF5
  6353                           prodh	equ	0xFF4
  6354                           prodl	equ	0xFF3
  6355                           intcon	equ	0xFF2
  6356                           indf0	equ	0xFEF
  6357                           postinc0	equ	0xFEE
  6358                           fsr0h	equ	0xFEA
  6359                           fsr0l	equ	0xFE9
  6360                           wreg	equ	0xFE8
  6361                           postdec1	equ	0xFE5
  6362                           fsr1h	equ	0xFE2
  6363                           fsr1l	equ	0xFE1
  6364                           indf2	equ	0xFDF
  6365                           fsr2h	equ	0xFDA
  6366                           fsr2l	equ	0xFD9
  6367                           status	equ	0xFD8
  6368                           
  6369 ;; *************** function ___lmul *****************
  6370 ;; Defined at:
  6371 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\Umul32.c"
  6372 ;; Parameters:    Size  Location     Type
  6373 ;;  multiplier      4    0[BANK0 ] unsigned long 
  6374 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  6375 ;; Auto vars:     Size  Location     Type
  6376 ;;  product         4    8[BANK0 ] unsigned long 
  6377 ;; Return value:  Size  Location     Type
  6378 ;;                  4    0[BANK0 ] unsigned long 
  6379 ;; Registers used:
  6380 ;;		wreg, status,2, status,0
  6381 ;; Tracked objects:
  6382 ;;		On entry : 0/0
  6383 ;;		On exit  : 0/0
  6384 ;;		Unchanged: 0/0
  6385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6386 ;;      Params:         0       8       0       0       0       0       0       0       0
  6387 ;;      Locals:         0       4       0       0       0       0       0       0       0
  6388 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6389 ;;      Totals:         0      12       0       0       0       0       0       0       0
  6390 ;;Total ram usage:       12 bytes
  6391 ;; Hardware stack levels used:    1
  6392 ;; Hardware stack levels required when called:   10
  6393 ;; This function calls:
  6394 ;;		Nothing
  6395 ;; This function is called by:
  6396 ;;		_rand
  6397 ;; This function uses a non-reentrant model
  6398 ;;
  6399                           
  6400                           	psect	text18
  6401  004986                     __ptext18:
  6402                           	opt stack 0
  6403  004986                     ___lmul:
  6404                           	opt stack 18
  6405                           
  6406                           ; BSR set to: 0
  6407                           ;incstack = 0
  6408  004986  0E00               	movlw	0
  6409  004988  0100               	movlb	0	; () banked
  6410  00498A  6F68               	movwf	___lmul@product& (0+255),b
  6411  00498C  0E00               	movlw	0
  6412  00498E  6F69               	movwf	(___lmul@product+1)& (0+255),b
  6413  004990  0E00               	movlw	0
  6414  004992  6F6A               	movwf	(___lmul@product+2)& (0+255),b
  6415  004994  0E00               	movlw	0
  6416  004996  6F6B               	movwf	(___lmul@product+3)& (0+255),b
  6417  004998                     
  6418                           ; BSR set to: 0
  6419                           
  6420                           ; BSR set to: 0
  6421  004998  A160               	btfss	___lmul@multiplier& (0+255),0,b
  6422  00499A  D008               	goto	l2935
  6423                           
  6424                           ; BSR set to: 0
  6425  00499C  5164               	movf	___lmul@multiplicand& (0+255),w,b
  6426  00499E  2768               	addwf	___lmul@product& (0+255),f,b
  6427  0049A0  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  6428  0049A2  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
  6429  0049A4  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  6430  0049A6  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
  6431  0049A8  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  6432  0049AA  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
  6433  0049AC                     l2935:
  6434                           
  6435                           ; BSR set to: 0
  6436                           
  6437                           ; BSR set to: 0
  6438  0049AC  90D8               	bcf	status,0,c
  6439  0049AE  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
  6440  0049B0  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  6441  0049B2  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  6442  0049B4  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  6443                           
  6444                           ; BSR set to: 0
  6445  0049B6  90D8               	bcf	status,0,c
  6446  0049B8  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  6447  0049BA  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  6448  0049BC  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  6449  0049BE  3360               	rrcf	___lmul@multiplier& (0+255),f,b
  6450  0049C0  5160               	movf	___lmul@multiplier& (0+255),w,b
  6451  0049C2  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  6452  0049C4  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  6453  0049C6  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  6454  0049C8  A4D8               	btfss	status,2,c
  6455  0049CA  D7E6               	goto	l2934
  6456                           
  6457                           ; BSR set to: 0
  6458  0049CC  C068  F060         	movff	___lmul@product,?___lmul
  6459  0049D0  C069  F061         	movff	___lmul@product+1,?___lmul+1
  6460  0049D4  C06A  F062         	movff	___lmul@product+2,?___lmul+2
  6461  0049D8  C06B  F063         	movff	___lmul@product+3,?___lmul+3
  6462                           
  6463                           ; BSR set to: 0
  6464  0049DC  0012               	return		;funcret
  6465  0049DE                     __end_of___lmul:
  6466                           	opt stack 0
  6467                           tblptru	equ	0xFF8
  6468                           tblptrh	equ	0xFF7
  6469                           tblptrl	equ	0xFF6
  6470                           tablat	equ	0xFF5
  6471                           prodh	equ	0xFF4
  6472                           prodl	equ	0xFF3
  6473                           intcon	equ	0xFF2
  6474                           indf0	equ	0xFEF
  6475                           postinc0	equ	0xFEE
  6476                           fsr0h	equ	0xFEA
  6477                           fsr0l	equ	0xFE9
  6478                           wreg	equ	0xFE8
  6479                           postdec1	equ	0xFE5
  6480                           fsr1h	equ	0xFE2
  6481                           fsr1l	equ	0xFE1
  6482                           indf2	equ	0xFDF
  6483                           fsr2h	equ	0xFDA
  6484                           fsr2l	equ	0xFD9
  6485                           status	equ	0xFD8
  6486                           
  6487 ;; *************** function _converter *****************
  6488 ;; Defined at:
  6489 ;;		line 360 in file "XBeeCore.c"
  6490 ;; Parameters:    Size  Location     Type
  6491 ;;  conv1           1    wreg     unsigned char 
  6492 ;;  conv2           1    1[BANK0 ] unsigned char 
  6493 ;; Auto vars:     Size  Location     Type
  6494 ;;  conv1           1    5[BANK0 ] unsigned char 
  6495 ;;  aux2            1    4[BANK0 ] unsigned char 
  6496 ;;  aux             1    3[BANK0 ] unsigned char 
  6497 ;;  resul           1    2[BANK0 ] unsigned char 
  6498 ;; Return value:  Size  Location     Type
  6499 ;;                  1    wreg      unsigned char 
  6500 ;; Registers used:
  6501 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6502 ;; Tracked objects:
  6503 ;;		On entry : 0/0
  6504 ;;		On exit  : 0/0
  6505 ;;		Unchanged: 0/0
  6506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6507 ;;      Params:         0       1       0       0       0       0       0       0       0
  6508 ;;      Locals:         0       4       0       0       0       0       0       0       0
  6509 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6510 ;;      Totals:         0       5       0       0       0       0       0       0       0
  6511 ;;Total ram usage:        5 bytes
  6512 ;; Hardware stack levels used:    1
  6513 ;; Hardware stack levels required when called:   11
  6514 ;; This function calls:
  6515 ;;		_toupper
  6516 ;; This function is called by:
  6517 ;;		_send
  6518 ;; This function uses a non-reentrant model
  6519 ;;
  6520                           
  6521                           	psect	text19
  6522  004268                     __ptext19:
  6523                           	opt stack 0
  6524  004268                     _converter:
  6525                           	opt stack 18
  6526                           
  6527                           ; BSR set to: 0
  6528                           ;incstack = 0
  6529                           ;converter@conv1 stored from wreg
  6530  004268  0100               	movlb	0	; () banked
  6531  00426A  6F65               	movwf	converter@conv1& (0+255),b
  6532                           
  6533                           ;XBeeCore.c: 362: uint8_t aux=0;
  6534  00426C  0E00               	movlw	0
  6535  00426E  0100               	movlb	0	; () banked
  6536  004270  6F63               	movwf	converter@aux& (0+255),b
  6537                           
  6538                           ;XBeeCore.c: 363: uint8_t aux2=0;
  6539  004272  0E00               	movlw	0
  6540  004274  6F64               	movwf	converter@aux2& (0+255),b
  6541                           
  6542                           ;XBeeCore.c: 364: uint8_t resul=0;
  6543  004276  0E00               	movlw	0
  6544  004278  6F62               	movwf	converter@resul& (0+255),b
  6545                           
  6546                           ; BSR set to: 0
  6547                           ;XBeeCore.c: 367: conv1=toupper(conv1);
  6548  00427A  5165               	movf	converter@conv1& (0+255),w,b
  6549  00427C  ECC7  F028         	call	_toupper
  6550  004280  0100               	movlb	0	; () banked
  6551  004282  6F65               	movwf	converter@conv1& (0+255),b
  6552                           
  6553                           ; BSR set to: 0
  6554                           ;XBeeCore.c: 368: conv2=toupper(conv2);
  6555  004284  5161               	movf	converter@conv2& (0+255),w,b
  6556  004286  ECC7  F028         	call	_toupper
  6557  00428A  0100               	movlb	0	; () banked
  6558  00428C  6F61               	movwf	converter@conv2& (0+255),b
  6559                           
  6560                           ; BSR set to: 0
  6561                           ;XBeeCore.c: 370: if ((conv1>='0') && (conv1<='9'))
  6562  00428E  0E2F               	movlw	47
  6563  004290  6565               	cpfsgt	converter@conv1& (0+255),b
  6564  004292  D006               	goto	l1529
  6565                           
  6566                           ; BSR set to: 0
  6567  004294  0E3A               	movlw	58
  6568  004296  6165               	cpfslt	converter@conv1& (0+255),b
  6569  004298  D003               	goto	l1529
  6570                           
  6571                           ; BSR set to: 0
  6572                           ;XBeeCore.c: 371: {
  6573                           ;XBeeCore.c: 372: aux=conv1-'0';
  6574  00429A  5165               	movf	converter@conv1& (0+255),w,b
  6575  00429C  0FD0               	addlw	208
  6576  00429E  D008               	goto	L3
  6577  0042A0                     l1529:
  6578                           
  6579                           ; BSR set to: 0
  6580                           ;XBeeCore.c: 374: else if ((conv1>='A') && (conv1<='F'))
  6581                           
  6582                           ; BSR set to: 0
  6583  0042A0  0E40               	movlw	64
  6584  0042A2  6565               	cpfsgt	converter@conv1& (0+255),b
  6585  0042A4  D006               	goto	l1531
  6586                           
  6587                           ; BSR set to: 0
  6588  0042A6  0E47               	movlw	71
  6589  0042A8  6165               	cpfslt	converter@conv1& (0+255),b
  6590  0042AA  D003               	goto	l1531
  6591                           
  6592                           ; BSR set to: 0
  6593                           ;XBeeCore.c: 375: {
  6594                           ;XBeeCore.c: 376: aux=conv1-'A'+10;
  6595  0042AC  5165               	movf	converter@conv1& (0+255),w,b
  6596  0042AE  0FC9               	addlw	201
  6597  0042B0                     L3:
  6598  0042B0  6F63               	movwf	converter@aux& (0+255),b
  6599  0042B2                     l1531:
  6600                           
  6601                           ; BSR set to: 0
  6602                           ;XBeeCore.c: 377: }
  6603                           ;XBeeCore.c: 379: if ((conv2>='0') && (conv2<='9'))
  6604                           
  6605                           ; BSR set to: 0
  6606  0042B2  0E2F               	movlw	47
  6607  0042B4  6561               	cpfsgt	converter@conv2& (0+255),b
  6608  0042B6  D006               	goto	l1532
  6609                           
  6610                           ; BSR set to: 0
  6611  0042B8  0E3A               	movlw	58
  6612  0042BA  6161               	cpfslt	converter@conv2& (0+255),b
  6613  0042BC  D003               	goto	l1532
  6614                           
  6615                           ; BSR set to: 0
  6616                           ;XBeeCore.c: 380: {
  6617                           ;XBeeCore.c: 381: aux2=conv2-'0';
  6618  0042BE  5161               	movf	converter@conv2& (0+255),w,b
  6619  0042C0  0FD0               	addlw	208
  6620  0042C2  D00A               	goto	L5
  6621  0042C4                     l1532:
  6622                           
  6623                           ; BSR set to: 0
  6624                           ;XBeeCore.c: 383: else if ((conv2>='A') && (conv2<='F'))
  6625                           
  6626                           ; BSR set to: 0
  6627  0042C4  0E40               	movlw	64
  6628  0042C6  6561               	cpfsgt	converter@conv2& (0+255),b
  6629  0042C8  D006               	goto	l1534
  6630                           
  6631                           ; BSR set to: 0
  6632  0042CA  0E47               	movlw	71
  6633  0042CC  6161               	cpfslt	converter@conv2& (0+255),b
  6634  0042CE  D003               	goto	l1534
  6635                           
  6636                           ; BSR set to: 0
  6637                           ;XBeeCore.c: 384: {
  6638                           ;XBeeCore.c: 385: aux2=conv2-'A'+10;
  6639  0042D0  5161               	movf	converter@conv2& (0+255),w,b
  6640  0042D2  0FC9               	addlw	201
  6641  0042D4  D001               	goto	L5
  6642  0042D6                     l1534:
  6643                           
  6644                           ; BSR set to: 0
  6645                           ;XBeeCore.c: 387: else
  6646                           ;XBeeCore.c: 388: {
  6647                           ;XBeeCore.c: 389: aux2=100;
  6648                           
  6649                           ; BSR set to: 0
  6650  0042D6  0E64               	movlw	100
  6651  0042D8                     L5:
  6652  0042D8  6F64               	movwf	converter@aux2& (0+255),b
  6653                           
  6654                           ; BSR set to: 0
  6655                           ;XBeeCore.c: 390: }
  6656                           ;XBeeCore.c: 392: if(aux2==100)
  6657                           
  6658                           ; BSR set to: 0
  6659                           
  6660                           ; BSR set to: 0
  6661  0042DA  0E64               	movlw	100
  6662  0042DC  1964               	xorwf	converter@aux2& (0+255),w,b
  6663  0042DE  A4D8               	btfss	status,2,c
  6664  0042E0  D003               	goto	l1536
  6665                           
  6666                           ; BSR set to: 0
  6667                           ;XBeeCore.c: 393: {
  6668                           ;XBeeCore.c: 394: resul=aux;
  6669  0042E2  C063  F062         	movff	converter@aux,converter@resul
  6670                           
  6671                           ;XBeeCore.c: 395: }
  6672  0042E6  D005               	goto	l1537
  6673  0042E8                     l1536:
  6674                           
  6675                           ; BSR set to: 0
  6676                           ;XBeeCore.c: 396: else
  6677                           ;XBeeCore.c: 397: {
  6678                           ;XBeeCore.c: 398: resul=(uint8_t)((aux*16)+aux2);
  6679                           
  6680                           ; BSR set to: 0
  6681  0042E8  5163               	movf	converter@aux& (0+255),w,b
  6682  0042EA  0D10               	mullw	16
  6683  0042EC  50F3               	movf	prodl,w,c
  6684  0042EE  2564               	addwf	converter@aux2& (0+255),w,b
  6685  0042F0  6F62               	movwf	converter@resul& (0+255),b
  6686  0042F2                     l1537:
  6687                           
  6688                           ; BSR set to: 0
  6689                           ;XBeeCore.c: 399: }
  6690                           ;XBeeCore.c: 400: return resul;
  6691                           
  6692                           ; BSR set to: 0
  6693  0042F2  5162               	movf	converter@resul& (0+255),w,b
  6694  0042F4  0012               	return	
  6695  0042F6                     __end_of_converter:
  6696                           	opt stack 0
  6697                           tblptru	equ	0xFF8
  6698                           tblptrh	equ	0xFF7
  6699                           tblptrl	equ	0xFF6
  6700                           tablat	equ	0xFF5
  6701                           prodh	equ	0xFF4
  6702                           prodl	equ	0xFF3
  6703                           intcon	equ	0xFF2
  6704                           indf0	equ	0xFEF
  6705                           postinc0	equ	0xFEE
  6706                           fsr0h	equ	0xFEA
  6707                           fsr0l	equ	0xFE9
  6708                           wreg	equ	0xFE8
  6709                           postdec1	equ	0xFE5
  6710                           fsr1h	equ	0xFE2
  6711                           fsr1l	equ	0xFE1
  6712                           indf2	equ	0xFDF
  6713                           fsr2h	equ	0xFDA
  6714                           fsr2l	equ	0xFD9
  6715                           status	equ	0xFD8
  6716                           
  6717 ;; *************** function _toupper *****************
  6718 ;; Defined at:
  6719 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\toupper.c"
  6720 ;; Parameters:    Size  Location     Type
  6721 ;;  c               1    wreg     unsigned char 
  6722 ;; Auto vars:     Size  Location     Type
  6723 ;;  c               1    0[BANK0 ] unsigned char 
  6724 ;; Return value:  Size  Location     Type
  6725 ;;                  1    wreg      unsigned char 
  6726 ;; Registers used:
  6727 ;;		wreg, status,2, status,0
  6728 ;; Tracked objects:
  6729 ;;		On entry : 0/0
  6730 ;;		On exit  : 0/0
  6731 ;;		Unchanged: 0/0
  6732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6733 ;;      Params:         0       0       0       0       0       0       0       0       0
  6734 ;;      Locals:         0       1       0       0       0       0       0       0       0
  6735 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6736 ;;      Totals:         0       1       0       0       0       0       0       0       0
  6737 ;;Total ram usage:        1 bytes
  6738 ;; Hardware stack levels used:    1
  6739 ;; Hardware stack levels required when called:   10
  6740 ;; This function calls:
  6741 ;;		Nothing
  6742 ;; This function is called by:
  6743 ;;		_converter
  6744 ;; This function uses a non-reentrant model
  6745 ;;
  6746                           
  6747                           	psect	text20
  6748  00518E                     __ptext20:
  6749                           	opt stack 0
  6750  00518E                     _toupper:
  6751                           	opt stack 18
  6752                           
  6753                           ; BSR set to: 0
  6754                           ;incstack = 0
  6755                           ;toupper@c stored from wreg
  6756  00518E  0100               	movlb	0	; () banked
  6757  005190  6F60               	movwf	toupper@c& (0+255),b
  6758  005192  0E7B               	movlw	123
  6759  005194  0100               	movlb	0	; () banked
  6760  005196  6160               	cpfslt	toupper@c& (0+255),b
  6761  005198  D004               	goto	l3571
  6762                           
  6763                           ; BSR set to: 0
  6764  00519A  0E60               	movlw	96
  6765  00519C  6560               	cpfsgt	toupper@c& (0+255),b
  6766  00519E  D001               	goto	l3571
  6767                           
  6768                           ; BSR set to: 0
  6769  0051A0  9B60               	bcf	toupper@c& (0+255),5,b
  6770  0051A2                     l3571:
  6771                           
  6772                           ; BSR set to: 0
  6773                           
  6774                           ; BSR set to: 0
  6775  0051A2  5160               	movf	toupper@c& (0+255),w,b
  6776  0051A4  0012               	return	
  6777  0051A6                     __end_of_toupper:
  6778                           	opt stack 0
  6779                           tblptru	equ	0xFF8
  6780                           tblptrh	equ	0xFF7
  6781                           tblptrl	equ	0xFF6
  6782                           tablat	equ	0xFF5
  6783                           prodh	equ	0xFF4
  6784                           prodl	equ	0xFF3
  6785                           intcon	equ	0xFF2
  6786                           indf0	equ	0xFEF
  6787                           postinc0	equ	0xFEE
  6788                           fsr0h	equ	0xFEA
  6789                           fsr0l	equ	0xFE9
  6790                           wreg	equ	0xFE8
  6791                           postdec1	equ	0xFE5
  6792                           fsr1h	equ	0xFE2
  6793                           fsr1l	equ	0xFE1
  6794                           indf2	equ	0xFDF
  6795                           fsr2h	equ	0xFDA
  6796                           fsr2l	equ	0xFD9
  6797                           status	equ	0xFD8
  6798                           
  6799 ;; *************** function _addByteCommand *****************
  6800 ;; Defined at:
  6801 ;;		line 300 in file "XBeeCore.c"
  6802 ;; Parameters:    Size  Location     Type
  6803 ;;  b               1    wreg     char 
  6804 ;;  calcChecksum    1    6[BANK0 ] unsigned char 
  6805 ;; Auto vars:     Size  Location     Type
  6806 ;;  b               1    7[BANK0 ] char 
  6807 ;; Return value:  Size  Location     Type
  6808 ;;                  1    wreg      void 
  6809 ;; Registers used:
  6810 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6811 ;; Tracked objects:
  6812 ;;		On entry : 0/0
  6813 ;;		On exit  : 0/0
  6814 ;;		Unchanged: 0/0
  6815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6816 ;;      Params:         0       1       0       0       0       0       0       0       0
  6817 ;;      Locals:         0       1       0       0       0       0       0       0       0
  6818 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6819 ;;      Totals:         0       2       0       0       0       0       0       0       0
  6820 ;;Total ram usage:        2 bytes
  6821 ;; Hardware stack levels used:    1
  6822 ;; Hardware stack levels required when called:   10
  6823 ;; This function calls:
  6824 ;;		Nothing
  6825 ;; This function is called by:
  6826 ;;		_gen_data
  6827 ;;		_send
  6828 ;; This function uses a non-reentrant model
  6829 ;;
  6830                           
  6831                           	psect	text21
  6832  004594                     __ptext21:
  6833                           	opt stack 0
  6834  004594                     _addByteCommand:
  6835                           	opt stack 18
  6836                           
  6837                           ; BSR set to: 0
  6838                           ;incstack = 0
  6839                           ;addByteCommand@b stored from wreg
  6840  004594  0100               	movlb	0	; () banked
  6841  004596  6F67               	movwf	addByteCommand@b& (0+255),b
  6842                           
  6843                           ;XBeeCore.c: 303: if (calcChecksum)
  6844  004598  0100               	movlb	0	; () banked
  6845  00459A  5166               	movf	addByteCommand@calcChecksum& (0+255),w,b
  6846  00459C  B4D8               	btfsc	status,2,c
  6847  00459E  D003               	goto	l1511
  6848                           
  6849                           ; BSR set to: 0
  6850                           ;XBeeCore.c: 304: cs-=b;
  6851  0045A0  5167               	movf	addByteCommand@b& (0+255),w,b
  6852  0045A2  0101               	movlb	1	; () banked
  6853  0045A4  5FCE               	subwf	_cs& (0+255),f,b
  6854  0045A6                     l1511:
  6855                           
  6856                           ;XBeeCore.c: 306: if (tamanhoCommand>0)
  6857  0045A6  0101               	movlb	1	; () banked
  6858  0045A8  51BE               	movf	_tamanhoCommand& (0+255),w,b
  6859  0045AA  11BF               	iorwf	(_tamanhoCommand+1)& (0+255),w,b
  6860  0045AC  A4D8               	btfss	status,2,c
  6861  0045AE  D010               	goto	l1513
  6862  0045B0  D01E               	goto	l1512
  6863  0045B2                     
  6864                           ;XBeeCore.c: 311: case 0x13 :
  6865                           ;XBeeCore.c: 312: case 0x7D :
  6866                           ;XBeeCore.c: 313: case 0x7E :
  6867                           ;XBeeCore.c: 314: command[tamanhoCommand++]=0x7D;
  6868                           
  6869                           ; BSR set to: 1
  6870                           
  6871                           ; BSR set to: 1
  6872                           
  6873                           ; BSR set to: 1
  6874                           
  6875                           ; BSR set to: 1
  6876  0045B2  0E5C               	movlw	low _command
  6877  0045B4  0101               	movlb	1	; () banked
  6878  0045B6  25BE               	addwf	_tamanhoCommand& (0+255),w,b
  6879  0045B8  6ED9               	movwf	fsr2l,c
  6880  0045BA  0E00               	movlw	high _command
  6881  0045BC  21BF               	addwfc	(_tamanhoCommand+1)& (0+255),w,b
  6882  0045BE  6EDA               	movwf	fsr2h,c
  6883  0045C0  0E7D               	movlw	125
  6884  0045C2  6EDF               	movwf	indf2,c
  6885                           
  6886                           ; BSR set to: 1
  6887  0045C4  4BBE               	infsnz	_tamanhoCommand& (0+255),f,b
  6888  0045C6  2BBF               	incf	(_tamanhoCommand+1)& (0+255),f,b
  6889                           
  6890                           ; BSR set to: 1
  6891                           ;XBeeCore.c: 315: b^=0x20;
  6892  0045C8  0E20               	movlw	32
  6893  0045CA  0100               	movlb	0	; () banked
  6894  0045CC  1B67               	xorwf	addByteCommand@b& (0+255),f,b
  6895                           
  6896                           ; BSR set to: 0
  6897                           ;XBeeCore.c: 317: }
  6898                           
  6899                           ;XBeeCore.c: 316: break;
  6900  0045CE  D010               	goto	l1519
  6901  0045D0                     l1513:
  6902                           
  6903                           ; BSR set to: 0
  6904  0045D0  0100               	movlb	0	; () banked
  6905  0045D2  5167               	movf	addByteCommand@b& (0+255),w,b
  6906                           
  6907                           ; Switch size 1, requested type "space"
  6908                           ; Number of cases is 4, Range of values is 17 to 126
  6909                           ; switch strategies available:
  6910                           ; Name         Instructions Cycles
  6911                           ; simple_byte           13     7 (average)
  6912                           ;	Chosen strategy is simple_byte
  6913  0045D4  0A11               	xorlw	17	; case 17
  6914  0045D6  B4D8               	btfsc	status,2,c
  6915  0045D8  D7EC               	goto	l1514
  6916  0045DA  0A02               	xorlw	2	; case 19
  6917  0045DC  B4D8               	btfsc	status,2,c
  6918  0045DE  D7E9               	goto	l1514
  6919  0045E0  0A6E               	xorlw	110	; case 125
  6920  0045E2  B4D8               	btfsc	status,2,c
  6921  0045E4  D7E6               	goto	l1514
  6922  0045E6  0A03               	xorlw	3	; case 126
  6923  0045E8  B4D8               	btfsc	status,2,c
  6924  0045EA  D7E3               	goto	l1514
  6925                           
  6926                           ; BSR set to: 0
  6927                           ;XBeeCore.c: 318: }
  6928  0045EC  D001               	goto	l1519
  6929  0045EE                     l1512:
  6930                           
  6931                           ; BSR set to: 1
  6932                           ;XBeeCore.c: 319: else
  6933                           ;XBeeCore.c: 320: {
  6934                           ;XBeeCore.c: 321: cs=255;
  6935  0045EE  69CE               	setf	_cs& (0+255),b
  6936  0045F0                     l1519:
  6937                           
  6938                           ;XBeeCore.c: 322: }
  6939                           ;XBeeCore.c: 324: command[tamanhoCommand++]=b;
  6940                           
  6941                           ; BSR set to: 1
  6942  0045F0  0E5C               	movlw	low _command
  6943  0045F2  0101               	movlb	1	; () banked
  6944  0045F4  25BE               	addwf	_tamanhoCommand& (0+255),w,b
  6945  0045F6  6ED9               	movwf	fsr2l,c
  6946  0045F8  0E00               	movlw	high _command
  6947  0045FA  21BF               	addwfc	(_tamanhoCommand+1)& (0+255),w,b
  6948  0045FC  6EDA               	movwf	fsr2h,c
  6949  0045FE  C067  FFDF         	movff	addByteCommand@b,indf2
  6950                           
  6951                           ; BSR set to: 1
  6952  004602  4BBE               	infsnz	_tamanhoCommand& (0+255),f,b
  6953  004604  2BBF               	incf	(_tamanhoCommand+1)& (0+255),f,b
  6954                           
  6955                           ; BSR set to: 1
  6956  004606  0012               	return		;funcret
  6957  004608                     __end_of_addByteCommand:
  6958                           	opt stack 0
  6959                           tblptru	equ	0xFF8
  6960                           tblptrh	equ	0xFF7
  6961                           tblptrl	equ	0xFF6
  6962                           tablat	equ	0xFF5
  6963                           prodh	equ	0xFF4
  6964                           prodl	equ	0xFF3
  6965                           intcon	equ	0xFF2
  6966                           indf0	equ	0xFEF
  6967                           postinc0	equ	0xFEE
  6968                           fsr0h	equ	0xFEA
  6969                           fsr0l	equ	0xFE9
  6970                           wreg	equ	0xFE8
  6971                           postdec1	equ	0xFE5
  6972                           fsr1h	equ	0xFE2
  6973                           fsr1l	equ	0xFE1
  6974                           indf2	equ	0xFDF
  6975                           fsr2h	equ	0xFDA
  6976                           fsr2l	equ	0xFD9
  6977                           status	equ	0xFD8
  6978                           
  6979 ;; *************** function _putsUSBUSART *****************
  6980 ;; Defined at:
  6981 ;;		line 629 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device_cdc.c"
  6982 ;; Parameters:    Size  Location     Type
  6983 ;;  data            2    0[BANK0 ] PTR unsigned char 
  6984 ;;		 -> main@data(150), 
  6985 ;; Auto vars:     Size  Location     Type
  6986 ;;  pData           2    2[BANK0 ] PTR unsigned char 
  6987 ;;		 -> main@data(150), 
  6988 ;;  len             1    4[BANK0 ] unsigned char 
  6989 ;; Return value:  Size  Location     Type
  6990 ;;                  1    wreg      void 
  6991 ;; Registers used:
  6992 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6993 ;; Tracked objects:
  6994 ;;		On entry : 0/0
  6995 ;;		On exit  : 0/0
  6996 ;;		Unchanged: 0/0
  6997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6998 ;;      Params:         0       2       0       0       0       0       0       0       0
  6999 ;;      Locals:         0       3       0       0       0       0       0       0       0
  7000 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7001 ;;      Totals:         0       5       0       0       0       0       0       0       0
  7002 ;;Total ram usage:        5 bytes
  7003 ;; Hardware stack levels used:    1
  7004 ;; Hardware stack levels required when called:   10
  7005 ;; This function calls:
  7006 ;;		Nothing
  7007 ;; This function is called by:
  7008 ;;		_main
  7009 ;; This function uses a non-reentrant model
  7010 ;;
  7011                           
  7012                           	psect	text22
  7013  004ADC                     __ptext22:
  7014                           	opt stack 0
  7015  004ADC                     _putsUSBUSART:
  7016                           	opt stack 20
  7017                           
  7018                           ;usb_device_cdc.c: 631: uint8_t len;
  7019                           ;usb_device_cdc.c: 632: char *pData;
  7020                           ;usb_device_cdc.c: 657: {PIE2bits.USBIE = 0;};
  7021                           
  7022                           ; BSR set to: 1
  7023                           ;incstack = 0
  7024  004ADC  9AA0               	bcf	4000,5,c	;volatile
  7025                           
  7026                           ;usb_device_cdc.c: 658: if(cdc_trf_state != 0)
  7027  004ADE  0100               	movlb	0	; () banked
  7028  004AE0  51FF               	movf	_cdc_trf_state& (0+255),w,b
  7029  004AE2  B4D8               	btfsc	status,2,c
  7030  004AE4  D002               	goto	l880
  7031                           
  7032                           ; BSR set to: 0
  7033                           ;usb_device_cdc.c: 659: {
  7034                           ;usb_device_cdc.c: 660: {PIE2bits.USBIE = 1;};
  7035  004AE6  8AA0               	bsf	4000,5,c	;volatile
  7036                           
  7037                           ;usb_device_cdc.c: 661: return;
  7038  004AE8  0012               	return	
  7039  004AEA                     l880:
  7040                           
  7041                           ; BSR set to: 0
  7042                           ;usb_device_cdc.c: 662: }
  7043                           ;usb_device_cdc.c: 668: len = 0;
  7044                           
  7045                           ; BSR set to: 0
  7046  004AEA  0E00               	movlw	0
  7047  004AEC  6F64               	movwf	putsUSBUSART@len& (0+255),b
  7048                           
  7049                           ; BSR set to: 0
  7050                           ;usb_device_cdc.c: 669: pData = data;
  7051  004AEE  C060  F062         	movff	putsUSBUSART@data,putsUSBUSART@pData
  7052  004AF2  C061  F063         	movff	putsUSBUSART@data+1,putsUSBUSART@pData+1
  7053  004AF6                     
  7054                           ; BSR set to: 0
  7055                           ;usb_device_cdc.c: 671: {
  7056                           ;usb_device_cdc.c: 672: len++;
  7057                           
  7058                           ; BSR set to: 0
  7059  004AF6  2B64               	incf	putsUSBUSART@len& (0+255),f,b
  7060                           
  7061                           ; BSR set to: 0
  7062                           ;usb_device_cdc.c: 673: if(len == 255) break;
  7063  004AF8  2964               	incf	putsUSBUSART@len& (0+255),w,b
  7064  004AFA  B4D8               	btfsc	status,2,c
  7065  004AFC  D009               	goto	u9620
  7066                           
  7067                           ; BSR set to: 0
  7068                           ;usb_device_cdc.c: 674: }while(*pData++);
  7069                           
  7070                           ; BSR set to: 0
  7071                           
  7072                           ; BSR set to: 0
  7073  004AFE  C062  FFD9         	movff	putsUSBUSART@pData,fsr2l
  7074  004B02  C063  FFDA         	movff	putsUSBUSART@pData+1,fsr2h
  7075  004B06  4B62               	infsnz	putsUSBUSART@pData& (0+255),f,b
  7076  004B08  2B63               	incf	(putsUSBUSART@pData+1)& (0+255),f,b
  7077  004B0A  50DF               	movf	indf2,w,c
  7078  004B0C  A4D8               	btfss	status,2,c
  7079  004B0E  D7F3               	goto	l882
  7080  004B10                     u9620:
  7081                           
  7082                           ; BSR set to: 0
  7083                           ;usb_device_cdc.c: 682: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = len; cdc_mem_type 
      +                          = 0x01; cdc_trf_state = 1; };
  7084                           
  7085                           ; BSR set to: 0
  7086  004B10  C060  F1B5         	movff	putsUSBUSART@data,_pCDCSrc
  7087  004B14  C061  F1B6         	movff	putsUSBUSART@data+1,_pCDCSrc+1
  7088                           
  7089                           ; BSR set to: 0
  7090  004B18  C064  F051         	movff	putsUSBUSART@len,_cdc_tx_len
  7091                           
  7092                           ; BSR set to: 0
  7093  004B1C  0E01               	movlw	1
  7094  004B1E  0101               	movlb	1	; () banked
  7095  004B20  6FD2               	movwf	_cdc_mem_type& (0+255),b
  7096                           
  7097                           ; BSR set to: 1
  7098  004B22  0E01               	movlw	1
  7099  004B24  0100               	movlb	0	; () banked
  7100  004B26  6FFF               	movwf	_cdc_trf_state& (0+255),b
  7101                           
  7102                           ; BSR set to: 0
  7103                           ;usb_device_cdc.c: 683: {PIE2bits.USBIE = 1;};
  7104  004B28  8AA0               	bsf	4000,5,c	;volatile
  7105                           
  7106                           ; BSR set to: 0
  7107  004B2A  0012               	return		;funcret
  7108  004B2C                     __end_of_putsUSBUSART:
  7109                           	opt stack 0
  7110                           tblptru	equ	0xFF8
  7111                           tblptrh	equ	0xFF7
  7112                           tblptrl	equ	0xFF6
  7113                           tablat	equ	0xFF5
  7114                           prodh	equ	0xFF4
  7115                           prodl	equ	0xFF3
  7116                           intcon	equ	0xFF2
  7117                           indf0	equ	0xFEF
  7118                           postinc0	equ	0xFEE
  7119                           fsr0h	equ	0xFEA
  7120                           fsr0l	equ	0xFE9
  7121                           wreg	equ	0xFE8
  7122                           postdec1	equ	0xFE5
  7123                           fsr1h	equ	0xFE2
  7124                           fsr1l	equ	0xFE1
  7125                           indf2	equ	0xFDF
  7126                           fsr2h	equ	0xFDA
  7127                           fsr2l	equ	0xFD9
  7128                           status	equ	0xFD8
  7129                           
  7130 ;; *************** function _le_pulsos *****************
  7131 ;; Defined at:
  7132 ;;		line 26 in file "Pulses.c"
  7133 ;; Parameters:    Size  Location     Type
  7134 ;;  freqPulses      1    wreg     unsigned char 
  7135 ;;  modo            1    0[BANK0 ] unsigned char 
  7136 ;; Auto vars:     Size  Location     Type
  7137 ;;  freqPulses      1    4[BANK0 ] unsigned char 
  7138 ;;  freq            4    5[BANK0 ] unsigned long 
  7139 ;; Return value:  Size  Location     Type
  7140 ;;                  4    0[BANK0 ] unsigned long 
  7141 ;; Registers used:
  7142 ;;		wreg, status,2, status,0
  7143 ;; Tracked objects:
  7144 ;;		On entry : 0/0
  7145 ;;		On exit  : 0/0
  7146 ;;		Unchanged: 0/0
  7147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7148 ;;      Params:         0       4       0       0       0       0       0       0       0
  7149 ;;      Locals:         0       5       0       0       0       0       0       0       0
  7150 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7151 ;;      Totals:         0       9       0       0       0       0       0       0       0
  7152 ;;Total ram usage:        9 bytes
  7153 ;; Hardware stack levels used:    1
  7154 ;; Hardware stack levels required when called:   10
  7155 ;; This function calls:
  7156 ;;		Nothing
  7157 ;; This function is called by:
  7158 ;;		_main
  7159 ;; This function uses a non-reentrant model
  7160 ;;
  7161                           
  7162                           	psect	text23
  7163  003678                     __ptext23:
  7164                           	opt stack 0
  7165  003678                     _le_pulsos:
  7166                           	opt stack 20
  7167                           
  7168                           ; BSR set to: 0
  7169                           ;incstack = 0
  7170                           ;le_pulsos@freqPulses stored from wreg
  7171  003678  0100               	movlb	0	; () banked
  7172  00367A  6F64               	movwf	le_pulsos@freqPulses& (0+255),b
  7173                           
  7174                           ;Pulses.c: 28: CCP1IE=0;
  7175  00367C  949D               	bcf	3997,2,c	;volatile
  7176                           
  7177                           ;Pulses.c: 29: uint32_t freq;
  7178                           ;Pulses.c: 30: switch(freqPulses){
  7179  00367E  D054               	goto	l2200
  7180  003680                     l2201:
  7181                           
  7182                           ; BSR set to: 0
  7183                           ;Pulses.c: 32: freq = freqPulses1;
  7184  003680  C1A6  F065         	movff	_freqPulses1,le_pulsos@freq	;volatile
  7185  003684  C1A7  F066         	movff	_freqPulses1+1,le_pulsos@freq+1	;volatile
  7186  003688  C1A8  F067         	movff	_freqPulses1+2,le_pulsos@freq+2	;volatile
  7187  00368C  C1A9  F068         	movff	_freqPulses1+3,le_pulsos@freq+3	;volatile
  7188                           
  7189                           ; BSR set to: 0
  7190                           ;Pulses.c: 33: if (!modo)
  7191  003690  5160               	movf	le_pulsos@modo& (0+255),w,b
  7192  003692  A4D8               	btfss	status,2,c
  7193  003694  D057               	goto	l2203
  7194                           
  7195                           ; BSR set to: 0
  7196                           ;Pulses.c: 34: freqPulses1=0;
  7197  003696  0E00               	movlw	0
  7198  003698  0101               	movlb	1	; () banked
  7199  00369A  6FA6               	movwf	_freqPulses1& (0+255),b	;volatile
  7200  00369C  0E00               	movlw	0
  7201  00369E  6FA7               	movwf	(_freqPulses1+1)& (0+255),b	;volatile
  7202  0036A0  0E00               	movlw	0
  7203  0036A2  6FA8               	movwf	(_freqPulses1+2)& (0+255),b	;volatile
  7204  0036A4  0E00               	movlw	0
  7205  0036A6  6FA9               	movwf	(_freqPulses1+3)& (0+255),b	;volatile
  7206                           
  7207                           ; BSR set to: 1
  7208                           ;Pulses.c: 35: break;
  7209  0036A8  D04D               	goto	l2203
  7210  0036AA                     l2204:
  7211                           
  7212                           ; BSR set to: 0
  7213                           ;Pulses.c: 37: freq = freqPulses2;
  7214  0036AA  C1A2  F065         	movff	_freqPulses2,le_pulsos@freq	;volatile
  7215  0036AE  C1A3  F066         	movff	_freqPulses2+1,le_pulsos@freq+1	;volatile
  7216  0036B2  C1A4  F067         	movff	_freqPulses2+2,le_pulsos@freq+2	;volatile
  7217  0036B6  C1A5  F068         	movff	_freqPulses2+3,le_pulsos@freq+3	;volatile
  7218                           
  7219                           ; BSR set to: 0
  7220                           ;Pulses.c: 38: if (!modo)
  7221  0036BA  5160               	movf	le_pulsos@modo& (0+255),w,b
  7222  0036BC  A4D8               	btfss	status,2,c
  7223  0036BE  D042               	goto	l2203
  7224                           
  7225                           ; BSR set to: 0
  7226                           ;Pulses.c: 39: freqPulses2=0;
  7227  0036C0  0E00               	movlw	0
  7228  0036C2  0101               	movlb	1	; () banked
  7229  0036C4  6FA2               	movwf	_freqPulses2& (0+255),b	;volatile
  7230  0036C6  0E00               	movlw	0
  7231  0036C8  6FA3               	movwf	(_freqPulses2+1)& (0+255),b	;volatile
  7232  0036CA  0E00               	movlw	0
  7233  0036CC  6FA4               	movwf	(_freqPulses2+2)& (0+255),b	;volatile
  7234  0036CE  0E00               	movlw	0
  7235  0036D0  6FA5               	movwf	(_freqPulses2+3)& (0+255),b	;volatile
  7236                           
  7237                           ; BSR set to: 1
  7238                           ;Pulses.c: 40: break;
  7239  0036D2  D038               	goto	l2203
  7240  0036D4                     l2206:
  7241                           
  7242                           ; BSR set to: 0
  7243                           ;Pulses.c: 42: freq = freqPulses3;
  7244  0036D4  C19E  F065         	movff	_freqPulses3,le_pulsos@freq	;volatile
  7245  0036D8  C19F  F066         	movff	_freqPulses3+1,le_pulsos@freq+1	;volatile
  7246  0036DC  C1A0  F067         	movff	_freqPulses3+2,le_pulsos@freq+2	;volatile
  7247  0036E0  C1A1  F068         	movff	_freqPulses3+3,le_pulsos@freq+3	;volatile
  7248                           
  7249                           ; BSR set to: 0
  7250                           ;Pulses.c: 43: if (!modo)
  7251  0036E4  5160               	movf	le_pulsos@modo& (0+255),w,b
  7252  0036E6  A4D8               	btfss	status,2,c
  7253  0036E8  D02D               	goto	l2203
  7254                           
  7255                           ; BSR set to: 0
  7256                           ;Pulses.c: 44: freqPulses3=0;
  7257  0036EA  0E00               	movlw	0
  7258  0036EC  0101               	movlb	1	; () banked
  7259  0036EE  6F9E               	movwf	_freqPulses3& (0+255),b	;volatile
  7260  0036F0  0E00               	movlw	0
  7261  0036F2  6F9F               	movwf	(_freqPulses3+1)& (0+255),b	;volatile
  7262  0036F4  0E00               	movlw	0
  7263  0036F6  6FA0               	movwf	(_freqPulses3+2)& (0+255),b	;volatile
  7264  0036F8  0E00               	movlw	0
  7265  0036FA  6FA1               	movwf	(_freqPulses3+3)& (0+255),b	;volatile
  7266                           
  7267                           ; BSR set to: 1
  7268                           ;Pulses.c: 45: break;
  7269  0036FC  D023               	goto	l2203
  7270  0036FE                     l2208:
  7271                           
  7272                           ; BSR set to: 0
  7273                           ;Pulses.c: 47: freq = freqPulses4;
  7274  0036FE  C19A  F065         	movff	_freqPulses4,le_pulsos@freq	;volatile
  7275  003702  C19B  F066         	movff	_freqPulses4+1,le_pulsos@freq+1	;volatile
  7276  003706  C19C  F067         	movff	_freqPulses4+2,le_pulsos@freq+2	;volatile
  7277  00370A  C19D  F068         	movff	_freqPulses4+3,le_pulsos@freq+3	;volatile
  7278                           
  7279                           ; BSR set to: 0
  7280                           ;Pulses.c: 48: if (!modo)
  7281  00370E  5160               	movf	le_pulsos@modo& (0+255),w,b
  7282  003710  A4D8               	btfss	status,2,c
  7283  003712  D018               	goto	l2203
  7284                           
  7285                           ; BSR set to: 0
  7286                           ;Pulses.c: 49: freqPulses4=0;
  7287  003714  0E00               	movlw	0
  7288  003716  0101               	movlb	1	; () banked
  7289  003718  6F9A               	movwf	_freqPulses4& (0+255),b	;volatile
  7290  00371A  0E00               	movlw	0
  7291  00371C  6F9B               	movwf	(_freqPulses4+1)& (0+255),b	;volatile
  7292  00371E  0E00               	movlw	0
  7293  003720  6F9C               	movwf	(_freqPulses4+2)& (0+255),b	;volatile
  7294  003722  0E00               	movlw	0
  7295  003724  6F9D               	movwf	(_freqPulses4+3)& (0+255),b	;volatile
  7296                           
  7297                           ; BSR set to: 1
  7298                           ;Pulses.c: 51: }
  7299                           
  7300                           ; BSR set to: 1
  7301                           ;Pulses.c: 50: break;
  7302  003726  D00E               	goto	l2203
  7303  003728                     l2200:
  7304                           
  7305                           ; BSR set to: 1
  7306  003728  0100               	movlb	0	; () banked
  7307  00372A  5164               	movf	le_pulsos@freqPulses& (0+255),w,b
  7308                           
  7309                           ; Switch size 1, requested type "space"
  7310                           ; Number of cases is 4, Range of values is 1 to 4
  7311                           ; switch strategies available:
  7312                           ; Name         Instructions Cycles
  7313                           ; simple_byte           13     7 (average)
  7314                           ;	Chosen strategy is simple_byte
  7315  00372C  0A01               	xorlw	1	; case 1
  7316  00372E  B4D8               	btfsc	status,2,c
  7317  003730  D7A7               	goto	l2201
  7318  003732  0A03               	xorlw	3	; case 2
  7319  003734  B4D8               	btfsc	status,2,c
  7320  003736  D7B9               	goto	l2204
  7321  003738  0A01               	xorlw	1	; case 3
  7322  00373A  B4D8               	btfsc	status,2,c
  7323  00373C  D7CB               	goto	l2206
  7324  00373E  0A07               	xorlw	7	; case 4
  7325  003740  B4D8               	btfsc	status,2,c
  7326  003742  D7DD               	goto	l2208
  7327  003744                     l2203:
  7328                           
  7329                           ;Pulses.c: 53: CCP1IE=1;
  7330  003744  849D               	bsf	3997,2,c	;volatile
  7331                           
  7332                           ;Pulses.c: 54: return freq;
  7333  003746  C065  F060         	movff	le_pulsos@freq,?_le_pulsos
  7334  00374A  C066  F061         	movff	le_pulsos@freq+1,?_le_pulsos+1
  7335  00374E  C067  F062         	movff	le_pulsos@freq+2,?_le_pulsos+2
  7336  003752  C068  F063         	movff	le_pulsos@freq+3,?_le_pulsos+3
  7337  003756  0012               	return		;funcret
  7338  003758                     __end_of_le_pulsos:
  7339                           	opt stack 0
  7340                           tblptru	equ	0xFF8
  7341                           tblptrh	equ	0xFF7
  7342                           tblptrl	equ	0xFF6
  7343                           tablat	equ	0xFF5
  7344                           prodh	equ	0xFF4
  7345                           prodl	equ	0xFF3
  7346                           intcon	equ	0xFF2
  7347                           indf0	equ	0xFEF
  7348                           postinc0	equ	0xFEE
  7349                           fsr0h	equ	0xFEA
  7350                           fsr0l	equ	0xFE9
  7351                           wreg	equ	0xFE8
  7352                           postdec1	equ	0xFE5
  7353                           fsr1h	equ	0xFE2
  7354                           fsr1l	equ	0xFE1
  7355                           indf2	equ	0xFDF
  7356                           fsr2h	equ	0xFDA
  7357                           fsr2l	equ	0xFD9
  7358                           status	equ	0xFD8
  7359                           
  7360 ;; *************** function _le_AD *****************
  7361 ;; Defined at:
  7362 ;;		line 20 in file "AD.c"
  7363 ;; Parameters:    Size  Location     Type
  7364 ;;  AnalogPort      1    wreg     unsigned char 
  7365 ;; Auto vars:     Size  Location     Type
  7366 ;;  AnalogPort      1   73[BANK0 ] unsigned char 
  7367 ;;  i               2   76[BANK0 ] int 
  7368 ;;  corrente        3   70[BANK0 ] float 
  7369 ;;  leitura         2   78[BANK0 ] unsigned int 
  7370 ;;  leituraAux      2   74[BANK0 ] unsigned int 
  7371 ;; Return value:  Size  Location     Type
  7372 ;;                  3   62[BANK0 ] float 
  7373 ;; Registers used:
  7374 ;;		wreg, status,2, status,0, cstack
  7375 ;; Tracked objects:
  7376 ;;		On entry : 0/0
  7377 ;;		On exit  : 0/0
  7378 ;;		Unchanged: 0/0
  7379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7380 ;;      Params:         0       3       0       0       0       0       0       0       0
  7381 ;;      Locals:         0      13       0       0       0       0       0       0       0
  7382 ;;      Temps:          0       2       0       0       0       0       0       0       0
  7383 ;;      Totals:         0      18       0       0       0       0       0       0       0
  7384 ;;Total ram usage:       18 bytes
  7385 ;; Hardware stack levels used:    1
  7386 ;; Hardware stack levels required when called:   12
  7387 ;; This function calls:
  7388 ;;		___awtoft
  7389 ;;		___ftadd
  7390 ;;		___ftdiv
  7391 ;;		___ftmul
  7392 ;; This function is called by:
  7393 ;;		_main
  7394 ;; This function uses a non-reentrant model
  7395 ;;
  7396                           
  7397                           	psect	text24
  7398  00296A                     __ptext24:
  7399                           	opt stack 0
  7400  00296A                     _le_AD:
  7401                           	opt stack 18
  7402                           
  7403                           ;incstack = 0
  7404                           ;le_AD@AnalogPort stored from wreg
  7405  00296A  0100               	movlb	0	; () banked
  7406  00296C  6FA9               	movwf	le_AD@AnalogPort& (0+255),b
  7407                           
  7408                           ;AD.c: 22: if (AnalogPort == 0){
  7409  00296E  0100               	movlb	0	; () banked
  7410  002970  51A9               	movf	le_AD@AnalogPort& (0+255),w,b
  7411  002972  A4D8               	btfss	status,2,c
  7412  002974  D002               	goto	l2069
  7413                           
  7414                           ; BSR set to: 0
  7415                           ;AD.c: 23: ADCON0=0b00000001;
  7416  002976  0E01               	movlw	1
  7417  002978  6EC2               	movwf	4034,c	;volatile
  7418  00297A                     l2069:
  7419                           
  7420                           ; BSR set to: 0
  7421                           ;AD.c: 24: }
  7422                           ;AD.c: 25: if (AnalogPort == 1){
  7423                           
  7424                           ; BSR set to: 0
  7425  00297A  05A9               	decf	le_AD@AnalogPort& (0+255),w,b
  7426  00297C  A4D8               	btfss	status,2,c
  7427  00297E  D002               	goto	l2070
  7428                           
  7429                           ; BSR set to: 0
  7430                           ;AD.c: 26: ADCON0=0b00000101;
  7431  002980  0E05               	movlw	5
  7432  002982  6EC2               	movwf	4034,c	;volatile
  7433  002984                     l2070:
  7434                           
  7435                           ; BSR set to: 0
  7436                           ;AD.c: 27: }
  7437                           ;AD.c: 35: float corrente;
  7438                           ;AD.c: 37: uint16_t leituraAux;
  7439                           ;AD.c: 38: uint16_t leitura=0;
  7440  002984  0E00               	movlw	0
  7441  002986  6FAF               	movwf	(le_AD@leitura+1)& (0+255),b
  7442  002988  0E00               	movlw	0
  7443  00298A  6FAE               	movwf	le_AD@leitura& (0+255),b
  7444                           
  7445                           ;AD.c: 40: for (int i=0;i<32;i++)
  7446  00298C  0E00               	movlw	0
  7447  00298E  6FAD               	movwf	(le_AD@i+1)& (0+255),b
  7448  002990  0E00               	movlw	0
  7449  002992  6FAC               	movwf	le_AD@i& (0+255),b
  7450  002994                     l10345:
  7451                           
  7452                           ; BSR set to: 0
  7453  002994  BFAD               	btfsc	(le_AD@i+1)& (0+255),7,b
  7454  002996  D006               	goto	l2071
  7455  002998  51AD               	movf	(le_AD@i+1)& (0+255),w,b
  7456  00299A  E119               	bnz	l10357
  7457  00299C  0E20               	movlw	32
  7458  00299E  5DAC               	subwf	le_AD@i& (0+255),w,b
  7459  0029A0  B0D8               	btfsc	status,0,c
  7460  0029A2  D015               	goto	u9770
  7461  0029A4                     l2071:
  7462                           
  7463                           ; BSR set to: 0
  7464                           ;AD.c: 41: {
  7465                           ;AD.c: 42: GO_DONE=1;
  7466  0029A4  82C2               	bsf	4034,1,c	;volatile
  7467                           
  7468                           ;AD.c: 43: __nop();
  7469  0029A6  F000               	nop	
  7470  0029A8  B2C2               	btfsc	4034,1,c	;volatile
  7471  0029AA  D7FE               	goto	l2074
  7472                           
  7473                           ;AD.c: 47: leituraAux=ADRESH;
  7474  0029AC  CFC4 F0AA          	movff	4036,le_AD@leituraAux	;volatile
  7475  0029B0  0100               	movlb	0	; () banked
  7476  0029B2  6BAB               	clrf	(le_AD@leituraAux+1)& (0+255),b
  7477                           
  7478                           ; BSR set to: 0
  7479                           ;AD.c: 48: leituraAux=(leituraAux <<8) | ADRESL;
  7480  0029B4  51AA               	movf	le_AD@leituraAux& (0+255),w,b
  7481  0029B6  6FA1               	movwf	??_le_AD& (0+255),b
  7482  0029B8  50C3               	movf	4035,w,c	;volatile
  7483  0029BA  6FAA               	movwf	le_AD@leituraAux& (0+255),b
  7484  0029BC  C0A1  F0AB         	movff	??_le_AD,le_AD@leituraAux+1
  7485                           
  7486                           ; BSR set to: 0
  7487                           ;AD.c: 49: leitura+=leituraAux;
  7488  0029C0  51AA               	movf	le_AD@leituraAux& (0+255),w,b
  7489  0029C2  27AE               	addwf	le_AD@leitura& (0+255),f,b
  7490  0029C4  51AB               	movf	(le_AD@leituraAux+1)& (0+255),w,b
  7491  0029C6  23AF               	addwfc	(le_AD@leitura+1)& (0+255),f,b
  7492                           
  7493                           ; BSR set to: 0
  7494  0029C8  4BAC               	infsnz	le_AD@i& (0+255),f,b
  7495  0029CA  2BAD               	incf	(le_AD@i+1)& (0+255),f,b
  7496  0029CC  D7E3               	goto	l10345
  7497  0029CE                     u9770:
  7498  0029CE                     l10357:
  7499                           
  7500                           ; BSR set to: 0
  7501                           ;AD.c: 51: }
  7502                           ;AD.c: 53: leitura>>=5;
  7503  0029CE  0E05               	movlw	5
  7504  0029D0  6FA1               	movwf	??_le_AD& (0+255),b
  7505  0029D2                     u9785:
  7506  0029D2  90D8               	bcf	status,0,c
  7507  0029D4  33AF               	rrcf	(le_AD@leitura+1)& (0+255),f,b
  7508  0029D6  33AE               	rrcf	le_AD@leitura& (0+255),f,b
  7509  0029D8  2FA1               	decfsz	??_le_AD& (0+255),f,b
  7510  0029DA  D7FB               	goto	u9785
  7511                           
  7512                           ;AD.c: 55: if (leitura==0)
  7513  0029DC  51AE               	movf	le_AD@leitura& (0+255),w,b
  7514  0029DE  11AF               	iorwf	(le_AD@leitura+1)& (0+255),w,b
  7515  0029E0  A4D8               	btfss	status,2,c
  7516  0029E2  D007               	goto	l2076
  7517                           
  7518                           ; BSR set to: 0
  7519                           ;AD.c: 56: corrente=0;
  7520  0029E4  0E00               	movlw	0
  7521  0029E6  6FA6               	movwf	le_AD@corrente& (0+255),b
  7522  0029E8  0E00               	movlw	0
  7523  0029EA  6FA7               	movwf	(le_AD@corrente+1)& (0+255),b
  7524  0029EC  0E00               	movlw	0
  7525  0029EE  6FA8               	movwf	(le_AD@corrente+2)& (0+255),b
  7526  0029F0  D04B               	goto	l2077
  7527  0029F2                     l2076:
  7528                           
  7529                           ; BSR set to: 0
  7530                           ;AD.c: 57: else
  7531                           ;AD.c: 58: corrente=((int16_t) leitura-195.0)*16.0/784.0+4.0;
  7532                           
  7533                           ; BSR set to: 0
  7534  0029F2  0E00               	movlw	0
  7535  0029F4  6F92               	movwf	___ftdiv@f2& (0+255),b
  7536  0029F6  0E44               	movlw	68
  7537  0029F8  6F93               	movwf	(___ftdiv@f2+1)& (0+255),b
  7538  0029FA  0E44               	movlw	68
  7539  0029FC  6F94               	movwf	(___ftdiv@f2+2)& (0+255),b
  7540  0029FE  0E00               	movlw	0
  7541  002A00  6F83               	movwf	___ftmul@f2& (0+255),b
  7542  002A02  0E80               	movlw	128
  7543  002A04  6F84               	movwf	(___ftmul@f2+1)& (0+255),b
  7544  002A06  0E41               	movlw	65
  7545  002A08  6F85               	movwf	(___ftmul@f2+2)& (0+255),b
  7546  002A0A  0E00               	movlw	0
  7547  002A0C  6F77               	movwf	___ftadd@f2& (0+255),b
  7548  002A0E  0E43               	movlw	67
  7549  002A10  6F78               	movwf	(___ftadd@f2+1)& (0+255),b
  7550  002A12  0EC3               	movlw	195
  7551  002A14  6F79               	movwf	(___ftadd@f2+2)& (0+255),b
  7552  002A16  C0AE  F068         	movff	le_AD@leitura,___awtoft@c
  7553  002A1A  C0AF  F069         	movff	le_AD@leitura+1,___awtoft@c+1
  7554  002A1E  EC63  F027         	call	___awtoft	;wreg free
  7555  002A22  C068  F074         	movff	?___awtoft,___ftadd@f1
  7556  002A26  C069  F075         	movff	?___awtoft+1,___ftadd@f1+1
  7557  002A2A  C06A  F076         	movff	?___awtoft+2,___ftadd@f1+2
  7558  002A2E  ECD6  F010         	call	___ftadd	;wreg free
  7559  002A32  C074  F080         	movff	?___ftadd,___ftmul@f1
  7560  002A36  C075  F081         	movff	?___ftadd+1,___ftmul@f1+1
  7561  002A3A  C076  F082         	movff	?___ftadd+2,___ftmul@f1+2
  7562  002A3E  ECF6  F018         	call	___ftmul	;wreg free
  7563  002A42  C080  F08F         	movff	?___ftmul,___ftdiv@f1
  7564  002A46  C081  F090         	movff	?___ftmul+1,___ftdiv@f1+1
  7565  002A4A  C082  F091         	movff	?___ftmul+2,___ftdiv@f1+2
  7566  002A4E  ECE6  F019         	call	___ftdiv	;wreg free
  7567  002A52  C08F  F0A3         	movff	?___ftdiv,_le_AD$5947
  7568  002A56  C090  F0A4         	movff	?___ftdiv+1,_le_AD$5947+1
  7569  002A5A  C091  F0A5         	movff	?___ftdiv+2,_le_AD$5947+2
  7570                           
  7571                           ;AD.c: 57: else
  7572                           ;AD.c: 58: corrente=((int16_t) leitura-195.0)*16.0/784.0+4.0;
  7573  002A5E  C0A3  F074         	movff	_le_AD$5947,___ftadd@f1
  7574  002A62  C0A4  F075         	movff	_le_AD$5947+1,___ftadd@f1+1
  7575  002A66  C0A5  F076         	movff	_le_AD$5947+2,___ftadd@f1+2
  7576  002A6A  0E00               	movlw	0
  7577  002A6C  0100               	movlb	0	; () banked
  7578  002A6E  6F77               	movwf	___ftadd@f2& (0+255),b
  7579  002A70  0E80               	movlw	128
  7580  002A72  6F78               	movwf	(___ftadd@f2+1)& (0+255),b
  7581  002A74  0E40               	movlw	64
  7582  002A76  6F79               	movwf	(___ftadd@f2+2)& (0+255),b
  7583  002A78  ECD6  F010         	call	___ftadd	;wreg free
  7584  002A7C  C074  F0A6         	movff	?___ftadd,le_AD@corrente
  7585  002A80  C075  F0A7         	movff	?___ftadd+1,le_AD@corrente+1
  7586  002A84  C076  F0A8         	movff	?___ftadd+2,le_AD@corrente+2
  7587  002A88                     l2077:
  7588                           
  7589                           ;AD.c: 60: return corrente;
  7590  002A88  C0A6  F09E         	movff	le_AD@corrente,?_le_AD
  7591  002A8C  C0A7  F09F         	movff	le_AD@corrente+1,?_le_AD+1
  7592  002A90  C0A8  F0A0         	movff	le_AD@corrente+2,?_le_AD+2
  7593  002A94  0012               	return	
  7594  002A96                     __end_of_le_AD:
  7595                           	opt stack 0
  7596                           tblptru	equ	0xFF8
  7597                           tblptrh	equ	0xFF7
  7598                           tblptrl	equ	0xFF6
  7599                           tablat	equ	0xFF5
  7600                           prodh	equ	0xFF4
  7601                           prodl	equ	0xFF3
  7602                           intcon	equ	0xFF2
  7603                           indf0	equ	0xFEF
  7604                           postinc0	equ	0xFEE
  7605                           fsr0h	equ	0xFEA
  7606                           fsr0l	equ	0xFE9
  7607                           wreg	equ	0xFE8
  7608                           postdec1	equ	0xFE5
  7609                           fsr1h	equ	0xFE2
  7610                           fsr1l	equ	0xFE1
  7611                           indf2	equ	0xFDF
  7612                           fsr2h	equ	0xFDA
  7613                           fsr2l	equ	0xFD9
  7614                           status	equ	0xFD8
  7615                           
  7616 ;; *************** function ___ftdiv *****************
  7617 ;; Defined at:
  7618 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftdiv.c"
  7619 ;; Parameters:    Size  Location     Type
  7620 ;;  f1              3   47[BANK0 ] float 
  7621 ;;  f2              3   50[BANK0 ] float 
  7622 ;; Auto vars:     Size  Location     Type
  7623 ;;  f3              3   57[BANK0 ] float 
  7624 ;;  sign            1   61[BANK0 ] unsigned char 
  7625 ;;  exp             1   60[BANK0 ] unsigned char 
  7626 ;;  cntr            1   56[BANK0 ] unsigned char 
  7627 ;; Return value:  Size  Location     Type
  7628 ;;                  3   47[BANK0 ] float 
  7629 ;; Registers used:
  7630 ;;		wreg, status,2, status,0, cstack
  7631 ;; Tracked objects:
  7632 ;;		On entry : 0/0
  7633 ;;		On exit  : 0/0
  7634 ;;		Unchanged: 0/0
  7635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7636 ;;      Params:         0       6       0       0       0       0       0       0       0
  7637 ;;      Locals:         0       6       0       0       0       0       0       0       0
  7638 ;;      Temps:          0       3       0       0       0       0       0       0       0
  7639 ;;      Totals:         0      15       0       0       0       0       0       0       0
  7640 ;;Total ram usage:       15 bytes
  7641 ;; Hardware stack levels used:    1
  7642 ;; Hardware stack levels required when called:   11
  7643 ;; This function calls:
  7644 ;;		___ftpack
  7645 ;; This function is called by:
  7646 ;;		_le_AD
  7647 ;; This function uses a non-reentrant model
  7648 ;;
  7649                           
  7650                           	psect	text25
  7651  0033CC                     __ptext25:
  7652                           	opt stack 0
  7653  0033CC                     ___ftdiv:
  7654                           	opt stack 18
  7655                           
  7656                           ;incstack = 0
  7657  0033CC  C091  F095         	movff	___ftdiv@f1+2,??___ftdiv
  7658  0033D0  0100               	movlb	0	; () banked
  7659  0033D2  6B96               	clrf	(??___ftdiv+1)& (0+255),b
  7660  0033D4  6B97               	clrf	(??___ftdiv+2)& (0+255),b
  7661  0033D6  3590               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  7662  0033D8  3795               	rlcf	??___ftdiv& (0+255),f,b
  7663  0033DA  E301               	bnc	u8921
  7664  0033DC  8196               	bsf	(??___ftdiv+1)& (0+255),0,b
  7665  0033DE                     u8921:
  7666  0033DE  5195               	movf	??___ftdiv& (0+255),w,b
  7667  0033E0  6F9C               	movwf	___ftdiv@exp& (0+255),b
  7668  0033E2  519C               	movf	___ftdiv@exp& (0+255),w,b
  7669  0033E4  A4D8               	btfss	status,2,c
  7670  0033E6  D007               	goto	l3218
  7671                           
  7672                           ; BSR set to: 0
  7673  0033E8  0E00               	movlw	0
  7674  0033EA  6F8F               	movwf	?___ftdiv& (0+255),b
  7675  0033EC  0E00               	movlw	0
  7676  0033EE  6F90               	movwf	(?___ftdiv+1)& (0+255),b
  7677  0033F0  0E00               	movlw	0
  7678  0033F2  6F91               	movwf	(?___ftdiv+2)& (0+255),b
  7679                           
  7680                           ; BSR set to: 0
  7681  0033F4  0012               	return	
  7682  0033F6                     l3218:
  7683                           
  7684                           ; BSR set to: 0
  7685                           
  7686                           ; BSR set to: 0
  7687  0033F6  C094  F095         	movff	___ftdiv@f2+2,??___ftdiv
  7688  0033FA  6B96               	clrf	(??___ftdiv+1)& (0+255),b
  7689  0033FC  6B97               	clrf	(??___ftdiv+2)& (0+255),b
  7690  0033FE  3593               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  7691  003400  3795               	rlcf	??___ftdiv& (0+255),f,b
  7692  003402  E301               	bnc	u8941
  7693  003404  8196               	bsf	(??___ftdiv+1)& (0+255),0,b
  7694  003406                     u8941:
  7695  003406  5195               	movf	??___ftdiv& (0+255),w,b
  7696  003408  6F9D               	movwf	___ftdiv@sign& (0+255),b
  7697  00340A  519D               	movf	___ftdiv@sign& (0+255),w,b
  7698  00340C  A4D8               	btfss	status,2,c
  7699  00340E  D007               	goto	l3220
  7700                           
  7701                           ; BSR set to: 0
  7702  003410  0E00               	movlw	0
  7703  003412  6F8F               	movwf	?___ftdiv& (0+255),b
  7704  003414  0E00               	movlw	0
  7705  003416  6F90               	movwf	(?___ftdiv+1)& (0+255),b
  7706  003418  0E00               	movlw	0
  7707  00341A  6F91               	movwf	(?___ftdiv+2)& (0+255),b
  7708                           
  7709                           ; BSR set to: 0
  7710  00341C  0012               	return	
  7711  00341E                     l3220:
  7712                           
  7713                           ; BSR set to: 0
  7714                           
  7715                           ; BSR set to: 0
  7716  00341E  0E00               	movlw	0
  7717  003420  6F99               	movwf	___ftdiv@f3& (0+255),b
  7718  003422  0E00               	movlw	0
  7719  003424  6F9A               	movwf	(___ftdiv@f3+1)& (0+255),b
  7720  003426  0E00               	movlw	0
  7721  003428  6F9B               	movwf	(___ftdiv@f3+2)& (0+255),b
  7722                           
  7723                           ; BSR set to: 0
  7724  00342A  519D               	movf	___ftdiv@sign& (0+255),w,b
  7725  00342C  0F89               	addlw	137
  7726  00342E  5F9C               	subwf	___ftdiv@exp& (0+255),f,b
  7727                           
  7728                           ; BSR set to: 0
  7729  003430  C091  F09D         	movff	___ftdiv@f1+2,___ftdiv@sign
  7730                           
  7731                           ; BSR set to: 0
  7732  003434  5194               	movf	(___ftdiv@f2+2)& (0+255),w,b
  7733  003436  1B9D               	xorwf	___ftdiv@sign& (0+255),f,b
  7734                           
  7735                           ; BSR set to: 0
  7736  003438  0E80               	movlw	128
  7737  00343A  179D               	andwf	___ftdiv@sign& (0+255),f,b
  7738                           
  7739                           ; BSR set to: 0
  7740  00343C  8F90               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  7741                           
  7742                           ; BSR set to: 0
  7743  00343E  0EFF               	movlw	255
  7744  003440  178F               	andwf	___ftdiv@f1& (0+255),f,b
  7745  003442  0EFF               	movlw	255
  7746  003444  1790               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  7747  003446  0E00               	movlw	0
  7748  003448  1791               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  7749                           
  7750                           ; BSR set to: 0
  7751  00344A  8F93               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  7752                           
  7753                           ; BSR set to: 0
  7754  00344C  0EFF               	movlw	255
  7755  00344E  1792               	andwf	___ftdiv@f2& (0+255),f,b
  7756  003450  0EFF               	movlw	255
  7757  003452  1793               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  7758  003454  0E00               	movlw	0
  7759  003456  1794               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  7760                           
  7761                           ; BSR set to: 0
  7762  003458  0E18               	movlw	24
  7763  00345A  6F98               	movwf	___ftdiv@cntr& (0+255),b
  7764  00345C                     
  7765                           ; BSR set to: 0
  7766                           
  7767                           ; BSR set to: 0
  7768  00345C  90D8               	bcf	status,0,c
  7769  00345E  3799               	rlcf	___ftdiv@f3& (0+255),f,b
  7770  003460  379A               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  7771  003462  379B               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  7772                           
  7773                           ; BSR set to: 0
  7774  003464  5192               	movf	___ftdiv@f2& (0+255),w,b
  7775  003466  5D8F               	subwf	___ftdiv@f1& (0+255),w,b
  7776  003468  5193               	movf	(___ftdiv@f2+1)& (0+255),w,b
  7777  00346A  5990               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  7778  00346C  5194               	movf	(___ftdiv@f2+2)& (0+255),w,b
  7779  00346E  5991               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  7780  003470  A0D8               	btfss	status,0,c
  7781  003472  D007               	goto	l3222
  7782                           
  7783                           ; BSR set to: 0
  7784  003474  5192               	movf	___ftdiv@f2& (0+255),w,b
  7785  003476  5F8F               	subwf	___ftdiv@f1& (0+255),f,b
  7786  003478  5193               	movf	(___ftdiv@f2+1)& (0+255),w,b
  7787  00347A  5B90               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  7788  00347C  5194               	movf	(___ftdiv@f2+2)& (0+255),w,b
  7789  00347E  5B91               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  7790                           
  7791                           ; BSR set to: 0
  7792  003480  8199               	bsf	___ftdiv@f3& (0+255),0,b
  7793  003482                     l3222:
  7794                           
  7795                           ; BSR set to: 0
  7796  003482  90D8               	bcf	status,0,c
  7797  003484  378F               	rlcf	___ftdiv@f1& (0+255),f,b
  7798  003486  3790               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  7799  003488  3791               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  7800                           
  7801                           ; BSR set to: 0
  7802  00348A  2F98               	decfsz	___ftdiv@cntr& (0+255),f,b
  7803  00348C  D7E7               	goto	l3221
  7804                           
  7805                           ; BSR set to: 0
  7806                           
  7807                           ; BSR set to: 0
  7808  00348E  C099  F060         	movff	___ftdiv@f3,___ftpack@arg
  7809  003492  C09A  F061         	movff	___ftdiv@f3+1,___ftpack@arg+1
  7810  003496  C09B  F062         	movff	___ftdiv@f3+2,___ftpack@arg+2
  7811  00349A  C09C  F063         	movff	___ftdiv@exp,___ftpack@exp
  7812  00349E  C09D  F064         	movff	___ftdiv@sign,___ftpack@sign
  7813  0034A2  EC15  F01E         	call	___ftpack	;wreg free
  7814  0034A6  C060  F08F         	movff	?___ftpack,?___ftdiv
  7815  0034AA  C061  F090         	movff	?___ftpack+1,?___ftdiv+1
  7816  0034AE  C062  F091         	movff	?___ftpack+2,?___ftdiv+2
  7817  0034B2  0012               	return	
  7818  0034B4                     __end_of___ftdiv:
  7819                           	opt stack 0
  7820                           tblptru	equ	0xFF8
  7821                           tblptrh	equ	0xFF7
  7822                           tblptrl	equ	0xFF6
  7823                           tablat	equ	0xFF5
  7824                           prodh	equ	0xFF4
  7825                           prodl	equ	0xFF3
  7826                           intcon	equ	0xFF2
  7827                           indf0	equ	0xFEF
  7828                           postinc0	equ	0xFEE
  7829                           fsr0h	equ	0xFEA
  7830                           fsr0l	equ	0xFE9
  7831                           wreg	equ	0xFE8
  7832                           postdec1	equ	0xFE5
  7833                           fsr1h	equ	0xFE2
  7834                           fsr1l	equ	0xFE1
  7835                           indf2	equ	0xFDF
  7836                           fsr2h	equ	0xFDA
  7837                           fsr2l	equ	0xFD9
  7838                           status	equ	0xFD8
  7839                           
  7840 ;; *************** function ___awtoft *****************
  7841 ;; Defined at:
  7842 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\awtoft.c"
  7843 ;; Parameters:    Size  Location     Type
  7844 ;;  c               2    8[BANK0 ] int 
  7845 ;; Auto vars:     Size  Location     Type
  7846 ;;  sign            1   11[BANK0 ] unsigned char 
  7847 ;; Return value:  Size  Location     Type
  7848 ;;                  3    8[BANK0 ] float 
  7849 ;; Registers used:
  7850 ;;		wreg, status,2, status,0, cstack
  7851 ;; Tracked objects:
  7852 ;;		On entry : 0/0
  7853 ;;		On exit  : 0/0
  7854 ;;		Unchanged: 0/0
  7855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7856 ;;      Params:         0       3       0       0       0       0       0       0       0
  7857 ;;      Locals:         0       1       0       0       0       0       0       0       0
  7858 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7859 ;;      Totals:         0       4       0       0       0       0       0       0       0
  7860 ;;Total ram usage:        4 bytes
  7861 ;; Hardware stack levels used:    1
  7862 ;; Hardware stack levels required when called:   11
  7863 ;; This function calls:
  7864 ;;		___ftpack
  7865 ;; This function is called by:
  7866 ;;		_le_AD
  7867 ;; This function uses a non-reentrant model
  7868 ;;
  7869                           
  7870                           	psect	text26
  7871  004EC6                     __ptext26:
  7872                           	opt stack 0
  7873  004EC6                     ___awtoft:
  7874                           	opt stack 18
  7875                           
  7876                           ;incstack = 0
  7877  004EC6  0E00               	movlw	0
  7878  004EC8  0100               	movlb	0	; () banked
  7879  004ECA  6F6B               	movwf	___awtoft@sign& (0+255),b
  7880                           
  7881                           ; BSR set to: 0
  7882  004ECC  AF69               	btfss	(___awtoft@c+1)& (0+255),7,b
  7883  004ECE  D006               	goto	l3118
  7884                           
  7885                           ; BSR set to: 0
  7886  004ED0  6D68               	negf	___awtoft@c& (0+255),b
  7887  004ED2  1F69               	comf	(___awtoft@c+1)& (0+255),f,b
  7888  004ED4  B0D8               	btfsc	status,0,c
  7889  004ED6  2B69               	incf	(___awtoft@c+1)& (0+255),f,b
  7890                           
  7891                           ; BSR set to: 0
  7892  004ED8  0E01               	movlw	1
  7893  004EDA  6F6B               	movwf	___awtoft@sign& (0+255),b
  7894  004EDC                     l3118:
  7895                           
  7896                           ; BSR set to: 0
  7897                           
  7898                           ; BSR set to: 0
  7899  004EDC  C068  F060         	movff	___awtoft@c,___ftpack@arg
  7900  004EE0  C069  F061         	movff	___awtoft@c+1,___ftpack@arg+1
  7901  004EE4  6B62               	clrf	(___ftpack@arg+2)& (0+255),b
  7902  004EE6  0E8E               	movlw	142
  7903  004EE8  6F63               	movwf	___ftpack@exp& (0+255),b
  7904  004EEA  C06B  F064         	movff	___awtoft@sign,___ftpack@sign
  7905  004EEE  EC15  F01E         	call	___ftpack	;wreg free
  7906  004EF2  C060  F068         	movff	?___ftpack,?___awtoft
  7907  004EF6  C061  F069         	movff	?___ftpack+1,?___awtoft+1
  7908  004EFA  C062  F06A         	movff	?___ftpack+2,?___awtoft+2
  7909  004EFE  0012               	return	
  7910  004F00                     __end_of___awtoft:
  7911                           	opt stack 0
  7912                           tblptru	equ	0xFF8
  7913                           tblptrh	equ	0xFF7
  7914                           tblptrl	equ	0xFF6
  7915                           tablat	equ	0xFF5
  7916                           prodh	equ	0xFF4
  7917                           prodl	equ	0xFF3
  7918                           intcon	equ	0xFF2
  7919                           indf0	equ	0xFEF
  7920                           postinc0	equ	0xFEE
  7921                           fsr0h	equ	0xFEA
  7922                           fsr0l	equ	0xFE9
  7923                           wreg	equ	0xFE8
  7924                           postdec1	equ	0xFE5
  7925                           fsr1h	equ	0xFE2
  7926                           fsr1l	equ	0xFE1
  7927                           indf2	equ	0xFDF
  7928                           fsr2h	equ	0xFDA
  7929                           fsr2l	equ	0xFD9
  7930                           status	equ	0xFD8
  7931                           
  7932 ;; *************** function _init_XBee *****************
  7933 ;; Defined at:
  7934 ;;		line 99 in file "XBeeCore.c"
  7935 ;; Parameters:    Size  Location     Type
  7936 ;;		None
  7937 ;; Auto vars:     Size  Location     Type
  7938 ;;		None
  7939 ;; Return value:  Size  Location     Type
  7940 ;;                  1    wreg      void 
  7941 ;; Registers used:
  7942 ;;		wreg, status,2, cstack
  7943 ;; Tracked objects:
  7944 ;;		On entry : 0/0
  7945 ;;		On exit  : 0/0
  7946 ;;		Unchanged: 0/0
  7947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7948 ;;      Params:         0       0       0       0       0       0       0       0       0
  7949 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7950 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7951 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7952 ;;Total ram usage:        0 bytes
  7953 ;; Hardware stack levels used:    1
  7954 ;; Hardware stack levels required when called:   11
  7955 ;; This function calls:
  7956 ;;		_resetXBee
  7957 ;; This function is called by:
  7958 ;;		_main
  7959 ;; This function uses a non-reentrant model
  7960 ;;
  7961                           
  7962                           	psect	text27
  7963  0051A6                     __ptext27:
  7964                           	opt stack 0
  7965  0051A6                     _init_XBee:
  7966                           	opt stack 19
  7967                           
  7968                           ;XBeeCore.c: 101: resetXBee();
  7969                           
  7970                           ;incstack = 0
  7971  0051A6  ECE8  F026         	call	_resetXBee	;wreg free
  7972                           
  7973                           ;XBeeCore.c: 102: protocol=3;
  7974  0051AA  0E03               	movlw	3
  7975  0051AC  0101               	movlb	1	; () banked
  7976  0051AE  6FEE               	movwf	_protocol& (0+255),b
  7977                           
  7978                           ; BSR set to: 1
  7979                           ;XBeeCore.c: 104: error_AT=2;
  7980  0051B0  0E02               	movlw	2
  7981  0051B2  6FEF               	movwf	_error_AT& (0+255),b
  7982                           
  7983                           ; BSR set to: 1
  7984                           ;XBeeCore.c: 105: error_RX=2;
  7985  0051B4  0E02               	movlw	2
  7986  0051B6  6FED               	movwf	_error_RX& (0+255),b
  7987                           
  7988                           ; BSR set to: 1
  7989  0051B8  0012               	return		;funcret
  7990  0051BA                     __end_of_init_XBee:
  7991                           	opt stack 0
  7992                           tblptru	equ	0xFF8
  7993                           tblptrh	equ	0xFF7
  7994                           tblptrl	equ	0xFF6
  7995                           tablat	equ	0xFF5
  7996                           prodh	equ	0xFF4
  7997                           prodl	equ	0xFF3
  7998                           intcon	equ	0xFF2
  7999                           indf0	equ	0xFEF
  8000                           postinc0	equ	0xFEE
  8001                           fsr0h	equ	0xFEA
  8002                           fsr0l	equ	0xFE9
  8003                           wreg	equ	0xFE8
  8004                           postdec1	equ	0xFE5
  8005                           fsr1h	equ	0xFE2
  8006                           fsr1l	equ	0xFE1
  8007                           indf2	equ	0xFDF
  8008                           fsr2h	equ	0xFDA
  8009                           fsr2l	equ	0xFD9
  8010                           status	equ	0xFD8
  8011                           
  8012 ;; *************** function _resetXBee *****************
  8013 ;; Defined at:
  8014 ;;		line 79 in file "XBeeCore.c"
  8015 ;; Parameters:    Size  Location     Type
  8016 ;;		None
  8017 ;; Auto vars:     Size  Location     Type
  8018 ;;		None
  8019 ;; Return value:  Size  Location     Type
  8020 ;;                  1    wreg      void 
  8021 ;; Registers used:
  8022 ;;		wreg
  8023 ;; Tracked objects:
  8024 ;;		On entry : 0/0
  8025 ;;		On exit  : 0/0
  8026 ;;		Unchanged: 0/0
  8027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8028 ;;      Params:         0       0       0       0       0       0       0       0       0
  8029 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8030 ;;      Temps:          0       2       0       0       0       0       0       0       0
  8031 ;;      Totals:         0       2       0       0       0       0       0       0       0
  8032 ;;Total ram usage:        2 bytes
  8033 ;; Hardware stack levels used:    1
  8034 ;; Hardware stack levels required when called:   10
  8035 ;; This function calls:
  8036 ;;		Nothing
  8037 ;; This function is called by:
  8038 ;;		_init_XBee
  8039 ;; This function uses a non-reentrant model
  8040 ;;
  8041                           
  8042                           	psect	text28
  8043  004DD0                     __ptext28:
  8044                           	opt stack 0
  8045  004DD0                     _resetXBee:
  8046                           	opt stack 19
  8047                           
  8048                           ;XBeeCore.c: 81: PORTCbits.RC0=0;
  8049                           
  8050                           ; BSR set to: 1
  8051                           ;incstack = 0
  8052  004DD0  9082               	bcf	3970,0,c	;volatile
  8053                           
  8054                           ;XBeeCore.c: 82: __nop();
  8055  004DD2  F000               	nop	
  8056                           
  8057                           ;XBeeCore.c: 83: TRISCbits.RC0=0;
  8058  004DD4  9094               	bcf	3988,0,c	;volatile
  8059                           
  8060                           ;XBeeCore.c: 84: _delay((unsigned long)((100)*(48000000/4000.0)));
  8061  004DD6  0E07               	movlw	7
  8062  004DD8  0100               	movlb	0	; () banked
  8063  004DDA  6F61               	movwf	(??_resetXBee+1)& (0+255),b
  8064  004DDC  0E17               	movlw	23
  8065  004DDE  6F60               	movwf	??_resetXBee& (0+255),b
  8066  004DE0  0E6A               	movlw	106
  8067  004DE2                     u11457:
  8068  004DE2  2EE8               	decfsz	wreg,f,c
  8069  004DE4  D7FE               	bra	u11457
  8070  004DE6  2F60               	decfsz	??_resetXBee& (0+255),f,b
  8071  004DE8  D7FC               	bra	u11457
  8072  004DEA  2F61               	decfsz	(??_resetXBee+1)& (0+255),f,b
  8073  004DEC  D7FA               	bra	u11457
  8074  004DEE  F000               	nop	
  8075                           
  8076                           ;XBeeCore.c: 85: TRISCbits.RC0=1;
  8077  004DF0  8094               	bsf	3988,0,c	;volatile
  8078                           
  8079                           ;XBeeCore.c: 86: __nop();
  8080  004DF2  F000               	nop	
  8081                           
  8082                           ;XBeeCore.c: 87: _delay((unsigned long)((100)*(48000000/4000.0)));
  8083  004DF4  0E07               	movlw	7
  8084  004DF6  0100               	movlb	0	; () banked
  8085  004DF8  6F61               	movwf	(??_resetXBee+1)& (0+255),b
  8086  004DFA  0E17               	movlw	23
  8087  004DFC  6F60               	movwf	??_resetXBee& (0+255),b
  8088  004DFE  0E6A               	movlw	106
  8089  004E00                     u11467:
  8090  004E00  2EE8               	decfsz	wreg,f,c
  8091  004E02  D7FE               	bra	u11467
  8092  004E04  2F60               	decfsz	??_resetXBee& (0+255),f,b
  8093  004E06  D7FC               	bra	u11467
  8094  004E08  2F61               	decfsz	(??_resetXBee+1)& (0+255),f,b
  8095  004E0A  D7FA               	bra	u11467
  8096  004E0C  F000               	nop	
  8097  004E0E  0012               	return		;funcret
  8098  004E10                     __end_of_resetXBee:
  8099                           	opt stack 0
  8100                           tblptru	equ	0xFF8
  8101                           tblptrh	equ	0xFF7
  8102                           tblptrl	equ	0xFF6
  8103                           tablat	equ	0xFF5
  8104                           prodh	equ	0xFF4
  8105                           prodl	equ	0xFF3
  8106                           intcon	equ	0xFF2
  8107                           indf0	equ	0xFEF
  8108                           postinc0	equ	0xFEE
  8109                           fsr0h	equ	0xFEA
  8110                           fsr0l	equ	0xFE9
  8111                           wreg	equ	0xFE8
  8112                           postdec1	equ	0xFE5
  8113                           fsr1h	equ	0xFE2
  8114                           fsr1l	equ	0xFE1
  8115                           indf2	equ	0xFDF
  8116                           fsr2h	equ	0xFDA
  8117                           fsr2l	equ	0xFD9
  8118                           status	equ	0xFD8
  8119                           
  8120 ;; *************** function _delay *****************
  8121 ;; Defined at:
  8122 ;;		line 33 in file "UT.c"
  8123 ;; Parameters:    Size  Location     Type
  8124 ;;  time            4   13[BANK0 ] unsigned long 
  8125 ;; Auto vars:     Size  Location     Type
  8126 ;;  to              4   25[BANK0 ] unsigned long 
  8127 ;; Return value:  Size  Location     Type
  8128 ;;                  1    wreg      void 
  8129 ;; Registers used:
  8130 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8131 ;; Tracked objects:
  8132 ;;		On entry : 0/0
  8133 ;;		On exit  : 0/0
  8134 ;;		Unchanged: 0/0
  8135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8136 ;;      Params:         0       4       0       0       0       0       0       0       0
  8137 ;;      Locals:         0       4       0       0       0       0       0       0       0
  8138 ;;      Temps:          0       8       0       0       0       0       0       0       0
  8139 ;;      Totals:         0      16       0       0       0       0       0       0       0
  8140 ;;Total ram usage:       16 bytes
  8141 ;; Hardware stack levels used:    1
  8142 ;; Hardware stack levels required when called:   13
  8143 ;; This function calls:
  8144 ;;		_millis
  8145 ;;		_verificaUSB
  8146 ;; This function is called by:
  8147 ;;		_main
  8148 ;; This function uses a non-reentrant model
  8149 ;;
  8150                           
  8151                           	psect	text29
  8152  004608                     __ptext29:
  8153                           	opt stack 0
  8154  004608                     _delay:
  8155                           	opt stack 17
  8156                           
  8157                           ;UT.c: 35: uint32_t to=millis();
  8158                           
  8159                           ;incstack = 0
  8160  004608  EC6D  F028         	call	_millis	;wreg free
  8161  00460C  C060  F079         	movff	?_millis,delay@to
  8162  004610  C061  F07A         	movff	?_millis+1,delay@to+1
  8163  004614  C062  F07B         	movff	?_millis+2,delay@to+2
  8164  004618  C063  F07C         	movff	?_millis+3,delay@to+3
  8165                           
  8166                           ;UT.c: 36: while ((millis()-to)<time)
  8167  00461C  D002               	goto	l1099
  8168  00461E                     
  8169                           ;UT.c: 37: {
  8170                           ;UT.c: 38: verificaUSB();
  8171  00461E  ECCD  F027         	call	_verificaUSB	;wreg free
  8172  004622                     l1099:
  8173  004622  C079  F071         	movff	delay@to,??_delay
  8174  004626  C07A  F072         	movff	delay@to+1,??_delay+1
  8175  00462A  C07B  F073         	movff	delay@to+2,??_delay+2
  8176  00462E  C07C  F074         	movff	delay@to+3,??_delay+3
  8177  004632  0100               	movlb	0	; () banked
  8178  004634  1F71               	comf	??_delay& (0+255),f,b
  8179  004636  1F72               	comf	(??_delay+1)& (0+255),f,b
  8180  004638  1F73               	comf	(??_delay+2)& (0+255),f,b
  8181  00463A  1F74               	comf	(??_delay+3)& (0+255),f,b
  8182  00463C  2B71               	incf	??_delay& (0+255),f,b
  8183  00463E  0E00               	movlw	0
  8184  004640  2372               	addwfc	(??_delay+1)& (0+255),f,b
  8185  004642  2373               	addwfc	(??_delay+2)& (0+255),f,b
  8186  004644  2374               	addwfc	(??_delay+3)& (0+255),f,b
  8187  004646  EC6D  F028         	call	_millis	;wreg free
  8188  00464A  0100               	movlb	0	; () banked
  8189  00464C  5171               	movf	??_delay& (0+255),w,b
  8190  00464E  2560               	addwf	?_millis& (0+255),w,b
  8191  004650  6F75               	movwf	(??_delay+4)& (0+255),b
  8192  004652  5172               	movf	(??_delay+1)& (0+255),w,b
  8193  004654  2161               	addwfc	(?_millis+1)& (0+255),w,b
  8194  004656  6F76               	movwf	(??_delay+5)& (0+255),b
  8195  004658  5173               	movf	(??_delay+2)& (0+255),w,b
  8196  00465A  2162               	addwfc	(?_millis+2)& (0+255),w,b
  8197  00465C  6F77               	movwf	(??_delay+6)& (0+255),b
  8198  00465E  5174               	movf	(??_delay+3)& (0+255),w,b
  8199  004660  2163               	addwfc	(?_millis+3)& (0+255),w,b
  8200  004662  6F78               	movwf	(??_delay+7)& (0+255),b
  8201  004664  516D               	movf	delay@time& (0+255),w,b
  8202  004666  5D75               	subwf	(??_delay+4)& (0+255),w,b
  8203  004668  516E               	movf	(delay@time+1)& (0+255),w,b
  8204  00466A  5976               	subwfb	(??_delay+5)& (0+255),w,b
  8205  00466C  516F               	movf	(delay@time+2)& (0+255),w,b
  8206  00466E  5977               	subwfb	(??_delay+6)& (0+255),w,b
  8207  004670  5170               	movf	(delay@time+3)& (0+255),w,b
  8208  004672  5978               	subwfb	(??_delay+7)& (0+255),w,b
  8209  004674  B0D8               	btfsc	status,0,c
  8210  004676  0012               	return	
  8211  004678  D7D2               	goto	l1100
  8212  00467A                     __end_of_delay:
  8213                           	opt stack 0
  8214                           tblptru	equ	0xFF8
  8215                           tblptrh	equ	0xFF7
  8216                           tblptrl	equ	0xFF6
  8217                           tablat	equ	0xFF5
  8218                           prodh	equ	0xFF4
  8219                           prodl	equ	0xFF3
  8220                           intcon	equ	0xFF2
  8221                           indf0	equ	0xFEF
  8222                           postinc0	equ	0xFEE
  8223                           fsr0h	equ	0xFEA
  8224                           fsr0l	equ	0xFE9
  8225                           wreg	equ	0xFE8
  8226                           postdec1	equ	0xFE5
  8227                           fsr1h	equ	0xFE2
  8228                           fsr1l	equ	0xFE1
  8229                           indf2	equ	0xFDF
  8230                           fsr2h	equ	0xFDA
  8231                           fsr2l	equ	0xFD9
  8232                           status	equ	0xFD8
  8233                           
  8234 ;; *************** function _verificaUSB *****************
  8235 ;; Defined at:
  8236 ;;		line 13 in file "UT.c"
  8237 ;; Parameters:    Size  Location     Type
  8238 ;;		None
  8239 ;; Auto vars:     Size  Location     Type
  8240 ;;		None
  8241 ;; Return value:  Size  Location     Type
  8242 ;;                  1    wreg      unsigned char 
  8243 ;; Registers used:
  8244 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8245 ;; Tracked objects:
  8246 ;;		On entry : 0/0
  8247 ;;		On exit  : 0/0
  8248 ;;		Unchanged: 0/0
  8249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8250 ;;      Params:         0       0       0       0       0       0       0       0       0
  8251 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8252 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8253 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8254 ;;Total ram usage:        0 bytes
  8255 ;; Hardware stack levels used:    1
  8256 ;; Hardware stack levels required when called:   12
  8257 ;; This function calls:
  8258 ;;		_CDCTxService
  8259 ;;		_USBDeviceAttach
  8260 ;;		_USBDeviceDetach
  8261 ;; This function is called by:
  8262 ;;		_delay
  8263 ;;		_main
  8264 ;; This function uses a non-reentrant model
  8265 ;;
  8266                           
  8267                           	psect	text30
  8268  004F9A                     __ptext30:
  8269                           	opt stack 0
  8270  004F9A                     _verificaUSB:
  8271                           	opt stack 18
  8272                           
  8273                           ;UT.c: 15: if ((USBDeviceState == DETACHED_STATE) && (PORTCbits.RC2 == 1))
  8274                           
  8275                           ; BSR set to: 0
  8276                           ;incstack = 0
  8277  004F9A  5058               	movf	_USBDeviceState,w,c	;volatile
  8278  004F9C  B4D8               	btfsc	status,2,c
  8279  004F9E  A482               	btfss	3970,2,c	;volatile
  8280  004FA0  D003               	goto	l1090
  8281                           
  8282                           ;UT.c: 16: {
  8283                           ;UT.c: 17: USBDeviceAttach();
  8284  004FA2  EC9B  F027         	call	_USBDeviceAttach	;wreg free
  8285                           
  8286                           ;UT.c: 18: }
  8287  004FA6  D006               	goto	l1092
  8288  004FA8                     l1090:
  8289                           
  8290                           ;UT.c: 19: else if ((USBDeviceState == ATTACHED_STATE) && (PORTCbits.RC2 != 1))
  8291  004FA8  0458               	decf	_USBDeviceState,w,c	;volatile
  8292  004FAA  B4D8               	btfsc	status,2,c
  8293  004FAC  B482               	btfsc	3970,2,c	;volatile
  8294  004FAE  D002               	goto	l1092
  8295                           
  8296                           ;UT.c: 20: {
  8297                           ;UT.c: 21: USBDeviceDetach();
  8298  004FB0  ECF6  F028         	call	_USBDeviceDetach	;wreg free
  8299  004FB4                     l1092:
  8300                           
  8301                           ;UT.c: 22: }
  8302                           ;UT.c: 24: if ((USBDeviceState < CONFIGURED_STATE) || (UCONbits.SUSPND))
  8303  004FB4  0E1F               	movlw	31
  8304  004FB6  6458               	cpfsgt	_USBDeviceState,c	;volatile
  8305  004FB8  D002               	goto	u7950
  8306  004FBA  A26D               	btfss	3949,1,c	;volatile
  8307  004FBC  D002               	goto	l1093
  8308  004FBE                     u7950:
  8309                           
  8310                           ;UT.c: 25: {
  8311                           ;UT.c: 26: return 0;
  8312  004FBE  0E00               	movlw	0
  8313  004FC0  0012               	return	
  8314  004FC2                     l1093:
  8315                           
  8316                           ;UT.c: 27: }
  8317                           ;UT.c: 29: CDCTxService();
  8318  004FC2  ECE0  F015         	call	_CDCTxService	;wreg free
  8319                           
  8320                           ;UT.c: 30: return 1;
  8321  004FC6  0E01               	movlw	1
  8322  004FC8  0012               	return	
  8323  004FCA                     __end_of_verificaUSB:
  8324                           	opt stack 0
  8325                           tblptru	equ	0xFF8
  8326                           tblptrh	equ	0xFF7
  8327                           tblptrl	equ	0xFF6
  8328                           tablat	equ	0xFF5
  8329                           prodh	equ	0xFF4
  8330                           prodl	equ	0xFF3
  8331                           intcon	equ	0xFF2
  8332                           indf0	equ	0xFEF
  8333                           postinc0	equ	0xFEE
  8334                           fsr0h	equ	0xFEA
  8335                           fsr0l	equ	0xFE9
  8336                           wreg	equ	0xFE8
  8337                           postdec1	equ	0xFE5
  8338                           fsr1h	equ	0xFE2
  8339                           fsr1l	equ	0xFE1
  8340                           indf2	equ	0xFDF
  8341                           fsr2h	equ	0xFDA
  8342                           fsr2l	equ	0xFD9
  8343                           status	equ	0xFD8
  8344                           
  8345 ;; *************** function _USBDeviceDetach *****************
  8346 ;; Defined at:
  8347 ;;		line 1247 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
  8348 ;; Parameters:    Size  Location     Type
  8349 ;;		None
  8350 ;; Auto vars:     Size  Location     Type
  8351 ;;		None
  8352 ;; Return value:  Size  Location     Type
  8353 ;;                  1    wreg      void 
  8354 ;; Registers used:
  8355 ;;		wreg, status,2
  8356 ;; Tracked objects:
  8357 ;;		On entry : 0/0
  8358 ;;		On exit  : 0/0
  8359 ;;		Unchanged: 0/0
  8360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8361 ;;      Params:         0       0       0       0       0       0       0       0       0
  8362 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8363 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8364 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8365 ;;Total ram usage:        0 bytes
  8366 ;; Hardware stack levels used:    1
  8367 ;; Hardware stack levels required when called:   10
  8368 ;; This function calls:
  8369 ;;		Nothing
  8370 ;; This function is called by:
  8371 ;;		_verificaUSB
  8372 ;; This function uses a non-reentrant model
  8373 ;;
  8374                           
  8375                           	psect	text31
  8376  0051EC                     __ptext31:
  8377                           	opt stack 0
  8378  0051EC                     _USBDeviceDetach:
  8379                           	opt stack 19
  8380                           
  8381                           ;usb_device.c: 1255: {
  8382                           ;usb_device.c: 1257: UCON = 0;
  8383                           
  8384                           ;incstack = 0
  8385  0051EC  0E00               	movlw	0
  8386  0051EE  6E6D               	movwf	3949,c	;volatile
  8387                           
  8388                           ;usb_device.c: 1260: UIE = 0;
  8389  0051F0  0E00               	movlw	0
  8390  0051F2  6E69               	movwf	3945,c	;volatile
  8391                           
  8392                           ;usb_device.c: 1263: USBDeviceState = DETACHED_STATE;
  8393  0051F4  0E00               	movlw	0
  8394  0051F6  6E58               	movwf	_USBDeviceState,c	;volatile
  8395  0051F8  0012               	return	
  8396  0051FA                     __end_of_USBDeviceDetach:
  8397                           	opt stack 0
  8398                           tblptru	equ	0xFF8
  8399                           tblptrh	equ	0xFF7
  8400                           tblptrl	equ	0xFF6
  8401                           tablat	equ	0xFF5
  8402                           prodh	equ	0xFF4
  8403                           prodl	equ	0xFF3
  8404                           intcon	equ	0xFF2
  8405                           indf0	equ	0xFEF
  8406                           postinc0	equ	0xFEE
  8407                           fsr0h	equ	0xFEA
  8408                           fsr0l	equ	0xFE9
  8409                           wreg	equ	0xFE8
  8410                           postdec1	equ	0xFE5
  8411                           fsr1h	equ	0xFE2
  8412                           fsr1l	equ	0xFE1
  8413                           indf2	equ	0xFDF
  8414                           fsr2h	equ	0xFDA
  8415                           fsr2l	equ	0xFD9
  8416                           status	equ	0xFD8
  8417                           
  8418 ;; *************** function _USBDeviceAttach *****************
  8419 ;; Defined at:
  8420 ;;		line 1352 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
  8421 ;; Parameters:    Size  Location     Type
  8422 ;;		None
  8423 ;; Auto vars:     Size  Location     Type
  8424 ;;		None
  8425 ;; Return value:  Size  Location     Type
  8426 ;;                  1    wreg      void 
  8427 ;; Registers used:
  8428 ;;		wreg, status,2
  8429 ;; Tracked objects:
  8430 ;;		On entry : 0/0
  8431 ;;		On exit  : 0/0
  8432 ;;		Unchanged: 0/0
  8433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8434 ;;      Params:         0       0       0       0       0       0       0       0       0
  8435 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8436 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8437 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8438 ;;Total ram usage:        0 bytes
  8439 ;; Hardware stack levels used:    1
  8440 ;; Hardware stack levels required when called:   10
  8441 ;; This function calls:
  8442 ;;		Nothing
  8443 ;; This function is called by:
  8444 ;;		_verificaUSB
  8445 ;; This function uses a non-reentrant model
  8446 ;;
  8447                           
  8448                           	psect	text32
  8449  004F36                     __ptext32:
  8450                           	opt stack 0
  8451  004F36                     _USBDeviceAttach:
  8452                           	opt stack 19
  8453                           
  8454                           ;usb_device.c: 1355: if(USBDeviceState == DETACHED_STATE)
  8455                           
  8456                           ;incstack = 0
  8457  004F36  5058               	movf	_USBDeviceState,w,c	;volatile
  8458  004F38  A4D8               	btfss	status,2,c
  8459  004F3A  0012               	return	
  8460                           
  8461                           ;usb_device.c: 1356: {
  8462                           ;usb_device.c: 1357: if(PORTCbits.RC2 == 1)
  8463  004F3C  A482               	btfss	3970,2,c	;volatile
  8464  004F3E  0012               	return	
  8465                           
  8466                           ;usb_device.c: 1358: {
  8467                           ;usb_device.c: 1360: UCON = 0;
  8468  004F40  0E00               	movlw	0
  8469  004F42  6E6D               	movwf	3949,c	;volatile
  8470                           
  8471                           ;usb_device.c: 1363: UIE = 0;
  8472  004F44  0E00               	movlw	0
  8473  004F46  6E69               	movwf	3945,c	;volatile
  8474                           
  8475                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  8476  004F48  0E16               	movlw	22
  8477  004F4A  6E6F               	movwf	3951,c	;volatile
  8478  004F4C  0E9F               	movlw	159
  8479  004F4E  6E6B               	movwf	3947,c	;volatile
  8480  004F50  0E7B               	movlw	123
  8481  004F52  6E69               	movwf	3945,c	;volatile
  8482                           
  8483                           ;usb_device.c: 1369: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
  8484  004F54  8ED0               	bsf	4048,7,c	;volatile
  8485  004F56  8AA2               	bsf	4002,5,c	;volatile
  8486  004F58  8AA0               	bsf	4000,5,c	;volatile
  8487  004F5A  8EF2               	bsf	intcon,7,c	;volatile
  8488                           
  8489                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  8490  004F5C  D001               	goto	l487
  8491  004F5E                     l488:
  8492  004F5E  866D               	bsf	3949,3,c	;volatile
  8493  004F60                     l487:
  8494  004F60  A66D               	btfss	3949,3,c	;volatile
  8495  004F62  D7FD               	goto	l488
  8496                           
  8497                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
  8498  004F64  0E01               	movlw	1
  8499  004F66  6E58               	movwf	_USBDeviceState,c	;volatile
  8500  004F68  0012               	return	
  8501  004F6A                     __end_of_USBDeviceAttach:
  8502                           	opt stack 0
  8503                           tblptru	equ	0xFF8
  8504                           tblptrh	equ	0xFF7
  8505                           tblptrl	equ	0xFF6
  8506                           tablat	equ	0xFF5
  8507                           prodh	equ	0xFF4
  8508                           prodl	equ	0xFF3
  8509                           intcon	equ	0xFF2
  8510                           indf0	equ	0xFEF
  8511                           postinc0	equ	0xFEE
  8512                           fsr0h	equ	0xFEA
  8513                           fsr0l	equ	0xFE9
  8514                           wreg	equ	0xFE8
  8515                           postdec1	equ	0xFE5
  8516                           fsr1h	equ	0xFE2
  8517                           fsr1l	equ	0xFE1
  8518                           indf2	equ	0xFDF
  8519                           fsr2h	equ	0xFDA
  8520                           fsr2l	equ	0xFD9
  8521                           status	equ	0xFD8
  8522                           
  8523 ;; *************** function _CDCTxService *****************
  8524 ;; Defined at:
  8525 ;;		line 836 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device_cdc.c"
  8526 ;; Parameters:    Size  Location     Type
  8527 ;;		None
  8528 ;; Auto vars:     Size  Location     Type
  8529 ;;  byte_to_send    1   12[BANK0 ] unsigned char 
  8530 ;;  i               1   11[BANK0 ] unsigned char 
  8531 ;; Return value:  Size  Location     Type
  8532 ;;                  1    wreg      void 
  8533 ;; Registers used:
  8534 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8535 ;; Tracked objects:
  8536 ;;		On entry : 0/0
  8537 ;;		On exit  : 0/0
  8538 ;;		Unchanged: 0/0
  8539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8540 ;;      Params:         0       0       0       0       0       0       0       0       0
  8541 ;;      Locals:         0       2       0       0       0       0       0       0       0
  8542 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8543 ;;      Totals:         0       2       0       0       0       0       0       0       0
  8544 ;;Total ram usage:        2 bytes
  8545 ;; Hardware stack levels used:    1
  8546 ;; Hardware stack levels required when called:   11
  8547 ;; This function calls:
  8548 ;;		_USBTransferOnePacket
  8549 ;; This function is called by:
  8550 ;;		_verificaUSB
  8551 ;; This function uses a non-reentrant model
  8552 ;;
  8553                           
  8554                           	psect	text33
  8555  002BC0                     __ptext33:
  8556                           	opt stack 0
  8557  002BC0                     _CDCTxService:
  8558                           	opt stack 18
  8559                           
  8560                           ;usb_device_cdc.c: 838: uint8_t byte_to_send;
  8561                           ;usb_device_cdc.c: 839: uint8_t i;
  8562                           ;usb_device_cdc.c: 841: {PIE2bits.USBIE = 0;};
  8563                           
  8564                           ;incstack = 0
  8565  002BC0  9AA0               	bcf	4000,5,c	;volatile
  8566                           
  8567                           ;usb_device_cdc.c: 843: {};
  8568                           ;usb_device_cdc.c: 845: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
  8569  002BC2  0101               	movlb	1	; () banked
  8570  002BC4  51C0               	movf	_CDCDataInHandle& (0+255),w,b
  8571  002BC6  11C1               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
  8572  002BC8  B4D8               	btfsc	status,2,c
  8573  002BCA  D008               	goto	l894
  8574                           
  8575                           ; BSR set to: 1
  8576  002BCC  C1C0  FFD9         	movff	_CDCDataInHandle,fsr2l
  8577  002BD0  C1C1  FFDA         	movff	_CDCDataInHandle+1,fsr2h
  8578  002BD4  AEDF               	btfss	indf2,7,c
  8579  002BD6  D002               	goto	l894
  8580                           
  8581                           ; BSR set to: 1
  8582                           ;usb_device_cdc.c: 846: {
  8583                           ;usb_device_cdc.c: 847: {PIE2bits.USBIE = 1;};
  8584  002BD8  8AA0               	bsf	4000,5,c	;volatile
  8585                           
  8586                           ;usb_device_cdc.c: 848: return;
  8587  002BDA  0012               	return	
  8588  002BDC                     l894:
  8589                           
  8590                           ; BSR set to: 1
  8591                           ;usb_device_cdc.c: 849: }
  8592                           ;usb_device_cdc.c: 856: if(cdc_trf_state == 3)
  8593                           
  8594                           ; BSR set to: 1
  8595  002BDC  0E03               	movlw	3
  8596  002BDE  0100               	movlb	0	; () banked
  8597  002BE0  19FF               	xorwf	_cdc_trf_state& (0+255),w,b
  8598  002BE2  A4D8               	btfss	status,2,c
  8599  002BE4  D002               	goto	l896
  8600                           
  8601                           ; BSR set to: 0
  8602                           ;usb_device_cdc.c: 857: cdc_trf_state = 0;
  8603  002BE6  0E00               	movlw	0
  8604  002BE8  6FFF               	movwf	_cdc_trf_state& (0+255),b
  8605  002BEA                     l896:
  8606                           
  8607                           ; BSR set to: 0
  8608                           ;usb_device_cdc.c: 862: if(cdc_trf_state == 0)
  8609  002BEA  51FF               	movf	_cdc_trf_state& (0+255),w,b
  8610  002BEC  A4D8               	btfss	status,2,c
  8611  002BEE  D002               	goto	l897
  8612                           
  8613                           ; BSR set to: 0
  8614                           ;usb_device_cdc.c: 863: {
  8615                           ;usb_device_cdc.c: 864: {PIE2bits.USBIE = 1;};
  8616  002BF0  8AA0               	bsf	4000,5,c	;volatile
  8617                           
  8618                           ;usb_device_cdc.c: 865: return;
  8619  002BF2  0012               	return	
  8620  002BF4                     l897:
  8621                           
  8622                           ; BSR set to: 0
  8623                           ;usb_device_cdc.c: 866: }
  8624                           ;usb_device_cdc.c: 871: if(cdc_trf_state == 2)
  8625                           
  8626                           ; BSR set to: 0
  8627  002BF4  0E02               	movlw	2
  8628  002BF6  19FF               	xorwf	_cdc_trf_state& (0+255),w,b
  8629  002BF8  A4D8               	btfss	status,2,c
  8630  002BFA  D013               	goto	l898
  8631                           
  8632                           ; BSR set to: 0
  8633                           ;usb_device_cdc.c: 872: {
  8634                           ;usb_device_cdc.c: 873: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
  8635  002BFC  0E01               	movlw	1
  8636  002BFE  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
  8637  002C00  0E00               	movlw	0
  8638  002C02  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
  8639  002C04  0E00               	movlw	0
  8640  002C06  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  8641  002C08  0E00               	movlw	0
  8642  002C0A  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
  8643  002C0C  0E02               	movlw	2
  8644  002C0E  ECF8  F016         	call	_USBTransferOnePacket
  8645  002C12  C060  F1C0         	movff	?_USBTransferOnePacket,_CDCDataInHandle
  8646  002C16  C061  F1C1         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
  8647                           
  8648                           ;usb_device_cdc.c: 875: cdc_trf_state = 3;
  8649  002C1A  0E03               	movlw	3
  8650  002C1C  0100               	movlb	0	; () banked
  8651  002C1E  6FFF               	movwf	_cdc_trf_state& (0+255),b
  8652                           
  8653                           ;usb_device_cdc.c: 876: }
  8654  002C20  D05F               	goto	l900
  8655  002C22                     l898:
  8656                           
  8657                           ; BSR set to: 0
  8658                           ;usb_device_cdc.c: 877: else if(cdc_trf_state == 1)
  8659                           
  8660                           ; BSR set to: 0
  8661  002C22  05FF               	decf	_cdc_trf_state& (0+255),w,b
  8662  002C24  A4D8               	btfss	status,2,c
  8663  002C26  D05C               	goto	l900
  8664                           
  8665                           ; BSR set to: 0
  8666                           ;usb_device_cdc.c: 878: {
  8667                           ;usb_device_cdc.c: 882: if(cdc_tx_len > sizeof(cdc_data_tx))
  8668  002C28  0E40               	movlw	64
  8669  002C2A  6451               	cpfsgt	_cdc_tx_len,c
  8670  002C2C  D003               	goto	l901
  8671                           
  8672                           ; BSR set to: 0
  8673                           ;usb_device_cdc.c: 883: byte_to_send = sizeof(cdc_data_tx);
  8674  002C2E  0E40               	movlw	64
  8675  002C30  6F6C               	movwf	CDCTxService@byte_to_send& (0+255),b
  8676  002C32  D002               	goto	l902
  8677  002C34                     l901:
  8678                           
  8679                           ; BSR set to: 0
  8680                           ;usb_device_cdc.c: 884: else
  8681                           ;usb_device_cdc.c: 885: byte_to_send = cdc_tx_len;
  8682  002C34  C051  F06C         	movff	_cdc_tx_len,CDCTxService@byte_to_send
  8683  002C38                     l902:
  8684                           
  8685                           ; BSR set to: 0
  8686                           ;usb_device_cdc.c: 890: cdc_tx_len = cdc_tx_len - byte_to_send;
  8687                           
  8688                           ; BSR set to: 0
  8689  002C38  516C               	movf	CDCTxService@byte_to_send& (0+255),w,b
  8690  002C3A  0800               	sublw	0
  8691  002C3C  2451               	addwf	_cdc_tx_len,w,c
  8692  002C3E  6E51               	movwf	_cdc_tx_len,c
  8693                           
  8694                           ;usb_device_cdc.c: 892: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
  8695  002C40  0E00               	movlw	0
  8696  002C42  0101               	movlb	1	; () banked
  8697  002C44  6FB2               	movwf	_pCDCDst& (0+255),b
  8698  002C46  0E05               	movlw	5
  8699  002C48  6FB3               	movwf	(_pCDCDst+1)& (0+255),b
  8700                           
  8701                           ; BSR set to: 1
  8702                           ;usb_device_cdc.c: 894: i = byte_to_send;
  8703  002C4A  C06C  F06B         	movff	CDCTxService@byte_to_send,CDCTxService@i
  8704                           
  8705                           ; BSR set to: 1
  8706                           ;usb_device_cdc.c: 895: if(cdc_mem_type == 0x00)
  8707  002C4E  51D2               	movf	_cdc_mem_type& (0+255),w,b
  8708  002C50  B4D8               	btfsc	status,2,c
  8709  002C52  D012               	goto	l904
  8710  002C54  D027               	goto	l908
  8711  002C56                     
  8712                           ;usb_device_cdc.c: 898: {
  8713                           ;usb_device_cdc.c: 899: *pCDCDst.bRam = *pCDCSrc.bRom;
  8714                           
  8715                           ; BSR set to: 1
  8716  002C56  C1B5  FFD9         	movff	_pCDCSrc,fsr2l
  8717  002C5A  C1B6  FFDA         	movff	_pCDCSrc+1,fsr2h
  8718  002C5E  C1B2  FFE1         	movff	_pCDCDst,fsr1l
  8719  002C62  C1B3  FFE2         	movff	_pCDCDst+1,fsr1h
  8720  002C66  CFDF FFE7          	movff	indf2,indf1
  8721                           
  8722                           ;usb_device_cdc.c: 900: pCDCDst.bRam++;
  8723  002C6A  0101               	movlb	1	; () banked
  8724  002C6C  4BB2               	infsnz	_pCDCDst& (0+255),f,b
  8725  002C6E  2BB3               	incf	(_pCDCDst+1)& (0+255),f,b
  8726                           
  8727                           ; BSR set to: 1
  8728                           ;usb_device_cdc.c: 901: pCDCSrc.bRom++;
  8729  002C70  4BB5               	infsnz	_pCDCSrc& (0+255),f,b
  8730  002C72  2BB6               	incf	(_pCDCSrc+1)& (0+255),f,b
  8731                           
  8732                           ; BSR set to: 1
  8733                           ;usb_device_cdc.c: 902: i--;
  8734  002C74  0100               	movlb	0	; () banked
  8735  002C76  076B               	decf	CDCTxService@i& (0+255),f,b
  8736  002C78                     l904:
  8737                           
  8738                           ; BSR set to: 0
  8739  002C78  0100               	movlb	0	; () banked
  8740  002C7A  516B               	movf	CDCTxService@i& (0+255),w,b
  8741  002C7C  B4D8               	btfsc	status,2,c
  8742  002C7E  D016               	goto	u7150
  8743  002C80  D7EA               	goto	l905
  8744  002C82                     
  8745                           ; BSR set to: 0
  8746                           ;usb_device_cdc.c: 908: {
  8747                           ;usb_device_cdc.c: 909: *pCDCDst.bRam = *pCDCSrc.bRam;
  8748                           
  8749                           ; BSR set to: 0
  8750  002C82  C1B5  FFD9         	movff	_pCDCSrc,fsr2l
  8751  002C86  C1B6  FFDA         	movff	_pCDCSrc+1,fsr2h
  8752  002C8A  C1B2  FFE1         	movff	_pCDCDst,fsr1l
  8753  002C8E  C1B3  FFE2         	movff	_pCDCDst+1,fsr1h
  8754  002C92  CFDF FFE7          	movff	indf2,indf1
  8755                           
  8756                           ; BSR set to: 0
  8757                           ;usb_device_cdc.c: 910: pCDCDst.bRam++;
  8758  002C96  0101               	movlb	1	; () banked
  8759  002C98  4BB2               	infsnz	_pCDCDst& (0+255),f,b
  8760  002C9A  2BB3               	incf	(_pCDCDst+1)& (0+255),f,b
  8761                           
  8762                           ; BSR set to: 1
  8763                           ;usb_device_cdc.c: 911: pCDCSrc.bRam++;
  8764  002C9C  4BB5               	infsnz	_pCDCSrc& (0+255),f,b
  8765  002C9E  2BB6               	incf	(_pCDCSrc+1)& (0+255),f,b
  8766                           
  8767                           ; BSR set to: 1
  8768                           ;usb_device_cdc.c: 912: i--;
  8769  002CA0  0100               	movlb	0	; () banked
  8770  002CA2  076B               	decf	CDCTxService@i& (0+255),f,b
  8771  002CA4                     l908:
  8772                           
  8773                           ; BSR set to: 0
  8774  002CA4  0100               	movlb	0	; () banked
  8775  002CA6  516B               	movf	CDCTxService@i& (0+255),w,b
  8776  002CA8  A4D8               	btfss	status,2,c
  8777  002CAA  D7EB               	goto	l909
  8778  002CAC                     u7150:
  8779                           
  8780                           ; BSR set to: 0
  8781                           ;usb_device_cdc.c: 913: }
  8782                           ;usb_device_cdc.c: 914: }
  8783                           ;usb_device_cdc.c: 920: if(cdc_tx_len == 0)
  8784                           
  8785                           ; BSR set to: 0
  8786                           
  8787                           ; BSR set to: 0
  8788  002CAC  5051               	movf	_cdc_tx_len,w,c
  8789  002CAE  A4D8               	btfss	status,2,c
  8790  002CB0  D008               	goto	l913
  8791                           
  8792                           ; BSR set to: 0
  8793                           ;usb_device_cdc.c: 921: {
  8794                           ;usb_device_cdc.c: 922: if(byte_to_send == 64)
  8795  002CB2  0E40               	movlw	64
  8796  002CB4  196C               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
  8797  002CB6  A4D8               	btfss	status,2,c
  8798  002CB8  D002               	goto	l912
  8799                           
  8800                           ; BSR set to: 0
  8801                           ;usb_device_cdc.c: 923: cdc_trf_state = 2;
  8802  002CBA  0E02               	movlw	2
  8803  002CBC  D001               	goto	L6
  8804  002CBE                     l912:
  8805                           
  8806                           ; BSR set to: 0
  8807                           ;usb_device_cdc.c: 924: else
  8808                           ;usb_device_cdc.c: 925: cdc_trf_state = 3;
  8809                           
  8810                           ; BSR set to: 0
  8811  002CBE  0E03               	movlw	3
  8812  002CC0                     L6:
  8813  002CC0  6FFF               	movwf	_cdc_trf_state& (0+255),b
  8814  002CC2                     l913:
  8815                           
  8816                           ; BSR set to: 0
  8817                           ;usb_device_cdc.c: 926: }
  8818                           ;usb_device_cdc.c: 927: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
  8819                           
  8820                           ; BSR set to: 0
  8821                           
  8822                           ; BSR set to: 0
  8823  002CC2  0E01               	movlw	1
  8824  002CC4  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
  8825  002CC6  0E00               	movlw	0
  8826  002CC8  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
  8827  002CCA  0E05               	movlw	5
  8828  002CCC  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  8829  002CCE  C06C  F063         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
  8830  002CD2  0E02               	movlw	2
  8831  002CD4  ECF8  F016         	call	_USBTransferOnePacket
  8832  002CD8  C060  F1C0         	movff	?_USBTransferOnePacket,_CDCDataInHandle
  8833  002CDC  C061  F1C1         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
  8834  002CE0                     l900:
  8835                           
  8836                           ;usb_device_cdc.c: 929: }
  8837                           ;usb_device_cdc.c: 931: {PIE2bits.USBIE = 1;};
  8838  002CE0  8AA0               	bsf	4000,5,c	;volatile
  8839  002CE2  0012               	return		;funcret
  8840  002CE4                     __end_of_CDCTxService:
  8841                           	opt stack 0
  8842                           tblptru	equ	0xFF8
  8843                           tblptrh	equ	0xFF7
  8844                           tblptrl	equ	0xFF6
  8845                           tablat	equ	0xFF5
  8846                           prodh	equ	0xFF4
  8847                           prodl	equ	0xFF3
  8848                           intcon	equ	0xFF2
  8849                           indf0	equ	0xFEF
  8850                           postinc0	equ	0xFEE
  8851                           fsr0h	equ	0xFEA
  8852                           fsr0l	equ	0xFE9
  8853                           wreg	equ	0xFE8
  8854                           indf1	equ	0xFE7
  8855                           postdec1	equ	0xFE5
  8856                           fsr1h	equ	0xFE2
  8857                           fsr1l	equ	0xFE1
  8858                           indf2	equ	0xFDF
  8859                           fsr2h	equ	0xFDA
  8860                           fsr2l	equ	0xFD9
  8861                           status	equ	0xFD8
  8862                           
  8863 ;; *************** function _USBTransferOnePacket *****************
  8864 ;; Defined at:
  8865 ;;		line 995 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
  8866 ;; Parameters:    Size  Location     Type
  8867 ;;  ep              1    wreg     unsigned char 
  8868 ;;  dir             1    0[BANK0 ] unsigned char 
  8869 ;;  data            2    1[BANK0 ] PTR unsigned char 
  8870 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
  8871 ;;  len             1    3[BANK0 ] unsigned char 
  8872 ;; Auto vars:     Size  Location     Type
  8873 ;;  ep              1    8[BANK0 ] unsigned char 
  8874 ;;  handle          2    9[BANK0 ] PTR volatile struct __BD
  8875 ;;		 -> RAM(2047), NULL(0), BDT(48), 
  8876 ;; Return value:  Size  Location     Type
  8877 ;;                  2    0[BANK0 ] PTR void 
  8878 ;; Registers used:
  8879 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8880 ;; Tracked objects:
  8881 ;;		On entry : 0/0
  8882 ;;		On exit  : 0/0
  8883 ;;		Unchanged: 0/0
  8884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8885 ;;      Params:         0       4       0       0       0       0       0       0       0
  8886 ;;      Locals:         0       3       0       0       0       0       0       0       0
  8887 ;;      Temps:          0       4       0       0       0       0       0       0       0
  8888 ;;      Totals:         0      11       0       0       0       0       0       0       0
  8889 ;;Total ram usage:       11 bytes
  8890 ;; Hardware stack levels used:    1
  8891 ;; Hardware stack levels required when called:   10
  8892 ;; This function calls:
  8893 ;;		Nothing
  8894 ;; This function is called by:
  8895 ;;		_CDCTxService
  8896 ;;		_USBCDCEventHandler
  8897 ;;		_getsUSBUSART
  8898 ;; This function uses a non-reentrant model
  8899 ;;
  8900                           
  8901                           	psect	text34
  8902  002DF0                     __ptext34:
  8903                           	opt stack 0
  8904  002DF0                     _USBTransferOnePacket:
  8905                           	opt stack 18
  8906                           
  8907                           ;incstack = 0
  8908                           ;USBTransferOnePacket@ep stored from wreg
  8909  002DF0  0100               	movlb	0	; () banked
  8910  002DF2  6F68               	movwf	USBTransferOnePacket@ep& (0+255),b
  8911                           
  8912                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  8913                           ;usb_device.c: 1000: if(dir != 0)
  8914  002DF4  0100               	movlb	0	; () banked
  8915  002DF6  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
  8916  002DF8  B4D8               	btfsc	status,2,c
  8917  002DFA  D007               	goto	l465
  8918                           
  8919                           ; BSR set to: 0
  8920                           ;usb_device.c: 1001: {
  8921                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  8922  002DFC  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
  8923  002DFE  0D02               	mullw	2
  8924  002E00  0E40               	movlw	low _pBDTEntryIn
  8925  002E02  24F3               	addwf	prodl,w,c
  8926  002E04  6ED9               	movwf	fsr2l,c
  8927  002E06  0E00               	movlw	high _pBDTEntryIn
  8928  002E08  D006               	goto	L7
  8929  002E0A                     l465:
  8930                           
  8931                           ; BSR set to: 0
  8932                           ;usb_device.c: 1005: else
  8933                           ;usb_device.c: 1006: {
  8934                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  8935                           
  8936                           ; BSR set to: 0
  8937  002E0A  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
  8938  002E0C  0D02               	mullw	2
  8939  002E0E  0E8C               	movlw	low _pBDTEntryOut
  8940  002E10  24F3               	addwf	prodl,w,c
  8941  002E12  6ED9               	movwf	fsr2l,c
  8942  002E14  0E01               	movlw	high _pBDTEntryOut
  8943  002E16                     L7:
  8944  002E16  20F4               	addwfc	prodh,w,c
  8945  002E18  6EDA               	movwf	fsr2h,c
  8946  002E1A  CFDE F069          	movff	postinc2,USBTransferOnePacket@handle
  8947  002E1E  CFDD F06A          	movff	postdec2,USBTransferOnePacket@handle+1
  8948                           
  8949                           ; BSR set to: 0
  8950                           ;usb_device.c: 1009: }
  8951                           ;usb_device.c: 1013: if(handle == 0)
  8952                           
  8953                           ; BSR set to: 0
  8954  002E22  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
  8955  002E24  116A               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  8956  002E26  A4D8               	btfss	status,2,c
  8957  002E28  D005               	goto	l467
  8958                           
  8959                           ; BSR set to: 0
  8960                           ;usb_device.c: 1014: {
  8961                           ;usb_device.c: 1015: return 0;
  8962  002E2A  0E00               	movlw	0
  8963  002E2C  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
  8964  002E2E  0E00               	movlw	0
  8965  002E30  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
  8966                           
  8967                           ; BSR set to: 0
  8968  002E32  0012               	return	
  8969  002E34                     l467:
  8970                           
  8971                           ; BSR set to: 0
  8972                           ;usb_device.c: 1016: }
  8973                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
  8974                           
  8975                           ; BSR set to: 0
  8976  002E34  EE20 F002          	lfsr	2,2
  8977  002E38  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
  8978  002E3A  26D9               	addwf	fsr2l,f,c
  8979  002E3C  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  8980  002E3E  22DA               	addwfc	fsr2h,f,c
  8981  002E40  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
  8982  002E44  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
  8983                           
  8984                           ;usb_device.c: 1030: handle->CNT = len;
  8985  002E48  EE20 F001          	lfsr	2,1
  8986  002E4C  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
  8987  002E4E  26D9               	addwf	fsr2l,f,c
  8988  002E50  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  8989  002E52  22DA               	addwfc	fsr2h,f,c
  8990  002E54  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
  8991                           
  8992                           ; BSR set to: 0
  8993                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  8994  002E58  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  8995  002E5C  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  8996  002E60  0E40               	movlw	64
  8997  002E62  16DF               	andwf	indf2,f,c
  8998                           
  8999                           ; BSR set to: 0
  9000                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  9001  002E64  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  9002  002E68  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  9003  002E6C  0E00               	movlw	0
  9004  002E6E  86DB               	bsf	plusw2,3,c
  9005                           
  9006                           ; BSR set to: 0
  9007                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  9008  002E70  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  9009  002E74  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  9010  002E78  0E00               	movlw	0
  9011  002E7A  8EDB               	bsf	plusw2,7,c
  9012                           
  9013                           ; BSR set to: 0
  9014                           ;usb_device.c: 1036: if(dir != 0)
  9015  002E7C  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
  9016  002E7E  B4D8               	btfsc	status,2,c
  9017  002E80  D018               	goto	l469
  9018                           
  9019                           ; BSR set to: 0
  9020                           ;usb_device.c: 1037: {
  9021                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
  9022  002E82  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
  9023  002E84  0D02               	mullw	2
  9024  002E86  0E40               	movlw	low _pBDTEntryIn
  9025  002E88  24F3               	addwf	prodl,w,c
  9026  002E8A  6ED9               	movwf	fsr2l,c
  9027  002E8C  0E00               	movlw	high _pBDTEntryIn
  9028  002E8E  20F4               	addwfc	prodh,w,c
  9029  002E90  6EDA               	movwf	fsr2h,c
  9030  002E92  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
  9031  002E96  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
  9032  002E9A  0E04               	movlw	4
  9033  002E9C  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
  9034  002E9E  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
  9035  002EA0  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
  9036  002EA2  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
  9037  002EA4  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
  9038  002EA6  0D02               	mullw	2
  9039  002EA8  0E40               	movlw	low _pBDTEntryIn
  9040  002EAA  24F3               	addwf	prodl,w,c
  9041  002EAC  6ED9               	movwf	fsr2l,c
  9042  002EAE  0E00               	movlw	high _pBDTEntryIn
  9043  002EB0  D017               	goto	L8
  9044  002EB2                     l469:
  9045                           
  9046                           ; BSR set to: 0
  9047                           ;usb_device.c: 1041: else
  9048                           ;usb_device.c: 1042: {
  9049                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
  9050                           
  9051                           ; BSR set to: 0
  9052  002EB2  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
  9053  002EB4  0D02               	mullw	2
  9054  002EB6  0E8C               	movlw	low _pBDTEntryOut
  9055  002EB8  24F3               	addwf	prodl,w,c
  9056  002EBA  6ED9               	movwf	fsr2l,c
  9057  002EBC  0E01               	movlw	high _pBDTEntryOut
  9058  002EBE  20F4               	addwfc	prodh,w,c
  9059  002EC0  6EDA               	movwf	fsr2h,c
  9060  002EC2  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
  9061  002EC6  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
  9062  002ECA  0E04               	movlw	4
  9063  002ECC  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
  9064  002ECE  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
  9065  002ED0  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
  9066  002ED2  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
  9067  002ED4  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
  9068  002ED6  0D02               	mullw	2
  9069  002ED8  0E8C               	movlw	low _pBDTEntryOut
  9070  002EDA  24F3               	addwf	prodl,w,c
  9071  002EDC  6ED9               	movwf	fsr2l,c
  9072  002EDE  0E01               	movlw	high _pBDTEntryOut
  9073  002EE0                     L8:
  9074  002EE0  20F4               	addwfc	prodh,w,c
  9075  002EE2  6EDA               	movwf	fsr2h,c
  9076  002EE4  C066  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
  9077  002EE8  C067  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
  9078                           
  9079                           ; BSR set to: 0
  9080                           ;usb_device.c: 1045: }
  9081                           ;usb_device.c: 1046: return (void*)handle;
  9082                           
  9083                           ; BSR set to: 0
  9084  002EEC  C069  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
  9085  002EF0  C06A  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
  9086  002EF4  0012               	return	
  9087  002EF6                     __end_of_USBTransferOnePacket:
  9088                           	opt stack 0
  9089                           tblptru	equ	0xFF8
  9090                           tblptrh	equ	0xFF7
  9091                           tblptrl	equ	0xFF6
  9092                           tablat	equ	0xFF5
  9093                           prodh	equ	0xFF4
  9094                           prodl	equ	0xFF3
  9095                           intcon	equ	0xFF2
  9096                           indf0	equ	0xFEF
  9097                           postinc0	equ	0xFEE
  9098                           fsr0h	equ	0xFEA
  9099                           fsr0l	equ	0xFE9
  9100                           wreg	equ	0xFE8
  9101                           indf1	equ	0xFE7
  9102                           postdec1	equ	0xFE5
  9103                           fsr1h	equ	0xFE2
  9104                           fsr1l	equ	0xFE1
  9105                           indf2	equ	0xFDF
  9106                           postinc2	equ	0xFDE
  9107                           postdec2	equ	0xFDD
  9108                           plusw2	equ	0xFDB
  9109                           fsr2h	equ	0xFDA
  9110                           fsr2l	equ	0xFD9
  9111                           status	equ	0xFD8
  9112                           
  9113 ;; *************** function _millis *****************
  9114 ;; Defined at:
  9115 ;;		line 48 in file "Timer.c"
  9116 ;; Parameters:    Size  Location     Type
  9117 ;;		None
  9118 ;; Auto vars:     Size  Location     Type
  9119 ;;  m               4    4[BANK0 ] unsigned long 
  9120 ;; Return value:  Size  Location     Type
  9121 ;;                  4    0[BANK0 ] unsigned long 
  9122 ;; Registers used:
  9123 ;;		None
  9124 ;; Tracked objects:
  9125 ;;		On entry : 0/0
  9126 ;;		On exit  : 0/0
  9127 ;;		Unchanged: 0/0
  9128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9129 ;;      Params:         0       4       0       0       0       0       0       0       0
  9130 ;;      Locals:         0       4       0       0       0       0       0       0       0
  9131 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9132 ;;      Totals:         0       8       0       0       0       0       0       0       0
  9133 ;;Total ram usage:        8 bytes
  9134 ;; Hardware stack levels used:    1
  9135 ;; Hardware stack levels required when called:   10
  9136 ;; This function calls:
  9137 ;;		Nothing
  9138 ;; This function is called by:
  9139 ;;		_delay
  9140 ;;		_main
  9141 ;;		_txZBStatusResponse
  9142 ;;		_parse_message
  9143 ;;		_parseLoRaWan
  9144 ;; This function uses a non-reentrant model
  9145 ;;
  9146                           
  9147                           	psect	text35
  9148  0050DA                     __ptext35:
  9149                           	opt stack 0
  9150  0050DA                     _millis:
  9151                           	opt stack 17
  9152                           
  9153                           ;Timer.c: 50: CCP1IE=0;
  9154                           
  9155                           ; BSR set to: 0
  9156                           ;incstack = 0
  9157  0050DA  949D               	bcf	3997,2,c	;volatile
  9158                           
  9159                           ;Timer.c: 51: uint32_t m=ticks;
  9160  0050DC  C196  F064         	movff	_ticks,millis@m	;volatile
  9161  0050E0  C197  F065         	movff	_ticks+1,millis@m+1	;volatile
  9162  0050E4  C198  F066         	movff	_ticks+2,millis@m+2	;volatile
  9163  0050E8  C199  F067         	movff	_ticks+3,millis@m+3	;volatile
  9164                           
  9165                           ;Timer.c: 52: CCP1IE=1;
  9166  0050EC  849D               	bsf	3997,2,c	;volatile
  9167                           
  9168                           ;Timer.c: 54: return m;
  9169  0050EE  C064  F060         	movff	millis@m,?_millis
  9170  0050F2  C065  F061         	movff	millis@m+1,?_millis+1
  9171  0050F6  C066  F062         	movff	millis@m+2,?_millis+2
  9172  0050FA  C067  F063         	movff	millis@m+3,?_millis+3
  9173  0050FE  0012               	return		;funcret
  9174  005100                     __end_of_millis:
  9175                           	opt stack 0
  9176                           tblptru	equ	0xFF8
  9177                           tblptrh	equ	0xFF7
  9178                           tblptrl	equ	0xFF6
  9179                           tablat	equ	0xFF5
  9180                           prodh	equ	0xFF4
  9181                           prodl	equ	0xFF3
  9182                           intcon	equ	0xFF2
  9183                           indf0	equ	0xFEF
  9184                           postinc0	equ	0xFEE
  9185                           fsr0h	equ	0xFEA
  9186                           fsr0l	equ	0xFE9
  9187                           wreg	equ	0xFE8
  9188                           indf1	equ	0xFE7
  9189                           postdec1	equ	0xFE5
  9190                           fsr1h	equ	0xFE2
  9191                           fsr1l	equ	0xFE1
  9192                           indf2	equ	0xFDF
  9193                           postinc2	equ	0xFDE
  9194                           postdec2	equ	0xFDD
  9195                           plusw2	equ	0xFDB
  9196                           fsr2h	equ	0xFDA
  9197                           fsr2l	equ	0xFD9
  9198                           status	equ	0xFD8
  9199                           
  9200 ;; *************** function _createFrameHeader *****************
  9201 ;; Defined at:
  9202 ;;		line 15 in file "Frame.c"
  9203 ;; Parameters:    Size  Location     Type
  9204 ;;  WaspID          2  145[BANK0 ] PTR const unsigned char 
  9205 ;;		 -> STR_1(5), 
  9206 ;;  Sequencia       1  147[BANK0 ] unsigned char 
  9207 ;; Auto vars:     Size  Location     Type
  9208 ;;		None
  9209 ;; Return value:  Size  Location     Type
  9210 ;;                  1    wreg      void 
  9211 ;; Registers used:
  9212 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9213 ;; Tracked objects:
  9214 ;;		On entry : 0/0
  9215 ;;		On exit  : 0/0
  9216 ;;		Unchanged: 0/0
  9217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9218 ;;      Params:         0       3       0       0       0       0       0       0       0
  9219 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9220 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9221 ;;      Totals:         0       3       0       0       0       0       0       0       0
  9222 ;;Total ram usage:        3 bytes
  9223 ;; Hardware stack levels used:    1
  9224 ;; Hardware stack levels required when called:   14
  9225 ;; This function calls:
  9226 ;;		_sprintf
  9227 ;; This function is called by:
  9228 ;;		_main
  9229 ;; This function uses a non-reentrant model
  9230 ;;
  9231                           
  9232                           	psect	text36
  9233  004E4E                     __ptext36:
  9234                           	opt stack 0
  9235  004E4E                     _createFrameHeader:
  9236                           	opt stack 16
  9237                           
  9238                           ;Frame.c: 17: sprintf(frameBuffer, "<=>\x80N#%ld#%s#%d#", 100000001U, WaspID, Sequencia)
      +                          ;
  9239                           
  9240                           ;incstack = 0
  9241  004E4E  0EC8               	movlw	low _frameBuffer
  9242  004E50  0100               	movlb	0	; () banked
  9243  004E52  6FBF               	movwf	sprintf@sp& (0+255),b
  9244  004E54  0E06               	movlw	high _frameBuffer
  9245  004E56  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  9246  004E58  0E13               	movlw	low STR_4
  9247  004E5A  6FC1               	movwf	sprintf@f& (0+255),b
  9248  004E5C  0E7F               	movlw	high STR_4
  9249  004E5E  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  9250  004E60  0E01               	movlw	1
  9251  004E62  6FC3               	movwf	(?_sprintf+4)& (0+255),b
  9252  004E64  0EE1               	movlw	225
  9253  004E66  6FC4               	movwf	(?_sprintf+5)& (0+255),b
  9254  004E68  0EF5               	movlw	245
  9255  004E6A  6FC5               	movwf	(?_sprintf+6)& (0+255),b
  9256  004E6C  0E05               	movlw	5
  9257  004E6E  6FC6               	movwf	(?_sprintf+7)& (0+255),b
  9258  004E70  C0F1  F0C7         	movff	createFrameHeader@WaspID,?_sprintf+8
  9259  004E74  C0F2  F0C8         	movff	createFrameHeader@WaspID+1,?_sprintf+9
  9260  004E78  C0F3  F0C9         	movff	createFrameHeader@Sequencia,?_sprintf+10
  9261  004E7C  6BCA               	clrf	(?_sprintf+11)& (0+255),b
  9262  004E7E  EC09  F000         	call	_sprintf	;wreg free
  9263                           
  9264                           ;Frame.c: 19: frameBuffer[4]=1;
  9265  004E82  0E01               	movlw	1
  9266  004E84  CFE8 F6CC          	movff	wreg,_frameBuffer+4
  9267  004E88  0012               	return		;funcret
  9268  004E8A                     __end_of_createFrameHeader:
  9269                           	opt stack 0
  9270                           tblptru	equ	0xFF8
  9271                           tblptrh	equ	0xFF7
  9272                           tblptrl	equ	0xFF6
  9273                           tablat	equ	0xFF5
  9274                           prodh	equ	0xFF4
  9275                           prodl	equ	0xFF3
  9276                           intcon	equ	0xFF2
  9277                           indf0	equ	0xFEF
  9278                           postinc0	equ	0xFEE
  9279                           fsr0h	equ	0xFEA
  9280                           fsr0l	equ	0xFE9
  9281                           wreg	equ	0xFE8
  9282                           indf1	equ	0xFE7
  9283                           postdec1	equ	0xFE5
  9284                           fsr1h	equ	0xFE2
  9285                           fsr1l	equ	0xFE1
  9286                           indf2	equ	0xFDF
  9287                           postinc2	equ	0xFDE
  9288                           postdec2	equ	0xFDD
  9289                           plusw2	equ	0xFDB
  9290                           fsr2h	equ	0xFDA
  9291                           fsr2l	equ	0xFD9
  9292                           status	equ	0xFD8
  9293                           
  9294 ;; *************** function _addSensor *****************
  9295 ;; Defined at:
  9296 ;;		line 45 in file "Frame.c"
  9297 ;; Parameters:    Size  Location     Type
  9298 ;;  sensor          2  145[BANK0 ] PTR const unsigned char 
  9299 ;;		 -> STR_2(6), 
  9300 ;;  nivel1          1  147[BANK0 ] unsigned char 
  9301 ;;  nivel2          1  148[BANK0 ] unsigned char 
  9302 ;; Auto vars:     Size  Location     Type
  9303 ;;  f             100   32[BANK1 ] unsigned char [100]
  9304 ;; Return value:  Size  Location     Type
  9305 ;;                  1    wreg      void 
  9306 ;; Registers used:
  9307 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9308 ;; Tracked objects:
  9309 ;;		On entry : 0/0
  9310 ;;		On exit  : 0/0
  9311 ;;		Unchanged: 0/0
  9312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9313 ;;      Params:         0       4       0       0       0       0       0       0       0
  9314 ;;      Locals:         0       0     100       0       0       0       0       0       0
  9315 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9316 ;;      Totals:         0       4     100       0       0       0       0       0       0
  9317 ;;Total ram usage:      104 bytes
  9318 ;; Hardware stack levels used:    1
  9319 ;; Hardware stack levels required when called:   14
  9320 ;; This function calls:
  9321 ;;		_itoaVitor
  9322 ;;		_sprintf
  9323 ;;		_strcat
  9324 ;; This function is called by:
  9325 ;;		_main
  9326 ;; This function uses a non-reentrant model
  9327 ;;
  9328                           
  9329                           	psect	text37
  9330  004A34                     __ptext37:
  9331                           	opt stack 0
  9332  004A34                     _addSensor:
  9333                           	opt stack 16
  9334                           
  9335                           ;Frame.c: 47: frameBuffer[4]++;
  9336                           
  9337                           ;incstack = 0
  9338  004A34  C6CC  FFE8         	movff	_frameBuffer+4,wreg
  9339  004A38  0F01               	addlw	1
  9340  004A3A  CFE8 F6CC          	movff	wreg,_frameBuffer+4
  9341                           
  9342                           ;Frame.c: 48: char f[100];
  9343                           ;Frame.c: 49: sprintf(f,"%s:%s;%s", itoaVitor(nivel1), itoaVitor(nivel2));
  9344  004A3E  0E20               	movlw	low addSensor@f
  9345  004A40  0100               	movlb	0	; () banked
  9346  004A42  6FBF               	movwf	sprintf@sp& (0+255),b
  9347  004A44  0E01               	movlw	high addSensor@f
  9348  004A46  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  9349  004A48  0E8E               	movlw	low STR_5
  9350  004A4A  6FC1               	movwf	sprintf@f& (0+255),b
  9351  004A4C  0E7F               	movlw	high STR_5
  9352  004A4E  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  9353  004A50  51F3               	movf	addSensor@nivel1& (0+255),w,b
  9354  004A52  EC7B  F021         	call	_itoaVitor
  9355  004A56  C066  F0C3         	movff	?_itoaVitor,?_sprintf+4
  9356  004A5A  C067  F0C4         	movff	?_itoaVitor+1,?_sprintf+5
  9357  004A5E  0100               	movlb	0	; () banked
  9358  004A60  51F4               	movf	addSensor@nivel2& (0+255),w,b
  9359  004A62  EC7B  F021         	call	_itoaVitor
  9360  004A66  C066  F0C5         	movff	?_itoaVitor,?_sprintf+6
  9361  004A6A  C067  F0C6         	movff	?_itoaVitor+1,?_sprintf+7
  9362  004A6E  EC09  F000         	call	_sprintf	;wreg free
  9363                           
  9364                           ;Frame.c: 50: strcat(frameBuffer, (const char*) f);
  9365  004A72  0EC8               	movlw	low _frameBuffer
  9366  004A74  0100               	movlb	0	; () banked
  9367  004A76  6F60               	movwf	strcat@to& (0+255),b
  9368  004A78  0E06               	movlw	high _frameBuffer
  9369  004A7A  6F61               	movwf	(strcat@to+1)& (0+255),b
  9370  004A7C  0E20               	movlw	low addSensor@f
  9371  004A7E  6F62               	movwf	strcat@from& (0+255),b
  9372  004A80  0E01               	movlw	high addSensor@f
  9373  004A82  6F63               	movwf	(strcat@from+1)& (0+255),b
  9374  004A84  ECDE  F025         	call	_strcat	;wreg free
  9375  004A88  0012               	return		;funcret
  9376  004A8A                     __end_of_addSensor:
  9377                           	opt stack 0
  9378                           tblptru	equ	0xFF8
  9379                           tblptrh	equ	0xFF7
  9380                           tblptrl	equ	0xFF6
  9381                           tablat	equ	0xFF5
  9382                           prodh	equ	0xFF4
  9383                           prodl	equ	0xFF3
  9384                           intcon	equ	0xFF2
  9385                           indf0	equ	0xFEF
  9386                           postinc0	equ	0xFEE
  9387                           fsr0h	equ	0xFEA
  9388                           fsr0l	equ	0xFE9
  9389                           wreg	equ	0xFE8
  9390                           indf1	equ	0xFE7
  9391                           postdec1	equ	0xFE5
  9392                           fsr1h	equ	0xFE2
  9393                           fsr1l	equ	0xFE1
  9394                           indf2	equ	0xFDF
  9395                           postinc2	equ	0xFDE
  9396                           postdec2	equ	0xFDD
  9397                           plusw2	equ	0xFDB
  9398                           fsr2h	equ	0xFDA
  9399                           fsr2l	equ	0xFD9
  9400                           status	equ	0xFD8
  9401                           
  9402 ;; *************** function _strcat *****************
  9403 ;; Defined at:
  9404 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strcat.c"
  9405 ;; Parameters:    Size  Location     Type
  9406 ;;  to              2    0[BANK0 ] PTR unsigned char 
  9407 ;;		 -> TxLoRaWan@comando(200), frameBuffer(300), 
  9408 ;;  from            2    2[BANK0 ] PTR const unsigned char 
  9409 ;;		 -> TxLoRaWan@hex(4), addSensorInt@f(30), addSensorStr@f(30), addSensor@f(100), 
  9410 ;; Auto vars:     Size  Location     Type
  9411 ;;  cp              2    4[BANK0 ] PTR unsigned char 
  9412 ;;		 -> TxLoRaWan@comando(200), frameBuffer(300), 
  9413 ;; Return value:  Size  Location     Type
  9414 ;;                  2    0[BANK0 ] PTR unsigned char 
  9415 ;; Registers used:
  9416 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9417 ;; Tracked objects:
  9418 ;;		On entry : 0/0
  9419 ;;		On exit  : 0/0
  9420 ;;		Unchanged: 0/0
  9421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9422 ;;      Params:         0       4       0       0       0       0       0       0       0
  9423 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9424 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9425 ;;      Totals:         0       6       0       0       0       0       0       0       0
  9426 ;;Total ram usage:        6 bytes
  9427 ;; Hardware stack levels used:    1
  9428 ;; Hardware stack levels required when called:   10
  9429 ;; This function calls:
  9430 ;;		Nothing
  9431 ;; This function is called by:
  9432 ;;		_addSensor
  9433 ;;		_addSensorStr
  9434 ;;		_addSensorInt
  9435 ;;		_TxLoRaWan
  9436 ;; This function uses a non-reentrant model
  9437 ;;
  9438                           
  9439                           	psect	text38
  9440  004BBC                     __ptext38:
  9441                           	opt stack 0
  9442  004BBC                     _strcat:
  9443                           	opt stack 19
  9444                           
  9445                           ;incstack = 0
  9446  004BBC  C060  F064         	movff	strcat@to,strcat@cp
  9447  004BC0  C061  F065         	movff	strcat@to+1,strcat@cp+1
  9448  004BC4  D003               	goto	l3533
  9449  004BC6  0100               	movlb	0	; () banked
  9450  004BC8  4B64               	infsnz	strcat@cp& (0+255),f,b
  9451  004BCA  2B65               	incf	(strcat@cp+1)& (0+255),f,b
  9452  004BCC                     l3533:
  9453                           
  9454                           ; BSR set to: 0
  9455  004BCC  C064  FFD9         	movff	strcat@cp,fsr2l
  9456  004BD0  C065  FFDA         	movff	strcat@cp+1,fsr2h
  9457  004BD4  50DF               	movf	indf2,w,c
  9458  004BD6  B4D8               	btfsc	status,2,c
  9459  004BD8  D006               	goto	l3536
  9460  004BDA  D7F5               	goto	l3534
  9461  004BDC  0100               	movlb	0	; () banked
  9462  004BDE  4B64               	infsnz	strcat@cp& (0+255),f,b
  9463  004BE0  2B65               	incf	(strcat@cp+1)& (0+255),f,b
  9464  004BE2  4B62               	infsnz	strcat@from& (0+255),f,b
  9465  004BE4  2B63               	incf	(strcat@from+1)& (0+255),f,b
  9466  004BE6                     l3536:
  9467                           
  9468                           ; BSR set to: 0
  9469  004BE6  C062  FFD9         	movff	strcat@from,fsr2l
  9470  004BEA  C063  FFDA         	movff	strcat@from+1,fsr2h
  9471  004BEE  C064  FFE1         	movff	strcat@cp,fsr1l
  9472  004BF2  C065  FFE2         	movff	strcat@cp+1,fsr1h
  9473  004BF6  CFDF FFE7          	movff	indf2,indf1
  9474  004BFA  50E7               	movf	indf1,w,c
  9475  004BFC  B4D8               	btfsc	status,2,c
  9476  004BFE  0012               	return	
  9477  004C00  D7ED               	goto	l3537
  9478  004C02                     __end_of_strcat:
  9479                           	opt stack 0
  9480                           tblptru	equ	0xFF8
  9481                           tblptrh	equ	0xFF7
  9482                           tblptrl	equ	0xFF6
  9483                           tablat	equ	0xFF5
  9484                           prodh	equ	0xFF4
  9485                           prodl	equ	0xFF3
  9486                           intcon	equ	0xFF2
  9487                           indf0	equ	0xFEF
  9488                           postinc0	equ	0xFEE
  9489                           fsr0h	equ	0xFEA
  9490                           fsr0l	equ	0xFE9
  9491                           wreg	equ	0xFE8
  9492                           indf1	equ	0xFE7
  9493                           postdec1	equ	0xFE5
  9494                           fsr1h	equ	0xFE2
  9495                           fsr1l	equ	0xFE1
  9496                           indf2	equ	0xFDF
  9497                           postinc2	equ	0xFDE
  9498                           postdec2	equ	0xFDD
  9499                           plusw2	equ	0xFDB
  9500                           fsr2h	equ	0xFDA
  9501                           fsr2l	equ	0xFD9
  9502                           status	equ	0xFD8
  9503                           
  9504 ;; *************** function _sprintf *****************
  9505 ;; Defined at:
  9506 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\doprnt.c"
  9507 ;; Parameters:    Size  Location     Type
  9508 ;;  sp              2   95[BANK0 ] PTR unsigned char 
  9509 ;;		 -> TxLoRaWan@hex(4), TxLoRaWan@comando(200), DataRate@comando(200), SetBandWidth@comando(200), 
  9510 ;;		 -> SetSpreadingFactor@comando(200), MacSave@comando(200), GetAdr@comando(200), SetAdr@comando(200), 
  9511 ;;		 -> SetChannelLoRaWan@comando(200), SetAppKey@comando(200), SetAppEUI@comando(200), SetDevEUI@comando(200), 
  9512 ;;		 -> GetDnctr@comando(200), addSensorFloat@f(30), addSensorInt@f(30), addSensorStr@f(30), 
  9513 ;;		 -> addSensor@f(100), main@data(150), frameBuffer(300), 
  9514 ;;  f               2   97[BANK0 ] PTR const unsigned char 
  9515 ;;		 -> STR_38(5), STR_37(7), STR_36(7), STR_35(6), 
  9516 ;;		 -> STR_34(6), STR_33(5), STR_32(3), STR_31(3), 
  9517 ;;		 -> STR_30(6), STR_29(10), STR_28(9), STR_27(68), 
  9518 ;;		 -> STR_26(36), STR_25(36), STR_24(3), STR_8(7), 
  9519 ;;		 -> STR_7(8), STR_6(7), STR_5(9), STR_4(17), 
  9520 ;;		 -> STR_3(92), 
  9521 ;; Auto vars:     Size  Location     Type
  9522 ;;  idx             1    5[BANK1 ] unsigned char 
  9523 ;;  val             4   18[BANK1 ] unsigned long 
  9524 ;;  tmpval          4   12[BANK1 ] struct .
  9525 ;;  fval            3   22[BANK1 ] struct .
  9526 ;;  prec            2   29[BANK1 ] int 
  9527 ;;  flag            2   27[BANK1 ] unsigned short 
  9528 ;;  width           2   25[BANK1 ] int 
  9529 ;;  exp             2   16[BANK1 ] int 
  9530 ;;  ap              2   10[BANK1 ] PTR void [1]
  9531 ;;		 -> ?_sprintf(2), 
  9532 ;;  len             2    8[BANK1 ] unsigned int 
  9533 ;;  cp              2    6[BANK1 ] PTR const unsigned char 
  9534 ;;		 -> STR_39(7), MAC_TX_UNCNF(9), MAC_TX_CNF(7), MAC_SET_DR(7), 
  9535 ;;		 -> MAC_SET_BW(13), MAC_SET_SF(16), MAC_SAVE(5), MAC_GET_ADR(8), 
  9536 ;;		 -> MAC_SET_ADR(8), MAC_SET_CH_STATUS(14), MAC_SET_APPKEY(11), MAC_SET_APPEUI(11), 
  9537 ;;		 -> MAC_SET_DEVEUI(11), MAC_GET_DNCTR(10), itoaVitor@buffer(12), STR_1(5), 
  9538 ;;  c               1   31[BANK1 ] char 
  9539 ;;  d               1    0        unsigned char 
  9540 ;; Return value:  Size  Location     Type
  9541 ;;                  2   95[BANK0 ] int 
  9542 ;; Registers used:
  9543 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9544 ;; Tracked objects:
  9545 ;;		On entry : 0/0
  9546 ;;		On exit  : 0/0
  9547 ;;		Unchanged: 0/0
  9548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9549 ;;      Params:         0      44       0       0       0       0       0       0       0
  9550 ;;      Locals:         0       0      32       0       0       0       0       0       0
  9551 ;;      Temps:          0       6       0       0       0       0       0       0       0
  9552 ;;      Totals:         0      50      32       0       0       0       0       0       0
  9553 ;;Total ram usage:       82 bytes
  9554 ;; Hardware stack levels used:    1
  9555 ;; Hardware stack levels required when called:   13
  9556 ;; This function calls:
  9557 ;;		___awdiv
  9558 ;;		___ftadd
  9559 ;;		___ftge
  9560 ;;		___ftmul
  9561 ;;		___ftneg
  9562 ;;		___ftsub
  9563 ;;		___fttol
  9564 ;;		___lldiv
  9565 ;;		___llmod
  9566 ;;		___lltoft
  9567 ;;		___wmul
  9568 ;;		__div_to_l_
  9569 ;;		__tdiv_to_l_
  9570 ;;		_fround
  9571 ;;		_isdigit
  9572 ;;		_scale
  9573 ;; This function is called by:
  9574 ;;		_main
  9575 ;;		_createFrameHeader
  9576 ;;		_addSensor
  9577 ;;		_addSensorStr
  9578 ;;		_addSensorInt
  9579 ;;		_addSensorFloat
  9580 ;;		_GetDnctr
  9581 ;;		_SetDevEUI
  9582 ;;		_SetAppEUI
  9583 ;;		_SetAppKey
  9584 ;;		_SetChannelLoRaWan
  9585 ;;		_SetAdr
  9586 ;;		_GetAdr
  9587 ;;		_MacSave
  9588 ;;		_SetSpreadingFactor
  9589 ;;		_SetBandWidth
  9590 ;;		_DataRate
  9591 ;;		_TxLoRaWan
  9592 ;; This function uses a non-reentrant model
  9593 ;;
  9594                           
  9595                           	psect	text39
  9596  000012                     __ptext39:
  9597                           	opt stack 0
  9598  000012                     _sprintf:
  9599                           	opt stack 17
  9600                           
  9601                           ;doprnt.c: 494: va_list ap;
  9602                           ;doprnt.c: 499: signed char c;
  9603                           ;doprnt.c: 501: int width;
  9604                           ;doprnt.c: 504: int prec;
  9605                           ;doprnt.c: 508: unsigned short flag;
  9606                           ;doprnt.c: 515: char d;
  9607                           ;doprnt.c: 516: double fval;
  9608                           ;doprnt.c: 517: int exp;
  9609                           ;doprnt.c: 523: union {
  9610                           ;doprnt.c: 524: unsigned long vd;
  9611                           ;doprnt.c: 525: double integ;
  9612                           ;doprnt.c: 526: } tmpval;
  9613                           ;doprnt.c: 528: unsigned long val;
  9614                           ;doprnt.c: 529: unsigned len;
  9615                           ;doprnt.c: 530: const char * cp;
  9616                           ;doprnt.c: 533: *ap = __va_start();
  9617                           
  9618                           ;incstack = 0
  9619  000012  0EC3               	movlw	low (?_sprintf+4)
  9620  000014  0101               	movlb	1	; () banked
  9621  000016  6F0A               	movwf	sprintf@ap& (0+255),b
  9622  000018  0E00               	movlw	high (?_sprintf+4)
  9623  00001A  6F0B               	movwf	(sprintf@ap+1)& (0+255),b
  9624                           
  9625                           ;doprnt.c: 536: while(c = *f++) {
  9626  00001C  EF07  F007         	goto	u8670
  9627  000020                     
  9628                           ; BSR set to: 1
  9629                           ;doprnt.c: 538: if(c != '%')
  9630                           
  9631                           ; BSR set to: 1
  9632  000020  0E25               	movlw	37
  9633  000022  191F               	xorwf	sprintf@c& (0+255),w,b
  9634  000024  B4D8               	btfsc	status,2,c
  9635  000026  D00B               	goto	l2780
  9636                           
  9637                           ; BSR set to: 1
  9638                           ;doprnt.c: 540: {
  9639                           ;doprnt.c: 541: ((*sp++ = (c)));
  9640  000028  C0BF  FFD9         	movff	sprintf@sp,fsr2l
  9641  00002C  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
  9642  000030  C11F  FFDF         	movff	sprintf@c,indf2
  9643                           
  9644                           ; BSR set to: 1
  9645  000034  0100               	movlb	0	; () banked
  9646  000036  4BBF               	infsnz	sprintf@sp& (0+255),f,b
  9647  000038  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
  9648                           
  9649                           ;doprnt.c: 542: continue;
  9650  00003A  EF07  F007         	goto	u8670
  9651  00003E                     l2780:
  9652                           
  9653                           ;doprnt.c: 543: }
  9654                           ;doprnt.c: 546: width = 0;
  9655                           
  9656                           ; BSR set to: 0
  9657  00003E  0E00               	movlw	0
  9658  000040  0101               	movlb	1	; () banked
  9659  000042  6F1A               	movwf	(sprintf@width+1)& (0+255),b
  9660  000044  0E00               	movlw	0
  9661  000046  6F19               	movwf	sprintf@width& (0+255),b
  9662                           
  9663                           ;doprnt.c: 548: flag = 0;
  9664  000048  0E00               	movlw	0
  9665  00004A  6F1C               	movwf	(sprintf@flag+1)& (0+255),b
  9666  00004C  0E00               	movlw	0
  9667  00004E  6F1B               	movwf	sprintf@flag& (0+255),b
  9668                           
  9669                           ; BSR set to: 1
  9670                           ;doprnt.c: 551: switch(*f) {
  9671                           
  9672                           ;doprnt.c: 550: for(;;) {
  9673  000050  D005               	goto	l2782
  9674  000052                     
  9675                           ;doprnt.c: 580: flag |= 0x04;
  9676                           
  9677                           ; BSR set to: 1
  9678  000052  0101               	movlb	1	; () banked
  9679  000054  851B               	bsf	sprintf@flag& (0+255),2,b
  9680                           
  9681                           ;doprnt.c: 581: f++;
  9682  000056  0100               	movlb	0	; () banked
  9683  000058  4BC1               	infsnz	sprintf@f& (0+255),f,b
  9684  00005A  2BC2               	incf	(sprintf@f+1)& (0+255),f,b
  9685  00005C                     l2782:
  9686                           
  9687                           ; BSR set to: 0
  9688  00005C  C0C1  FFF6         	movff	sprintf@f,tblptrl
  9689  000060  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
  9690  000064                     	if	0	;tblptru may be non-zero
  9691  000064                     	endif
  9692  000064                     	if	0	;tblptru may be non-zero
  9693  000064                     	endif
  9694  000064  0008               	tblrd		*
  9695  000066  50F5               	movf	tablat,w,c
  9696                           
  9697                           ; Switch size 1, requested type "space"
  9698                           ; Number of cases is 1, Range of values is 48 to 48
  9699                           ; switch strategies available:
  9700                           ; Name         Instructions Cycles
  9701                           ; simple_byte            4     3 (average)
  9702                           ;	Chosen strategy is simple_byte
  9703  000068  0A30               	xorlw	48	; case 48
  9704  00006A  B4D8               	btfsc	status,2,c
  9705  00006C  D7F2               	goto	l2783
  9706                           
  9707                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  9708                           
  9709                           ;doprnt.c: 586: }
  9710                           
  9711                           ;doprnt.c: 585: break;
  9712  00006E  C0C1  FFF6         	movff	sprintf@f,tblptrl
  9713  000072  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
  9714  000076                     	if	0	;tblptru may be non-zero
  9715  000076                     	endif
  9716  000076                     	if	0	;tblptru may be non-zero
  9717  000076                     	endif
  9718  000076  0008               	tblrd		*
  9719  000078  50F5               	movf	tablat,w,c
  9720  00007A  ECA6  F028         	call	_isdigit
  9721  00007E  A0D8               	btfss	status,0,c
  9722  000080  D039               	goto	u7980
  9723                           
  9724                           ;doprnt.c: 598: width = 0;
  9725  000082  0E00               	movlw	0
  9726  000084  0101               	movlb	1	; () banked
  9727  000086  6F1A               	movwf	(sprintf@width+1)& (0+255),b
  9728  000088  0E00               	movlw	0
  9729  00008A  6F19               	movwf	sprintf@width& (0+255),b
  9730  00008C                     
  9731                           ;doprnt.c: 600: width *= 10;
  9732                           
  9733                           ; BSR set to: 1
  9734  00008C  C119  F06E         	movff	sprintf@width,___wmul@multiplier
  9735  000090  C11A  F06F         	movff	sprintf@width+1,___wmul@multiplier+1
  9736  000094  0E00               	movlw	0
  9737  000096  0100               	movlb	0	; () banked
  9738  000098  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9739  00009A  0E0A               	movlw	10
  9740  00009C  6F70               	movwf	___wmul@multiplicand& (0+255),b
  9741  00009E  EC59  F028         	call	___wmul	;wreg free
  9742  0000A2  C06E  F119         	movff	?___wmul,sprintf@width
  9743  0000A6  C06F  F11A         	movff	?___wmul+1,sprintf@width+1
  9744                           
  9745                           ;doprnt.c: 601: width += *f++ - '0';
  9746  0000AA  0ED0               	movlw	208
  9747  0000AC  0100               	movlb	0	; () banked
  9748  0000AE  6FEB               	movwf	??_sprintf& (0+255),b
  9749  0000B0  0EFF               	movlw	255
  9750  0000B2  6FEC               	movwf	(??_sprintf+1)& (0+255),b
  9751  0000B4  C0C1  FFF6         	movff	sprintf@f,tblptrl
  9752  0000B8  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
  9753  0000BC                     	if	0	;tblptru may be non-zero
  9754  0000BC                     	endif
  9755  0000BC                     	if	0	;tblptru may be non-zero
  9756  0000BC                     	endif
  9757  0000BC  0008               	tblrd		*
  9758  0000BE  50F5               	movf	tablat,w,c
  9759  0000C0  6FED               	movwf	(??_sprintf+2)& (0+255),b
  9760  0000C2  6BEE               	clrf	(??_sprintf+3)& (0+255),b
  9761  0000C4  51EB               	movf	??_sprintf& (0+255),w,b
  9762  0000C6  27ED               	addwf	(??_sprintf+2)& (0+255),f,b
  9763  0000C8  51EC               	movf	(??_sprintf+1)& (0+255),w,b
  9764  0000CA  23EE               	addwfc	(??_sprintf+3)& (0+255),f,b
  9765  0000CC  51ED               	movf	(??_sprintf+2)& (0+255),w,b
  9766  0000CE  0101               	movlb	1	; () banked
  9767  0000D0  2719               	addwf	sprintf@width& (0+255),f,b
  9768  0000D2  0100               	movlb	0	; () banked
  9769  0000D4  51EE               	movf	(??_sprintf+3)& (0+255),w,b
  9770  0000D6  0101               	movlb	1	; () banked
  9771  0000D8  231A               	addwfc	(sprintf@width+1)& (0+255),f,b
  9772                           
  9773                           ; BSR set to: 1
  9774  0000DA  0100               	movlb	0	; () banked
  9775  0000DC  4BC1               	infsnz	sprintf@f& (0+255),f,b
  9776  0000DE  2BC2               	incf	(sprintf@f+1)& (0+255),f,b
  9777                           
  9778                           ; BSR set to: 0
  9779                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  9780  0000E0  C0C1  FFF6         	movff	sprintf@f,tblptrl
  9781  0000E4  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
  9782  0000E8                     	if	0	;tblptru may be non-zero
  9783  0000E8                     	endif
  9784  0000E8                     	if	0	;tblptru may be non-zero
  9785  0000E8                     	endif
  9786  0000E8  0008               	tblrd		*
  9787  0000EA  50F5               	movf	tablat,w,c
  9788  0000EC  ECA6  F028         	call	_isdigit
  9789  0000F0  B0D8               	btfsc	status,0,c
  9790  0000F2  D7CC               	goto	l2788
  9791  0000F4                     u7980:
  9792                           
  9793                           ;doprnt.c: 608: }
  9794                           ;doprnt.c: 611: if(*f == '.') {
  9795  0000F4  C0C1  FFF6         	movff	sprintf@f,tblptrl
  9796  0000F8  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
  9797  0000FC                     	if	0	;tblptru may be non-zero
  9798  0000FC                     	endif
  9799  0000FC                     	if	0	;tblptru may be non-zero
  9800  0000FC                     	endif
  9801  0000FC  0008               	tblrd		*
  9802  0000FE  50F5               	movf	tablat,w,c
  9803  000100  0A2E               	xorlw	46
  9804  000102  A4D8               	btfss	status,2,c
  9805  000104  D037               	goto	l2790
  9806                           
  9807                           ;doprnt.c: 612: flag |= 0x4000;
  9808  000106  0101               	movlb	1	; () banked
  9809  000108  8D1C               	bsf	(sprintf@flag+1)& (0+255),6,b
  9810                           
  9811                           ;doprnt.c: 613: f++;
  9812  00010A  0100               	movlb	0	; () banked
  9813  00010C  4BC1               	infsnz	sprintf@f& (0+255),f,b
  9814  00010E  2BC2               	incf	(sprintf@f+1)& (0+255),f,b
  9815                           
  9816                           ; BSR set to: 0
  9817                           ;doprnt.c: 620: {
  9818                           ;doprnt.c: 621: prec = 0;
  9819  000110  0E00               	movlw	0
  9820  000112  0101               	movlb	1	; () banked
  9821  000114  6F1E               	movwf	(sprintf@prec+1)& (0+255),b
  9822  000116  0E00               	movlw	0
  9823  000118  6F1D               	movwf	sprintf@prec& (0+255),b
  9824                           
  9825                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  9826  00011A  D021               	goto	l2791
  9827  00011C                     
  9828                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  9829                           
  9830                           ; BSR set to: 1
  9831  00011C  C11D  F06E         	movff	sprintf@prec,___wmul@multiplier
  9832  000120  C11E  F06F         	movff	sprintf@prec+1,___wmul@multiplier+1
  9833  000124  0E00               	movlw	0
  9834  000126  0100               	movlb	0	; () banked
  9835  000128  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9836  00012A  0E0A               	movlw	10
  9837  00012C  6F70               	movwf	___wmul@multiplicand& (0+255),b
  9838  00012E  EC59  F028         	call	___wmul	;wreg free
  9839  000132  C0C1  FFF6         	movff	sprintf@f,tblptrl
  9840  000136  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
  9841  00013A                     	if	0	;tblptru may be non-zero
  9842  00013A                     	endif
  9843  00013A                     	if	0	;tblptru may be non-zero
  9844  00013A                     	endif
  9845  00013A  0008               	tblrd		*
  9846  00013C  50F5               	movf	tablat,w,c
  9847  00013E  0100               	movlb	0	; () banked
  9848  000140  276E               	addwf	?___wmul& (0+255),f,b
  9849  000142  0E00               	movlw	0
  9850  000144  236F               	addwfc	(?___wmul+1)& (0+255),f,b
  9851  000146  0ED0               	movlw	208
  9852  000148  256E               	addwf	?___wmul& (0+255),w,b
  9853  00014A  0101               	movlb	1	; () banked
  9854  00014C  6F1D               	movwf	sprintf@prec& (0+255),b
  9855  00014E  0EFF               	movlw	255
  9856  000150  0100               	movlb	0	; () banked
  9857  000152  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  9858  000154  0101               	movlb	1	; () banked
  9859  000156  6F1E               	movwf	(sprintf@prec+1)& (0+255),b
  9860                           
  9861                           ; BSR set to: 1
  9862  000158  0100               	movlb	0	; () banked
  9863  00015A  4BC1               	infsnz	sprintf@f& (0+255),f,b
  9864  00015C  2BC2               	incf	(sprintf@f+1)& (0+255),f,b
  9865  00015E                     l2791:
  9866                           
  9867                           ; BSR set to: 0
  9868  00015E  C0C1  FFF6         	movff	sprintf@f,tblptrl
  9869  000162  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
  9870  000166                     	if	0	;tblptru may be non-zero
  9871  000166                     	endif
  9872  000166                     	if	0	;tblptru may be non-zero
  9873  000166                     	endif
  9874  000166  0008               	tblrd		*
  9875  000168  50F5               	movf	tablat,w,c
  9876  00016A  ECA6  F028         	call	_isdigit
  9877  00016E  A0D8               	btfss	status,0,c
  9878  000170  D0A2               	goto	l2796
  9879  000172  D7D4               	goto	l2792
  9880  000174                     l2790:
  9881                           
  9882                           ;doprnt.c: 626: prec = 0;
  9883  000174  0E00               	movlw	0
  9884  000176  0101               	movlb	1	; () banked
  9885  000178  6F1E               	movwf	(sprintf@prec+1)& (0+255),b
  9886  00017A  0E00               	movlw	0
  9887  00017C  6F1D               	movwf	sprintf@prec& (0+255),b
  9888                           
  9889                           ; BSR set to: 1
  9890                           ;doprnt.c: 628: flag |= 0x1000;
  9891  00017E  891C               	bsf	(sprintf@flag+1)& (0+255),4,b
  9892                           
  9893                           ; BSR set to: 1
  9894                           ;doprnt.c: 635: switch(c = *f++) {
  9895                           
  9896                           ;doprnt.c: 630: }
  9897                           ;doprnt.c: 633: loop:
  9898                           
  9899                           ; BSR set to: 1
  9900  000180  D09A               	goto	l2796
  9901  000182                     
  9902                           ; BSR set to: 1
  9903                           ;doprnt.c: 643: flag |= 0x10;
  9904                           
  9905                           ; BSR set to: 1
  9906  000182  891B               	bsf	sprintf@flag& (0+255),4,b
  9907                           
  9908                           ;doprnt.c: 644: goto loop;
  9909  000184  D098               	goto	l2796
  9910  000186                     
  9911                           ; BSR set to: 1
  9912                           ;doprnt.c: 663: flag |= 0x400;
  9913                           
  9914                           ; BSR set to: 1
  9915  000186  851C               	bsf	(sprintf@flag+1)& (0+255),2,b
  9916                           
  9917                           ; BSR set to: 1
  9918                           ;doprnt.c: 698: case 'i':
  9919                           ;doprnt.c: 699: break;
  9920                           
  9921                           ; BSR set to: 1
  9922                           
  9923                           ;doprnt.c: 697: case 'd':
  9924                           
  9925                           ;doprnt.c: 664: break;
  9926  000188  D0C0               	goto	l2801
  9927  00018A                     
  9928                           ; BSR set to: 1
  9929                           ;doprnt.c: 714: flag |= 0x20;
  9930                           
  9931                           ; BSR set to: 1
  9932  00018A  8B1B               	bsf	sprintf@flag& (0+255),5,b
  9933  00018C                     l2805:
  9934                           
  9935                           ; BSR set to: 1
  9936                           ;doprnt.c: 721: flag |= 0x80;
  9937  00018C  8F1B               	bsf	sprintf@flag& (0+255),7,b
  9938                           
  9939                           ;doprnt.c: 723: break;
  9940  00018E  D0BD               	goto	l2801
  9941  000190                     
  9942                           ; BSR set to: 1
  9943                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  9944                           
  9945                           ; BSR set to: 1
  9946  000190  C10A  FFD9         	movff	sprintf@ap,fsr2l
  9947  000194  C10B  FFDA         	movff	sprintf@ap+1,fsr2h
  9948  000198  CFDE F106          	movff	postinc2,sprintf@cp
  9949  00019C  CFDD F107          	movff	postdec2,sprintf@cp+1
  9950                           
  9951                           ; BSR set to: 1
  9952  0001A0  0E02               	movlw	2
  9953  0001A2  270A               	addwf	sprintf@ap& (0+255),f,b
  9954  0001A4  0E00               	movlw	0
  9955  0001A6  230B               	addwfc	(sprintf@ap+1)& (0+255),f,b
  9956                           
  9957                           ; BSR set to: 1
  9958                           ;doprnt.c: 740: if(!cp)
  9959  0001A8  5106               	movf	sprintf@cp& (0+255),w,b
  9960  0001AA  1107               	iorwf	(sprintf@cp+1)& (0+255),w,b
  9961  0001AC  A4D8               	btfss	status,2,c
  9962  0001AE  D004               	goto	l2807
  9963                           
  9964                           ; BSR set to: 1
  9965                           ;doprnt.c: 741: cp = "(null)";
  9966  0001B0  0EAF               	movlw	low STR_39
  9967  0001B2  6F06               	movwf	sprintf@cp& (0+255),b
  9968  0001B4  0E7F               	movlw	high STR_39
  9969  0001B6  6F07               	movwf	(sprintf@cp+1)& (0+255),b
  9970  0001B8                     l2807:
  9971                           
  9972                           ; BSR set to: 1
  9973                           ;doprnt.c: 745: len = 0;
  9974                           
  9975                           ; BSR set to: 1
  9976  0001B8  0E00               	movlw	0
  9977  0001BA  6F09               	movwf	(sprintf@len+1)& (0+255),b
  9978  0001BC  0E00               	movlw	0
  9979  0001BE  6F08               	movwf	sprintf@len& (0+255),b
  9980                           
  9981                           ;doprnt.c: 746: while(cp[len])
  9982  0001C0  D003               	goto	l2808
  9983  0001C2                     
  9984                           ;doprnt.c: 747: len++;
  9985                           
  9986                           ; BSR set to: 1
  9987  0001C2  0101               	movlb	1	; () banked
  9988  0001C4  4B08               	infsnz	sprintf@len& (0+255),f,b
  9989  0001C6  2B09               	incf	(sprintf@len+1)& (0+255),f,b
  9990  0001C8                     l2808:
  9991                           
  9992                           ; BSR set to: 1
  9993                           
  9994                           ; BSR set to: 1
  9995  0001C8  5108               	movf	sprintf@len& (0+255),w,b
  9996  0001CA  2506               	addwf	sprintf@cp& (0+255),w,b
  9997  0001CC  0100               	movlb	0	; () banked
  9998  0001CE  6FEB               	movwf	??_sprintf& (0+255),b
  9999  0001D0  0101               	movlb	1	; () banked
 10000  0001D2  5109               	movf	(sprintf@len+1)& (0+255),w,b
 10001  0001D4  2107               	addwfc	(sprintf@cp+1)& (0+255),w,b
 10002  0001D6  0100               	movlb	0	; () banked
 10003  0001D8  6FEC               	movwf	(??_sprintf+1)& (0+255),b
 10004  0001DA  C0EB  FFF6         	movff	??_sprintf,tblptrl
 10005  0001DE  C0EC  FFF7         	movff	??_sprintf+1,tblptrh
 10006  0001E2  6AF8               	clrf	tblptru,c
 10007  0001E4  0E07               	movlw	(high __ramtop+-1)
 10008  0001E6  64F7               	cpfsgt	tblptrh,c
 10009  0001E8  D003               	bra	u8027
 10010  0001EA  0008               	tblrd		*
 10011  0001EC  50F5               	movf	tablat,w,c
 10012  0001EE  D005               	bra	u8020
 10013  0001F0                     u8027:
 10014  0001F0  CFF6 FFE9          	movff	tblptrl,fsr0l
 10015  0001F4  CFF7 FFEA          	movff	tblptrh,fsr0h
 10016  0001F8  50EF               	movf	indf0,w,c
 10017  0001FA                     u8020:
 10018  0001FA  0900               	iorlw	0
 10019  0001FC  A4D8               	btfss	status,2,c
 10020  0001FE  D7E1               	goto	l2809
 10021                           
 10022                           ;doprnt.c: 753: if(prec && prec < len)
 10023  000200  0101               	movlb	1	; () banked
 10024  000202  511D               	movf	sprintf@prec& (0+255),w,b
 10025  000204  111E               	iorwf	(sprintf@prec+1)& (0+255),w,b
 10026  000206  B4D8               	btfsc	status,2,c
 10027  000208  D00A               	goto	l2811
 10028                           
 10029                           ; BSR set to: 1
 10030  00020A  5108               	movf	sprintf@len& (0+255),w,b
 10031  00020C  5D1D               	subwf	sprintf@prec& (0+255),w,b
 10032  00020E  5109               	movf	(sprintf@len+1)& (0+255),w,b
 10033  000210  591E               	subwfb	(sprintf@prec+1)& (0+255),w,b
 10034  000212  B0D8               	btfsc	status,0,c
 10035  000214  D004               	goto	l2811
 10036                           
 10037                           ; BSR set to: 1
 10038                           ;doprnt.c: 754: len = prec;
 10039  000216  C11D  F108         	movff	sprintf@prec,sprintf@len
 10040  00021A  C11E  F109         	movff	sprintf@prec+1,sprintf@len+1
 10041  00021E                     l2811:
 10042                           
 10043                           ; BSR set to: 1
 10044                           ;doprnt.c: 757: if(width > len)
 10045                           
 10046                           ; BSR set to: 1
 10047  00021E  5119               	movf	sprintf@width& (0+255),w,b
 10048  000220  5D08               	subwf	sprintf@len& (0+255),w,b
 10049  000222  511A               	movf	(sprintf@width+1)& (0+255),w,b
 10050  000224  5909               	subwfb	(sprintf@len+1)& (0+255),w,b
 10051  000226  B0D8               	btfsc	status,0,c
 10052  000228  D005               	goto	l2812
 10053                           
 10054                           ; BSR set to: 1
 10055                           ;doprnt.c: 758: width -= len;
 10056  00022A  5108               	movf	sprintf@len& (0+255),w,b
 10057  00022C  5F19               	subwf	sprintf@width& (0+255),f,b
 10058  00022E  5109               	movf	(sprintf@len+1)& (0+255),w,b
 10059  000230  5B1A               	subwfb	(sprintf@width+1)& (0+255),f,b
 10060  000232  D00E               	goto	l2814
 10061  000234                     l2812:
 10062                           
 10063                           ; BSR set to: 1
 10064                           ;doprnt.c: 759: else
 10065                           ;doprnt.c: 760: width = 0;
 10066                           
 10067                           ; BSR set to: 1
 10068  000234  0E00               	movlw	0
 10069  000236  6F1A               	movwf	(sprintf@width+1)& (0+255),b
 10070  000238  0E00               	movlw	0
 10071  00023A  6F19               	movwf	sprintf@width& (0+255),b
 10072                           
 10073                           ; BSR set to: 1
 10074                           ;doprnt.c: 764: while(width--)
 10075  00023C  D009               	goto	l2814
 10076  00023E                     l9173:
 10077                           
 10078                           ; BSR set to: 1
 10079                           ;doprnt.c: 765: ((*sp++ = (' ')));
 10080  00023E  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 10081  000242  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 10082  000246  0E20               	movlw	32
 10083  000248  6EDF               	movwf	indf2,c
 10084                           
 10085                           ; BSR set to: 1
 10086  00024A  0100               	movlb	0	; () banked
 10087  00024C  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 10088  00024E  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 10089  000250                     l2814:
 10090                           
 10091                           ; BSR set to: 0
 10092  000250  0101               	movlb	1	; () banked
 10093  000252  0719               	decf	sprintf@width& (0+255),f,b
 10094  000254  A0D8               	btfss	status,0,c
 10095  000256  071A               	decf	(sprintf@width+1)& (0+255),f,b
 10096  000258  2919               	incf	sprintf@width& (0+255),w,b
 10097  00025A  E1F1               	bnz	l9173
 10098  00025C  291A               	incf	(sprintf@width+1)& (0+255),w,b
 10099  00025E  B4D8               	btfsc	status,2,c
 10100  000260  D01C               	goto	l2817
 10101  000262  D7ED               	goto	l2815
 10102  000264                     l9179:
 10103                           
 10104                           ; BSR set to: 1
 10105                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
 10106  000264  C106  FFF6         	movff	sprintf@cp,tblptrl
 10107  000268  C107  FFF7         	movff	sprintf@cp+1,tblptrh
 10108  00026C  6AF8               	clrf	tblptru,c
 10109  00026E  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 10110  000272  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 10111  000276  0E07               	movlw	(high __ramtop+-1)
 10112  000278  64F7               	cpfsgt	tblptrh,c
 10113  00027A  D003               	bra	u8087
 10114  00027C  0008               	tblrd		*
 10115  00027E  50F5               	movf	tablat,w,c
 10116  000280  D005               	bra	u8080
 10117  000282                     u8087:
 10118  000282  CFF6 FFE9          	movff	tblptrl,fsr0l
 10119  000286  CFF7 FFEA          	movff	tblptrh,fsr0h
 10120  00028A  50EF               	movf	indf0,w,c
 10121  00028C                     u8080:
 10122  00028C  6EDF               	movwf	indf2,c
 10123  00028E  0101               	movlb	1	; () banked
 10124  000290  4B06               	infsnz	sprintf@cp& (0+255),f,b
 10125  000292  2B07               	incf	(sprintf@cp+1)& (0+255),f,b
 10126                           
 10127                           ; BSR set to: 1
 10128  000294  0100               	movlb	0	; () banked
 10129  000296  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 10130  000298  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 10131  00029A                     l2817:
 10132                           
 10133                           ; BSR set to: 0
 10134  00029A  0101               	movlb	1	; () banked
 10135  00029C  0708               	decf	sprintf@len& (0+255),f,b
 10136  00029E  A0D8               	btfss	status,0,c
 10137  0002A0  0709               	decf	(sprintf@len+1)& (0+255),f,b
 10138  0002A2  2908               	incf	sprintf@len& (0+255),w,b
 10139  0002A4  E1DF               	bnz	l9179
 10140  0002A6  2909               	incf	(sprintf@len+1)& (0+255),w,b
 10141  0002A8  B4D8               	btfsc	status,2,c
 10142  0002AA  EF07  F007         	goto	u8670
 10143  0002AE  D7DA               	goto	l2818
 10144  0002B0                     
 10145                           ; BSR set to: 1
 10146                           ;doprnt.c: 818: flag |= 0xC0;
 10147                           
 10148                           ; BSR set to: 1
 10149  0002B0  0EC0               	movlw	192
 10150  0002B2  131B               	iorwf	sprintf@flag& (0+255),f,b
 10151                           
 10152                           ; BSR set to: 1
 10153                           ;doprnt.c: 822: }
 10154                           
 10155                           ;doprnt.c: 819: break;
 10156  0002B4  D02A               	goto	l2801
 10157  0002B6                     l2796:
 10158                           
 10159                           ; BSR set to: 1
 10160  0002B6  C0C1  FFF6         	movff	sprintf@f,tblptrl
 10161  0002BA  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
 10162  0002BE  0100               	movlb	0	; () banked
 10163  0002C0  4BC1               	infsnz	sprintf@f& (0+255),f,b
 10164  0002C2  2BC2               	incf	(sprintf@f+1)& (0+255),f,b
 10165  0002C4                     	if	0	;tblptru may be non-zero
 10166  0002C4                     	endif
 10167  0002C4                     	if	0	;tblptru may be non-zero
 10168  0002C4                     	endif
 10169  0002C4  0008               	tblrd		*
 10170  0002C6  CFF5 F11F          	movff	tablat,sprintf@c
 10171  0002CA  0101               	movlb	1	; () banked
 10172  0002CC  511F               	movf	sprintf@c& (0+255),w,b
 10173                           
 10174                           ; Switch size 1, requested type "space"
 10175                           ; Number of cases is 9, Range of values is 0 to 120
 10176                           ; switch strategies available:
 10177                           ; Name         Instructions Cycles
 10178                           ; simple_byte           28    15 (average)
 10179                           ;	Chosen strategy is simple_byte
 10180  0002CE  0A00               	xorlw	0	; case 0
 10181  0002D0  B4D8               	btfsc	status,2,c
 10182  0002D2  EF16  F007         	goto	u8680
 10183  0002D6  0A58               	xorlw	88	; case 88
 10184  0002D8  B4D8               	btfsc	status,2,c
 10185  0002DA  D757               	goto	l2804
 10186  0002DC  0A3C               	xorlw	60	; case 100
 10187  0002DE  B4D8               	btfsc	status,2,c
 10188  0002E0  D014               	goto	l2801
 10189  0002E2  0A02               	xorlw	2	; case 102
 10190  0002E4  B4D8               	btfsc	status,2,c
 10191  0002E6  D74F               	goto	l2800
 10192  0002E8  0A0F               	xorlw	15	; case 105
 10193  0002EA  B4D8               	btfsc	status,2,c
 10194  0002EC  D00E               	goto	l2801
 10195  0002EE  0A05               	xorlw	5	; case 108
 10196  0002F0  B4D8               	btfsc	status,2,c
 10197  0002F2  D747               	goto	l2799
 10198  0002F4  0A1F               	xorlw	31	; case 115
 10199  0002F6  B4D8               	btfsc	status,2,c
 10200  0002F8  D74B               	goto	l2806
 10201  0002FA  0A06               	xorlw	6	; case 117
 10202  0002FC  B4D8               	btfsc	status,2,c
 10203  0002FE  D7D8               	goto	l2821
 10204  000300  0A0D               	xorlw	13	; case 120
 10205  000302  B4D8               	btfsc	status,2,c
 10206  000304  D743               	goto	l2805
 10207  000306  EF07  F007         	goto	u8670
 10208  00030A                     l2801:
 10209                           
 10210                           ; BSR set to: 1
 10211                           ;doprnt.c: 825: if(flag & (0x700)) {
 10212                           
 10213                           ; BSR set to: 1
 10214  00030A  0E07               	movlw	7
 10215  00030C  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 10216  00030E  B4D8               	btfsc	status,2,c
 10217  000310  D35F               	goto	l2822
 10218                           
 10219                           ; BSR set to: 1
 10220                           ;doprnt.c: 827: if(flag & 0x1000)
 10221  000312  A91C               	btfss	(sprintf@flag+1)& (0+255),4,b
 10222  000314  D004               	goto	l2823
 10223                           
 10224                           ; BSR set to: 1
 10225                           ;doprnt.c: 829: prec = 6;
 10226  000316  0E00               	movlw	0
 10227  000318  6F1E               	movwf	(sprintf@prec+1)& (0+255),b
 10228  00031A  0E06               	movlw	6
 10229  00031C  6F1D               	movwf	sprintf@prec& (0+255),b
 10230  00031E                     l2823:
 10231                           
 10232                           ; BSR set to: 1
 10233                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 10234                           
 10235                           ; BSR set to: 1
 10236  00031E  C10A  FFD9         	movff	sprintf@ap,fsr2l
 10237  000322  C10B  FFDA         	movff	sprintf@ap+1,fsr2h
 10238  000326  CFDE F116          	movff	postinc2,sprintf@fval
 10239  00032A  CFDE F117          	movff	postinc2,sprintf@fval+1
 10240  00032E  CFDD F118          	movff	postdec2,sprintf@fval+2
 10241                           
 10242                           ; BSR set to: 1
 10243  000332  0E03               	movlw	3
 10244  000334  270A               	addwf	sprintf@ap& (0+255),f,b
 10245  000336  0E00               	movlw	0
 10246  000338  230B               	addwfc	(sprintf@ap+1)& (0+255),f,b
 10247                           
 10248                           ; BSR set to: 1
 10249                           ;doprnt.c: 831: if(fval < 0.0) {
 10250  00033A  AF18               	btfss	(sprintf@fval+2)& (0+255),7,b
 10251  00033C  D011               	goto	l2824
 10252                           
 10253                           ; BSR set to: 1
 10254                           ;doprnt.c: 832: fval = -fval;
 10255  00033E  C116  F060         	movff	sprintf@fval,___ftneg@f1
 10256  000342  C117  F061         	movff	sprintf@fval+1,___ftneg@f1+1
 10257  000346  C118  F062         	movff	sprintf@fval+2,___ftneg@f1+2
 10258  00034A  EC80  F028         	call	___ftneg	;wreg free
 10259  00034E  C060  F116         	movff	?___ftneg,sprintf@fval
 10260  000352  C061  F117         	movff	?___ftneg+1,sprintf@fval+1
 10261  000356  C062  F118         	movff	?___ftneg+2,sprintf@fval+2
 10262                           
 10263                           ;doprnt.c: 833: flag |= 0x03;
 10264  00035A  0E03               	movlw	3
 10265  00035C  0101               	movlb	1	; () banked
 10266  00035E  131B               	iorwf	sprintf@flag& (0+255),f,b
 10267  000360                     l2824:
 10268                           
 10269                           ; BSR set to: 1
 10270                           ;doprnt.c: 834: }
 10271                           ;doprnt.c: 835: exp = 0;
 10272                           
 10273                           ; BSR set to: 1
 10274  000360  0E00               	movlw	0
 10275  000362  6F11               	movwf	(sprintf@exp+1)& (0+255),b
 10276  000364  0E00               	movlw	0
 10277  000366  6F10               	movwf	sprintf@exp& (0+255),b
 10278                           
 10279                           ; BSR set to: 1
 10280                           ;doprnt.c: 836: if( fval!=0) {
 10281  000368  5116               	movf	sprintf@fval& (0+255),w,b
 10282  00036A  1117               	iorwf	(sprintf@fval+1)& (0+255),w,b
 10283  00036C  1118               	iorwf	(sprintf@fval+2)& (0+255),w,b
 10284  00036E  B4D8               	btfsc	status,2,c
 10285  000370  D090               	goto	l2829
 10286                           
 10287                           ; BSR set to: 1
 10288                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 10289  000372  0E82               	movlw	130
 10290  000374  0100               	movlb	0	; () banked
 10291  000376  6FEB               	movwf	??_sprintf& (0+255),b
 10292  000378  0EFF               	movlw	255
 10293  00037A  6FEC               	movwf	(??_sprintf+1)& (0+255),b
 10294  00037C  C116  F0ED         	movff	sprintf@fval,??_sprintf+2
 10295  000380  C117  F0EE         	movff	sprintf@fval+1,??_sprintf+3
 10296  000384  C118  F0EF         	movff	sprintf@fval+2,??_sprintf+4
 10297  000388  C119  F0F0         	movff	sprintf@fval+3,??_sprintf+5
 10298  00038C  0E10               	movlw	16
 10299  00038E  D005               	goto	u8140
 10300  000390                     u8145:
 10301  000390  90D8               	bcf	status,0,c
 10302  000392  33F0               	rrcf	(??_sprintf+5)& (0+255),f,b
 10303  000394  33EF               	rrcf	(??_sprintf+4)& (0+255),f,b
 10304  000396  33EE               	rrcf	(??_sprintf+3)& (0+255),f,b
 10305  000398  33ED               	rrcf	(??_sprintf+2)& (0+255),f,b
 10306  00039A                     u8140:
 10307  00039A  2EE8               	decfsz	wreg,f,c
 10308  00039C  D7F9               	goto	u8145
 10309  00039E  51ED               	movf	(??_sprintf+2)& (0+255),w,b
 10310  0003A0  25EB               	addwf	??_sprintf& (0+255),w,b
 10311  0003A2  0101               	movlb	1	; () banked
 10312  0003A4  6F10               	movwf	sprintf@exp& (0+255),b
 10313  0003A6  0E00               	movlw	0
 10314  0003A8  0100               	movlb	0	; () banked
 10315  0003AA  21EC               	addwfc	(??_sprintf+1)& (0+255),w,b
 10316  0003AC  0101               	movlb	1	; () banked
 10317  0003AE  6F11               	movwf	(sprintf@exp+1)& (0+255),b
 10318                           
 10319                           ; BSR set to: 1
 10320                           ;doprnt.c: 838: exp--;
 10321  0003B0  0710               	decf	sprintf@exp& (0+255),f,b
 10322  0003B2  A0D8               	btfss	status,0,c
 10323  0003B4  0711               	decf	(sprintf@exp+1)& (0+255),f,b
 10324                           
 10325                           ; BSR set to: 1
 10326                           ;doprnt.c: 839: exp *= 3;
 10327  0003B6  C110  F06E         	movff	sprintf@exp,___wmul@multiplier
 10328  0003BA  C111  F06F         	movff	sprintf@exp+1,___wmul@multiplier+1
 10329  0003BE  0E00               	movlw	0
 10330  0003C0  0100               	movlb	0	; () banked
 10331  0003C2  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10332  0003C4  0E03               	movlw	3
 10333  0003C6  6F70               	movwf	___wmul@multiplicand& (0+255),b
 10334  0003C8  EC59  F028         	call	___wmul	;wreg free
 10335  0003CC  C06E  F110         	movff	?___wmul,sprintf@exp
 10336  0003D0  C06F  F111         	movff	?___wmul+1,sprintf@exp+1
 10337                           
 10338                           ;doprnt.c: 840: exp /= 10;
 10339  0003D4  C110  F066         	movff	sprintf@exp,___awdiv@dividend
 10340  0003D8  C111  F067         	movff	sprintf@exp+1,___awdiv@dividend+1
 10341  0003DC  0E00               	movlw	0
 10342  0003DE  0100               	movlb	0	; () banked
 10343  0003E0  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 10344  0003E2  0E0A               	movlw	10
 10345  0003E4  6F68               	movwf	___awdiv@divisor& (0+255),b
 10346  0003E6  ECC1  F021         	call	___awdiv	;wreg free
 10347  0003EA  C066  F110         	movff	?___awdiv,sprintf@exp
 10348  0003EE  C067  F111         	movff	?___awdiv+1,sprintf@exp+1
 10349                           
 10350                           ;doprnt.c: 841: if(exp < 0)
 10351  0003F2  0101               	movlb	1	; () banked
 10352  0003F4  AF11               	btfss	(sprintf@exp+1)& (0+255),7,b
 10353  0003F6  D003               	goto	l2826
 10354                           
 10355                           ; BSR set to: 1
 10356                           ;doprnt.c: 842: exp--;
 10357  0003F8  0710               	decf	sprintf@exp& (0+255),f,b
 10358  0003FA  A0D8               	btfss	status,0,c
 10359  0003FC  0711               	decf	(sprintf@exp+1)& (0+255),f,b
 10360  0003FE                     l2826:
 10361                           
 10362                           ; BSR set to: 1
 10363                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 10364                           
 10365                           ; BSR set to: 1
 10366  0003FE  5110               	movf	sprintf@exp& (0+255),w,b
 10367  000400  0800               	sublw	0
 10368  000402  EC1D  F007         	call	_scale
 10369  000406  C08F  F10C         	movff	?_scale,sprintf@tmpval
 10370  00040A  C090  F10D         	movff	?_scale+1,sprintf@tmpval+1
 10371  00040E  C091  F10E         	movff	?_scale+2,sprintf@tmpval+2
 10372                           
 10373                           ;doprnt.c: 847: tmpval.integ *= fval;
 10374  000412  C10C  F080         	movff	sprintf@tmpval,___ftmul@f1
 10375  000416  C10D  F081         	movff	sprintf@tmpval+1,___ftmul@f1+1
 10376  00041A  C10E  F082         	movff	sprintf@tmpval+2,___ftmul@f1+2
 10377  00041E  C116  F083         	movff	sprintf@fval,___ftmul@f2
 10378  000422  C117  F084         	movff	sprintf@fval+1,___ftmul@f2+1
 10379  000426  C118  F085         	movff	sprintf@fval+2,___ftmul@f2+2
 10380  00042A  ECF6  F018         	call	___ftmul	;wreg free
 10381  00042E  C080  F10C         	movff	?___ftmul,sprintf@tmpval
 10382  000432  C081  F10D         	movff	?___ftmul+1,sprintf@tmpval+1
 10383  000436  C082  F10E         	movff	?___ftmul+2,sprintf@tmpval+2
 10384                           
 10385                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 10386  00043A  C10C  F060         	movff	sprintf@tmpval,___ftge@ff1
 10387  00043E  C10D  F061         	movff	sprintf@tmpval+1,___ftge@ff1+1
 10388  000442  C10E  F062         	movff	sprintf@tmpval+2,___ftge@ff1+2
 10389  000446  0E00               	movlw	0
 10390  000448  0100               	movlb	0	; () banked
 10391  00044A  6F63               	movwf	___ftge@ff2& (0+255),b
 10392  00044C  0E80               	movlw	128
 10393  00044E  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 10394  000450  0E3F               	movlw	63
 10395  000452  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 10396  000454  ECA2  F020         	call	___ftge	;wreg free
 10397  000458  0100               	movlb	0	; () banked
 10398  00045A  B0D8               	btfsc	status,0,c
 10399  00045C  D005               	goto	l2827
 10400                           
 10401                           ; BSR set to: 0
 10402                           ;doprnt.c: 849: exp--;
 10403  00045E  0101               	movlb	1	; () banked
 10404  000460  0710               	decf	sprintf@exp& (0+255),f,b
 10405  000462  A0D8               	btfss	status,0,c
 10406  000464  0711               	decf	(sprintf@exp+1)& (0+255),f,b
 10407  000466  D015               	goto	l2829
 10408  000468                     l2827:
 10409                           
 10410                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 10411                           
 10412                           ; BSR set to: 1
 10413  000468  C10C  F060         	movff	sprintf@tmpval,___ftge@ff1
 10414  00046C  C10D  F061         	movff	sprintf@tmpval+1,___ftge@ff1+1
 10415  000470  C10E  F062         	movff	sprintf@tmpval+2,___ftge@ff1+2
 10416  000474  0E00               	movlw	0
 10417  000476  0100               	movlb	0	; () banked
 10418  000478  6F63               	movwf	___ftge@ff2& (0+255),b
 10419  00047A  0E20               	movlw	32
 10420  00047C  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 10421  00047E  0E41               	movlw	65
 10422  000480  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 10423  000482  ECA2  F020         	call	___ftge	;wreg free
 10424  000486  0100               	movlb	0	; () banked
 10425  000488  A0D8               	btfss	status,0,c
 10426  00048A  D003               	goto	l2829
 10427                           
 10428                           ; BSR set to: 0
 10429                           ;doprnt.c: 851: exp++;
 10430  00048C  0101               	movlb	1	; () banked
 10431  00048E  4B10               	infsnz	sprintf@exp& (0+255),f,b
 10432  000490  2B11               	incf	(sprintf@exp+1)& (0+255),f,b
 10433  000492                     l2829:
 10434                           
 10435                           ;doprnt.c: 852: }
 10436                           ;doprnt.c: 1112: if(prec <= 12)
 10437                           
 10438                           ; BSR set to: 1
 10439                           
 10440                           ; BSR set to: 1
 10441                           
 10442                           ; BSR set to: 1
 10443  000492  0101               	movlb	1	; () banked
 10444  000494  BF1E               	btfsc	(sprintf@prec+1)& (0+255),7,b
 10445  000496  D006               	goto	u8180
 10446  000498  511E               	movf	(sprintf@prec+1)& (0+255),w,b
 10447  00049A  E11B               	bnz	l9241
 10448  00049C  0E0D               	movlw	13
 10449  00049E  5D1D               	subwf	sprintf@prec& (0+255),w,b
 10450  0004A0  B0D8               	btfsc	status,0,c
 10451  0004A2  D017               	goto	l2830
 10452  0004A4                     u8180:
 10453                           
 10454                           ; BSR set to: 1
 10455                           ;doprnt.c: 1113: fval += fround(prec);
 10456  0004A4  C116  F074         	movff	sprintf@fval,___ftadd@f1
 10457  0004A8  C117  F075         	movff	sprintf@fval+1,___ftadd@f1+1
 10458  0004AC  C118  F076         	movff	sprintf@fval+2,___ftadd@f1+2
 10459  0004B0  511D               	movf	sprintf@prec& (0+255),w,b
 10460  0004B2  ECAB  F00D         	call	_fround
 10461  0004B6  C08F  F077         	movff	?_fround,___ftadd@f2
 10462  0004BA  C090  F078         	movff	?_fround+1,___ftadd@f2+1
 10463  0004BE  C091  F079         	movff	?_fround+2,___ftadd@f2+2
 10464  0004C2  ECD6  F010         	call	___ftadd	;wreg free
 10465  0004C6  C074  F116         	movff	?___ftadd,sprintf@fval
 10466  0004CA  C075  F117         	movff	?___ftadd+1,sprintf@fval+1
 10467  0004CE  C076  F118         	movff	?___ftadd+2,sprintf@fval+2
 10468  0004D2                     l2830:
 10469  0004D2                     l9241:
 10470                           
 10471                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 10472  0004D2  0101               	movlb	1	; () banked
 10473  0004D4  BF11               	btfsc	(sprintf@exp+1)& (0+255),7,b
 10474  0004D6  D006               	goto	u8190
 10475  0004D8  5111               	movf	(sprintf@exp+1)& (0+255),w,b
 10476  0004DA  E121               	bnz	l9249
 10477  0004DC  0E0A               	movlw	10
 10478  0004DE  5D10               	subwf	sprintf@exp& (0+255),w,b
 10479  0004E0  B0D8               	btfsc	status,0,c
 10480  0004E2  D01D               	goto	u8220
 10481  0004E4                     u8190:
 10482                           
 10483                           ; BSR set to: 1
 10484  0004E4  5116               	movf	sprintf@fval& (0+255),w,b
 10485  0004E6  1117               	iorwf	(sprintf@fval+1)& (0+255),w,b
 10486  0004E8  1118               	iorwf	(sprintf@fval+2)& (0+255),w,b
 10487  0004EA  B4D8               	btfsc	status,2,c
 10488  0004EC  D059               	goto	l2831
 10489                           
 10490                           ; BSR set to: 1
 10491  0004EE  C116  F0B0         	movff	sprintf@fval,___fttol@f1
 10492  0004F2  C117  F0B1         	movff	sprintf@fval+1,___fttol@f1+1
 10493  0004F6  C118  F0B2         	movff	sprintf@fval+2,___fttol@f1+2
 10494  0004FA  EC7A  F018         	call	___fttol	;wreg free
 10495  0004FE  0100               	movlb	0	; () banked
 10496  000500  51B0               	movf	?___fttol& (0+255),w,b
 10497  000502  11B1               	iorwf	(?___fttol+1)& (0+255),w,b
 10498  000504  11B2               	iorwf	(?___fttol+2)& (0+255),w,b
 10499  000506  11B3               	iorwf	(?___fttol+3)& (0+255),w,b
 10500  000508  A4D8               	btfss	status,2,c
 10501  00050A  D04A               	goto	l2831
 10502                           
 10503                           ; BSR set to: 0
 10504  00050C  0101               	movlb	1	; () banked
 10505  00050E  BF11               	btfsc	(sprintf@exp+1)& (0+255),7,b
 10506  000510  D047               	goto	l2831
 10507  000512  5111               	movf	(sprintf@exp+1)& (0+255),w,b
 10508  000514  E104               	bnz	l9249
 10509  000516  0E02               	movlw	2
 10510  000518  5D10               	subwf	sprintf@exp& (0+255),w,b
 10511  00051A  A0D8               	btfss	status,0,c
 10512  00051C  D041               	goto	l2831
 10513  00051E                     u8220:
 10514  00051E                     l9249:
 10515                           
 10516                           ; BSR set to: 1
 10517                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 10518  00051E  C10C  F060         	movff	sprintf@tmpval,___ftge@ff1
 10519  000522  C10D  F061         	movff	sprintf@tmpval+1,___ftge@ff1+1
 10520  000526  C10E  F062         	movff	sprintf@tmpval+2,___ftge@ff1+2
 10521  00052A  0E70               	movlw	112
 10522  00052C  0100               	movlb	0	; () banked
 10523  00052E  6F63               	movwf	___ftge@ff2& (0+255),b
 10524  000530  0E89               	movlw	137
 10525  000532  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 10526  000534  0E40               	movlw	64
 10527  000536  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 10528  000538  ECA2  F020         	call	___ftge	;wreg free
 10529  00053C  0100               	movlb	0	; () banked
 10530  00053E  B0D8               	btfsc	status,0,c
 10531  000540  D003               	goto	l2834
 10532                           
 10533                           ; BSR set to: 0
 10534                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 10535  000542  0101               	movlb	1	; () banked
 10536  000544  0EF7               	movlw	247
 10537  000546  D002               	goto	L9
 10538  000548                     l2834:
 10539                           
 10540                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 10541                           
 10542                           ; BSR set to: 1
 10543  000548  0101               	movlb	1	; () banked
 10544  00054A  0EF8               	movlw	248
 10545  00054C                     L9:
 10546  00054C  2710               	addwf	sprintf@exp& (0+255),f,b
 10547  00054E  0EFF               	movlw	255
 10548  000550  2311               	addwfc	(sprintf@exp+1)& (0+255),f,b
 10549                           
 10550                           ; BSR set to: 1
 10551                           ;doprnt.c: 1124: }
 10552                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
 10553                           
 10554                           ; BSR set to: 1
 10555  000552  5110               	movf	sprintf@exp& (0+255),w,b
 10556  000554  EC1D  F007         	call	_scale
 10557  000558  C08F  F10C         	movff	?_scale,sprintf@tmpval
 10558  00055C  C090  F10D         	movff	?_scale+1,sprintf@tmpval+1
 10559  000560  C091  F10E         	movff	?_scale+2,sprintf@tmpval+2
 10560                           
 10561                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 10562  000564  C116  F060         	movff	sprintf@fval,__tdiv_to_l_@f1
 10563  000568  C117  F061         	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
 10564  00056C  C118  F062         	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
 10565  000570  C10C  F063         	movff	sprintf@tmpval,__tdiv_to_l_@f2
 10566  000574  C10D  F064         	movff	sprintf@tmpval+1,__tdiv_to_l_@f2+1
 10567  000578  C10E  F065         	movff	sprintf@tmpval+2,__tdiv_to_l_@f2+2
 10568  00057C  ECED  F012         	call	__tdiv_to_l_	;wreg free
 10569  000580  C060  F112         	movff	?__tdiv_to_l_,sprintf@val
 10570  000584  C061  F113         	movff	?__tdiv_to_l_+1,sprintf@val+1
 10571  000588  C062  F114         	movff	?__tdiv_to_l_+2,sprintf@val+2
 10572  00058C  C063  F115         	movff	?__tdiv_to_l_+3,sprintf@val+3
 10573                           
 10574                           ;doprnt.c: 1129: fval = 0.0;
 10575  000590  0E00               	movlw	0
 10576  000592  0101               	movlb	1	; () banked
 10577  000594  6F16               	movwf	sprintf@fval& (0+255),b
 10578  000596  0E00               	movlw	0
 10579  000598  6F17               	movwf	(sprintf@fval+1)& (0+255),b
 10580  00059A  0E00               	movlw	0
 10581  00059C  6F18               	movwf	(sprintf@fval+2)& (0+255),b
 10582                           
 10583                           ;doprnt.c: 1130: } else {
 10584  00059E  D033               	goto	l2840
 10585  0005A0                     l2831:
 10586                           
 10587                           ;doprnt.c: 1131: val = (unsigned long)fval;
 10588                           
 10589                           ; BSR set to: 1
 10590  0005A0  C116  F0B0         	movff	sprintf@fval,___fttol@f1
 10591  0005A4  C117  F0B1         	movff	sprintf@fval+1,___fttol@f1+1
 10592  0005A8  C118  F0B2         	movff	sprintf@fval+2,___fttol@f1+2
 10593  0005AC  EC7A  F018         	call	___fttol	;wreg free
 10594  0005B0  C0B0  F112         	movff	?___fttol,sprintf@val
 10595  0005B4  C0B1  F113         	movff	?___fttol+1,sprintf@val+1
 10596  0005B8  C0B2  F114         	movff	?___fttol+2,sprintf@val+2
 10597  0005BC  C0B3  F115         	movff	?___fttol+3,sprintf@val+3
 10598                           
 10599                           ;doprnt.c: 1132: fval -= (double)val;
 10600  0005C0  C116  F080         	movff	sprintf@fval,___ftsub@f1
 10601  0005C4  C117  F081         	movff	sprintf@fval+1,___ftsub@f1+1
 10602  0005C8  C118  F082         	movff	sprintf@fval+2,___ftsub@f1+2
 10603  0005CC  C112  F068         	movff	sprintf@val,___lltoft@c
 10604  0005D0  C113  F069         	movff	sprintf@val+1,___lltoft@c+1
 10605  0005D4  C114  F06A         	movff	sprintf@val+2,___lltoft@c+2
 10606  0005D8  C115  F06B         	movff	sprintf@val+3,___lltoft@c+3
 10607  0005DC  ECDD  F023         	call	___lltoft	;wreg free
 10608  0005E0  C068  F083         	movff	?___lltoft,___ftsub@f2
 10609  0005E4  C069  F084         	movff	?___lltoft+1,___ftsub@f2+1
 10610  0005E8  C06A  F085         	movff	?___lltoft+2,___ftsub@f2+2
 10611  0005EC  EC66  F026         	call	___ftsub	;wreg free
 10612  0005F0  C080  F116         	movff	?___ftsub,sprintf@fval
 10613  0005F4  C081  F117         	movff	?___ftsub+1,sprintf@fval+1
 10614  0005F8  C082  F118         	movff	?___ftsub+2,sprintf@fval+2
 10615                           
 10616                           ;doprnt.c: 1133: exp = 0;
 10617  0005FC  0E00               	movlw	0
 10618  0005FE  0101               	movlb	1	; () banked
 10619  000600  6F11               	movwf	(sprintf@exp+1)& (0+255),b
 10620  000602  0E00               	movlw	0
 10621  000604  6F10               	movwf	sprintf@exp& (0+255),b
 10622  000606                     l2840:
 10623                           
 10624                           ; BSR set to: 1
 10625                           ;doprnt.c: 1134: }
 10626                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 10627                           
 10628                           ; BSR set to: 1
 10629  000606  0E01               	movlw	1
 10630  000608  6F1F               	movwf	sprintf@c& (0+255),b
 10631  00060A                     l9269:
 10632                           
 10633                           ; BSR set to: 1
 10634  00060A  0E0A               	movlw	10
 10635  00060C  191F               	xorwf	sprintf@c& (0+255),w,b
 10636  00060E  B4D8               	btfsc	status,2,c
 10637  000610  D018               	goto	u8260
 10638                           
 10639                           ; BSR set to: 1
 10640                           ;doprnt.c: 1137: if(val < dpowers[c])
 10641                           
 10642                           ; BSR set to: 1
 10643                           
 10644                           ; BSR set to: 1
 10645  000612  511F               	movf	sprintf@c& (0+255),w,b
 10646  000614  0D04               	mullw	4
 10647  000616  0ED3               	movlw	low _dpowers
 10648  000618  24F3               	addwf	prodl,w,c
 10649  00061A  6EF6               	movwf	tblptrl,c
 10650  00061C  0E7B               	movlw	high _dpowers
 10651  00061E  20F4               	addwfc	prodh,w,c
 10652  000620  6EF7               	movwf	tblptrh,c
 10653  000622                     	if	0	;There are less than 3 active tblptr bytes
 10654  000622                     	endif
 10655  000622  0009               	tblrd		*+
 10656  000624  50F5               	movf	tablat,w,c
 10657  000626  5D12               	subwf	sprintf@val& (0+255),w,b
 10658  000628  0009               	tblrd		*+
 10659  00062A  50F5               	movf	tablat,w,c
 10660  00062C  5913               	subwfb	(sprintf@val+1)& (0+255),w,b
 10661  00062E  0009               	tblrd		*+
 10662  000630  50F5               	movf	tablat,w,c
 10663  000632  5914               	subwfb	(sprintf@val+2)& (0+255),w,b
 10664  000634  0009               	tblrd		*+
 10665  000636  50F5               	movf	tablat,w,c
 10666  000638  5915               	subwfb	(sprintf@val+3)& (0+255),w,b
 10667  00063A  A0D8               	btfss	status,0,c
 10668  00063C  D002               	goto	u8260
 10669                           
 10670                           ; BSR set to: 1
 10671                           
 10672                           ; BSR set to: 1
 10673                           
 10674                           ; BSR set to: 1
 10675                           ;doprnt.c: 1138: break;
 10676  00063E  2B1F               	incf	sprintf@c& (0+255),f,b
 10677  000640  D7E4               	goto	l9269
 10678  000642                     u8260:
 10679                           
 10680                           ; BSR set to: 1
 10681                           ;doprnt.c: 1142: width -= prec + c + exp;
 10682                           
 10683                           ; BSR set to: 1
 10684  000642  C11F  F0EB         	movff	sprintf@c,??_sprintf
 10685  000646  0100               	movlb	0	; () banked
 10686  000648  6BEC               	clrf	(??_sprintf+1)& (0+255),b
 10687  00064A  BFEB               	btfsc	??_sprintf& (0+255),7,b
 10688  00064C  07EC               	decf	(??_sprintf+1)& (0+255),f,b
 10689  00064E  0101               	movlb	1	; () banked
 10690  000650  511D               	movf	sprintf@prec& (0+255),w,b
 10691  000652  0100               	movlb	0	; () banked
 10692  000654  27EB               	addwf	??_sprintf& (0+255),f,b
 10693  000656  0101               	movlb	1	; () banked
 10694  000658  511E               	movf	(sprintf@prec+1)& (0+255),w,b
 10695  00065A  0100               	movlb	0	; () banked
 10696  00065C  23EC               	addwfc	(??_sprintf+1)& (0+255),f,b
 10697  00065E  0101               	movlb	1	; () banked
 10698  000660  5110               	movf	sprintf@exp& (0+255),w,b
 10699  000662  0100               	movlb	0	; () banked
 10700  000664  27EB               	addwf	??_sprintf& (0+255),f,b
 10701  000666  0101               	movlb	1	; () banked
 10702  000668  5111               	movf	(sprintf@exp+1)& (0+255),w,b
 10703  00066A  0100               	movlb	0	; () banked
 10704  00066C  23EC               	addwfc	(??_sprintf+1)& (0+255),f,b
 10705  00066E  51EB               	movf	??_sprintf& (0+255),w,b
 10706  000670  0101               	movlb	1	; () banked
 10707  000672  5F19               	subwf	sprintf@width& (0+255),f,b
 10708  000674  0100               	movlb	0	; () banked
 10709  000676  51EC               	movf	(??_sprintf+1)& (0+255),w,b
 10710  000678  0101               	movlb	1	; () banked
 10711  00067A  5B1A               	subwfb	(sprintf@width+1)& (0+255),f,b
 10712                           
 10713                           ;doprnt.c: 1143: if(
 10714                           ;doprnt.c: 1147: prec)
 10715  00067C  511D               	movf	sprintf@prec& (0+255),w,b
 10716  00067E  111E               	iorwf	(sprintf@prec+1)& (0+255),w,b
 10717  000680  B4D8               	btfsc	status,2,c
 10718  000682  D003               	goto	l2844
 10719                           
 10720                           ; BSR set to: 1
 10721                           ;doprnt.c: 1148: width--;
 10722  000684  0719               	decf	sprintf@width& (0+255),f,b
 10723  000686  A0D8               	btfss	status,0,c
 10724  000688  071A               	decf	(sprintf@width+1)& (0+255),f,b
 10725  00068A                     l2844:
 10726                           
 10727                           ; BSR set to: 1
 10728                           ;doprnt.c: 1149: if(flag & 0x03)
 10729                           
 10730                           ; BSR set to: 1
 10731  00068A  0E03               	movlw	3
 10732  00068C  151B               	andwf	sprintf@flag& (0+255),w,b
 10733  00068E  0100               	movlb	0	; () banked
 10734  000690  6FEB               	movwf	??_sprintf& (0+255),b
 10735  000692  0E00               	movlw	0
 10736  000694  0101               	movlb	1	; () banked
 10737  000696  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 10738  000698  0100               	movlb	0	; () banked
 10739  00069A  6FEC               	movwf	(??_sprintf+1)& (0+255),b
 10740  00069C  51EB               	movf	??_sprintf& (0+255),w,b
 10741  00069E  11EC               	iorwf	(??_sprintf+1)& (0+255),w,b
 10742  0006A0  B4D8               	btfsc	status,2,c
 10743  0006A2  D004               	goto	l2845
 10744                           
 10745                           ; BSR set to: 0
 10746                           ;doprnt.c: 1150: width--;
 10747  0006A4  0101               	movlb	1	; () banked
 10748  0006A6  0719               	decf	sprintf@width& (0+255),f,b
 10749  0006A8  A0D8               	btfss	status,0,c
 10750  0006AA  071A               	decf	(sprintf@width+1)& (0+255),f,b
 10751  0006AC                     l2845:
 10752                           
 10753                           ;doprnt.c: 1153: if(flag & 0x04) {
 10754                           
 10755                           ; BSR set to: 1
 10756  0006AC  0101               	movlb	1	; () banked
 10757  0006AE  A51B               	btfss	sprintf@flag& (0+255),2,b
 10758  0006B0  D039               	goto	l2852
 10759                           
 10760                           ; BSR set to: 1
 10761                           ;doprnt.c: 1157: if(flag & 0x03)
 10762  0006B2  0E03               	movlw	3
 10763  0006B4  151B               	andwf	sprintf@flag& (0+255),w,b
 10764  0006B6  0100               	movlb	0	; () banked
 10765  0006B8  6FEB               	movwf	??_sprintf& (0+255),b
 10766  0006BA  0E00               	movlw	0
 10767  0006BC  0101               	movlb	1	; () banked
 10768  0006BE  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 10769  0006C0  0100               	movlb	0	; () banked
 10770  0006C2  6FEC               	movwf	(??_sprintf+1)& (0+255),b
 10771  0006C4  51EB               	movf	??_sprintf& (0+255),w,b
 10772  0006C6  11EC               	iorwf	(??_sprintf+1)& (0+255),w,b
 10773  0006C8  B4D8               	btfsc	status,2,c
 10774  0006CA  D016               	goto	l2848
 10775                           
 10776                           ; BSR set to: 0
 10777                           ;doprnt.c: 1159: ((*sp++ = ('-')));
 10778  0006CC  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 10779  0006D0  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 10780  0006D4  0E2D               	movlw	45
 10781  0006D6  6EDF               	movwf	indf2,c
 10782                           
 10783                           ; BSR set to: 0
 10784  0006D8  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 10785  0006DA  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 10786                           
 10787                           ; BSR set to: 0
 10788                           ;doprnt.c: 1168: while(width > 0) {
 10789  0006DC  D00D               	goto	l2848
 10790  0006DE                     l9297:
 10791                           
 10792                           ;doprnt.c: 1169: ((*sp++ = ('0')));
 10793  0006DE  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 10794  0006E2  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 10795  0006E6  0E30               	movlw	48
 10796  0006E8  6EDF               	movwf	indf2,c
 10797  0006EA  0100               	movlb	0	; () banked
 10798  0006EC  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 10799  0006EE  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 10800                           
 10801                           ; BSR set to: 0
 10802                           ;doprnt.c: 1170: width--;
 10803  0006F0  0101               	movlb	1	; () banked
 10804  0006F2  0719               	decf	sprintf@width& (0+255),f,b
 10805  0006F4  A0D8               	btfss	status,0,c
 10806  0006F6  071A               	decf	(sprintf@width+1)& (0+255),f,b
 10807  0006F8                     l2848:
 10808                           
 10809                           ; BSR set to: 1
 10810  0006F8  0101               	movlb	1	; () banked
 10811  0006FA  BF1A               	btfsc	(sprintf@width+1)& (0+255),7,b
 10812  0006FC  D07B               	goto	l2856
 10813  0006FE  511A               	movf	(sprintf@width+1)& (0+255),w,b
 10814  000700  E1EE               	bnz	l9297
 10815  000702  0519               	decf	sprintf@width& (0+255),w,b
 10816  000704  A0D8               	btfss	status,0,c
 10817  000706  D076               	goto	l2856
 10818  000708  D7EA               	goto	l2849
 10819  00070A                     l9305:
 10820                           
 10821                           ; BSR set to: 1
 10822                           ;doprnt.c: 1181: ((*sp++ = (' ')));
 10823  00070A  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 10824  00070E  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 10825  000712  0E20               	movlw	32
 10826  000714  6EDF               	movwf	indf2,c
 10827                           
 10828                           ; BSR set to: 1
 10829  000716  0100               	movlb	0	; () banked
 10830  000718  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 10831  00071A  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 10832                           
 10833                           ; BSR set to: 0
 10834                           ;doprnt.c: 1182: width--;
 10835  00071C  0101               	movlb	1	; () banked
 10836  00071E  0719               	decf	sprintf@width& (0+255),f,b
 10837  000720  A0D8               	btfss	status,0,c
 10838  000722  071A               	decf	(sprintf@width+1)& (0+255),f,b
 10839  000724                     l2852:
 10840                           
 10841                           ; BSR set to: 1
 10842                           
 10843                           ; BSR set to: 1
 10844  000724  BF1A               	btfsc	(sprintf@width+1)& (0+255),7,b
 10845  000726  D005               	goto	u8320
 10846  000728  511A               	movf	(sprintf@width+1)& (0+255),w,b
 10847  00072A  E1EF               	bnz	l9305
 10848  00072C  0519               	decf	sprintf@width& (0+255),w,b
 10849  00072E  B0D8               	btfsc	status,0,c
 10850  000730  D7EC               	goto	l2853
 10851  000732                     u8320:
 10852                           
 10853                           ; BSR set to: 1
 10854                           ;doprnt.c: 1183: }
 10855                           ;doprnt.c: 1188: if(flag & 0x03)
 10856                           
 10857                           ; BSR set to: 1
 10858  000732  0E03               	movlw	3
 10859  000734  151B               	andwf	sprintf@flag& (0+255),w,b
 10860  000736  0100               	movlb	0	; () banked
 10861  000738  6FEB               	movwf	??_sprintf& (0+255),b
 10862  00073A  0E00               	movlw	0
 10863  00073C  0101               	movlb	1	; () banked
 10864  00073E  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 10865  000740  0100               	movlb	0	; () banked
 10866  000742  6FEC               	movwf	(??_sprintf+1)& (0+255),b
 10867  000744  51EB               	movf	??_sprintf& (0+255),w,b
 10868  000746  11EC               	iorwf	(??_sprintf+1)& (0+255),w,b
 10869  000748  B4D8               	btfsc	status,2,c
 10870  00074A  D054               	goto	l2856
 10871                           
 10872                           ; BSR set to: 0
 10873                           ;doprnt.c: 1190: ((*sp++ = ('-')));
 10874  00074C  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 10875  000750  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 10876  000754  0E2D               	movlw	45
 10877  000756  6EDF               	movwf	indf2,c
 10878  000758  D04B               	goto	L10
 10879  00075A                     
 10880                           ;doprnt.c: 1200: {
 10881                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 10882                           
 10883                           ; BSR set to: 0
 10884  00075A  C112  F060         	movff	sprintf@val,___lldiv@dividend
 10885  00075E  C113  F061         	movff	sprintf@val+1,___lldiv@dividend+1
 10886  000762  C114  F062         	movff	sprintf@val+2,___lldiv@dividend+2
 10887  000766  C115  F063         	movff	sprintf@val+3,___lldiv@dividend+3
 10888  00076A  0101               	movlb	1	; () banked
 10889  00076C  511F               	movf	sprintf@c& (0+255),w,b
 10890  00076E  0D04               	mullw	4
 10891  000770  0ED3               	movlw	low _dpowers
 10892  000772  24F3               	addwf	prodl,w,c
 10893  000774  6EF6               	movwf	tblptrl,c
 10894  000776  0E7B               	movlw	high _dpowers
 10895  000778  20F4               	addwfc	prodh,w,c
 10896  00077A  6EF7               	movwf	tblptrh,c
 10897  00077C                     	if	0	;There are less than 3 active tblptr bytes
 10898  00077C                     	endif
 10899  00077C  0009               	tblrd		*+
 10900  00077E  CFF5 F064          	movff	tablat,___lldiv@divisor
 10901  000782  0009               	tblrd		*+
 10902  000784  CFF5 F065          	movff	tablat,___lldiv@divisor+1
 10903  000788  0009               	tblrd		*+
 10904  00078A  CFF5 F066          	movff	tablat,___lldiv@divisor+2
 10905  00078E  000A               	tblrd		*-
 10906  000790  CFF5 F067          	movff	tablat,___lldiv@divisor+3
 10907  000794  EC47  F022         	call	___lldiv	;wreg free
 10908  000798  C060  F10C         	movff	?___lldiv,sprintf@tmpval
 10909  00079C  C061  F10D         	movff	?___lldiv+1,sprintf@tmpval+1
 10910  0007A0  C062  F10E         	movff	?___lldiv+2,sprintf@tmpval+2
 10911  0007A4  C063  F10F         	movff	?___lldiv+3,sprintf@tmpval+3
 10912                           
 10913                           ;doprnt.c: 1202: tmpval.vd %= 10;
 10914  0007A8  C10C  F06E         	movff	sprintf@tmpval,___llmod@dividend
 10915  0007AC  C10D  F06F         	movff	sprintf@tmpval+1,___llmod@dividend+1
 10916  0007B0  C10E  F070         	movff	sprintf@tmpval+2,___llmod@dividend+2
 10917  0007B4  C10F  F071         	movff	sprintf@tmpval+3,___llmod@dividend+3
 10918  0007B8  0E0A               	movlw	10
 10919  0007BA  0100               	movlb	0	; () banked
 10920  0007BC  6F72               	movwf	___llmod@divisor& (0+255),b
 10921  0007BE  0E00               	movlw	0
 10922  0007C0  6F73               	movwf	(___llmod@divisor+1)& (0+255),b
 10923  0007C2  0E00               	movlw	0
 10924  0007C4  6F74               	movwf	(___llmod@divisor+2)& (0+255),b
 10925  0007C6  0E00               	movlw	0
 10926  0007C8  6F75               	movwf	(___llmod@divisor+3)& (0+255),b
 10927  0007CA  EC76  F023         	call	___llmod	;wreg free
 10928  0007CE  C06E  F10C         	movff	?___llmod,sprintf@tmpval
 10929  0007D2  C06F  F10D         	movff	?___llmod+1,sprintf@tmpval+1
 10930  0007D6  C070  F10E         	movff	?___llmod+2,sprintf@tmpval+2
 10931  0007DA  C071  F10F         	movff	?___llmod+3,sprintf@tmpval+3
 10932                           
 10933                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
 10934  0007DE  0101               	movlb	1	; () banked
 10935  0007E0  510C               	movf	sprintf@tmpval& (0+255),w,b
 10936  0007E2  0F30               	addlw	48
 10937  0007E4  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 10938  0007E8  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 10939  0007EC  6EDF               	movwf	indf2,c
 10940                           
 10941                           ; BSR set to: 1
 10942  0007EE  0100               	movlb	0	; () banked
 10943  0007F0                     L10:
 10944  0007F0  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 10945  0007F2  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 10946  0007F4                     l2856:
 10947                           
 10948                           ; BSR set to: 0
 10949  0007F4  0101               	movlb	1	; () banked
 10950  0007F6  071F               	decf	sprintf@c& (0+255),f,b
 10951  0007F8  291F               	incf	sprintf@c& (0+255),w,b
 10952  0007FA  B4D8               	btfsc	status,2,c
 10953  0007FC  D00E               	goto	l2859
 10954  0007FE  D7AD               	goto	l2857
 10955  000800                     l9329:
 10956                           
 10957                           ; BSR set to: 1
 10958                           ;doprnt.c: 1208: ((*sp++ = ('0')));
 10959  000800  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 10960  000804  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 10961  000808  0E30               	movlw	48
 10962  00080A  6EDF               	movwf	indf2,c
 10963                           
 10964                           ; BSR set to: 1
 10965  00080C  0100               	movlb	0	; () banked
 10966  00080E  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 10967  000810  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 10968                           
 10969                           ; BSR set to: 0
 10970                           ;doprnt.c: 1209: exp--;
 10971  000812  0101               	movlb	1	; () banked
 10972  000814  0710               	decf	sprintf@exp& (0+255),f,b
 10973  000816  A0D8               	btfss	status,0,c
 10974  000818  0711               	decf	(sprintf@exp+1)& (0+255),f,b
 10975  00081A                     l2859:
 10976                           
 10977                           ; BSR set to: 1
 10978                           
 10979                           ; BSR set to: 1
 10980  00081A  BF11               	btfsc	(sprintf@exp+1)& (0+255),7,b
 10981  00081C  D005               	goto	u8350
 10982  00081E  5111               	movf	(sprintf@exp+1)& (0+255),w,b
 10983  000820  E1EF               	bnz	l9329
 10984  000822  0510               	decf	sprintf@exp& (0+255),w,b
 10985  000824  B0D8               	btfsc	status,0,c
 10986  000826  D7EC               	goto	l2860
 10987  000828                     u8350:
 10988                           
 10989                           ; BSR set to: 1
 10990                           ;doprnt.c: 1210: }
 10991                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 10992                           
 10993                           ; BSR set to: 1
 10994  000828  BF1E               	btfsc	(sprintf@prec+1)& (0+255),7,b
 10995  00082A  D009               	goto	l2862
 10996  00082C  511E               	movf	(sprintf@prec+1)& (0+255),w,b
 10997  00082E  E104               	bnz	u8360
 10998  000830  0E09               	movlw	9
 10999  000832  5D1D               	subwf	sprintf@prec& (0+255),w,b
 11000  000834  A0D8               	btfss	status,0,c
 11001  000836  D003               	goto	l2862
 11002  000838                     u8360:
 11003                           
 11004                           ; BSR set to: 1
 11005                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 11006  000838  0E08               	movlw	8
 11007  00083A  6F1F               	movwf	sprintf@c& (0+255),b
 11008  00083C  D002               	goto	l2863
 11009  00083E                     l2862:
 11010                           
 11011                           ; BSR set to: 1
 11012                           ;doprnt.c: 1213: else
 11013                           ;doprnt.c: 1214: c = prec;
 11014  00083E  C11D  F11F         	movff	sprintf@prec,sprintf@c
 11015  000842                     l2863:
 11016                           
 11017                           ; BSR set to: 1
 11018                           ;doprnt.c: 1215: prec -= c;
 11019                           
 11020                           ; BSR set to: 1
 11021  000842  511F               	movf	sprintf@c& (0+255),w,b
 11022  000844  5F1D               	subwf	sprintf@prec& (0+255),f,b
 11023  000846  0E00               	movlw	0
 11024  000848  BF1F               	btfsc	sprintf@c& (0+255),7,b
 11025  00084A  0EFF               	movlw	255
 11026  00084C  5B1E               	subwfb	(sprintf@prec+1)& (0+255),f,b
 11027                           
 11028                           ; BSR set to: 1
 11029                           ;doprnt.c: 1219: if(c)
 11030  00084E  511F               	movf	sprintf@c& (0+255),w,b
 11031  000850  B4D8               	btfsc	status,2,c
 11032  000852  D009               	goto	l2864
 11033                           
 11034                           ; BSR set to: 1
 11035                           ;doprnt.c: 1221: ((*sp++ = ('.')));
 11036  000854  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 11037  000858  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 11038  00085C  0E2E               	movlw	46
 11039  00085E  6EDF               	movwf	indf2,c
 11040                           
 11041                           ; BSR set to: 1
 11042  000860  0100               	movlb	0	; () banked
 11043  000862  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 11044  000864  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 11045  000866                     l2864:
 11046                           
 11047                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 11048                           
 11049                           ; BSR set to: 0
 11050  000866  0101               	movlb	1	; () banked
 11051  000868  511F               	movf	sprintf@c& (0+255),w,b
 11052  00086A  EC1D  F007         	call	_scale
 11053  00086E  C08F  F100         	movff	?_scale,_sprintf$5951
 11054  000872  C090  F101         	movff	?_scale+1,_sprintf$5951+1
 11055  000876  C091  F102         	movff	?_scale+2,_sprintf$5951+2
 11056                           
 11057                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 11058  00087A  C116  F083         	movff	sprintf@fval,___ftmul@f2
 11059  00087E  C117  F084         	movff	sprintf@fval+1,___ftmul@f2+1
 11060  000882  C118  F085         	movff	sprintf@fval+2,___ftmul@f2+2
 11061  000886  C100  F080         	movff	_sprintf$5951,___ftmul@f1
 11062  00088A  C101  F081         	movff	_sprintf$5951+1,___ftmul@f1+1
 11063  00088E  C102  F082         	movff	_sprintf$5951+2,___ftmul@f1+2
 11064  000892  ECF6  F018         	call	___ftmul	;wreg free
 11065  000896  C080  F0B0         	movff	?___ftmul,___fttol@f1
 11066  00089A  C081  F0B1         	movff	?___ftmul+1,___fttol@f1+1
 11067  00089E  C082  F0B2         	movff	?___ftmul+2,___fttol@f1+2
 11068  0008A2  EC7A  F018         	call	___fttol	;wreg free
 11069  0008A6  C0B0  F112         	movff	?___fttol,sprintf@val
 11070  0008AA  C0B1  F113         	movff	?___fttol+1,sprintf@val+1
 11071  0008AE  C0B2  F114         	movff	?___fttol+2,sprintf@val+2
 11072  0008B2  C0B3  F115         	movff	?___fttol+3,sprintf@val+3
 11073                           
 11074                           ;doprnt.c: 1228: while(c--) {
 11075  0008B6  D074               	goto	l2865
 11076  0008B8                     
 11077                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 11078  0008B8  C112  F060         	movff	sprintf@val,___lldiv@dividend
 11079  0008BC  C113  F061         	movff	sprintf@val+1,___lldiv@dividend+1
 11080  0008C0  C114  F062         	movff	sprintf@val+2,___lldiv@dividend+2
 11081  0008C4  C115  F063         	movff	sprintf@val+3,___lldiv@dividend+3
 11082  0008C8  0101               	movlb	1	; () banked
 11083  0008CA  511F               	movf	sprintf@c& (0+255),w,b
 11084  0008CC  0D04               	mullw	4
 11085  0008CE  0ED3               	movlw	low _dpowers
 11086  0008D0  24F3               	addwf	prodl,w,c
 11087  0008D2  6EF6               	movwf	tblptrl,c
 11088  0008D4  0E7B               	movlw	high _dpowers
 11089  0008D6  20F4               	addwfc	prodh,w,c
 11090  0008D8  6EF7               	movwf	tblptrh,c
 11091  0008DA                     	if	0	;There are less than 3 active tblptr bytes
 11092  0008DA                     	endif
 11093  0008DA  0009               	tblrd		*+
 11094  0008DC  CFF5 F064          	movff	tablat,___lldiv@divisor
 11095  0008E0  0009               	tblrd		*+
 11096  0008E2  CFF5 F065          	movff	tablat,___lldiv@divisor+1
 11097  0008E6  0009               	tblrd		*+
 11098  0008E8  CFF5 F066          	movff	tablat,___lldiv@divisor+2
 11099  0008EC  000A               	tblrd		*-
 11100  0008EE  CFF5 F067          	movff	tablat,___lldiv@divisor+3
 11101  0008F2  EC47  F022         	call	___lldiv	;wreg free
 11102  0008F6  C060  F10C         	movff	?___lldiv,sprintf@tmpval
 11103  0008FA  C061  F10D         	movff	?___lldiv+1,sprintf@tmpval+1
 11104  0008FE  C062  F10E         	movff	?___lldiv+2,sprintf@tmpval+2
 11105  000902  C063  F10F         	movff	?___lldiv+3,sprintf@tmpval+3
 11106                           
 11107                           ;doprnt.c: 1230: tmpval.vd %= 10;
 11108  000906  C10C  F06E         	movff	sprintf@tmpval,___llmod@dividend
 11109  00090A  C10D  F06F         	movff	sprintf@tmpval+1,___llmod@dividend+1
 11110  00090E  C10E  F070         	movff	sprintf@tmpval+2,___llmod@dividend+2
 11111  000912  C10F  F071         	movff	sprintf@tmpval+3,___llmod@dividend+3
 11112  000916  0E0A               	movlw	10
 11113  000918  0100               	movlb	0	; () banked
 11114  00091A  6F72               	movwf	___llmod@divisor& (0+255),b
 11115  00091C  0E00               	movlw	0
 11116  00091E  6F73               	movwf	(___llmod@divisor+1)& (0+255),b
 11117  000920  0E00               	movlw	0
 11118  000922  6F74               	movwf	(___llmod@divisor+2)& (0+255),b
 11119  000924  0E00               	movlw	0
 11120  000926  6F75               	movwf	(___llmod@divisor+3)& (0+255),b
 11121  000928  EC76  F023         	call	___llmod	;wreg free
 11122  00092C  C06E  F10C         	movff	?___llmod,sprintf@tmpval
 11123  000930  C06F  F10D         	movff	?___llmod+1,sprintf@tmpval+1
 11124  000934  C070  F10E         	movff	?___llmod+2,sprintf@tmpval+2
 11125  000938  C071  F10F         	movff	?___llmod+3,sprintf@tmpval+3
 11126                           
 11127                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
 11128  00093C  0101               	movlb	1	; () banked
 11129  00093E  510C               	movf	sprintf@tmpval& (0+255),w,b
 11130  000940  0F30               	addlw	48
 11131  000942  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 11132  000946  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 11133  00094A  6EDF               	movwf	indf2,c
 11134                           
 11135                           ; BSR set to: 1
 11136  00094C  0100               	movlb	0	; () banked
 11137  00094E  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 11138  000950  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 11139                           
 11140                           ; BSR set to: 0
 11141                           ;doprnt.c: 1232: val %= dpowers[c];
 11142  000952  C112  F06E         	movff	sprintf@val,___llmod@dividend
 11143  000956  C113  F06F         	movff	sprintf@val+1,___llmod@dividend+1
 11144  00095A  C114  F070         	movff	sprintf@val+2,___llmod@dividend+2
 11145  00095E  C115  F071         	movff	sprintf@val+3,___llmod@dividend+3
 11146  000962  0101               	movlb	1	; () banked
 11147  000964  511F               	movf	sprintf@c& (0+255),w,b
 11148  000966  0D04               	mullw	4
 11149  000968  0ED3               	movlw	low _dpowers
 11150  00096A  24F3               	addwf	prodl,w,c
 11151  00096C  6EF6               	movwf	tblptrl,c
 11152  00096E  0E7B               	movlw	high _dpowers
 11153  000970  20F4               	addwfc	prodh,w,c
 11154  000972  6EF7               	movwf	tblptrh,c
 11155  000974                     	if	0	;There are less than 3 active tblptr bytes
 11156  000974                     	endif
 11157  000974  0009               	tblrd		*+
 11158  000976  CFF5 F072          	movff	tablat,___llmod@divisor
 11159  00097A  0009               	tblrd		*+
 11160  00097C  CFF5 F073          	movff	tablat,___llmod@divisor+1
 11161  000980  0009               	tblrd		*+
 11162  000982  CFF5 F074          	movff	tablat,___llmod@divisor+2
 11163  000986  000A               	tblrd		*-
 11164  000988  CFF5 F075          	movff	tablat,___llmod@divisor+3
 11165  00098C  EC76  F023         	call	___llmod	;wreg free
 11166  000990  C06E  F112         	movff	?___llmod,sprintf@val
 11167  000994  C06F  F113         	movff	?___llmod+1,sprintf@val+1
 11168  000998  C070  F114         	movff	?___llmod+2,sprintf@val+2
 11169  00099C  C071  F115         	movff	?___llmod+3,sprintf@val+3
 11170  0009A0                     l2865:
 11171  0009A0  0101               	movlb	1	; () banked
 11172  0009A2  071F               	decf	sprintf@c& (0+255),f,b
 11173  0009A4  291F               	incf	sprintf@c& (0+255),w,b
 11174  0009A6  B4D8               	btfsc	status,2,c
 11175  0009A8  D00E               	goto	l2868
 11176  0009AA  D786               	goto	l2866
 11177  0009AC                     
 11178                           ; BSR set to: 1
 11179                           ;doprnt.c: 1236: ((*sp++ = ('0')));
 11180                           
 11181                           ; BSR set to: 1
 11182  0009AC  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 11183  0009B0  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 11184  0009B4  0E30               	movlw	48
 11185  0009B6  6EDF               	movwf	indf2,c
 11186                           
 11187                           ; BSR set to: 1
 11188  0009B8  0100               	movlb	0	; () banked
 11189  0009BA  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 11190  0009BC  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 11191                           
 11192                           ; BSR set to: 0
 11193                           ;doprnt.c: 1237: prec--;
 11194  0009BE  0101               	movlb	1	; () banked
 11195  0009C0  071D               	decf	sprintf@prec& (0+255),f,b
 11196  0009C2  A0D8               	btfss	status,0,c
 11197  0009C4  071E               	decf	(sprintf@prec+1)& (0+255),f,b
 11198  0009C6                     l2868:
 11199                           
 11200                           ; BSR set to: 1
 11201                           
 11202                           ; BSR set to: 1
 11203  0009C6  511D               	movf	sprintf@prec& (0+255),w,b
 11204  0009C8  111E               	iorwf	(sprintf@prec+1)& (0+255),w,b
 11205  0009CA  B4D8               	btfsc	status,2,c
 11206  0009CC  D220               	goto	u8670
 11207  0009CE  D7EE               	goto	l2869
 11208  0009D0                     l2822:
 11209                           
 11210                           ; BSR set to: 1
 11211                           ;doprnt.c: 1246: }
 11212                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 11213                           
 11214                           ; BSR set to: 1
 11215  0009D0  0EC0               	movlw	192
 11216  0009D2  151B               	andwf	sprintf@flag& (0+255),w,b
 11217  0009D4  0100               	movlb	0	; () banked
 11218  0009D6  6FEB               	movwf	??_sprintf& (0+255),b
 11219  0009D8  0E00               	movlw	0
 11220  0009DA  0101               	movlb	1	; () banked
 11221  0009DC  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 11222  0009DE  0100               	movlb	0	; () banked
 11223  0009E0  6FEC               	movwf	(??_sprintf+1)& (0+255),b
 11224  0009E2  51EB               	movf	??_sprintf& (0+255),w,b
 11225  0009E4  11EC               	iorwf	(??_sprintf+1)& (0+255),w,b
 11226  0009E6  A4D8               	btfss	status,2,c
 11227  0009E8  D02F               	goto	l2871
 11228                           
 11229                           ; BSR set to: 0
 11230                           ;doprnt.c: 1253: {
 11231                           ;doprnt.c: 1255: if(flag & 0x10)
 11232  0009EA  0101               	movlb	1	; () banked
 11233  0009EC  A91B               	btfss	sprintf@flag& (0+255),4,b
 11234  0009EE  D00E               	goto	l2872
 11235                           
 11236                           ; BSR set to: 1
 11237                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 11238  0009F0  C10A  FFD9         	movff	sprintf@ap,fsr2l
 11239  0009F4  C10B  FFDA         	movff	sprintf@ap+1,fsr2h
 11240  0009F8  CFDE F112          	movff	postinc2,sprintf@val
 11241  0009FC  CFDE F113          	movff	postinc2,sprintf@val+1
 11242  000A00  CFDE F114          	movff	postinc2,sprintf@val+2
 11243  000A04  CFDE F115          	movff	postinc2,sprintf@val+3
 11244                           
 11245                           ; BSR set to: 1
 11246  000A08  0E04               	movlw	4
 11247  000A0A  D00E               	goto	L11
 11248  000A0C                     l2872:
 11249                           
 11250                           ; BSR set to: 1
 11251                           ;doprnt.c: 1257: else
 11252                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 11253                           
 11254                           ; BSR set to: 1
 11255  000A0C  C10A  FFD9         	movff	sprintf@ap,fsr2l
 11256  000A10  C10B  FFDA         	movff	sprintf@ap+1,fsr2h
 11257  000A14  CFDE F112          	movff	postinc2,sprintf@val
 11258  000A18  CFDD F113          	movff	postdec2,sprintf@val+1
 11259  000A1C  0E00               	movlw	0
 11260  000A1E  BF13               	btfsc	(sprintf@val+1)& (0+255),7,b
 11261  000A20  0EFF               	movlw	-1
 11262  000A22  6F14               	movwf	(sprintf@val+2)& (0+255),b
 11263  000A24  6F15               	movwf	(sprintf@val+3)& (0+255),b
 11264                           
 11265                           ; BSR set to: 1
 11266  000A26  0E02               	movlw	2
 11267  000A28                     L11:
 11268  000A28  270A               	addwf	sprintf@ap& (0+255),f,b
 11269  000A2A  0E00               	movlw	0
 11270  000A2C  230B               	addwfc	(sprintf@ap+1)& (0+255),f,b
 11271                           
 11272                           ; BSR set to: 1
 11273                           ;doprnt.c: 1261: if((long)val < 0) {
 11274                           
 11275                           ; BSR set to: 1
 11276  000A2E  AF15               	btfss	(sprintf@val+3)& (0+255),7,b
 11277  000A30  D02E               	goto	l2877
 11278                           
 11279                           ; BSR set to: 1
 11280                           ;doprnt.c: 1262: flag |= 0x03;
 11281  000A32  0E03               	movlw	3
 11282  000A34  131B               	iorwf	sprintf@flag& (0+255),f,b
 11283                           
 11284                           ; BSR set to: 1
 11285                           ;doprnt.c: 1263: val = -val;
 11286  000A36  1F15               	comf	(sprintf@val+3)& (0+255),f,b
 11287  000A38  1F14               	comf	(sprintf@val+2)& (0+255),f,b
 11288  000A3A  1F13               	comf	(sprintf@val+1)& (0+255),f,b
 11289  000A3C  6D12               	negf	sprintf@val& (0+255),b
 11290  000A3E  0E00               	movlw	0
 11291  000A40  2313               	addwfc	(sprintf@val+1)& (0+255),f,b
 11292  000A42  2314               	addwfc	(sprintf@val+2)& (0+255),f,b
 11293  000A44  2315               	addwfc	(sprintf@val+3)& (0+255),f,b
 11294                           
 11295                           ; BSR set to: 1
 11296                           ;doprnt.c: 1264: }
 11297                           ;doprnt.c: 1266: }
 11298  000A46  D023               	goto	l2877
 11299  000A48                     l2871:
 11300                           
 11301                           ; BSR set to: 0
 11302                           ;doprnt.c: 1268: else
 11303                           ;doprnt.c: 1273: {
 11304                           ;doprnt.c: 1281: if(flag & 0x10)
 11305  000A48  0101               	movlb	1	; () banked
 11306  000A4A  A91B               	btfss	sprintf@flag& (0+255),4,b
 11307  000A4C  D00E               	goto	l2876
 11308                           
 11309                           ; BSR set to: 1
 11310                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
 11311  000A4E  C10A  FFD9         	movff	sprintf@ap,fsr2l
 11312  000A52  C10B  FFDA         	movff	sprintf@ap+1,fsr2h
 11313  000A56  CFDE F112          	movff	postinc2,sprintf@val
 11314  000A5A  CFDE F113          	movff	postinc2,sprintf@val+1
 11315  000A5E  CFDE F114          	movff	postinc2,sprintf@val+2
 11316  000A62  CFDE F115          	movff	postinc2,sprintf@val+3
 11317                           
 11318                           ; BSR set to: 1
 11319  000A66  0E04               	movlw	4
 11320  000A68  D00F               	goto	L12
 11321  000A6A                     l2876:
 11322                           
 11323                           ; BSR set to: 1
 11324                           ;doprnt.c: 1283: else
 11325                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 11326                           
 11327                           ; BSR set to: 1
 11328  000A6A  C10A  FFD9         	movff	sprintf@ap,fsr2l
 11329  000A6E  C10B  FFDA         	movff	sprintf@ap+1,fsr2h
 11330  000A72  CFDE F0EB          	movff	postinc2,??_sprintf
 11331  000A76  CFDD F0EC          	movff	postdec2,??_sprintf+1
 11332  000A7A  C0EB  F112         	movff	??_sprintf,sprintf@val
 11333  000A7E  C0EC  F113         	movff	??_sprintf+1,sprintf@val+1
 11334  000A82  6B14               	clrf	(sprintf@val+2)& (0+255),b
 11335  000A84  6B15               	clrf	(sprintf@val+3)& (0+255),b
 11336                           
 11337                           ; BSR set to: 1
 11338  000A86  0E02               	movlw	2
 11339  000A88                     L12:
 11340  000A88  270A               	addwf	sprintf@ap& (0+255),f,b
 11341  000A8A  0E00               	movlw	0
 11342  000A8C  230B               	addwfc	(sprintf@ap+1)& (0+255),f,b
 11343  000A8E                     l2877:
 11344                           
 11345                           ; BSR set to: 1
 11346                           ;doprnt.c: 1287: }
 11347                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 11348                           
 11349                           ; BSR set to: 1
 11350                           
 11351                           ; BSR set to: 1
 11352  000A8E  511D               	movf	sprintf@prec& (0+255),w,b
 11353  000A90  111E               	iorwf	(sprintf@prec+1)& (0+255),w,b
 11354  000A92  A4D8               	btfss	status,2,c
 11355  000A94  D045               	goto	l2879
 11356                           
 11357                           ; BSR set to: 1
 11358  000A96  5112               	movf	sprintf@val& (0+255),w,b
 11359  000A98  1113               	iorwf	(sprintf@val+1)& (0+255),w,b
 11360  000A9A  1114               	iorwf	(sprintf@val+2)& (0+255),w,b
 11361  000A9C  1115               	iorwf	(sprintf@val+3)& (0+255),w,b
 11362  000A9E  A4D8               	btfss	status,2,c
 11363  000AA0  D03F               	goto	l2879
 11364                           
 11365                           ; BSR set to: 1
 11366                           ;doprnt.c: 1291: prec++;
 11367  000AA2  4B1D               	infsnz	sprintf@prec& (0+255),f,b
 11368  000AA4  2B1E               	incf	(sprintf@prec+1)& (0+255),f,b
 11369                           
 11370                           ; BSR set to: 1
 11371                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 11372  000AA6  D03C               	goto	l2879
 11373  000AA8                     
 11374                           ; BSR set to: 1
 11375                           ;doprnt.c: 1302: case 0xC0:
 11376                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 11377                           
 11378                           ; BSR set to: 1
 11379                           
 11380                           ; BSR set to: 1
 11381  000AA8  0E01               	movlw	1
 11382  000AAA  6F1F               	movwf	sprintf@c& (0+255),b
 11383  000AAC                     l9407:
 11384                           
 11385                           ; BSR set to: 1
 11386  000AAC  0E0A               	movlw	10
 11387  000AAE  191F               	xorwf	sprintf@c& (0+255),w,b
 11388  000AB0  B4D8               	btfsc	status,2,c
 11389  000AB2  D041               	goto	l2885
 11390                           
 11391                           ; BSR set to: 1
 11392                           ;doprnt.c: 1306: if(val < dpowers[c])
 11393                           
 11394                           ; BSR set to: 1
 11395                           
 11396                           ; BSR set to: 1
 11397  000AB4  511F               	movf	sprintf@c& (0+255),w,b
 11398  000AB6  0D04               	mullw	4
 11399  000AB8  0ED3               	movlw	low _dpowers
 11400  000ABA  24F3               	addwf	prodl,w,c
 11401  000ABC  6EF6               	movwf	tblptrl,c
 11402  000ABE  0E7B               	movlw	high _dpowers
 11403  000AC0  20F4               	addwfc	prodh,w,c
 11404  000AC2  6EF7               	movwf	tblptrh,c
 11405  000AC4                     	if	0	;There are less than 3 active tblptr bytes
 11406  000AC4                     	endif
 11407  000AC4  0009               	tblrd		*+
 11408  000AC6  50F5               	movf	tablat,w,c
 11409  000AC8  5D12               	subwf	sprintf@val& (0+255),w,b
 11410  000ACA  0009               	tblrd		*+
 11411  000ACC  50F5               	movf	tablat,w,c
 11412  000ACE  5913               	subwfb	(sprintf@val+1)& (0+255),w,b
 11413  000AD0  0009               	tblrd		*+
 11414  000AD2  50F5               	movf	tablat,w,c
 11415  000AD4  5914               	subwfb	(sprintf@val+2)& (0+255),w,b
 11416  000AD6  0009               	tblrd		*+
 11417  000AD8  50F5               	movf	tablat,w,c
 11418  000ADA  5915               	subwfb	(sprintf@val+3)& (0+255),w,b
 11419  000ADC  A0D8               	btfss	status,0,c
 11420  000ADE  D02B               	goto	l2885
 11421                           
 11422                           ; BSR set to: 1
 11423                           
 11424                           ; BSR set to: 1
 11425                           
 11426                           ; BSR set to: 1
 11427                           ;doprnt.c: 1307: break;
 11428  000AE0  2B1F               	incf	sprintf@c& (0+255),f,b
 11429  000AE2  D7E4               	goto	l9407
 11430  000AE4                     
 11431                           ; BSR set to: 1
 11432                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 11433                           
 11434                           ; BSR set to: 1
 11435  000AE4  0E01               	movlw	1
 11436  000AE6  6F1F               	movwf	sprintf@c& (0+255),b
 11437  000AE8                     l9421:
 11438                           
 11439                           ; BSR set to: 1
 11440  000AE8  0E08               	movlw	8
 11441  000AEA  191F               	xorwf	sprintf@c& (0+255),w,b
 11442  000AEC  B4D8               	btfsc	status,2,c
 11443  000AEE  D023               	goto	l2885
 11444                           
 11445                           ; BSR set to: 1
 11446                           ;doprnt.c: 1317: if(val < hexpowers[c])
 11447                           
 11448                           ; BSR set to: 1
 11449                           
 11450                           ; BSR set to: 1
 11451  000AF0  511F               	movf	sprintf@c& (0+255),w,b
 11452  000AF2  0D04               	mullw	4
 11453  000AF4  0E49               	movlw	low _hexpowers
 11454  000AF6  24F3               	addwf	prodl,w,c
 11455  000AF8  6EF6               	movwf	tblptrl,c
 11456  000AFA  0E7C               	movlw	high _hexpowers
 11457  000AFC  20F4               	addwfc	prodh,w,c
 11458  000AFE  6EF7               	movwf	tblptrh,c
 11459  000B00                     	if	0	;There are less than 3 active tblptr bytes
 11460  000B00                     	endif
 11461  000B00  0009               	tblrd		*+
 11462  000B02  50F5               	movf	tablat,w,c
 11463  000B04  5D12               	subwf	sprintf@val& (0+255),w,b
 11464  000B06  0009               	tblrd		*+
 11465  000B08  50F5               	movf	tablat,w,c
 11466  000B0A  5913               	subwfb	(sprintf@val+1)& (0+255),w,b
 11467  000B0C  0009               	tblrd		*+
 11468  000B0E  50F5               	movf	tablat,w,c
 11469  000B10  5914               	subwfb	(sprintf@val+2)& (0+255),w,b
 11470  000B12  0009               	tblrd		*+
 11471  000B14  50F5               	movf	tablat,w,c
 11472  000B16  5915               	subwfb	(sprintf@val+3)& (0+255),w,b
 11473  000B18  A0D8               	btfss	status,0,c
 11474  000B1A  D00D               	goto	l2885
 11475                           
 11476                           ; BSR set to: 1
 11477                           
 11478                           ; BSR set to: 1
 11479                           
 11480                           ; BSR set to: 1
 11481                           ;doprnt.c: 1318: break;
 11482  000B1C  2B1F               	incf	sprintf@c& (0+255),f,b
 11483  000B1E  D7E4               	goto	l9421
 11484  000B20                     l2879:
 11485                           
 11486                           ; BSR set to: 1
 11487                           
 11488                           ; BSR set to: 1
 11489  000B20  511B               	movf	sprintf@flag& (0+255),w,b
 11490  000B22  0BC0               	andlw	192
 11491                           
 11492                           ; Switch size 1, requested type "space"
 11493                           ; Number of cases is 3, Range of values is 0 to 192
 11494                           ; switch strategies available:
 11495                           ; Name         Instructions Cycles
 11496                           ; simple_byte           10     6 (average)
 11497                           ;	Chosen strategy is simple_byte
 11498  000B24  0A00               	xorlw	0	; case 0
 11499  000B26  B4D8               	btfsc	status,2,c
 11500  000B28  D7BF               	goto	l2880
 11501  000B2A  0A80               	xorlw	128	; case 128
 11502  000B2C  B4D8               	btfsc	status,2,c
 11503  000B2E  D7DA               	goto	l2886
 11504  000B30  0A40               	xorlw	64	; case 192
 11505  000B32  B4D8               	btfsc	status,2,c
 11506  000B34  D7B9               	goto	l2880
 11507  000B36                     l2885:
 11508                           
 11509                           ; BSR set to: 1
 11510                           ;doprnt.c: 1339: if(c < prec)
 11511                           
 11512                           ; BSR set to: 1
 11513  000B36  0E80               	movlw	128
 11514  000B38  BF1F               	btfsc	sprintf@c& (0+255),7,b
 11515  000B3A  0E7F               	movlw	127
 11516  000B3C  0100               	movlb	0	; () banked
 11517  000B3E  6FEB               	movwf	??_sprintf& (0+255),b
 11518  000B40  0101               	movlb	1	; () banked
 11519  000B42  511D               	movf	sprintf@prec& (0+255),w,b
 11520  000B44  5D1F               	subwf	sprintf@c& (0+255),w,b
 11521  000B46  511E               	movf	(sprintf@prec+1)& (0+255),w,b
 11522  000B48  0A80               	xorlw	128
 11523  000B4A  0100               	movlb	0	; () banked
 11524  000B4C  59EB               	subwfb	??_sprintf& (0+255),w,b
 11525  000B4E  B0D8               	btfsc	status,0,c
 11526  000B50  D003               	goto	l2890
 11527                           
 11528                           ; BSR set to: 0
 11529                           ;doprnt.c: 1340: c = prec;
 11530  000B52  C11D  F11F         	movff	sprintf@prec,sprintf@c
 11531  000B56  D015               	goto	l2892
 11532  000B58                     l2890:
 11533                           
 11534                           ; BSR set to: 0
 11535                           ;doprnt.c: 1341: else if(prec < c)
 11536                           
 11537                           ; BSR set to: 0
 11538  000B58  0101               	movlb	1	; () banked
 11539  000B5A  511E               	movf	(sprintf@prec+1)& (0+255),w,b
 11540  000B5C  0A80               	xorlw	128
 11541  000B5E  0100               	movlb	0	; () banked
 11542  000B60  6FEB               	movwf	??_sprintf& (0+255),b
 11543  000B62  0101               	movlb	1	; () banked
 11544  000B64  511F               	movf	sprintf@c& (0+255),w,b
 11545  000B66  5D1D               	subwf	sprintf@prec& (0+255),w,b
 11546  000B68  0E80               	movlw	128
 11547  000B6A  BF1F               	btfsc	sprintf@c& (0+255),7,b
 11548  000B6C  0E7F               	movlw	127
 11549  000B6E  0100               	movlb	0	; () banked
 11550  000B70  59EB               	subwfb	??_sprintf& (0+255),w,b
 11551  000B72  B0D8               	btfsc	status,0,c
 11552  000B74  D006               	goto	l2892
 11553                           
 11554                           ; BSR set to: 0
 11555                           ;doprnt.c: 1342: prec = c;
 11556  000B76  0101               	movlb	1	; () banked
 11557  000B78  511F               	movf	sprintf@c& (0+255),w,b
 11558  000B7A  6F1D               	movwf	sprintf@prec& (0+255),b
 11559  000B7C  6B1E               	clrf	(sprintf@prec+1)& (0+255),b
 11560  000B7E  BF1D               	btfsc	sprintf@prec& (0+255),7,b
 11561  000B80  071E               	decf	(sprintf@prec+1)& (0+255),f,b
 11562  000B82                     l2892:
 11563                           
 11564                           ;doprnt.c: 1345: if(width && flag & 0x03)
 11565                           
 11566                           ; BSR set to: 1
 11567                           
 11568                           ; BSR set to: 1
 11569  000B82  0101               	movlb	1	; () banked
 11570  000B84  5119               	movf	sprintf@width& (0+255),w,b
 11571  000B86  111A               	iorwf	(sprintf@width+1)& (0+255),w,b
 11572  000B88  B4D8               	btfsc	status,2,c
 11573  000B8A  D011               	goto	l2893
 11574                           
 11575                           ; BSR set to: 1
 11576  000B8C  0E03               	movlw	3
 11577  000B8E  151B               	andwf	sprintf@flag& (0+255),w,b
 11578  000B90  0100               	movlb	0	; () banked
 11579  000B92  6FEB               	movwf	??_sprintf& (0+255),b
 11580  000B94  0E00               	movlw	0
 11581  000B96  0101               	movlb	1	; () banked
 11582  000B98  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 11583  000B9A  0100               	movlb	0	; () banked
 11584  000B9C  6FEC               	movwf	(??_sprintf+1)& (0+255),b
 11585  000B9E  51EB               	movf	??_sprintf& (0+255),w,b
 11586  000BA0  11EC               	iorwf	(??_sprintf+1)& (0+255),w,b
 11587  000BA2  B4D8               	btfsc	status,2,c
 11588  000BA4  D004               	goto	l2893
 11589                           
 11590                           ; BSR set to: 0
 11591                           ;doprnt.c: 1346: width--;
 11592  000BA6  0101               	movlb	1	; () banked
 11593  000BA8  0719               	decf	sprintf@width& (0+255),f,b
 11594  000BAA  A0D8               	btfss	status,0,c
 11595  000BAC  071A               	decf	(sprintf@width+1)& (0+255),f,b
 11596  000BAE                     l2893:
 11597                           
 11598                           ;doprnt.c: 1348: if(flag & 0x4000) {
 11599                           
 11600                           ; BSR set to: 1
 11601  000BAE  0101               	movlb	1	; () banked
 11602  000BB0  AD1C               	btfss	(sprintf@flag+1)& (0+255),6,b
 11603  000BB2  D018               	goto	l2896
 11604                           
 11605                           ; BSR set to: 1
 11606                           ;doprnt.c: 1349: if(width > prec)
 11607  000BB4  5119               	movf	sprintf@width& (0+255),w,b
 11608  000BB6  5D1D               	subwf	sprintf@prec& (0+255),w,b
 11609  000BB8  511E               	movf	(sprintf@prec+1)& (0+255),w,b
 11610  000BBA  0A80               	xorlw	128
 11611  000BBC  0100               	movlb	0	; () banked
 11612  000BBE  6FEB               	movwf	??_sprintf& (0+255),b
 11613  000BC0  0101               	movlb	1	; () banked
 11614  000BC2  511A               	movf	(sprintf@width+1)& (0+255),w,b
 11615  000BC4  0A80               	xorlw	128
 11616  000BC6  0100               	movlb	0	; () banked
 11617  000BC8  59EB               	subwfb	??_sprintf& (0+255),w,b
 11618  000BCA  B0D8               	btfsc	status,0,c
 11619  000BCC  D006               	goto	l2895
 11620                           
 11621                           ; BSR set to: 0
 11622                           ;doprnt.c: 1350: width -= prec;
 11623  000BCE  0101               	movlb	1	; () banked
 11624  000BD0  511D               	movf	sprintf@prec& (0+255),w,b
 11625  000BD2  5F19               	subwf	sprintf@width& (0+255),f,b
 11626  000BD4  511E               	movf	(sprintf@prec+1)& (0+255),w,b
 11627  000BD6  5B1A               	subwfb	(sprintf@width+1)& (0+255),f,b
 11628  000BD8  D005               	goto	l2896
 11629  000BDA                     l2895:
 11630                           
 11631                           ;doprnt.c: 1351: else
 11632                           ;doprnt.c: 1352: width = 0;
 11633                           
 11634                           ; BSR set to: 1
 11635  000BDA  0E00               	movlw	0
 11636  000BDC  0101               	movlb	1	; () banked
 11637  000BDE  6F1A               	movwf	(sprintf@width+1)& (0+255),b
 11638  000BE0  0E00               	movlw	0
 11639  000BE2  6F19               	movwf	sprintf@width& (0+255),b
 11640  000BE4                     l2896:
 11641                           
 11642                           ; BSR set to: 1
 11643                           ;doprnt.c: 1353: }
 11644                           ;doprnt.c: 1381: if(width > c)
 11645                           
 11646                           ; BSR set to: 1
 11647                           
 11648                           ; BSR set to: 1
 11649  000BE4  0E80               	movlw	128
 11650  000BE6  BF1F               	btfsc	sprintf@c& (0+255),7,b
 11651  000BE8  0E7F               	movlw	127
 11652  000BEA  0100               	movlb	0	; () banked
 11653  000BEC  6FEB               	movwf	??_sprintf& (0+255),b
 11654  000BEE  0101               	movlb	1	; () banked
 11655  000BF0  5119               	movf	sprintf@width& (0+255),w,b
 11656  000BF2  5D1F               	subwf	sprintf@c& (0+255),w,b
 11657  000BF4  511A               	movf	(sprintf@width+1)& (0+255),w,b
 11658  000BF6  0A80               	xorlw	128
 11659  000BF8  0100               	movlb	0	; () banked
 11660  000BFA  59EB               	subwfb	??_sprintf& (0+255),w,b
 11661  000BFC  B0D8               	btfsc	status,0,c
 11662  000BFE  D008               	goto	l2897
 11663                           
 11664                           ; BSR set to: 0
 11665                           ;doprnt.c: 1382: width -= c;
 11666  000C00  0101               	movlb	1	; () banked
 11667  000C02  511F               	movf	sprintf@c& (0+255),w,b
 11668  000C04  5F19               	subwf	sprintf@width& (0+255),f,b
 11669  000C06  0E00               	movlw	0
 11670  000C08  BF1F               	btfsc	sprintf@c& (0+255),7,b
 11671  000C0A  0EFF               	movlw	255
 11672  000C0C  5B1A               	subwfb	(sprintf@width+1)& (0+255),f,b
 11673  000C0E  D005               	goto	l2898
 11674  000C10                     l2897:
 11675                           
 11676                           ;doprnt.c: 1383: else
 11677                           ;doprnt.c: 1384: width = 0;
 11678                           
 11679                           ; BSR set to: 1
 11680  000C10  0E00               	movlw	0
 11681  000C12  0101               	movlb	1	; () banked
 11682  000C14  6F1A               	movwf	(sprintf@width+1)& (0+255),b
 11683  000C16  0E00               	movlw	0
 11684  000C18  6F19               	movwf	sprintf@width& (0+255),b
 11685  000C1A                     l2898:
 11686                           
 11687                           ; BSR set to: 1
 11688                           ;doprnt.c: 1387: if(flag & 0x04) {
 11689                           
 11690                           ; BSR set to: 1
 11691  000C1A  A51B               	btfss	sprintf@flag& (0+255),2,b
 11692  000C1C  D028               	goto	l2899
 11693                           
 11694                           ; BSR set to: 1
 11695                           ;doprnt.c: 1392: if(flag & 0x03)
 11696  000C1E  0E03               	movlw	3
 11697  000C20  151B               	andwf	sprintf@flag& (0+255),w,b
 11698  000C22  0100               	movlb	0	; () banked
 11699  000C24  6FEB               	movwf	??_sprintf& (0+255),b
 11700  000C26  0E00               	movlw	0
 11701  000C28  0101               	movlb	1	; () banked
 11702  000C2A  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 11703  000C2C  0100               	movlb	0	; () banked
 11704  000C2E  6FEC               	movwf	(??_sprintf+1)& (0+255),b
 11705  000C30  51EB               	movf	??_sprintf& (0+255),w,b
 11706  000C32  11EC               	iorwf	(??_sprintf+1)& (0+255),w,b
 11707  000C34  B4D8               	btfsc	status,2,c
 11708  000C36  D008               	goto	l2900
 11709                           
 11710                           ; BSR set to: 0
 11711                           ;doprnt.c: 1393: ((*sp++ = ('-')));
 11712  000C38  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 11713  000C3C  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 11714  000C40  0E2D               	movlw	45
 11715  000C42  6EDF               	movwf	indf2,c
 11716                           
 11717                           ; BSR set to: 0
 11718  000C44  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 11719  000C46  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 11720  000C48                     l2900:
 11721                           
 11722                           ; BSR set to: 0
 11723                           ;doprnt.c: 1415: if(width)
 11724                           
 11725                           ; BSR set to: 0
 11726  000C48  0101               	movlb	1	; () banked
 11727  000C4A  5119               	movf	sprintf@width& (0+255),w,b
 11728  000C4C  111A               	iorwf	(sprintf@width+1)& (0+255),w,b
 11729  000C4E  B4D8               	btfsc	status,2,c
 11730  000C50  D0D5               	goto	l2909
 11731                           
 11732                           ; BSR set to: 1
 11733                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 11734                           
 11735                           ; BSR set to: 1
 11736                           
 11737                           ;doprnt.c: 1416: do
 11738  000C52  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 11739  000C56  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 11740  000C5A  0E30               	movlw	48
 11741  000C5C  6EDF               	movwf	indf2,c
 11742                           
 11743                           ; BSR set to: 1
 11744  000C5E  0100               	movlb	0	; () banked
 11745  000C60  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 11746  000C62  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 11747                           
 11748                           ; BSR set to: 0
 11749                           ;doprnt.c: 1418: while(--width);
 11750  000C64  0101               	movlb	1	; () banked
 11751  000C66  0719               	decf	sprintf@width& (0+255),f,b
 11752  000C68  A0D8               	btfss	status,0,c
 11753  000C6A  071A               	decf	(sprintf@width+1)& (0+255),f,b
 11754  000C6C  D7EE               	goto	L31
 11755  000C6E                     l2899:
 11756                           
 11757                           ; BSR set to: 1
 11758                           ;doprnt.c: 1422: {
 11759                           ;doprnt.c: 1424: if(width
 11760                           ;doprnt.c: 1428: )
 11761                           
 11762                           ; BSR set to: 1
 11763  000C6E  5119               	movf	sprintf@width& (0+255),w,b
 11764  000C70  111A               	iorwf	(sprintf@width+1)& (0+255),w,b
 11765  000C72  B4D8               	btfsc	status,2,c
 11766  000C74  D011               	goto	u8640
 11767  000C76                     u8630:
 11768                           
 11769                           ; BSR set to: 1
 11770                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 11771                           
 11772                           ; BSR set to: 1
 11773                           
 11774                           ;doprnt.c: 1429: do
 11775  000C76  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 11776  000C7A  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 11777  000C7E  0E20               	movlw	32
 11778  000C80  6EDF               	movwf	indf2,c
 11779                           
 11780                           ; BSR set to: 1
 11781  000C82  0100               	movlb	0	; () banked
 11782  000C84  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 11783  000C86  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 11784                           
 11785                           ; BSR set to: 0
 11786                           ;doprnt.c: 1431: while(--width);
 11787  000C88  0101               	movlb	1	; () banked
 11788  000C8A  0719               	decf	sprintf@width& (0+255),f,b
 11789  000C8C  A0D8               	btfss	status,0,c
 11790  000C8E  071A               	decf	(sprintf@width+1)& (0+255),f,b
 11791  000C90  5119               	movf	sprintf@width& (0+255),w,b
 11792  000C92  111A               	iorwf	(sprintf@width+1)& (0+255),w,b
 11793  000C94  A4D8               	btfss	status,2,c
 11794  000C96  D7EF               	goto	u8630
 11795  000C98                     u8640:
 11796                           
 11797                           ; BSR set to: 1
 11798                           ;doprnt.c: 1438: if(flag & 0x03)
 11799                           
 11800                           ; BSR set to: 1
 11801                           
 11802                           ; BSR set to: 1
 11803  000C98  0E03               	movlw	3
 11804  000C9A  151B               	andwf	sprintf@flag& (0+255),w,b
 11805  000C9C  0100               	movlb	0	; () banked
 11806  000C9E  6FEB               	movwf	??_sprintf& (0+255),b
 11807  000CA0  0E00               	movlw	0
 11808  000CA2  0101               	movlb	1	; () banked
 11809  000CA4  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 11810  000CA6  0100               	movlb	0	; () banked
 11811  000CA8  6FEC               	movwf	(??_sprintf+1)& (0+255),b
 11812  000CAA  51EB               	movf	??_sprintf& (0+255),w,b
 11813  000CAC  11EC               	iorwf	(??_sprintf+1)& (0+255),w,b
 11814  000CAE  B4D8               	btfsc	status,2,c
 11815  000CB0  D0A5               	goto	l2909
 11816                           
 11817                           ; BSR set to: 0
 11818                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 11819  000CB2  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 11820  000CB6  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 11821  000CBA  0E2D               	movlw	45
 11822  000CBC  6EDF               	movwf	indf2,c
 11823  000CBE  D09C               	goto	L13
 11824  000CC0                     
 11825                           ;doprnt.c: 1486: case 0xC0:
 11826                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 11827                           
 11828                           ; BSR set to: 0
 11829                           
 11830                           ; BSR set to: 0
 11831  000CC0  C11D  F0EB         	movff	sprintf@prec,??_sprintf
 11832  000CC4  C11E  F0EC         	movff	sprintf@prec+1,??_sprintf+1
 11833  000CC8  0100               	movlb	0	; () banked
 11834  000CCA  90D8               	bcf	status,0,c
 11835  000CCC  37EB               	rlcf	??_sprintf& (0+255),f,b
 11836  000CCE  37EC               	rlcf	(??_sprintf+1)& (0+255),f,b
 11837  000CD0  90D8               	bcf	status,0,c
 11838  000CD2  37EB               	rlcf	??_sprintf& (0+255),f,b
 11839  000CD4  37EC               	rlcf	(??_sprintf+1)& (0+255),f,b
 11840  000CD6  0ED3               	movlw	low _dpowers
 11841  000CD8  25EB               	addwf	??_sprintf& (0+255),w,b
 11842  000CDA  6EF6               	movwf	tblptrl,c
 11843  000CDC  0E7B               	movlw	high _dpowers
 11844  000CDE  21EC               	addwfc	(??_sprintf+1)& (0+255),w,b
 11845  000CE0  6EF7               	movwf	tblptrh,c
 11846  000CE2                     	if	0	;There are less than 3 active tblptr bytes
 11847  000CE2                     	endif
 11848  000CE2  0009               	tblrd		*+
 11849  000CE4  CFF5 F064          	movff	tablat,___lldiv@divisor
 11850  000CE8  0009               	tblrd		*+
 11851  000CEA  CFF5 F065          	movff	tablat,___lldiv@divisor+1
 11852  000CEE  0009               	tblrd		*+
 11853  000CF0  CFF5 F066          	movff	tablat,___lldiv@divisor+2
 11854  000CF4  000A               	tblrd		*-
 11855  000CF6  CFF5 F067          	movff	tablat,___lldiv@divisor+3
 11856  000CFA  C112  F060         	movff	sprintf@val,___lldiv@dividend
 11857  000CFE  C113  F061         	movff	sprintf@val+1,___lldiv@dividend+1
 11858  000D02  C114  F062         	movff	sprintf@val+2,___lldiv@dividend+2
 11859  000D06  C115  F063         	movff	sprintf@val+3,___lldiv@dividend+3
 11860  000D0A  EC47  F022         	call	___lldiv	;wreg free
 11861  000D0E  C060  F06E         	movff	?___lldiv,___llmod@dividend
 11862  000D12  C061  F06F         	movff	?___lldiv+1,___llmod@dividend+1
 11863  000D16  C062  F070         	movff	?___lldiv+2,___llmod@dividend+2
 11864  000D1A  C063  F071         	movff	?___lldiv+3,___llmod@dividend+3
 11865  000D1E  0E0A               	movlw	10
 11866  000D20  0100               	movlb	0	; () banked
 11867  000D22  6F72               	movwf	___llmod@divisor& (0+255),b
 11868  000D24  0E00               	movlw	0
 11869  000D26  6F73               	movwf	(___llmod@divisor+1)& (0+255),b
 11870  000D28  0E00               	movlw	0
 11871  000D2A  6F74               	movwf	(___llmod@divisor+2)& (0+255),b
 11872  000D2C  0E00               	movlw	0
 11873  000D2E  6F75               	movwf	(___llmod@divisor+3)& (0+255),b
 11874  000D30  EC76  F023         	call	___llmod	;wreg free
 11875  000D34  0100               	movlb	0	; () banked
 11876  000D36  516E               	movf	?___llmod& (0+255),w,b
 11877  000D38  0F30               	addlw	48
 11878  000D3A  0101               	movlb	1	; () banked
 11879  000D3C  6F1F               	movwf	sprintf@c& (0+255),b
 11880                           
 11881                           ;doprnt.c: 1491: break;
 11882  000D3E  D055               	goto	l2914
 11883  000D40                     
 11884                           ; BSR set to: 1
 11885                           ;doprnt.c: 1499: {
 11886                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 11887                           
 11888                           ; BSR set to: 1
 11889  000D40  C112  F060         	movff	sprintf@val,___lldiv@dividend
 11890  000D44  C113  F061         	movff	sprintf@val+1,___lldiv@dividend+1
 11891  000D48  C114  F062         	movff	sprintf@val+2,___lldiv@dividend+2
 11892  000D4C  C115  F063         	movff	sprintf@val+3,___lldiv@dividend+3
 11893  000D50  C11D  F0EB         	movff	sprintf@prec,??_sprintf
 11894  000D54  C11E  F0EC         	movff	sprintf@prec+1,??_sprintf+1
 11895  000D58  0100               	movlb	0	; () banked
 11896  000D5A  90D8               	bcf	status,0,c
 11897  000D5C  37EB               	rlcf	??_sprintf& (0+255),f,b
 11898  000D5E  37EC               	rlcf	(??_sprintf+1)& (0+255),f,b
 11899  000D60  90D8               	bcf	status,0,c
 11900  000D62  37EB               	rlcf	??_sprintf& (0+255),f,b
 11901  000D64  37EC               	rlcf	(??_sprintf+1)& (0+255),f,b
 11902  000D66  0E49               	movlw	low _hexpowers
 11903  000D68  25EB               	addwf	??_sprintf& (0+255),w,b
 11904  000D6A  6EF6               	movwf	tblptrl,c
 11905  000D6C  0E7C               	movlw	high _hexpowers
 11906  000D6E  21EC               	addwfc	(??_sprintf+1)& (0+255),w,b
 11907  000D70  6EF7               	movwf	tblptrh,c
 11908  000D72                     	if	0	;There are less than 3 active tblptr bytes
 11909  000D72                     	endif
 11910  000D72  0009               	tblrd		*+
 11911  000D74  CFF5 F064          	movff	tablat,___lldiv@divisor
 11912  000D78  0009               	tblrd		*+
 11913  000D7A  CFF5 F065          	movff	tablat,___lldiv@divisor+1
 11914  000D7E  0009               	tblrd		*+
 11915  000D80  CFF5 F066          	movff	tablat,___lldiv@divisor+2
 11916  000D84  000A               	tblrd		*-
 11917  000D86  CFF5 F067          	movff	tablat,___lldiv@divisor+3
 11918  000D8A  EC47  F022         	call	___lldiv	;wreg free
 11919  000D8E  0100               	movlb	0	; () banked
 11920  000D90  5160               	movf	?___lldiv& (0+255),w,b
 11921  000D92  0B0F               	andlw	15
 11922  000D94  0101               	movlb	1	; () banked
 11923  000D96  6F05               	movwf	sprintf@idx& (0+255),b
 11924                           
 11925                           ; BSR set to: 1
 11926                           ;doprnt.c: 1502: c = (flag & 0x20 ? "0123456789ABCDEF" : "0123456789abcdef")[idx];
 11927  000D98  BB1B               	btfsc	sprintf@flag& (0+255),5,b
 11928  000D9A  D004               	goto	l2917
 11929                           
 11930                           ; BSR set to: 1
 11931  000D9C  0EF1               	movlw	low STR_41
 11932  000D9E  6F03               	movwf	_sprintf$5142& (0+255),b
 11933  000DA0  0E7E               	movlw	high STR_41
 11934  000DA2  D003               	goto	L14
 11935  000DA4                     l2917:
 11936                           
 11937                           ; BSR set to: 1
 11938                           
 11939                           ; BSR set to: 1
 11940  000DA4  0EE0               	movlw	low STR_40
 11941  000DA6  6F03               	movwf	_sprintf$5142& (0+255),b
 11942  000DA8  0E7E               	movlw	high STR_40
 11943  000DAA                     L14:
 11944  000DAA  6F04               	movwf	(_sprintf$5142+1)& (0+255),b
 11945                           
 11946                           ; BSR set to: 1
 11947                           
 11948                           ; BSR set to: 1
 11949  000DAC  5105               	movf	sprintf@idx& (0+255),w,b
 11950  000DAE  0D01               	mullw	1
 11951  000DB0  C103  F0EB         	movff	_sprintf$5142,??_sprintf
 11952  000DB4  C104  F0EC         	movff	_sprintf$5142+1,??_sprintf+1
 11953  000DB8  50F3               	movf	prodl,w,c
 11954  000DBA  0100               	movlb	0	; () banked
 11955  000DBC  27EB               	addwf	??_sprintf& (0+255),f,b
 11956  000DBE  50F4               	movf	prodh,w,c
 11957  000DC0  23EC               	addwfc	(??_sprintf+1)& (0+255),f,b
 11958  000DC2  C0EB  FFF6         	movff	??_sprintf,tblptrl
 11959  000DC6  C0EC  FFF7         	movff	??_sprintf+1,tblptrh
 11960  000DCA                     	if	0	;tblptru may be non-zero
 11961  000DCA                     	endif
 11962  000DCA                     	if	0	;tblptru may be non-zero
 11963  000DCA                     	endif
 11964  000DCA  0008               	tblrd		*
 11965  000DCC  CFF5 F11F          	movff	tablat,sprintf@c
 11966                           
 11967                           ; BSR set to: 0
 11968                           ;doprnt.c: 1523: }
 11969                           
 11970                           ;doprnt.c: 1508: }
 11971                           ;doprnt.c: 1510: break;
 11972  000DD0  D00C               	goto	l2914
 11973  000DD2                     l9509:
 11974  000DD2  0101               	movlb	1	; () banked
 11975  000DD4  511B               	movf	sprintf@flag& (0+255),w,b
 11976  000DD6  0BC0               	andlw	192
 11977                           
 11978                           ; Switch size 1, requested type "space"
 11979                           ; Number of cases is 3, Range of values is 0 to 192
 11980                           ; switch strategies available:
 11981                           ; Name         Instructions Cycles
 11982                           ; simple_byte           10     6 (average)
 11983                           ;	Chosen strategy is simple_byte
 11984  000DD8  0A00               	xorlw	0	; case 0
 11985  000DDA  B4D8               	btfsc	status,2,c
 11986  000DDC  D771               	goto	l2912
 11987  000DDE  0A80               	xorlw	128	; case 128
 11988  000DE0  B4D8               	btfsc	status,2,c
 11989  000DE2  D7AE               	goto	l2915
 11990  000DE4  0A40               	xorlw	64	; case 192
 11991  000DE6  B4D8               	btfsc	status,2,c
 11992  000DE8  D76B               	goto	l2912
 11993  000DEA                     l2914:
 11994                           
 11995                           ;doprnt.c: 1524: ((*sp++ = (c)));
 11996                           
 11997                           ; BSR set to: 1
 11998  000DEA  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 11999  000DEE  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 12000  000DF2  C11F  FFDF         	movff	sprintf@c,indf2
 12001  000DF6  0100               	movlb	0	; () banked
 12002  000DF8                     L13:
 12003  000DF8  4BBF               	infsnz	sprintf@sp& (0+255),f,b
 12004  000DFA  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
 12005  000DFC                     l2909:
 12006                           
 12007                           ; BSR set to: 0
 12008  000DFC  0101               	movlb	1	; () banked
 12009  000DFE  071D               	decf	sprintf@prec& (0+255),f,b
 12010  000E00  A0D8               	btfss	status,0,c
 12011  000E02  071E               	decf	(sprintf@prec+1)& (0+255),f,b
 12012  000E04  291D               	incf	sprintf@prec& (0+255),w,b
 12013  000E06  E1E5               	bnz	l9509
 12014  000E08  291E               	incf	(sprintf@prec+1)& (0+255),w,b
 12015  000E0A  A4D8               	btfss	status,2,c
 12016  000E0C  D7E2               	goto	l2911
 12017  000E0E                     u8670:
 12018                           
 12019                           ; BSR set to: 1
 12020                           
 12021                           ; BSR set to: 1
 12022  000E0E  C0C1  FFF6         	movff	sprintf@f,tblptrl
 12023  000E12  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
 12024  000E16  0100               	movlb	0	; () banked
 12025  000E18  4BC1               	infsnz	sprintf@f& (0+255),f,b
 12026  000E1A  2BC2               	incf	(sprintf@f+1)& (0+255),f,b
 12027  000E1C                     	if	0	;tblptru may be non-zero
 12028  000E1C                     	endif
 12029  000E1C                     	if	0	;tblptru may be non-zero
 12030  000E1C                     	endif
 12031  000E1C  0008               	tblrd		*
 12032  000E1E  CFF5 F11F          	movff	tablat,sprintf@c
 12033  000E22  0101               	movlb	1	; () banked
 12034  000E24  511F               	movf	sprintf@c& (0+255),w,b
 12035  000E26  A4D8               	btfss	status,2,c
 12036  000E28  EF10  F000         	goto	l2779
 12037  000E2C                     u8680:
 12038                           
 12039                           ; BSR set to: 1
 12040                           ;doprnt.c: 1538: *sp = 0;
 12041                           
 12042                           ; BSR set to: 1
 12043                           
 12044                           ;doprnt.c: 1525: }
 12045                           ;doprnt.c: 1533: }
 12046                           ;doprnt.c: 1535: alldone:
 12047                           
 12048                           ; BSR set to: 1
 12049  000E2C  C0BF  FFD9         	movff	sprintf@sp,fsr2l
 12050  000E30  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
 12051  000E34  0E00               	movlw	0
 12052  000E36  6EDF               	movwf	indf2,c
 12053  000E38  0012               	return	
 12054  000E3A                     __end_of_sprintf:
 12055                           	opt stack 0
 12056                           tblptru	equ	0xFF8
 12057                           tblptrh	equ	0xFF7
 12058                           tblptrl	equ	0xFF6
 12059                           tablat	equ	0xFF5
 12060                           prodh	equ	0xFF4
 12061                           prodl	equ	0xFF3
 12062                           intcon	equ	0xFF2
 12063                           indf0	equ	0xFEF
 12064                           postinc0	equ	0xFEE
 12065                           fsr0h	equ	0xFEA
 12066                           fsr0l	equ	0xFE9
 12067                           wreg	equ	0xFE8
 12068                           indf1	equ	0xFE7
 12069                           postdec1	equ	0xFE5
 12070                           fsr1h	equ	0xFE2
 12071                           fsr1l	equ	0xFE1
 12072                           indf2	equ	0xFDF
 12073                           postinc2	equ	0xFDE
 12074                           postdec2	equ	0xFDD
 12075                           plusw2	equ	0xFDB
 12076                           fsr2h	equ	0xFDA
 12077                           fsr2l	equ	0xFD9
 12078                           status	equ	0xFD8
 12079                           
 12080 ;; *************** function _scale *****************
 12081 ;; Defined at:
 12082 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\doprnt.c"
 12083 ;; Parameters:    Size  Location     Type
 12084 ;;  scl             1    wreg     char 
 12085 ;; Auto vars:     Size  Location     Type
 12086 ;;  scl             1   53[BANK0 ] char 
 12087 ;; Return value:  Size  Location     Type
 12088 ;;                  3   47[BANK0 ] char 
 12089 ;; Registers used:
 12090 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12091 ;; Tracked objects:
 12092 ;;		On entry : 0/0
 12093 ;;		On exit  : 0/0
 12094 ;;		Unchanged: 0/0
 12095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12096 ;;      Params:         0       3       0       0       0       0       0       0       0
 12097 ;;      Locals:         0       4       0       0       0       0       0       0       0
 12098 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12099 ;;      Totals:         0       7       0       0       0       0       0       0       0
 12100 ;;Total ram usage:        7 bytes
 12101 ;; Hardware stack levels used:    1
 12102 ;; Hardware stack levels required when called:   12
 12103 ;; This function calls:
 12104 ;;		___awdiv
 12105 ;;		___awmod
 12106 ;;		___ftmul
 12107 ;;		___wmul
 12108 ;; This function is called by:
 12109 ;;		_sprintf
 12110 ;; This function uses a non-reentrant model
 12111 ;;
 12112                           
 12113                           	psect	text40
 12114  000E3A                     __ptext40:
 12115                           	opt stack 0
 12116  000E3A                     _scale:
 12117                           	opt stack 17
 12118                           
 12119                           ; BSR set to: 1
 12120                           ;incstack = 0
 12121                           ;scale@scl stored from wreg
 12122  000E3A  0100               	movlb	0	; () banked
 12123  000E3C  6F95               	movwf	scale@scl& (0+255),b
 12124                           
 12125                           ;doprnt.c: 428: if(scl < 0) {
 12126  000E3E  0100               	movlb	0	; () banked
 12127  000E40  AF95               	btfss	scale@scl& (0+255),7,b
 12128  000E42  D10C               	goto	l2768
 12129                           
 12130                           ; BSR set to: 0
 12131                           ;doprnt.c: 429: scl = -scl;
 12132  000E44  6D95               	negf	scale@scl& (0+255),b
 12133                           
 12134                           ;doprnt.c: 430: if(scl>=110)
 12135  000E46  5195               	movf	scale@scl& (0+255),w,b
 12136  000E48  0A80               	xorlw	128
 12137  000E4A  0F12               	addlw	-238
 12138  000E4C  A0D8               	btfss	status,0,c
 12139  000E4E  D097               	goto	l2769
 12140                           
 12141                           ; BSR set to: 0
 12142                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 12143  000E50  0E00               	movlw	0
 12144  000E52  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12145  000E54  0E03               	movlw	3
 12146  000E56  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12147  000E58  0E00               	movlw	0
 12148  000E5A  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 12149  000E5C  0E0A               	movlw	10
 12150  000E5E  6F68               	movwf	___awdiv@divisor& (0+255),b
 12151  000E60  0E00               	movlw	0
 12152  000E62  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12153  000E64  0E64               	movlw	100
 12154  000E66  6F62               	movwf	___awmod@divisor& (0+255),b
 12155  000E68  5195               	movf	scale@scl& (0+255),w,b
 12156  000E6A  6F60               	movwf	___awmod@dividend& (0+255),b
 12157  000E6C  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12158  000E6E  BF60               	btfsc	___awmod@dividend& (0+255),7,b
 12159  000E70  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
 12160  000E72  EC3D  F023         	call	___awmod	;wreg free
 12161  000E76  C060  F066         	movff	?___awmod,___awdiv@dividend
 12162  000E7A  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
 12163  000E7E  ECC1  F021         	call	___awdiv	;wreg free
 12164  000E82  0E09               	movlw	9
 12165  000E84  0100               	movlb	0	; () banked
 12166  000E86  2566               	addwf	?___awdiv& (0+255),w,b
 12167  000E88  6F6E               	movwf	___wmul@multiplier& (0+255),b
 12168  000E8A  0E00               	movlw	0
 12169  000E8C  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 12170  000E8E  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 12171  000E90  EC59  F028         	call	___wmul	;wreg free
 12172  000E94  0E22               	movlw	low __npowers_
 12173  000E96  0100               	movlb	0	; () banked
 12174  000E98  256E               	addwf	?___wmul& (0+255),w,b
 12175  000E9A  6EF6               	movwf	tblptrl,c
 12176  000E9C  0E7C               	movlw	high __npowers_
 12177  000E9E  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12178  000EA0  6EF7               	movwf	tblptrh,c
 12179  000EA2                     	if	0	;There are less than 3 active tblptr bytes
 12180  000EA2                     	endif
 12181  000EA2  0009               	tblrd		*+
 12182  000EA4  CFF5 F083          	movff	tablat,___ftmul@f2
 12183  000EA8  0009               	tblrd		*+
 12184  000EAA  CFF5 F084          	movff	tablat,___ftmul@f2+1
 12185  000EAE  000A               	tblrd		*-
 12186  000EB0  CFF5 F085          	movff	tablat,___ftmul@f2+2
 12187  000EB4  0E00               	movlw	0
 12188  000EB6  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 12189  000EB8  0E64               	movlw	100
 12190  000EBA  6F68               	movwf	___awdiv@divisor& (0+255),b
 12191  000EBC  5195               	movf	scale@scl& (0+255),w,b
 12192  000EBE  6F66               	movwf	___awdiv@dividend& (0+255),b
 12193  000EC0  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
 12194  000EC2  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
 12195  000EC4  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
 12196  000EC6  ECC1  F021         	call	___awdiv	;wreg free
 12197  000ECA  0E12               	movlw	18
 12198  000ECC  0100               	movlb	0	; () banked
 12199  000ECE  2566               	addwf	?___awdiv& (0+255),w,b
 12200  000ED0  6F6E               	movwf	___wmul@multiplier& (0+255),b
 12201  000ED2  0E00               	movlw	0
 12202  000ED4  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 12203  000ED6  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 12204  000ED8  0E00               	movlw	0
 12205  000EDA  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12206  000EDC  0E03               	movlw	3
 12207  000EDE  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12208  000EE0  EC59  F028         	call	___wmul	;wreg free
 12209  000EE4  0E22               	movlw	low __npowers_
 12210  000EE6  0100               	movlb	0	; () banked
 12211  000EE8  256E               	addwf	?___wmul& (0+255),w,b
 12212  000EEA  6EF6               	movwf	tblptrl,c
 12213  000EEC  0E7C               	movlw	high __npowers_
 12214  000EEE  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12215  000EF0  6EF7               	movwf	tblptrh,c
 12216  000EF2                     	if	0	;There are less than 3 active tblptr bytes
 12217  000EF2                     	endif
 12218  000EF2  0009               	tblrd		*+
 12219  000EF4  CFF5 F080          	movff	tablat,___ftmul@f1
 12220  000EF8  0009               	tblrd		*+
 12221  000EFA  CFF5 F081          	movff	tablat,___ftmul@f1+1
 12222  000EFE  000A               	tblrd		*-
 12223  000F00  CFF5 F082          	movff	tablat,___ftmul@f1+2
 12224  000F04  ECF6  F018         	call	___ftmul	;wreg free
 12225  000F08  C080  F092         	movff	?___ftmul,_scale$5950
 12226  000F0C  C081  F093         	movff	?___ftmul+1,_scale$5950+1
 12227  000F10  C082  F094         	movff	?___ftmul+2,_scale$5950+2
 12228                           
 12229                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 12230  000F14  C092  F080         	movff	_scale$5950,___ftmul@f1
 12231  000F18  C093  F081         	movff	_scale$5950+1,___ftmul@f1+1
 12232  000F1C  C094  F082         	movff	_scale$5950+2,___ftmul@f1+2
 12233  000F20  0E00               	movlw	0
 12234  000F22  0100               	movlb	0	; () banked
 12235  000F24  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12236  000F26  0E03               	movlw	3
 12237  000F28  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12238  000F2A  0E00               	movlw	0
 12239  000F2C  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12240  000F2E  0E0A               	movlw	10
 12241  000F30  6F62               	movwf	___awmod@divisor& (0+255),b
 12242  000F32  5195               	movf	scale@scl& (0+255),w,b
 12243  000F34  6F60               	movwf	___awmod@dividend& (0+255),b
 12244  000F36  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12245  000F38  BF60               	btfsc	___awmod@dividend& (0+255),7,b
 12246  000F3A  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
 12247  000F3C  EC3D  F023         	call	___awmod	;wreg free
 12248  000F40  C060  F06E         	movff	?___awmod,___wmul@multiplier
 12249  000F44  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
 12250  000F48  EC59  F028         	call	___wmul	;wreg free
 12251  000F4C  0E22               	movlw	low __npowers_
 12252  000F4E  0100               	movlb	0	; () banked
 12253  000F50  256E               	addwf	?___wmul& (0+255),w,b
 12254  000F52  6EF6               	movwf	tblptrl,c
 12255  000F54  0E7C               	movlw	high __npowers_
 12256  000F56  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12257  000F58  6EF7               	movwf	tblptrh,c
 12258  000F5A                     	if	0	;There are less than 3 active tblptr bytes
 12259  000F5A                     	endif
 12260  000F5A  0009               	tblrd		*+
 12261  000F5C  CFF5 F083          	movff	tablat,___ftmul@f2
 12262  000F60  0009               	tblrd		*+
 12263  000F62  CFF5 F084          	movff	tablat,___ftmul@f2+1
 12264  000F66  000A               	tblrd		*-
 12265  000F68  CFF5 F085          	movff	tablat,___ftmul@f2+2
 12266  000F6C  ECF6  F018         	call	___ftmul	;wreg free
 12267  000F70  C080  F08F         	movff	?___ftmul,?_scale
 12268  000F74  C081  F090         	movff	?___ftmul+1,?_scale+1
 12269  000F78  C082  F091         	movff	?___ftmul+2,?_scale+2
 12270  000F7C  0012               	return	
 12271  000F7E                     l2769:
 12272                           
 12273                           ;doprnt.c: 432: else if(scl > 10)
 12274  000F7E  0100               	movlb	0	; () banked
 12275  000F80  5195               	movf	scale@scl& (0+255),w,b
 12276  000F82  0A80               	xorlw	128
 12277  000F84  0F75               	addlw	-139
 12278  000F86  A0D8               	btfss	status,0,c
 12279  000F88  D056               	goto	l2772
 12280                           
 12281                           ; BSR set to: 0
 12282                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 12283  000F8A  0E00               	movlw	0
 12284  000F8C  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 12285  000F8E  0E0A               	movlw	10
 12286  000F90  6F68               	movwf	___awdiv@divisor& (0+255),b
 12287  000F92  5195               	movf	scale@scl& (0+255),w,b
 12288  000F94  6F66               	movwf	___awdiv@dividend& (0+255),b
 12289  000F96  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
 12290  000F98  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
 12291  000F9A  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
 12292  000F9C  ECC1  F021         	call	___awdiv	;wreg free
 12293  000FA0  0E09               	movlw	9
 12294  000FA2  0100               	movlb	0	; () banked
 12295  000FA4  2566               	addwf	?___awdiv& (0+255),w,b
 12296  000FA6  6F6E               	movwf	___wmul@multiplier& (0+255),b
 12297  000FA8  0E00               	movlw	0
 12298  000FAA  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 12299  000FAC  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 12300  000FAE  0E00               	movlw	0
 12301  000FB0  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12302  000FB2  0E03               	movlw	3
 12303  000FB4  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12304  000FB6  EC59  F028         	call	___wmul	;wreg free
 12305  000FBA  0E22               	movlw	low __npowers_
 12306  000FBC  0100               	movlb	0	; () banked
 12307  000FBE  256E               	addwf	?___wmul& (0+255),w,b
 12308  000FC0  6EF6               	movwf	tblptrl,c
 12309  000FC2  0E7C               	movlw	high __npowers_
 12310  000FC4  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12311  000FC6  6EF7               	movwf	tblptrh,c
 12312  000FC8                     	if	0	;There are less than 3 active tblptr bytes
 12313  000FC8                     	endif
 12314  000FC8  0009               	tblrd		*+
 12315  000FCA  CFF5 F080          	movff	tablat,___ftmul@f1
 12316  000FCE  0009               	tblrd		*+
 12317  000FD0  CFF5 F081          	movff	tablat,___ftmul@f1+1
 12318  000FD4  000A               	tblrd		*-
 12319  000FD6  CFF5 F082          	movff	tablat,___ftmul@f1+2
 12320  000FDA  0E00               	movlw	0
 12321  000FDC  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12322  000FDE  0E03               	movlw	3
 12323  000FE0  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12324  000FE2  0E00               	movlw	0
 12325  000FE4  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12326  000FE6  0E0A               	movlw	10
 12327  000FE8  6F62               	movwf	___awmod@divisor& (0+255),b
 12328  000FEA  5195               	movf	scale@scl& (0+255),w,b
 12329  000FEC  6F60               	movwf	___awmod@dividend& (0+255),b
 12330  000FEE  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12331  000FF0  BF60               	btfsc	___awmod@dividend& (0+255),7,b
 12332  000FF2  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
 12333  000FF4  EC3D  F023         	call	___awmod	;wreg free
 12334  000FF8  C060  F06E         	movff	?___awmod,___wmul@multiplier
 12335  000FFC  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
 12336  001000  EC59  F028         	call	___wmul	;wreg free
 12337  001004  0E22               	movlw	low __npowers_
 12338  001006  0100               	movlb	0	; () banked
 12339  001008  256E               	addwf	?___wmul& (0+255),w,b
 12340  00100A  6EF6               	movwf	tblptrl,c
 12341  00100C  0E7C               	movlw	high __npowers_
 12342  00100E  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12343  001010  6EF7               	movwf	tblptrh,c
 12344  001012                     	if	0	;There are less than 3 active tblptr bytes
 12345  001012                     	endif
 12346  001012  0009               	tblrd		*+
 12347  001014  CFF5 F083          	movff	tablat,___ftmul@f2
 12348  001018  0009               	tblrd		*+
 12349  00101A  CFF5 F084          	movff	tablat,___ftmul@f2+1
 12350  00101E  000A               	tblrd		*-
 12351  001020  CFF5 F085          	movff	tablat,___ftmul@f2+2
 12352  001024  ECF6  F018         	call	___ftmul	;wreg free
 12353  001028  C080  F08F         	movff	?___ftmul,?_scale
 12354  00102C  C081  F090         	movff	?___ftmul+1,?_scale+1
 12355  001030  C082  F091         	movff	?___ftmul+2,?_scale+2
 12356  001034  0012               	return	
 12357  001036                     l2772:
 12358                           
 12359                           ;doprnt.c: 434: return _npowers_[scl];
 12360  001036  0100               	movlb	0	; () banked
 12361  001038  5195               	movf	scale@scl& (0+255),w,b
 12362  00103A  0D03               	mullw	3
 12363  00103C  0E22               	movlw	low __npowers_
 12364  00103E  24F3               	addwf	prodl,w,c
 12365  001040  6EF6               	movwf	tblptrl,c
 12366  001042  0E7C               	movlw	high __npowers_
 12367  001044  20F4               	addwfc	prodh,w,c
 12368  001046  6EF7               	movwf	tblptrh,c
 12369  001048                     	if	0	;There are less than 3 active tblptr bytes
 12370  001048                     	endif
 12371  001048  0009               	tblrd		*+
 12372  00104A  CFF5 F08F          	movff	tablat,?_scale
 12373  00104E  0009               	tblrd		*+
 12374  001050  CFF5 F090          	movff	tablat,?_scale+1
 12375  001054  000A               	tblrd		*-
 12376  001056  CFF5 F091          	movff	tablat,?_scale+2
 12377                           
 12378                           ; BSR set to: 0
 12379  00105A  0012               	return	
 12380  00105C                     l2768:
 12381                           
 12382                           ; BSR set to: 0
 12383                           ;doprnt.c: 435: }
 12384                           ;doprnt.c: 436: if(scl>=110)
 12385                           
 12386                           ; BSR set to: 0
 12387  00105C  5195               	movf	scale@scl& (0+255),w,b
 12388  00105E  0A80               	xorlw	128
 12389  001060  0F12               	addlw	-238
 12390  001062  A0D8               	btfss	status,0,c
 12391  001064  D097               	goto	l2773
 12392                           
 12393                           ; BSR set to: 0
 12394                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 12395  001066  0E00               	movlw	0
 12396  001068  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12397  00106A  0E03               	movlw	3
 12398  00106C  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12399  00106E  0E00               	movlw	0
 12400  001070  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 12401  001072  0E0A               	movlw	10
 12402  001074  6F68               	movwf	___awdiv@divisor& (0+255),b
 12403  001076  0E00               	movlw	0
 12404  001078  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12405  00107A  0E64               	movlw	100
 12406  00107C  6F62               	movwf	___awmod@divisor& (0+255),b
 12407  00107E  5195               	movf	scale@scl& (0+255),w,b
 12408  001080  6F60               	movwf	___awmod@dividend& (0+255),b
 12409  001082  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12410  001084  BF60               	btfsc	___awmod@dividend& (0+255),7,b
 12411  001086  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
 12412  001088  EC3D  F023         	call	___awmod	;wreg free
 12413  00108C  C060  F066         	movff	?___awmod,___awdiv@dividend
 12414  001090  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
 12415  001094  ECC1  F021         	call	___awdiv	;wreg free
 12416  001098  0E09               	movlw	9
 12417  00109A  0100               	movlb	0	; () banked
 12418  00109C  2566               	addwf	?___awdiv& (0+255),w,b
 12419  00109E  6F6E               	movwf	___wmul@multiplier& (0+255),b
 12420  0010A0  0E00               	movlw	0
 12421  0010A2  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 12422  0010A4  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 12423  0010A6  EC59  F028         	call	___wmul	;wreg free
 12424  0010AA  0EFB               	movlw	low __powers_
 12425  0010AC  0100               	movlb	0	; () banked
 12426  0010AE  256E               	addwf	?___wmul& (0+255),w,b
 12427  0010B0  6EF6               	movwf	tblptrl,c
 12428  0010B2  0E7B               	movlw	high __powers_
 12429  0010B4  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12430  0010B6  6EF7               	movwf	tblptrh,c
 12431  0010B8                     	if	0	;There are less than 3 active tblptr bytes
 12432  0010B8                     	endif
 12433  0010B8  0009               	tblrd		*+
 12434  0010BA  CFF5 F083          	movff	tablat,___ftmul@f2
 12435  0010BE  0009               	tblrd		*+
 12436  0010C0  CFF5 F084          	movff	tablat,___ftmul@f2+1
 12437  0010C4  000A               	tblrd		*-
 12438  0010C6  CFF5 F085          	movff	tablat,___ftmul@f2+2
 12439  0010CA  0E00               	movlw	0
 12440  0010CC  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 12441  0010CE  0E64               	movlw	100
 12442  0010D0  6F68               	movwf	___awdiv@divisor& (0+255),b
 12443  0010D2  5195               	movf	scale@scl& (0+255),w,b
 12444  0010D4  6F66               	movwf	___awdiv@dividend& (0+255),b
 12445  0010D6  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
 12446  0010D8  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
 12447  0010DA  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
 12448  0010DC  ECC1  F021         	call	___awdiv	;wreg free
 12449  0010E0  0E12               	movlw	18
 12450  0010E2  0100               	movlb	0	; () banked
 12451  0010E4  2566               	addwf	?___awdiv& (0+255),w,b
 12452  0010E6  6F6E               	movwf	___wmul@multiplier& (0+255),b
 12453  0010E8  0E00               	movlw	0
 12454  0010EA  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 12455  0010EC  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 12456  0010EE  0E00               	movlw	0
 12457  0010F0  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12458  0010F2  0E03               	movlw	3
 12459  0010F4  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12460  0010F6  EC59  F028         	call	___wmul	;wreg free
 12461  0010FA  0EFB               	movlw	low __powers_
 12462  0010FC  0100               	movlb	0	; () banked
 12463  0010FE  256E               	addwf	?___wmul& (0+255),w,b
 12464  001100  6EF6               	movwf	tblptrl,c
 12465  001102  0E7B               	movlw	high __powers_
 12466  001104  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12467  001106  6EF7               	movwf	tblptrh,c
 12468  001108                     	if	0	;There are less than 3 active tblptr bytes
 12469  001108                     	endif
 12470  001108  0009               	tblrd		*+
 12471  00110A  CFF5 F080          	movff	tablat,___ftmul@f1
 12472  00110E  0009               	tblrd		*+
 12473  001110  CFF5 F081          	movff	tablat,___ftmul@f1+1
 12474  001114  000A               	tblrd		*-
 12475  001116  CFF5 F082          	movff	tablat,___ftmul@f1+2
 12476  00111A  ECF6  F018         	call	___ftmul	;wreg free
 12477  00111E  C080  F092         	movff	?___ftmul,_scale$5950
 12478  001122  C081  F093         	movff	?___ftmul+1,_scale$5950+1
 12479  001126  C082  F094         	movff	?___ftmul+2,_scale$5950+2
 12480                           
 12481                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 12482  00112A  C092  F080         	movff	_scale$5950,___ftmul@f1
 12483  00112E  C093  F081         	movff	_scale$5950+1,___ftmul@f1+1
 12484  001132  C094  F082         	movff	_scale$5950+2,___ftmul@f1+2
 12485  001136  0E00               	movlw	0
 12486  001138  0100               	movlb	0	; () banked
 12487  00113A  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12488  00113C  0E03               	movlw	3
 12489  00113E  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12490  001140  0E00               	movlw	0
 12491  001142  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12492  001144  0E0A               	movlw	10
 12493  001146  6F62               	movwf	___awmod@divisor& (0+255),b
 12494  001148  5195               	movf	scale@scl& (0+255),w,b
 12495  00114A  6F60               	movwf	___awmod@dividend& (0+255),b
 12496  00114C  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12497  00114E  BF60               	btfsc	___awmod@dividend& (0+255),7,b
 12498  001150  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
 12499  001152  EC3D  F023         	call	___awmod	;wreg free
 12500  001156  C060  F06E         	movff	?___awmod,___wmul@multiplier
 12501  00115A  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
 12502  00115E  EC59  F028         	call	___wmul	;wreg free
 12503  001162  0EFB               	movlw	low __powers_
 12504  001164  0100               	movlb	0	; () banked
 12505  001166  256E               	addwf	?___wmul& (0+255),w,b
 12506  001168  6EF6               	movwf	tblptrl,c
 12507  00116A  0E7B               	movlw	high __powers_
 12508  00116C  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12509  00116E  6EF7               	movwf	tblptrh,c
 12510  001170                     	if	0	;There are less than 3 active tblptr bytes
 12511  001170                     	endif
 12512  001170  0009               	tblrd		*+
 12513  001172  CFF5 F083          	movff	tablat,___ftmul@f2
 12514  001176  0009               	tblrd		*+
 12515  001178  CFF5 F084          	movff	tablat,___ftmul@f2+1
 12516  00117C  000A               	tblrd		*-
 12517  00117E  CFF5 F085          	movff	tablat,___ftmul@f2+2
 12518  001182  ECF6  F018         	call	___ftmul	;wreg free
 12519  001186  C080  F08F         	movff	?___ftmul,?_scale
 12520  00118A  C081  F090         	movff	?___ftmul+1,?_scale+1
 12521  00118E  C082  F091         	movff	?___ftmul+2,?_scale+2
 12522  001192  0012               	return	
 12523  001194                     l2773:
 12524                           
 12525                           ;doprnt.c: 438: else if(scl > 10)
 12526  001194  0100               	movlb	0	; () banked
 12527  001196  5195               	movf	scale@scl& (0+255),w,b
 12528  001198  0A80               	xorlw	128
 12529  00119A  0F75               	addlw	-139
 12530  00119C  A0D8               	btfss	status,0,c
 12531  00119E  D056               	goto	l2775
 12532                           
 12533                           ; BSR set to: 0
 12534                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 12535  0011A0  0E00               	movlw	0
 12536  0011A2  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 12537  0011A4  0E0A               	movlw	10
 12538  0011A6  6F68               	movwf	___awdiv@divisor& (0+255),b
 12539  0011A8  5195               	movf	scale@scl& (0+255),w,b
 12540  0011AA  6F66               	movwf	___awdiv@dividend& (0+255),b
 12541  0011AC  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
 12542  0011AE  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
 12543  0011B0  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
 12544  0011B2  ECC1  F021         	call	___awdiv	;wreg free
 12545  0011B6  0E09               	movlw	9
 12546  0011B8  0100               	movlb	0	; () banked
 12547  0011BA  2566               	addwf	?___awdiv& (0+255),w,b
 12548  0011BC  6F6E               	movwf	___wmul@multiplier& (0+255),b
 12549  0011BE  0E00               	movlw	0
 12550  0011C0  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 12551  0011C2  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 12552  0011C4  0E00               	movlw	0
 12553  0011C6  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12554  0011C8  0E03               	movlw	3
 12555  0011CA  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12556  0011CC  EC59  F028         	call	___wmul	;wreg free
 12557  0011D0  0EFB               	movlw	low __powers_
 12558  0011D2  0100               	movlb	0	; () banked
 12559  0011D4  256E               	addwf	?___wmul& (0+255),w,b
 12560  0011D6  6EF6               	movwf	tblptrl,c
 12561  0011D8  0E7B               	movlw	high __powers_
 12562  0011DA  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12563  0011DC  6EF7               	movwf	tblptrh,c
 12564  0011DE                     	if	0	;There are less than 3 active tblptr bytes
 12565  0011DE                     	endif
 12566  0011DE  0009               	tblrd		*+
 12567  0011E0  CFF5 F080          	movff	tablat,___ftmul@f1
 12568  0011E4  0009               	tblrd		*+
 12569  0011E6  CFF5 F081          	movff	tablat,___ftmul@f1+1
 12570  0011EA  000A               	tblrd		*-
 12571  0011EC  CFF5 F082          	movff	tablat,___ftmul@f1+2
 12572  0011F0  0E00               	movlw	0
 12573  0011F2  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12574  0011F4  0E03               	movlw	3
 12575  0011F6  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12576  0011F8  0E00               	movlw	0
 12577  0011FA  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12578  0011FC  0E0A               	movlw	10
 12579  0011FE  6F62               	movwf	___awmod@divisor& (0+255),b
 12580  001200  5195               	movf	scale@scl& (0+255),w,b
 12581  001202  6F60               	movwf	___awmod@dividend& (0+255),b
 12582  001204  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12583  001206  BF60               	btfsc	___awmod@dividend& (0+255),7,b
 12584  001208  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
 12585  00120A  EC3D  F023         	call	___awmod	;wreg free
 12586  00120E  C060  F06E         	movff	?___awmod,___wmul@multiplier
 12587  001212  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
 12588  001216  EC59  F028         	call	___wmul	;wreg free
 12589  00121A  0EFB               	movlw	low __powers_
 12590  00121C  0100               	movlb	0	; () banked
 12591  00121E  256E               	addwf	?___wmul& (0+255),w,b
 12592  001220  6EF6               	movwf	tblptrl,c
 12593  001222  0E7B               	movlw	high __powers_
 12594  001224  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12595  001226  6EF7               	movwf	tblptrh,c
 12596  001228                     	if	0	;There are less than 3 active tblptr bytes
 12597  001228                     	endif
 12598  001228  0009               	tblrd		*+
 12599  00122A  CFF5 F083          	movff	tablat,___ftmul@f2
 12600  00122E  0009               	tblrd		*+
 12601  001230  CFF5 F084          	movff	tablat,___ftmul@f2+1
 12602  001234  000A               	tblrd		*-
 12603  001236  CFF5 F085          	movff	tablat,___ftmul@f2+2
 12604  00123A  ECF6  F018         	call	___ftmul	;wreg free
 12605  00123E  C080  F08F         	movff	?___ftmul,?_scale
 12606  001242  C081  F090         	movff	?___ftmul+1,?_scale+1
 12607  001246  C082  F091         	movff	?___ftmul+2,?_scale+2
 12608  00124A  0012               	return	
 12609  00124C                     l2775:
 12610                           
 12611                           ;doprnt.c: 440: return _powers_[scl];
 12612  00124C  0100               	movlb	0	; () banked
 12613  00124E  5195               	movf	scale@scl& (0+255),w,b
 12614  001250  0D03               	mullw	3
 12615  001252  0EFB               	movlw	low __powers_
 12616  001254  24F3               	addwf	prodl,w,c
 12617  001256  6EF6               	movwf	tblptrl,c
 12618  001258  0E7B               	movlw	high __powers_
 12619  00125A  20F4               	addwfc	prodh,w,c
 12620  00125C  6EF7               	movwf	tblptrh,c
 12621  00125E                     	if	0	;There are less than 3 active tblptr bytes
 12622  00125E                     	endif
 12623  00125E  0009               	tblrd		*+
 12624  001260  CFF5 F08F          	movff	tablat,?_scale
 12625  001264  0009               	tblrd		*+
 12626  001266  CFF5 F090          	movff	tablat,?_scale+1
 12627  00126A  000A               	tblrd		*-
 12628  00126C  CFF5 F091          	movff	tablat,?_scale+2
 12629  001270  0012               	return	
 12630  001272                     __end_of_scale:
 12631                           	opt stack 0
 12632                           tblptru	equ	0xFF8
 12633                           tblptrh	equ	0xFF7
 12634                           tblptrl	equ	0xFF6
 12635                           tablat	equ	0xFF5
 12636                           prodh	equ	0xFF4
 12637                           prodl	equ	0xFF3
 12638                           intcon	equ	0xFF2
 12639                           indf0	equ	0xFEF
 12640                           postinc0	equ	0xFEE
 12641                           fsr0h	equ	0xFEA
 12642                           fsr0l	equ	0xFE9
 12643                           wreg	equ	0xFE8
 12644                           indf1	equ	0xFE7
 12645                           postdec1	equ	0xFE5
 12646                           fsr1h	equ	0xFE2
 12647                           fsr1l	equ	0xFE1
 12648                           indf2	equ	0xFDF
 12649                           postinc2	equ	0xFDE
 12650                           postdec2	equ	0xFDD
 12651                           plusw2	equ	0xFDB
 12652                           fsr2h	equ	0xFDA
 12653                           fsr2l	equ	0xFD9
 12654                           status	equ	0xFD8
 12655                           
 12656 ;; *************** function _isdigit *****************
 12657 ;; Defined at:
 12658 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\isdigit.c"
 12659 ;; Parameters:    Size  Location     Type
 12660 ;;  c               1    wreg     unsigned char 
 12661 ;; Auto vars:     Size  Location     Type
 12662 ;;  c               1    2[BANK0 ] unsigned char 
 12663 ;; Return value:  Size  Location     Type
 12664 ;;		None               void
 12665 ;; Registers used:
 12666 ;;		wreg, status,2, status,0
 12667 ;; Tracked objects:
 12668 ;;		On entry : 0/0
 12669 ;;		On exit  : 0/0
 12670 ;;		Unchanged: 0/0
 12671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12672 ;;      Params:         0       0       0       0       0       0       0       0       0
 12673 ;;      Locals:         0       2       0       0       0       0       0       0       0
 12674 ;;      Temps:          0       1       0       0       0       0       0       0       0
 12675 ;;      Totals:         0       3       0       0       0       0       0       0       0
 12676 ;;Total ram usage:        3 bytes
 12677 ;; Hardware stack levels used:    1
 12678 ;; Hardware stack levels required when called:   10
 12679 ;; This function calls:
 12680 ;;		Nothing
 12681 ;; This function is called by:
 12682 ;;		_sprintf
 12683 ;; This function uses a non-reentrant model
 12684 ;;
 12685                           
 12686                           	psect	text41
 12687  00514C                     __ptext41:
 12688                           	opt stack 0
 12689  00514C                     _isdigit:
 12690                           	opt stack 19
 12691                           
 12692                           ;incstack = 0
 12693                           ;isdigit@c stored from wreg
 12694  00514C  0100               	movlb	0	; () banked
 12695  00514E  6F62               	movwf	isdigit@c& (0+255),b
 12696  005150  0E00               	movlw	0
 12697  005152  0100               	movlb	0	; () banked
 12698  005154  6F61               	movwf	_isdigit$5368& (0+255),b
 12699                           
 12700                           ; BSR set to: 0
 12701  005156  0E3A               	movlw	58
 12702  005158  6162               	cpfslt	isdigit@c& (0+255),b
 12703  00515A  D005               	goto	l3286
 12704                           
 12705                           ; BSR set to: 0
 12706  00515C  0E2F               	movlw	47
 12707  00515E  6562               	cpfsgt	isdigit@c& (0+255),b
 12708  005160  D002               	goto	l3286
 12709                           
 12710                           ; BSR set to: 0
 12711  005162  0E01               	movlw	1
 12712  005164  6F61               	movwf	_isdigit$5368& (0+255),b
 12713  005166                     l3286:
 12714                           
 12715                           ; BSR set to: 0
 12716                           
 12717                           ; BSR set to: 0
 12718  005166  C061  F060         	movff	_isdigit$5368,??_isdigit
 12719  00516A  3160               	rrcf	??_isdigit& (0+255),w,b
 12720  00516C  0012               	return	
 12721  00516E                     __end_of_isdigit:
 12722                           	opt stack 0
 12723                           tblptru	equ	0xFF8
 12724                           tblptrh	equ	0xFF7
 12725                           tblptrl	equ	0xFF6
 12726                           tablat	equ	0xFF5
 12727                           prodh	equ	0xFF4
 12728                           prodl	equ	0xFF3
 12729                           intcon	equ	0xFF2
 12730                           indf0	equ	0xFEF
 12731                           postinc0	equ	0xFEE
 12732                           fsr0h	equ	0xFEA
 12733                           fsr0l	equ	0xFE9
 12734                           wreg	equ	0xFE8
 12735                           indf1	equ	0xFE7
 12736                           postdec1	equ	0xFE5
 12737                           fsr1h	equ	0xFE2
 12738                           fsr1l	equ	0xFE1
 12739                           indf2	equ	0xFDF
 12740                           postinc2	equ	0xFDE
 12741                           postdec2	equ	0xFDD
 12742                           plusw2	equ	0xFDB
 12743                           fsr2h	equ	0xFDA
 12744                           fsr2l	equ	0xFD9
 12745                           status	equ	0xFD8
 12746                           
 12747 ;; *************** function _fround *****************
 12748 ;; Defined at:
 12749 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\doprnt.c"
 12750 ;; Parameters:    Size  Location     Type
 12751 ;;  prec            1    wreg     unsigned char 
 12752 ;; Auto vars:     Size  Location     Type
 12753 ;;  prec            1   56[BANK0 ] unsigned char 
 12754 ;; Return value:  Size  Location     Type
 12755 ;;                  3   47[BANK0 ] unsigned char 
 12756 ;; Registers used:
 12757 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12758 ;; Tracked objects:
 12759 ;;		On entry : 0/0
 12760 ;;		On exit  : 0/0
 12761 ;;		Unchanged: 0/0
 12762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12763 ;;      Params:         0       3       0       0       0       0       0       0       0
 12764 ;;      Locals:         0       7       0       0       0       0       0       0       0
 12765 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12766 ;;      Totals:         0      10       0       0       0       0       0       0       0
 12767 ;;Total ram usage:       10 bytes
 12768 ;; Hardware stack levels used:    1
 12769 ;; Hardware stack levels required when called:   12
 12770 ;; This function calls:
 12771 ;;		___awdiv
 12772 ;;		___awmod
 12773 ;;		___ftmul
 12774 ;;		___wmul
 12775 ;; This function is called by:
 12776 ;;		_sprintf
 12777 ;; This function uses a non-reentrant model
 12778 ;;
 12779                           
 12780                           	psect	text42
 12781  001B56                     __ptext42:
 12782                           	opt stack 0
 12783  001B56                     _fround:
 12784                           	opt stack 17
 12785                           
 12786                           ; BSR set to: 0
 12787                           ;incstack = 0
 12788                           ;fround@prec stored from wreg
 12789  001B56  0100               	movlb	0	; () banked
 12790  001B58  6F98               	movwf	fround@prec& (0+255),b
 12791                           
 12792                           ;doprnt.c: 413: if(prec>=110)
 12793  001B5A  0E6D               	movlw	109
 12794  001B5C  0100               	movlb	0	; () banked
 12795  001B5E  6598               	cpfsgt	fround@prec& (0+255),b
 12796  001B60  D0A6               	goto	l2762
 12797                           
 12798                           ; BSR set to: 0
 12799                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 12800  001B62  0E00               	movlw	0
 12801  001B64  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12802  001B66  0E03               	movlw	3
 12803  001B68  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12804  001B6A  0E00               	movlw	0
 12805  001B6C  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 12806  001B6E  0E0A               	movlw	10
 12807  001B70  6F68               	movwf	___awdiv@divisor& (0+255),b
 12808  001B72  0E00               	movlw	0
 12809  001B74  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12810  001B76  0E64               	movlw	100
 12811  001B78  6F62               	movwf	___awmod@divisor& (0+255),b
 12812  001B7A  C098  F060         	movff	fround@prec,___awmod@dividend
 12813  001B7E  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12814  001B80  EC3D  F023         	call	___awmod	;wreg free
 12815  001B84  C060  F066         	movff	?___awmod,___awdiv@dividend
 12816  001B88  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
 12817  001B8C  ECC1  F021         	call	___awdiv	;wreg free
 12818  001B90  0E09               	movlw	9
 12819  001B92  0100               	movlb	0	; () banked
 12820  001B94  2566               	addwf	?___awdiv& (0+255),w,b
 12821  001B96  6F6E               	movwf	___wmul@multiplier& (0+255),b
 12822  001B98  0E00               	movlw	0
 12823  001B9A  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 12824  001B9C  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 12825  001B9E  EC59  F028         	call	___wmul	;wreg free
 12826  001BA2  0E22               	movlw	low __npowers_
 12827  001BA4  0100               	movlb	0	; () banked
 12828  001BA6  256E               	addwf	?___wmul& (0+255),w,b
 12829  001BA8  6EF6               	movwf	tblptrl,c
 12830  001BAA  0E7C               	movlw	high __npowers_
 12831  001BAC  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12832  001BAE  6EF7               	movwf	tblptrh,c
 12833  001BB0                     	if	0	;There are less than 3 active tblptr bytes
 12834  001BB0                     	endif
 12835  001BB0  0009               	tblrd		*+
 12836  001BB2  CFF5 F083          	movff	tablat,___ftmul@f2
 12837  001BB6  0009               	tblrd		*+
 12838  001BB8  CFF5 F084          	movff	tablat,___ftmul@f2+1
 12839  001BBC  000A               	tblrd		*-
 12840  001BBE  CFF5 F085          	movff	tablat,___ftmul@f2+2
 12841  001BC2  0E00               	movlw	0
 12842  001BC4  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 12843  001BC6  0E64               	movlw	100
 12844  001BC8  6F68               	movwf	___awdiv@divisor& (0+255),b
 12845  001BCA  C098  F066         	movff	fround@prec,___awdiv@dividend
 12846  001BCE  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
 12847  001BD0  ECC1  F021         	call	___awdiv	;wreg free
 12848  001BD4  0E12               	movlw	18
 12849  001BD6  0100               	movlb	0	; () banked
 12850  001BD8  2566               	addwf	?___awdiv& (0+255),w,b
 12851  001BDA  6F6E               	movwf	___wmul@multiplier& (0+255),b
 12852  001BDC  0E00               	movlw	0
 12853  001BDE  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 12854  001BE0  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 12855  001BE2  0E00               	movlw	0
 12856  001BE4  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12857  001BE6  0E03               	movlw	3
 12858  001BE8  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12859  001BEA  EC59  F028         	call	___wmul	;wreg free
 12860  001BEE  0E22               	movlw	low __npowers_
 12861  001BF0  0100               	movlb	0	; () banked
 12862  001BF2  256E               	addwf	?___wmul& (0+255),w,b
 12863  001BF4  6EF6               	movwf	tblptrl,c
 12864  001BF6  0E7C               	movlw	high __npowers_
 12865  001BF8  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12866  001BFA  6EF7               	movwf	tblptrh,c
 12867  001BFC                     	if	0	;There are less than 3 active tblptr bytes
 12868  001BFC                     	endif
 12869  001BFC  0009               	tblrd		*+
 12870  001BFE  CFF5 F080          	movff	tablat,___ftmul@f1
 12871  001C02  0009               	tblrd		*+
 12872  001C04  CFF5 F081          	movff	tablat,___ftmul@f1+1
 12873  001C08  000A               	tblrd		*-
 12874  001C0A  CFF5 F082          	movff	tablat,___ftmul@f1+2
 12875  001C0E  ECF6  F018         	call	___ftmul	;wreg free
 12876  001C12  C080  F095         	movff	?___ftmul,_fround$5948
 12877  001C16  C081  F096         	movff	?___ftmul+1,_fround$5948+1
 12878  001C1A  C082  F097         	movff	?___ftmul+2,_fround$5948+2
 12879                           
 12880                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 12881  001C1E  0E00               	movlw	0
 12882  001C20  0100               	movlb	0	; () banked
 12883  001C22  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12884  001C24  0E03               	movlw	3
 12885  001C26  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12886  001C28  0E00               	movlw	0
 12887  001C2A  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12888  001C2C  0E0A               	movlw	10
 12889  001C2E  6F62               	movwf	___awmod@divisor& (0+255),b
 12890  001C30  C098  F060         	movff	fround@prec,___awmod@dividend
 12891  001C34  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12892  001C36  EC3D  F023         	call	___awmod	;wreg free
 12893  001C3A  C060  F06E         	movff	?___awmod,___wmul@multiplier
 12894  001C3E  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
 12895  001C42  EC59  F028         	call	___wmul	;wreg free
 12896  001C46  0E22               	movlw	low __npowers_
 12897  001C48  0100               	movlb	0	; () banked
 12898  001C4A  256E               	addwf	?___wmul& (0+255),w,b
 12899  001C4C  6EF6               	movwf	tblptrl,c
 12900  001C4E  0E7C               	movlw	high __npowers_
 12901  001C50  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12902  001C52  6EF7               	movwf	tblptrh,c
 12903  001C54                     	if	0	;There are less than 3 active tblptr bytes
 12904  001C54                     	endif
 12905  001C54  0009               	tblrd		*+
 12906  001C56  CFF5 F083          	movff	tablat,___ftmul@f2
 12907  001C5A  0009               	tblrd		*+
 12908  001C5C  CFF5 F084          	movff	tablat,___ftmul@f2+1
 12909  001C60  000A               	tblrd		*-
 12910  001C62  CFF5 F085          	movff	tablat,___ftmul@f2+2
 12911  001C66  C095  F080         	movff	_fround$5948,___ftmul@f1
 12912  001C6A  C096  F081         	movff	_fround$5948+1,___ftmul@f1+1
 12913  001C6E  C097  F082         	movff	_fround$5948+2,___ftmul@f1+2
 12914  001C72  ECF6  F018         	call	___ftmul	;wreg free
 12915  001C76  C080  F092         	movff	?___ftmul,_fround$5949
 12916  001C7A  C081  F093         	movff	?___ftmul+1,_fround$5949+1
 12917  001C7E  C082  F094         	movff	?___ftmul+2,_fround$5949+2
 12918                           
 12919                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 12920  001C82  C092  F080         	movff	_fround$5949,___ftmul@f1
 12921  001C86  C093  F081         	movff	_fround$5949+1,___ftmul@f1+1
 12922  001C8A  C094  F082         	movff	_fround$5949+2,___ftmul@f1+2
 12923  001C8E  0E00               	movlw	0
 12924  001C90  0100               	movlb	0	; () banked
 12925  001C92  6F83               	movwf	___ftmul@f2& (0+255),b
 12926  001C94  0E00               	movlw	0
 12927  001C96  6F84               	movwf	(___ftmul@f2+1)& (0+255),b
 12928  001C98  0E3F               	movlw	63
 12929  001C9A  6F85               	movwf	(___ftmul@f2+2)& (0+255),b
 12930  001C9C  ECF6  F018         	call	___ftmul	;wreg free
 12931  001CA0  C080  F08F         	movff	?___ftmul,?_fround
 12932  001CA4  C081  F090         	movff	?___ftmul+1,?_fround+1
 12933  001CA8  C082  F091         	movff	?___ftmul+2,?_fround+2
 12934  001CAC  0012               	return	
 12935  001CAE                     l2762:
 12936                           
 12937                           ;doprnt.c: 415: else if(prec > 10)
 12938  001CAE  0E0A               	movlw	10
 12939  001CB0  0100               	movlb	0	; () banked
 12940  001CB2  6598               	cpfsgt	fround@prec& (0+255),b
 12941  001CB4  D067               	goto	l2765
 12942                           
 12943                           ; BSR set to: 0
 12944                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 12945  001CB6  0E00               	movlw	0
 12946  001CB8  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12947  001CBA  0E03               	movlw	3
 12948  001CBC  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12949  001CBE  0E00               	movlw	0
 12950  001CC0  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12951  001CC2  0E0A               	movlw	10
 12952  001CC4  6F62               	movwf	___awmod@divisor& (0+255),b
 12953  001CC6  C098  F060         	movff	fround@prec,___awmod@dividend
 12954  001CCA  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12955  001CCC  EC3D  F023         	call	___awmod	;wreg free
 12956  001CD0  C060  F06E         	movff	?___awmod,___wmul@multiplier
 12957  001CD4  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
 12958  001CD8  EC59  F028         	call	___wmul	;wreg free
 12959  001CDC  0E22               	movlw	low __npowers_
 12960  001CDE  0100               	movlb	0	; () banked
 12961  001CE0  256E               	addwf	?___wmul& (0+255),w,b
 12962  001CE2  6EF6               	movwf	tblptrl,c
 12963  001CE4  0E7C               	movlw	high __npowers_
 12964  001CE6  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12965  001CE8  6EF7               	movwf	tblptrh,c
 12966  001CEA                     	if	0	;There are less than 3 active tblptr bytes
 12967  001CEA                     	endif
 12968  001CEA  0009               	tblrd		*+
 12969  001CEC  CFF5 F083          	movff	tablat,___ftmul@f2
 12970  001CF0  0009               	tblrd		*+
 12971  001CF2  CFF5 F084          	movff	tablat,___ftmul@f2+1
 12972  001CF6  000A               	tblrd		*-
 12973  001CF8  CFF5 F085          	movff	tablat,___ftmul@f2+2
 12974  001CFC  0E00               	movlw	0
 12975  001CFE  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 12976  001D00  0E0A               	movlw	10
 12977  001D02  6F68               	movwf	___awdiv@divisor& (0+255),b
 12978  001D04  C098  F066         	movff	fround@prec,___awdiv@dividend
 12979  001D08  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
 12980  001D0A  ECC1  F021         	call	___awdiv	;wreg free
 12981  001D0E  0E09               	movlw	9
 12982  001D10  0100               	movlb	0	; () banked
 12983  001D12  2566               	addwf	?___awdiv& (0+255),w,b
 12984  001D14  6F6E               	movwf	___wmul@multiplier& (0+255),b
 12985  001D16  0E00               	movlw	0
 12986  001D18  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 12987  001D1A  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 12988  001D1C  0E00               	movlw	0
 12989  001D1E  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12990  001D20  0E03               	movlw	3
 12991  001D22  6F70               	movwf	___wmul@multiplicand& (0+255),b
 12992  001D24  EC59  F028         	call	___wmul	;wreg free
 12993  001D28  0E22               	movlw	low __npowers_
 12994  001D2A  0100               	movlb	0	; () banked
 12995  001D2C  256E               	addwf	?___wmul& (0+255),w,b
 12996  001D2E  6EF6               	movwf	tblptrl,c
 12997  001D30  0E7C               	movlw	high __npowers_
 12998  001D32  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 12999  001D34  6EF7               	movwf	tblptrh,c
 13000  001D36                     	if	0	;There are less than 3 active tblptr bytes
 13001  001D36                     	endif
 13002  001D36  0009               	tblrd		*+
 13003  001D38  CFF5 F080          	movff	tablat,___ftmul@f1
 13004  001D3C  0009               	tblrd		*+
 13005  001D3E  CFF5 F081          	movff	tablat,___ftmul@f1+1
 13006  001D42  000A               	tblrd		*-
 13007  001D44  CFF5 F082          	movff	tablat,___ftmul@f1+2
 13008  001D48  ECF6  F018         	call	___ftmul	;wreg free
 13009  001D4C  C080  F095         	movff	?___ftmul,_fround$5948
 13010  001D50  C081  F096         	movff	?___ftmul+1,_fround$5948+1
 13011  001D54  C082  F097         	movff	?___ftmul+2,_fround$5948+2
 13012                           
 13013                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 13014  001D58  C095  F080         	movff	_fround$5948,___ftmul@f1
 13015  001D5C  C096  F081         	movff	_fround$5948+1,___ftmul@f1+1
 13016  001D60  C097  F082         	movff	_fround$5948+2,___ftmul@f1+2
 13017  001D64  0E00               	movlw	0
 13018  001D66  0100               	movlb	0	; () banked
 13019  001D68  6F83               	movwf	___ftmul@f2& (0+255),b
 13020  001D6A  0E00               	movlw	0
 13021  001D6C  6F84               	movwf	(___ftmul@f2+1)& (0+255),b
 13022  001D6E  0E3F               	movlw	63
 13023  001D70  6F85               	movwf	(___ftmul@f2+2)& (0+255),b
 13024  001D72  ECF6  F018         	call	___ftmul	;wreg free
 13025  001D76  C080  F08F         	movff	?___ftmul,?_fround
 13026  001D7A  C081  F090         	movff	?___ftmul+1,?_fround+1
 13027  001D7E  C082  F091         	movff	?___ftmul+2,?_fround+2
 13028  001D82  0012               	return	
 13029  001D84                     l2765:
 13030                           
 13031                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 13032  001D84  0100               	movlb	0	; () banked
 13033  001D86  5198               	movf	fround@prec& (0+255),w,b
 13034  001D88  0D03               	mullw	3
 13035  001D8A  0E22               	movlw	low __npowers_
 13036  001D8C  24F3               	addwf	prodl,w,c
 13037  001D8E  6EF6               	movwf	tblptrl,c
 13038  001D90  0E7C               	movlw	high __npowers_
 13039  001D92  20F4               	addwfc	prodh,w,c
 13040  001D94  6EF7               	movwf	tblptrh,c
 13041  001D96                     	if	0	;There are less than 3 active tblptr bytes
 13042  001D96                     	endif
 13043  001D96  0009               	tblrd		*+
 13044  001D98  CFF5 F080          	movff	tablat,___ftmul@f1
 13045  001D9C  0009               	tblrd		*+
 13046  001D9E  CFF5 F081          	movff	tablat,___ftmul@f1+1
 13047  001DA2  000A               	tblrd		*-
 13048  001DA4  CFF5 F082          	movff	tablat,___ftmul@f1+2
 13049  001DA8  0E00               	movlw	0
 13050  001DAA  6F83               	movwf	___ftmul@f2& (0+255),b
 13051  001DAC  0E00               	movlw	0
 13052  001DAE  6F84               	movwf	(___ftmul@f2+1)& (0+255),b
 13053  001DB0  0E3F               	movlw	63
 13054  001DB2  6F85               	movwf	(___ftmul@f2+2)& (0+255),b
 13055  001DB4  ECF6  F018         	call	___ftmul	;wreg free
 13056  001DB8  C080  F08F         	movff	?___ftmul,?_fround
 13057  001DBC  C081  F090         	movff	?___ftmul+1,?_fround+1
 13058  001DC0  C082  F091         	movff	?___ftmul+2,?_fround+2
 13059  001DC4  0012               	return	
 13060  001DC6                     __end_of_fround:
 13061                           	opt stack 0
 13062                           tblptru	equ	0xFF8
 13063                           tblptrh	equ	0xFF7
 13064                           tblptrl	equ	0xFF6
 13065                           tablat	equ	0xFF5
 13066                           prodh	equ	0xFF4
 13067                           prodl	equ	0xFF3
 13068                           intcon	equ	0xFF2
 13069                           indf0	equ	0xFEF
 13070                           postinc0	equ	0xFEE
 13071                           fsr0h	equ	0xFEA
 13072                           fsr0l	equ	0xFE9
 13073                           wreg	equ	0xFE8
 13074                           indf1	equ	0xFE7
 13075                           postdec1	equ	0xFE5
 13076                           fsr1h	equ	0xFE2
 13077                           fsr1l	equ	0xFE1
 13078                           indf2	equ	0xFDF
 13079                           postinc2	equ	0xFDE
 13080                           postdec2	equ	0xFDD
 13081                           plusw2	equ	0xFDB
 13082                           fsr2h	equ	0xFDA
 13083                           fsr2l	equ	0xFD9
 13084                           status	equ	0xFD8
 13085                           
 13086 ;; *************** function ___wmul *****************
 13087 ;; Defined at:
 13088 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\Umul16.c"
 13089 ;; Parameters:    Size  Location     Type
 13090 ;;  multiplier      2   14[BANK0 ] unsigned int 
 13091 ;;  multiplicand    2   16[BANK0 ] unsigned int 
 13092 ;; Auto vars:     Size  Location     Type
 13093 ;;  product         2   18[BANK0 ] unsigned int 
 13094 ;; Return value:  Size  Location     Type
 13095 ;;                  2   14[BANK0 ] unsigned int 
 13096 ;; Registers used:
 13097 ;;		wreg, status,2, status,0, prodl, prodh
 13098 ;; Tracked objects:
 13099 ;;		On entry : 0/0
 13100 ;;		On exit  : 0/0
 13101 ;;		Unchanged: 0/0
 13102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13103 ;;      Params:         0       4       0       0       0       0       0       0       0
 13104 ;;      Locals:         0       2       0       0       0       0       0       0       0
 13105 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13106 ;;      Totals:         0       6       0       0       0       0       0       0       0
 13107 ;;Total ram usage:        6 bytes
 13108 ;; Hardware stack levels used:    1
 13109 ;; Hardware stack levels required when called:   10
 13110 ;; This function calls:
 13111 ;;		Nothing
 13112 ;; This function is called by:
 13113 ;;		_fround
 13114 ;;		_scale
 13115 ;;		_sprintf
 13116 ;; This function uses a non-reentrant model
 13117 ;;
 13118                           
 13119                           	psect	text43
 13120  0050B2                     __ptext43:
 13121                           	opt stack 0
 13122  0050B2                     ___wmul:
 13123                           	opt stack 18
 13124                           
 13125                           ;incstack = 0
 13126  0050B2  0100               	movlb	0	; () banked
 13127  0050B4  516E               	movf	___wmul@multiplier& (0+255),w,b
 13128  0050B6  0370               	mulwf	___wmul@multiplicand& (0+255),b
 13129  0050B8  CFF3 F072          	movff	prodl,___wmul@product
 13130  0050BC  CFF4 F073          	movff	prodh,___wmul@product+1
 13131  0050C0  516E               	movf	___wmul@multiplier& (0+255),w,b
 13132  0050C2  0371               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 13133  0050C4  50F3               	movf	prodl,w,c
 13134  0050C6  2773               	addwf	(___wmul@product+1)& (0+255),f,b
 13135  0050C8  516F               	movf	(___wmul@multiplier+1)& (0+255),w,b
 13136  0050CA  0370               	mulwf	___wmul@multiplicand& (0+255),b
 13137  0050CC  50F3               	movf	prodl,w,c
 13138  0050CE  2773               	addwf	(___wmul@product+1)& (0+255),f,b
 13139                           
 13140                           ; BSR set to: 0
 13141  0050D0  C072  F06E         	movff	___wmul@product,?___wmul
 13142  0050D4  C073  F06F         	movff	___wmul@product+1,?___wmul+1
 13143  0050D8  0012               	return	
 13144  0050DA                     __end_of___wmul:
 13145                           	opt stack 0
 13146                           tblptru	equ	0xFF8
 13147                           tblptrh	equ	0xFF7
 13148                           tblptrl	equ	0xFF6
 13149                           tablat	equ	0xFF5
 13150                           prodh	equ	0xFF4
 13151                           prodl	equ	0xFF3
 13152                           intcon	equ	0xFF2
 13153                           indf0	equ	0xFEF
 13154                           postinc0	equ	0xFEE
 13155                           fsr0h	equ	0xFEA
 13156                           fsr0l	equ	0xFE9
 13157                           wreg	equ	0xFE8
 13158                           indf1	equ	0xFE7
 13159                           postdec1	equ	0xFE5
 13160                           fsr1h	equ	0xFE2
 13161                           fsr1l	equ	0xFE1
 13162                           indf2	equ	0xFDF
 13163                           postinc2	equ	0xFDE
 13164                           postdec2	equ	0xFDD
 13165                           plusw2	equ	0xFDB
 13166                           fsr2h	equ	0xFDA
 13167                           fsr2l	equ	0xFD9
 13168                           status	equ	0xFD8
 13169                           
 13170 ;; *************** function ___ftmul *****************
 13171 ;; Defined at:
 13172 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftmul.c"
 13173 ;; Parameters:    Size  Location     Type
 13174 ;;  f1              3   32[BANK0 ] float 
 13175 ;;  f2              3   35[BANK0 ] float 
 13176 ;; Auto vars:     Size  Location     Type
 13177 ;;  f3_as_produc    3   42[BANK0 ] unsigned um
 13178 ;;  sign            1   46[BANK0 ] unsigned char 
 13179 ;;  cntr            1   45[BANK0 ] unsigned char 
 13180 ;;  exp             1   41[BANK0 ] unsigned char 
 13181 ;; Return value:  Size  Location     Type
 13182 ;;                  3   32[BANK0 ] float 
 13183 ;; Registers used:
 13184 ;;		wreg, status,2, status,0, cstack
 13185 ;; Tracked objects:
 13186 ;;		On entry : 0/0
 13187 ;;		On exit  : 0/0
 13188 ;;		Unchanged: 0/0
 13189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13190 ;;      Params:         0       6       0       0       0       0       0       0       0
 13191 ;;      Locals:         0       6       0       0       0       0       0       0       0
 13192 ;;      Temps:          0       3       0       0       0       0       0       0       0
 13193 ;;      Totals:         0      15       0       0       0       0       0       0       0
 13194 ;;Total ram usage:       15 bytes
 13195 ;; Hardware stack levels used:    1
 13196 ;; Hardware stack levels required when called:   11
 13197 ;; This function calls:
 13198 ;;		___ftpack
 13199 ;; This function is called by:
 13200 ;;		_main
 13201 ;;		_le_AD
 13202 ;;		_fround
 13203 ;;		_scale
 13204 ;;		_sprintf
 13205 ;; This function uses a non-reentrant model
 13206 ;;
 13207                           
 13208                           	psect	text44
 13209  0031EC                     __ptext44:
 13210                           	opt stack 0
 13211  0031EC                     ___ftmul:
 13212                           	opt stack 17
 13213                           
 13214                           ; BSR set to: 0
 13215                           ;incstack = 0
 13216  0031EC  C082  F086         	movff	___ftmul@f1+2,??___ftmul
 13217  0031F0  0100               	movlb	0	; () banked
 13218  0031F2  6B87               	clrf	(??___ftmul+1)& (0+255),b
 13219  0031F4  6B88               	clrf	(??___ftmul+2)& (0+255),b
 13220  0031F6  3581               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 13221  0031F8  3786               	rlcf	??___ftmul& (0+255),f,b
 13222  0031FA  E301               	bnc	u6761
 13223  0031FC  8187               	bsf	(??___ftmul+1)& (0+255),0,b
 13224  0031FE                     u6761:
 13225  0031FE  5186               	movf	??___ftmul& (0+255),w,b
 13226  003200  6F89               	movwf	___ftmul@exp& (0+255),b
 13227  003202  5189               	movf	___ftmul@exp& (0+255),w,b
 13228  003204  A4D8               	btfss	status,2,c
 13229  003206  D007               	goto	l3250
 13230                           
 13231                           ; BSR set to: 0
 13232  003208  0E00               	movlw	0
 13233  00320A  6F80               	movwf	?___ftmul& (0+255),b
 13234  00320C  0E00               	movlw	0
 13235  00320E  6F81               	movwf	(?___ftmul+1)& (0+255),b
 13236  003210  0E00               	movlw	0
 13237  003212  6F82               	movwf	(?___ftmul+2)& (0+255),b
 13238                           
 13239                           ; BSR set to: 0
 13240  003214  0012               	return	
 13241  003216                     l3250:
 13242                           
 13243                           ; BSR set to: 0
 13244                           
 13245                           ; BSR set to: 0
 13246  003216  C085  F086         	movff	___ftmul@f2+2,??___ftmul
 13247  00321A  6B87               	clrf	(??___ftmul+1)& (0+255),b
 13248  00321C  6B88               	clrf	(??___ftmul+2)& (0+255),b
 13249  00321E  3584               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 13250  003220  3786               	rlcf	??___ftmul& (0+255),f,b
 13251  003222  E301               	bnc	u6781
 13252  003224  8187               	bsf	(??___ftmul+1)& (0+255),0,b
 13253  003226                     u6781:
 13254  003226  5186               	movf	??___ftmul& (0+255),w,b
 13255  003228  6F8E               	movwf	___ftmul@sign& (0+255),b
 13256  00322A  518E               	movf	___ftmul@sign& (0+255),w,b
 13257  00322C  A4D8               	btfss	status,2,c
 13258  00322E  D007               	goto	l3252
 13259                           
 13260                           ; BSR set to: 0
 13261  003230  0E00               	movlw	0
 13262  003232  6F80               	movwf	?___ftmul& (0+255),b
 13263  003234  0E00               	movlw	0
 13264  003236  6F81               	movwf	(?___ftmul+1)& (0+255),b
 13265  003238  0E00               	movlw	0
 13266  00323A  6F82               	movwf	(?___ftmul+2)& (0+255),b
 13267                           
 13268                           ; BSR set to: 0
 13269  00323C  0012               	return	
 13270  00323E                     l3252:
 13271                           
 13272                           ; BSR set to: 0
 13273                           
 13274                           ; BSR set to: 0
 13275  00323E  518E               	movf	___ftmul@sign& (0+255),w,b
 13276  003240  0F7B               	addlw	123
 13277  003242  2789               	addwf	___ftmul@exp& (0+255),f,b
 13278                           
 13279                           ; BSR set to: 0
 13280  003244  C082  F08E         	movff	___ftmul@f1+2,___ftmul@sign
 13281  003248  5185               	movf	(___ftmul@f2+2)& (0+255),w,b
 13282  00324A  1B8E               	xorwf	___ftmul@sign& (0+255),f,b
 13283  00324C  0E80               	movlw	128
 13284  00324E  178E               	andwf	___ftmul@sign& (0+255),f,b
 13285                           
 13286                           ; BSR set to: 0
 13287  003250  8F81               	bsf	(___ftmul@f1+1)& (0+255),7,b
 13288                           
 13289                           ; BSR set to: 0
 13290  003252  8F84               	bsf	(___ftmul@f2+1)& (0+255),7,b
 13291                           
 13292                           ; BSR set to: 0
 13293  003254  0EFF               	movlw	255
 13294  003256  1783               	andwf	___ftmul@f2& (0+255),f,b
 13295  003258  0EFF               	movlw	255
 13296  00325A  1784               	andwf	(___ftmul@f2+1)& (0+255),f,b
 13297  00325C  0E00               	movlw	0
 13298  00325E  1785               	andwf	(___ftmul@f2+2)& (0+255),f,b
 13299                           
 13300                           ; BSR set to: 0
 13301  003260  0E00               	movlw	0
 13302  003262  6F8A               	movwf	___ftmul@f3_as_product& (0+255),b
 13303  003264  0E00               	movlw	0
 13304  003266  6F8B               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 13305  003268  0E00               	movlw	0
 13306  00326A  6F8C               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 13307                           
 13308                           ; BSR set to: 0
 13309  00326C  0E07               	movlw	7
 13310  00326E  6F8D               	movwf	___ftmul@cntr& (0+255),b
 13311  003270                     
 13312                           ; BSR set to: 0
 13313                           
 13314                           ; BSR set to: 0
 13315  003270  A180               	btfss	___ftmul@f1& (0+255),0,b
 13316  003272  D006               	goto	l3254
 13317                           
 13318                           ; BSR set to: 0
 13319  003274  5183               	movf	___ftmul@f2& (0+255),w,b
 13320  003276  278A               	addwf	___ftmul@f3_as_product& (0+255),f,b
 13321  003278  5184               	movf	(___ftmul@f2+1)& (0+255),w,b
 13322  00327A  238B               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 13323  00327C  5185               	movf	(___ftmul@f2+2)& (0+255),w,b
 13324  00327E  238C               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 13325  003280                     l3254:
 13326                           
 13327                           ; BSR set to: 0
 13328                           
 13329                           ; BSR set to: 0
 13330  003280  90D8               	bcf	status,0,c
 13331  003282  3382               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 13332  003284  3381               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 13333  003286  3380               	rrcf	___ftmul@f1& (0+255),f,b
 13334  003288  90D8               	bcf	status,0,c
 13335  00328A  3783               	rlcf	___ftmul@f2& (0+255),f,b
 13336  00328C  3784               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 13337  00328E  3785               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 13338                           
 13339                           ; BSR set to: 0
 13340  003290  2F8D               	decfsz	___ftmul@cntr& (0+255),f,b
 13341  003292  D7EE               	goto	l3253
 13342                           
 13343                           ; BSR set to: 0
 13344                           
 13345                           ; BSR set to: 0
 13346  003294  0E09               	movlw	9
 13347  003296  6F8D               	movwf	___ftmul@cntr& (0+255),b
 13348  003298                     
 13349                           ; BSR set to: 0
 13350                           
 13351                           ; BSR set to: 0
 13352  003298  A180               	btfss	___ftmul@f1& (0+255),0,b
 13353  00329A  D006               	goto	l3257
 13354                           
 13355                           ; BSR set to: 0
 13356  00329C  5183               	movf	___ftmul@f2& (0+255),w,b
 13357  00329E  278A               	addwf	___ftmul@f3_as_product& (0+255),f,b
 13358  0032A0  5184               	movf	(___ftmul@f2+1)& (0+255),w,b
 13359  0032A2  238B               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 13360  0032A4  5185               	movf	(___ftmul@f2+2)& (0+255),w,b
 13361  0032A6  238C               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 13362  0032A8                     l3257:
 13363                           
 13364                           ; BSR set to: 0
 13365                           
 13366                           ; BSR set to: 0
 13367  0032A8  90D8               	bcf	status,0,c
 13368  0032AA  3382               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 13369  0032AC  3381               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 13370  0032AE  3380               	rrcf	___ftmul@f1& (0+255),f,b
 13371  0032B0  90D8               	bcf	status,0,c
 13372  0032B2  338C               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 13373  0032B4  338B               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 13374  0032B6  338A               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 13375                           
 13376                           ; BSR set to: 0
 13377  0032B8  2F8D               	decfsz	___ftmul@cntr& (0+255),f,b
 13378  0032BA  D7EE               	goto	l3256
 13379                           
 13380                           ; BSR set to: 0
 13381                           
 13382                           ; BSR set to: 0
 13383  0032BC  C08A  F060         	movff	___ftmul@f3_as_product,___ftpack@arg
 13384  0032C0  C08B  F061         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 13385  0032C4  C08C  F062         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 13386  0032C8  C089  F063         	movff	___ftmul@exp,___ftpack@exp
 13387  0032CC  C08E  F064         	movff	___ftmul@sign,___ftpack@sign
 13388  0032D0  EC15  F01E         	call	___ftpack	;wreg free
 13389  0032D4  C060  F080         	movff	?___ftpack,?___ftmul
 13390  0032D8  C061  F081         	movff	?___ftpack+1,?___ftmul+1
 13391  0032DC  C062  F082         	movff	?___ftpack+2,?___ftmul+2
 13392  0032E0  0012               	return	
 13393  0032E2                     __end_of___ftmul:
 13394                           	opt stack 0
 13395                           tblptru	equ	0xFF8
 13396                           tblptrh	equ	0xFF7
 13397                           tblptrl	equ	0xFF6
 13398                           tablat	equ	0xFF5
 13399                           prodh	equ	0xFF4
 13400                           prodl	equ	0xFF3
 13401                           intcon	equ	0xFF2
 13402                           indf0	equ	0xFEF
 13403                           postinc0	equ	0xFEE
 13404                           fsr0h	equ	0xFEA
 13405                           fsr0l	equ	0xFE9
 13406                           wreg	equ	0xFE8
 13407                           indf1	equ	0xFE7
 13408                           postdec1	equ	0xFE5
 13409                           fsr1h	equ	0xFE2
 13410                           fsr1l	equ	0xFE1
 13411                           indf2	equ	0xFDF
 13412                           postinc2	equ	0xFDE
 13413                           postdec2	equ	0xFDD
 13414                           plusw2	equ	0xFDB
 13415                           fsr2h	equ	0xFDA
 13416                           fsr2l	equ	0xFD9
 13417                           status	equ	0xFD8
 13418                           
 13419 ;; *************** function ___awdiv *****************
 13420 ;; Defined at:
 13421 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\awdiv.c"
 13422 ;; Parameters:    Size  Location     Type
 13423 ;;  dividend        2    6[BANK0 ] int 
 13424 ;;  divisor         2    8[BANK0 ] int 
 13425 ;; Auto vars:     Size  Location     Type
 13426 ;;  quotient        2   12[BANK0 ] int 
 13427 ;;  sign            1   11[BANK0 ] unsigned char 
 13428 ;;  counter         1   10[BANK0 ] unsigned char 
 13429 ;; Return value:  Size  Location     Type
 13430 ;;                  2    6[BANK0 ] int 
 13431 ;; Registers used:
 13432 ;;		wreg, status,2, status,0
 13433 ;; Tracked objects:
 13434 ;;		On entry : 0/0
 13435 ;;		On exit  : 0/0
 13436 ;;		Unchanged: 0/0
 13437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13438 ;;      Params:         0       4       0       0       0       0       0       0       0
 13439 ;;      Locals:         0       4       0       0       0       0       0       0       0
 13440 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13441 ;;      Totals:         0       8       0       0       0       0       0       0       0
 13442 ;;Total ram usage:        8 bytes
 13443 ;; Hardware stack levels used:    1
 13444 ;; Hardware stack levels required when called:   10
 13445 ;; This function calls:
 13446 ;;		Nothing
 13447 ;; This function is called by:
 13448 ;;		_fround
 13449 ;;		_scale
 13450 ;;		_sprintf
 13451 ;; This function uses a non-reentrant model
 13452 ;;
 13453                           
 13454                           	psect	text45
 13455  004382                     __ptext45:
 13456                           	opt stack 0
 13457  004382                     ___awdiv:
 13458                           	opt stack 18
 13459                           
 13460                           ;incstack = 0
 13461  004382  0E00               	movlw	0
 13462  004384  0100               	movlb	0	; () banked
 13463  004386  6F6B               	movwf	___awdiv@sign& (0+255),b
 13464                           
 13465                           ; BSR set to: 0
 13466  004388  AF69               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 13467  00438A  D006               	goto	l3090
 13468                           
 13469                           ; BSR set to: 0
 13470  00438C  6D68               	negf	___awdiv@divisor& (0+255),b
 13471  00438E  1F69               	comf	(___awdiv@divisor+1)& (0+255),f,b
 13472  004390  B0D8               	btfsc	status,0,c
 13473  004392  2B69               	incf	(___awdiv@divisor+1)& (0+255),f,b
 13474                           
 13475                           ; BSR set to: 0
 13476  004394  0E01               	movlw	1
 13477  004396  6F6B               	movwf	___awdiv@sign& (0+255),b
 13478  004398                     l3090:
 13479                           
 13480                           ; BSR set to: 0
 13481                           
 13482                           ; BSR set to: 0
 13483  004398  AF67               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 13484  00439A  D006               	goto	l3091
 13485                           
 13486                           ; BSR set to: 0
 13487  00439C  6D66               	negf	___awdiv@dividend& (0+255),b
 13488  00439E  1F67               	comf	(___awdiv@dividend+1)& (0+255),f,b
 13489  0043A0  B0D8               	btfsc	status,0,c
 13490  0043A2  2B67               	incf	(___awdiv@dividend+1)& (0+255),f,b
 13491                           
 13492                           ; BSR set to: 0
 13493  0043A4  0E01               	movlw	1
 13494  0043A6  1B6B               	xorwf	___awdiv@sign& (0+255),f,b
 13495  0043A8                     l3091:
 13496                           
 13497                           ; BSR set to: 0
 13498                           
 13499                           ; BSR set to: 0
 13500  0043A8  0E00               	movlw	0
 13501  0043AA  6F6D               	movwf	(___awdiv@quotient+1)& (0+255),b
 13502  0043AC  0E00               	movlw	0
 13503  0043AE  6F6C               	movwf	___awdiv@quotient& (0+255),b
 13504                           
 13505                           ; BSR set to: 0
 13506  0043B0  5168               	movf	___awdiv@divisor& (0+255),w,b
 13507  0043B2  1169               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 13508  0043B4  B4D8               	btfsc	status,2,c
 13509  0043B6  D01C               	goto	l3098
 13510                           
 13511                           ; BSR set to: 0
 13512  0043B8  0E01               	movlw	1
 13513  0043BA  6F6A               	movwf	___awdiv@counter& (0+255),b
 13514  0043BC  D004               	goto	l3093
 13515  0043BE                     
 13516                           ; BSR set to: 0
 13517                           
 13518                           ; BSR set to: 0
 13519  0043BE  90D8               	bcf	status,0,c
 13520  0043C0  3768               	rlcf	___awdiv@divisor& (0+255),f,b
 13521  0043C2  3769               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 13522  0043C4  2B6A               	incf	___awdiv@counter& (0+255),f,b
 13523  0043C6                     l3093:
 13524                           
 13525                           ; BSR set to: 0
 13526                           
 13527                           ; BSR set to: 0
 13528  0043C6  AF69               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 13529  0043C8  D7FA               	goto	l3094
 13530  0043CA                     u6850:
 13531                           
 13532                           ; BSR set to: 0
 13533                           
 13534                           ; BSR set to: 0
 13535                           
 13536                           ; BSR set to: 0
 13537  0043CA  90D8               	bcf	status,0,c
 13538  0043CC  376C               	rlcf	___awdiv@quotient& (0+255),f,b
 13539  0043CE  376D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 13540                           
 13541                           ; BSR set to: 0
 13542  0043D0  5168               	movf	___awdiv@divisor& (0+255),w,b
 13543  0043D2  5D66               	subwf	___awdiv@dividend& (0+255),w,b
 13544  0043D4  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
 13545  0043D6  5967               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 13546  0043D8  A0D8               	btfss	status,0,c
 13547  0043DA  D005               	goto	l3097
 13548                           
 13549                           ; BSR set to: 0
 13550  0043DC  5168               	movf	___awdiv@divisor& (0+255),w,b
 13551  0043DE  5F66               	subwf	___awdiv@dividend& (0+255),f,b
 13552  0043E0  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
 13553  0043E2  5B67               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 13554                           
 13555                           ; BSR set to: 0
 13556  0043E4  816C               	bsf	___awdiv@quotient& (0+255),0,b
 13557  0043E6                     l3097:
 13558                           
 13559                           ; BSR set to: 0
 13560                           
 13561                           ; BSR set to: 0
 13562  0043E6  90D8               	bcf	status,0,c
 13563  0043E8  3369               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 13564  0043EA  3368               	rrcf	___awdiv@divisor& (0+255),f,b
 13565                           
 13566                           ; BSR set to: 0
 13567  0043EC  2F6A               	decfsz	___awdiv@counter& (0+255),f,b
 13568  0043EE  D7ED               	goto	u6850
 13569  0043F0                     l3098:
 13570                           
 13571                           ; BSR set to: 0
 13572                           
 13573                           ; BSR set to: 0
 13574                           
 13575                           ; BSR set to: 0
 13576  0043F0  516B               	movf	___awdiv@sign& (0+255),w,b
 13577  0043F2  B4D8               	btfsc	status,2,c
 13578  0043F4  D004               	goto	l3099
 13579                           
 13580                           ; BSR set to: 0
 13581  0043F6  6D6C               	negf	___awdiv@quotient& (0+255),b
 13582  0043F8  1F6D               	comf	(___awdiv@quotient+1)& (0+255),f,b
 13583  0043FA  B0D8               	btfsc	status,0,c
 13584  0043FC  2B6D               	incf	(___awdiv@quotient+1)& (0+255),f,b
 13585  0043FE                     l3099:
 13586                           
 13587                           ; BSR set to: 0
 13588                           
 13589                           ; BSR set to: 0
 13590  0043FE  C06C  F066         	movff	___awdiv@quotient,?___awdiv
 13591  004402  C06D  F067         	movff	___awdiv@quotient+1,?___awdiv+1
 13592  004406  0012               	return	
 13593  004408                     __end_of___awdiv:
 13594                           	opt stack 0
 13595                           tblptru	equ	0xFF8
 13596                           tblptrh	equ	0xFF7
 13597                           tblptrl	equ	0xFF6
 13598                           tablat	equ	0xFF5
 13599                           prodh	equ	0xFF4
 13600                           prodl	equ	0xFF3
 13601                           intcon	equ	0xFF2
 13602                           indf0	equ	0xFEF
 13603                           postinc0	equ	0xFEE
 13604                           fsr0h	equ	0xFEA
 13605                           fsr0l	equ	0xFE9
 13606                           wreg	equ	0xFE8
 13607                           indf1	equ	0xFE7
 13608                           postdec1	equ	0xFE5
 13609                           fsr1h	equ	0xFE2
 13610                           fsr1l	equ	0xFE1
 13611                           indf2	equ	0xFDF
 13612                           postinc2	equ	0xFDE
 13613                           postdec2	equ	0xFDD
 13614                           plusw2	equ	0xFDB
 13615                           fsr2h	equ	0xFDA
 13616                           fsr2l	equ	0xFD9
 13617                           status	equ	0xFD8
 13618                           
 13619 ;; *************** function __tdiv_to_l_ *****************
 13620 ;; Defined at:
 13621 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftdivl.c"
 13622 ;; Parameters:    Size  Location     Type
 13623 ;;  f1              3    0[BANK0 ] float 
 13624 ;;  f2              3    3[BANK0 ] float 
 13625 ;; Auto vars:     Size  Location     Type
 13626 ;;  quot            4    9[BANK0 ] unsigned long 
 13627 ;;  exp1            1   14[BANK0 ] unsigned char 
 13628 ;;  cntr            1   13[BANK0 ] unsigned char 
 13629 ;; Return value:  Size  Location     Type
 13630 ;;                  4    0[BANK0 ] unsigned long 
 13631 ;; Registers used:
 13632 ;;		wreg, status,2, status,0
 13633 ;; Tracked objects:
 13634 ;;		On entry : 0/0
 13635 ;;		On exit  : 0/0
 13636 ;;		Unchanged: 0/0
 13637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13638 ;;      Params:         0       6       0       0       0       0       0       0       0
 13639 ;;      Locals:         0       6       0       0       0       0       0       0       0
 13640 ;;      Temps:          0       3       0       0       0       0       0       0       0
 13641 ;;      Totals:         0      15       0       0       0       0       0       0       0
 13642 ;;Total ram usage:       15 bytes
 13643 ;; Hardware stack levels used:    1
 13644 ;; Hardware stack levels required when called:   10
 13645 ;; This function calls:
 13646 ;;		Nothing
 13647 ;; This function is called by:
 13648 ;;		_sprintf
 13649 ;; This function uses a non-reentrant model
 13650 ;;
 13651                           
 13652                           	psect	text46
 13653  0025DA                     __ptext46:
 13654                           	opt stack 0
 13655  0025DA                     __tdiv_to_l_:
 13656                           	opt stack 19
 13657                           
 13658                           ; BSR set to: 0
 13659                           ;incstack = 0
 13660  0025DA  C062  F066         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 13661  0025DE  0100               	movlb	0	; () banked
 13662  0025E0  6B67               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 13663  0025E2  6B68               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 13664  0025E4  3561               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 13665  0025E6  3766               	rlcf	??__tdiv_to_l_& (0+255),f,b
 13666  0025E8  E301               	bnc	u7371
 13667  0025EA  8167               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 13668  0025EC                     u7371:
 13669  0025EC  5166               	movf	??__tdiv_to_l_& (0+255),w,b
 13670  0025EE  6F6E               	movwf	__tdiv_to_l_@exp1& (0+255),b
 13671  0025F0  516E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 13672  0025F2  A4D8               	btfss	status,2,c
 13673  0025F4  D009               	goto	l3226
 13674                           
 13675                           ; BSR set to: 0
 13676  0025F6  0E00               	movlw	0
 13677  0025F8  6F60               	movwf	?__tdiv_to_l_& (0+255),b
 13678  0025FA  0E00               	movlw	0
 13679  0025FC  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 13680  0025FE  0E00               	movlw	0
 13681  002600  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 13682  002602  0E00               	movlw	0
 13683  002604  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 13684                           
 13685                           ; BSR set to: 0
 13686  002606  0012               	return	
 13687  002608                     l3226:
 13688                           
 13689                           ; BSR set to: 0
 13690                           
 13691                           ; BSR set to: 0
 13692  002608  C065  F066         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 13693  00260C  6B67               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 13694  00260E  6B68               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 13695  002610  3564               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 13696  002612  3766               	rlcf	??__tdiv_to_l_& (0+255),f,b
 13697  002614  E301               	bnc	u7391
 13698  002616  8167               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 13699  002618                     u7391:
 13700  002618  5166               	movf	??__tdiv_to_l_& (0+255),w,b
 13701  00261A  6F6D               	movwf	__tdiv_to_l_@cntr& (0+255),b
 13702  00261C  516D               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 13703  00261E  A4D8               	btfss	status,2,c
 13704  002620  D009               	goto	l3228
 13705                           
 13706                           ; BSR set to: 0
 13707  002622  0E00               	movlw	0
 13708  002624  6F60               	movwf	?__tdiv_to_l_& (0+255),b
 13709  002626  0E00               	movlw	0
 13710  002628  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 13711  00262A  0E00               	movlw	0
 13712  00262C  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 13713  00262E  0E00               	movlw	0
 13714  002630  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 13715                           
 13716                           ; BSR set to: 0
 13717  002632  0012               	return	
 13718  002634                     l3228:
 13719                           
 13720                           ; BSR set to: 0
 13721                           
 13722                           ; BSR set to: 0
 13723  002634  8F61               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 13724                           
 13725                           ; BSR set to: 0
 13726  002636  0EFF               	movlw	255
 13727  002638  1760               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 13728  00263A  0EFF               	movlw	255
 13729  00263C  1761               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 13730  00263E  0E00               	movlw	0
 13731  002640  1762               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 13732  002642  8F64               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 13733                           
 13734                           ; BSR set to: 0
 13735  002644  0EFF               	movlw	255
 13736  002646  1763               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 13737  002648  0EFF               	movlw	255
 13738  00264A  1764               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 13739  00264C  0E00               	movlw	0
 13740  00264E  1765               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 13741                           
 13742                           ; BSR set to: 0
 13743  002650  0E00               	movlw	0
 13744  002652  6F69               	movwf	__tdiv_to_l_@quot& (0+255),b
 13745  002654  0E00               	movlw	0
 13746  002656  6F6A               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 13747  002658  0E00               	movlw	0
 13748  00265A  6F6B               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 13749  00265C  0E00               	movlw	0
 13750  00265E  6F6C               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 13751                           
 13752                           ; BSR set to: 0
 13753  002660  0E7F               	movlw	127
 13754  002662  5F6E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 13755                           
 13756                           ; BSR set to: 0
 13757  002664  516D               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 13758  002666  0F98               	addlw	152
 13759  002668  5F6E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 13760                           
 13761                           ; BSR set to: 0
 13762  00266A  0E18               	movlw	24
 13763  00266C  6F6D               	movwf	__tdiv_to_l_@cntr& (0+255),b
 13764  00266E                     l3229:
 13765                           
 13766                           ; BSR set to: 0
 13767  00266E  90D8               	bcf	status,0,c
 13768  002670  3769               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 13769  002672  376A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 13770  002674  376B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 13771  002676  376C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 13772                           
 13773                           ; BSR set to: 0
 13774  002678  5163               	movf	__tdiv_to_l_@f2& (0+255),w,b
 13775  00267A  5D60               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 13776  00267C  5164               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 13777  00267E  5961               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 13778  002680  5165               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 13779  002682  5962               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 13780  002684  A0D8               	btfss	status,0,c
 13781  002686  D007               	goto	l3230
 13782                           
 13783                           ; BSR set to: 0
 13784  002688  5163               	movf	__tdiv_to_l_@f2& (0+255),w,b
 13785  00268A  5F60               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 13786  00268C  5164               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 13787  00268E  5B61               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 13788  002690  5165               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 13789  002692  5B62               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 13790                           
 13791                           ; BSR set to: 0
 13792  002694  8169               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 13793  002696                     l3230:
 13794                           
 13795                           ; BSR set to: 0
 13796  002696  90D8               	bcf	status,0,c
 13797  002698  3760               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 13798  00269A  3761               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 13799  00269C  3762               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 13800                           
 13801                           ; BSR set to: 0
 13802  00269E  2F6D               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 13803  0026A0  D7E6               	goto	l3229
 13804                           
 13805                           ; BSR set to: 0
 13806                           
 13807                           ; BSR set to: 0
 13808  0026A2  AF6E               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 13809  0026A4  D016               	goto	l3232
 13810                           
 13811                           ; BSR set to: 0
 13812  0026A6  516E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 13813  0026A8  0A80               	xorlw	128
 13814  0026AA  0F97               	addlw	151
 13815  0026AC  B0D8               	btfsc	status,0,c
 13816  0026AE  D009               	goto	l3233
 13817                           
 13818                           ; BSR set to: 0
 13819  0026B0  0E00               	movlw	0
 13820  0026B2  6F60               	movwf	?__tdiv_to_l_& (0+255),b
 13821  0026B4  0E00               	movlw	0
 13822  0026B6  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 13823  0026B8  0E00               	movlw	0
 13824  0026BA  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 13825  0026BC  0E00               	movlw	0
 13826  0026BE  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 13827                           
 13828                           ; BSR set to: 0
 13829  0026C0  0012               	return	
 13830  0026C2                     l3233:
 13831                           
 13832                           ; BSR set to: 0
 13833                           
 13834                           ; BSR set to: 0
 13835                           
 13836                           ; BSR set to: 0
 13837  0026C2  90D8               	bcf	status,0,c
 13838  0026C4  336C               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 13839  0026C6  336B               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 13840  0026C8  336A               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 13841  0026CA  3369               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 13842                           
 13843                           ; BSR set to: 0
 13844  0026CC  3F6E               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 13845  0026CE  D7F9               	goto	l3233
 13846                           
 13847                           ; BSR set to: 0
 13848  0026D0  D015               	goto	u7450
 13849  0026D2                     l3232:
 13850                           
 13851                           ; BSR set to: 0
 13852                           
 13853                           ; BSR set to: 0
 13854  0026D2  0E17               	movlw	23
 13855  0026D4  656E               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 13856  0026D6  D00F               	goto	l3238
 13857                           
 13858                           ; BSR set to: 0
 13859  0026D8  0E00               	movlw	0
 13860  0026DA  6F60               	movwf	?__tdiv_to_l_& (0+255),b
 13861  0026DC  0E00               	movlw	0
 13862  0026DE  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 13863  0026E0  0E00               	movlw	0
 13864  0026E2  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 13865  0026E4  0E00               	movlw	0
 13866  0026E6  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 13867                           
 13868                           ; BSR set to: 0
 13869  0026E8  0012               	return	
 13870  0026EA                     
 13871                           ; BSR set to: 0
 13872                           
 13873                           ; BSR set to: 0
 13874  0026EA  90D8               	bcf	status,0,c
 13875  0026EC  3769               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 13876  0026EE  376A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 13877  0026F0  376B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 13878  0026F2  376C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 13879  0026F4  076E               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 13880  0026F6                     l3238:
 13881                           
 13882                           ; BSR set to: 0
 13883                           
 13884                           ; BSR set to: 0
 13885  0026F6  516E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 13886  0026F8  A4D8               	btfss	status,2,c
 13887  0026FA  D7F7               	goto	l3239
 13888  0026FC                     u7450:
 13889                           
 13890                           ; BSR set to: 0
 13891                           
 13892                           ; BSR set to: 0
 13893  0026FC  C069  F060         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 13894  002700  C06A  F061         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 13895  002704  C06B  F062         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 13896  002708  C06C  F063         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 13897                           
 13898                           ; BSR set to: 0
 13899  00270C  0012               	return		;funcret
 13900  00270E                     __end_of__tdiv_to_l_:
 13901                           	opt stack 0
 13902                           tblptru	equ	0xFF8
 13903                           tblptrh	equ	0xFF7
 13904                           tblptrl	equ	0xFF6
 13905                           tablat	equ	0xFF5
 13906                           prodh	equ	0xFF4
 13907                           prodl	equ	0xFF3
 13908                           intcon	equ	0xFF2
 13909                           indf0	equ	0xFEF
 13910                           postinc0	equ	0xFEE
 13911                           fsr0h	equ	0xFEA
 13912                           fsr0l	equ	0xFE9
 13913                           wreg	equ	0xFE8
 13914                           indf1	equ	0xFE7
 13915                           postdec1	equ	0xFE5
 13916                           fsr1h	equ	0xFE2
 13917                           fsr1l	equ	0xFE1
 13918                           indf2	equ	0xFDF
 13919                           postinc2	equ	0xFDE
 13920                           postdec2	equ	0xFDD
 13921                           plusw2	equ	0xFDB
 13922                           fsr2h	equ	0xFDA
 13923                           fsr2l	equ	0xFD9
 13924                           status	equ	0xFD8
 13925                           
 13926 ;; *************** function __div_to_l_ *****************
 13927 ;; Defined at:
 13928 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\fldivl.c"
 13929 ;; Parameters:    Size  Location     Type
 13930 ;;  f1              3    0[BANK0 ] unsigned long 
 13931 ;;  f2              3    3[BANK0 ] unsigned long 
 13932 ;; Auto vars:     Size  Location     Type
 13933 ;;  quot            4    6[BANK0 ] unsigned long 
 13934 ;;  exp1            1   11[BANK0 ] unsigned char 
 13935 ;;  cntr            1   10[BANK0 ] unsigned char 
 13936 ;; Return value:  Size  Location     Type
 13937 ;;                  4    0[BANK0 ] unsigned long 
 13938 ;; Registers used:
 13939 ;;		wreg, status,2, status,0
 13940 ;; Tracked objects:
 13941 ;;		On entry : 0/0
 13942 ;;		On exit  : 0/0
 13943 ;;		Unchanged: 0/0
 13944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13945 ;;      Params:         0       6       0       0       0       0       0       0       0
 13946 ;;      Locals:         0       6       0       0       0       0       0       0       0
 13947 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13948 ;;      Totals:         0      12       0       0       0       0       0       0       0
 13949 ;;Total ram usage:       12 bytes
 13950 ;; Hardware stack levels used:    1
 13951 ;; Hardware stack levels required when called:   10
 13952 ;; This function calls:
 13953 ;;		Nothing
 13954 ;; This function is called by:
 13955 ;;		_sprintf
 13956 ;; This function uses a non-reentrant model
 13957 ;;
 13958                           
 13959                           	psect	text47
 13960  002A96                     __ptext47:
 13961                           	opt stack 0
 13962  002A96                     __div_to_l_:
 13963                           	opt stack 19
 13964                           
 13965                           ; BSR set to: 0
 13966                           ;incstack = 0
 13967  002A96  0100               	movlb	0	; () banked
 13968  002A98  3562               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 13969  002A9A  3563               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 13970  002A9C  6F6B               	movwf	__div_to_l_@exp1& (0+255),b
 13971  002A9E  516B               	movf	__div_to_l_@exp1& (0+255),w,b
 13972  002AA0  A4D8               	btfss	status,2,c
 13973  002AA2  D009               	goto	l3122
 13974                           
 13975                           ; BSR set to: 0
 13976  002AA4  0E00               	movlw	0
 13977  002AA6  6F60               	movwf	?__div_to_l_& (0+255),b
 13978  002AA8  0E00               	movlw	0
 13979  002AAA  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
 13980  002AAC  0E00               	movlw	0
 13981  002AAE  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
 13982  002AB0  0E00               	movlw	0
 13983  002AB2  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
 13984                           
 13985                           ; BSR set to: 0
 13986  002AB4  0012               	return	
 13987  002AB6                     l3122:
 13988                           
 13989                           ; BSR set to: 0
 13990                           
 13991                           ; BSR set to: 0
 13992  002AB6  3565               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 13993  002AB8  3566               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 13994  002ABA  6F6A               	movwf	__div_to_l_@cntr& (0+255),b
 13995  002ABC  516A               	movf	__div_to_l_@cntr& (0+255),w,b
 13996  002ABE  A4D8               	btfss	status,2,c
 13997  002AC0  D009               	goto	l3124
 13998                           
 13999                           ; BSR set to: 0
 14000  002AC2  0E00               	movlw	0
 14001  002AC4  6F60               	movwf	?__div_to_l_& (0+255),b
 14002  002AC6  0E00               	movlw	0
 14003  002AC8  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
 14004  002ACA  0E00               	movlw	0
 14005  002ACC  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
 14006  002ACE  0E00               	movlw	0
 14007  002AD0  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
 14008                           
 14009                           ; BSR set to: 0
 14010  002AD2  0012               	return	
 14011  002AD4                     l3124:
 14012                           
 14013                           ; BSR set to: 0
 14014                           
 14015                           ; BSR set to: 0
 14016  002AD4  8F62               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 14017                           
 14018                           ; BSR set to: 0
 14019  002AD6  0EFF               	movlw	255
 14020  002AD8  1760               	andwf	__div_to_l_@f1& (0+255),f,b
 14021  002ADA  0EFF               	movlw	255
 14022  002ADC  1761               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 14023  002ADE  0EFF               	movlw	255
 14024  002AE0  1762               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 14025  002AE2  0E00               	movlw	0
 14026  002AE4  1763               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 14027                           
 14028                           ; BSR set to: 0
 14029  002AE6  8F65               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 14030  002AE8  0EFF               	movlw	255
 14031  002AEA  1763               	andwf	__div_to_l_@f2& (0+255),f,b
 14032  002AEC  0EFF               	movlw	255
 14033  002AEE  1764               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 14034  002AF0  0EFF               	movlw	255
 14035  002AF2  1765               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 14036  002AF4  0E00               	movlw	0
 14037  002AF6  1766               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 14038                           
 14039                           ; BSR set to: 0
 14040  002AF8  0E00               	movlw	0
 14041  002AFA  6F66               	movwf	__div_to_l_@quot& (0+255),b
 14042  002AFC  0E00               	movlw	0
 14043  002AFE  6F67               	movwf	(__div_to_l_@quot+1)& (0+255),b
 14044  002B00  0E00               	movlw	0
 14045  002B02  6F68               	movwf	(__div_to_l_@quot+2)& (0+255),b
 14046  002B04  0E00               	movlw	0
 14047  002B06  6F69               	movwf	(__div_to_l_@quot+3)& (0+255),b
 14048                           
 14049                           ; BSR set to: 0
 14050  002B08  0E7F               	movlw	127
 14051  002B0A  5F6B               	subwf	__div_to_l_@exp1& (0+255),f,b
 14052                           
 14053                           ; BSR set to: 0
 14054  002B0C  516A               	movf	__div_to_l_@cntr& (0+255),w,b
 14055  002B0E  0FA0               	addlw	160
 14056  002B10  5F6B               	subwf	__div_to_l_@exp1& (0+255),f,b
 14057                           
 14058                           ; BSR set to: 0
 14059  002B12  0E20               	movlw	32
 14060  002B14  6F6A               	movwf	__div_to_l_@cntr& (0+255),b
 14061  002B16                     
 14062                           ; BSR set to: 0
 14063                           
 14064                           ; BSR set to: 0
 14065  002B16  90D8               	bcf	status,0,c
 14066  002B18  3766               	rlcf	__div_to_l_@quot& (0+255),f,b
 14067  002B1A  3767               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 14068  002B1C  3768               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 14069  002B1E  3769               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 14070                           
 14071                           ; BSR set to: 0
 14072  002B20  5163               	movf	__div_to_l_@f2& (0+255),w,b
 14073  002B22  5D60               	subwf	__div_to_l_@f1& (0+255),w,b
 14074  002B24  5164               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 14075  002B26  5961               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 14076  002B28  5165               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 14077  002B2A  5962               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 14078  002B2C  5166               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 14079  002B2E  5963               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 14080  002B30  A0D8               	btfss	status,0,c
 14081  002B32  D009               	goto	l3126
 14082                           
 14083                           ; BSR set to: 0
 14084  002B34  5163               	movf	__div_to_l_@f2& (0+255),w,b
 14085  002B36  5F60               	subwf	__div_to_l_@f1& (0+255),f,b
 14086  002B38  5164               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 14087  002B3A  5B61               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 14088  002B3C  5165               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 14089  002B3E  5B62               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 14090  002B40  5166               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 14091  002B42  5B63               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 14092                           
 14093                           ; BSR set to: 0
 14094  002B44  8166               	bsf	__div_to_l_@quot& (0+255),0,b
 14095  002B46                     l3126:
 14096                           
 14097                           ; BSR set to: 0
 14098                           
 14099                           ; BSR set to: 0
 14100  002B46  90D8               	bcf	status,0,c
 14101  002B48  3760               	rlcf	__div_to_l_@f1& (0+255),f,b
 14102  002B4A  3761               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 14103  002B4C  3762               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 14104  002B4E  3763               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 14105                           
 14106                           ; BSR set to: 0
 14107  002B50  2F6A               	decfsz	__div_to_l_@cntr& (0+255),f,b
 14108  002B52  D7E1               	goto	l3125
 14109                           
 14110                           ; BSR set to: 0
 14111                           
 14112                           ; BSR set to: 0
 14113  002B54  AF6B               	btfss	__div_to_l_@exp1& (0+255),7,b
 14114  002B56  D016               	goto	l3128
 14115                           
 14116                           ; BSR set to: 0
 14117  002B58  516B               	movf	__div_to_l_@exp1& (0+255),w,b
 14118  002B5A  0A80               	xorlw	128
 14119  002B5C  0F9F               	addlw	159
 14120  002B5E  B0D8               	btfsc	status,0,c
 14121  002B60  D009               	goto	l3129
 14122                           
 14123                           ; BSR set to: 0
 14124  002B62  0E00               	movlw	0
 14125  002B64  6F60               	movwf	?__div_to_l_& (0+255),b
 14126  002B66  0E00               	movlw	0
 14127  002B68  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
 14128  002B6A  0E00               	movlw	0
 14129  002B6C  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
 14130  002B6E  0E00               	movlw	0
 14131  002B70  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
 14132                           
 14133                           ; BSR set to: 0
 14134  002B72  0012               	return	
 14135  002B74                     l3129:
 14136                           
 14137                           ; BSR set to: 0
 14138                           
 14139                           ; BSR set to: 0
 14140                           
 14141                           ; BSR set to: 0
 14142  002B74  90D8               	bcf	status,0,c
 14143  002B76  3369               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 14144  002B78  3368               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 14145  002B7A  3367               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 14146  002B7C  3366               	rrcf	__div_to_l_@quot& (0+255),f,b
 14147                           
 14148                           ; BSR set to: 0
 14149  002B7E  3F6B               	incfsz	__div_to_l_@exp1& (0+255),f,b
 14150  002B80  D7F9               	goto	l3129
 14151                           
 14152                           ; BSR set to: 0
 14153  002B82  D015               	goto	u7520
 14154  002B84                     l3128:
 14155                           
 14156                           ; BSR set to: 0
 14157                           
 14158                           ; BSR set to: 0
 14159  002B84  0E1F               	movlw	31
 14160  002B86  656B               	cpfsgt	__div_to_l_@exp1& (0+255),b
 14161  002B88  D00F               	goto	l3134
 14162                           
 14163                           ; BSR set to: 0
 14164  002B8A  0E00               	movlw	0
 14165  002B8C  6F60               	movwf	?__div_to_l_& (0+255),b
 14166  002B8E  0E00               	movlw	0
 14167  002B90  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
 14168  002B92  0E00               	movlw	0
 14169  002B94  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
 14170  002B96  0E00               	movlw	0
 14171  002B98  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
 14172                           
 14173                           ; BSR set to: 0
 14174  002B9A  0012               	return	
 14175  002B9C                     
 14176                           ; BSR set to: 0
 14177                           
 14178                           ; BSR set to: 0
 14179  002B9C  90D8               	bcf	status,0,c
 14180  002B9E  3766               	rlcf	__div_to_l_@quot& (0+255),f,b
 14181  002BA0  3767               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 14182  002BA2  3768               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 14183  002BA4  3769               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 14184  002BA6  076B               	decf	__div_to_l_@exp1& (0+255),f,b
 14185  002BA8                     l3134:
 14186                           
 14187                           ; BSR set to: 0
 14188                           
 14189                           ; BSR set to: 0
 14190  002BA8  516B               	movf	__div_to_l_@exp1& (0+255),w,b
 14191  002BAA  A4D8               	btfss	status,2,c
 14192  002BAC  D7F7               	goto	l3135
 14193  002BAE                     u7520:
 14194                           
 14195                           ; BSR set to: 0
 14196                           
 14197                           ; BSR set to: 0
 14198  002BAE  C066  F060         	movff	__div_to_l_@quot,?__div_to_l_
 14199  002BB2  C067  F061         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 14200  002BB6  C068  F062         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 14201  002BBA  C069  F063         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 14202                           
 14203                           ; BSR set to: 0
 14204  002BBE  0012               	return		;funcret
 14205  002BC0                     __end_of__div_to_l_:
 14206                           	opt stack 0
 14207                           tblptru	equ	0xFF8
 14208                           tblptrh	equ	0xFF7
 14209                           tblptrl	equ	0xFF6
 14210                           tablat	equ	0xFF5
 14211                           prodh	equ	0xFF4
 14212                           prodl	equ	0xFF3
 14213                           intcon	equ	0xFF2
 14214                           indf0	equ	0xFEF
 14215                           postinc0	equ	0xFEE
 14216                           fsr0h	equ	0xFEA
 14217                           fsr0l	equ	0xFE9
 14218                           wreg	equ	0xFE8
 14219                           indf1	equ	0xFE7
 14220                           postdec1	equ	0xFE5
 14221                           fsr1h	equ	0xFE2
 14222                           fsr1l	equ	0xFE1
 14223                           indf2	equ	0xFDF
 14224                           postinc2	equ	0xFDE
 14225                           postdec2	equ	0xFDD
 14226                           plusw2	equ	0xFDB
 14227                           fsr2h	equ	0xFDA
 14228                           fsr2l	equ	0xFD9
 14229                           status	equ	0xFD8
 14230                           
 14231 ;; *************** function ___lltoft *****************
 14232 ;; Defined at:
 14233 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lltoft.c"
 14234 ;; Parameters:    Size  Location     Type
 14235 ;;  c               4    8[BANK0 ] unsigned long 
 14236 ;; Auto vars:     Size  Location     Type
 14237 ;;  exp             1   16[BANK0 ] unsigned char 
 14238 ;; Return value:  Size  Location     Type
 14239 ;;                  3    8[BANK0 ] float 
 14240 ;; Registers used:
 14241 ;;		wreg, status,2, status,0, cstack
 14242 ;; Tracked objects:
 14243 ;;		On entry : 0/0
 14244 ;;		On exit  : 0/0
 14245 ;;		Unchanged: 0/0
 14246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14247 ;;      Params:         0       4       0       0       0       0       0       0       0
 14248 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14249 ;;      Temps:          0       4       0       0       0       0       0       0       0
 14250 ;;      Totals:         0       9       0       0       0       0       0       0       0
 14251 ;;Total ram usage:        9 bytes
 14252 ;; Hardware stack levels used:    1
 14253 ;; Hardware stack levels required when called:   11
 14254 ;; This function calls:
 14255 ;;		___ftpack
 14256 ;; This function is called by:
 14257 ;;		_sprintf
 14258 ;; This function uses a non-reentrant model
 14259 ;;
 14260                           
 14261                           	psect	text48
 14262  0047BA                     __ptext48:
 14263                           	opt stack 0
 14264  0047BA                     ___lltoft:
 14265                           	opt stack 18
 14266                           
 14267                           ; BSR set to: 0
 14268                           ;incstack = 0
 14269  0047BA  0E8E               	movlw	142
 14270  0047BC  0100               	movlb	0	; () banked
 14271  0047BE  6F70               	movwf	___lltoft@exp& (0+255),b
 14272  0047C0  D006               	goto	l3333
 14273  0047C2                     
 14274                           ; BSR set to: 0
 14275                           
 14276                           ; BSR set to: 0
 14277  0047C2  90D8               	bcf	status,0,c
 14278  0047C4  336B               	rrcf	(___lltoft@c+3)& (0+255),f,b
 14279  0047C6  336A               	rrcf	(___lltoft@c+2)& (0+255),f,b
 14280  0047C8  3369               	rrcf	(___lltoft@c+1)& (0+255),f,b
 14281  0047CA  3368               	rrcf	___lltoft@c& (0+255),f,b
 14282  0047CC  2B70               	incf	___lltoft@exp& (0+255),f,b
 14283  0047CE                     l3333:
 14284                           
 14285                           ; BSR set to: 0
 14286                           
 14287                           ; BSR set to: 0
 14288  0047CE  0E00               	movlw	0
 14289  0047D0  1568               	andwf	___lltoft@c& (0+255),w,b
 14290  0047D2  6F6C               	movwf	??___lltoft& (0+255),b
 14291  0047D4  0E00               	movlw	0
 14292  0047D6  1569               	andwf	(___lltoft@c+1)& (0+255),w,b
 14293  0047D8  6F6D               	movwf	(??___lltoft+1)& (0+255),b
 14294  0047DA  0E00               	movlw	0
 14295  0047DC  156A               	andwf	(___lltoft@c+2)& (0+255),w,b
 14296  0047DE  6F6E               	movwf	(??___lltoft+2)& (0+255),b
 14297  0047E0  0EFF               	movlw	255
 14298  0047E2  156B               	andwf	(___lltoft@c+3)& (0+255),w,b
 14299  0047E4  6F6F               	movwf	(??___lltoft+3)& (0+255),b
 14300  0047E6  516C               	movf	??___lltoft& (0+255),w,b
 14301  0047E8  116D               	iorwf	(??___lltoft+1)& (0+255),w,b
 14302  0047EA  116E               	iorwf	(??___lltoft+2)& (0+255),w,b
 14303  0047EC  116F               	iorwf	(??___lltoft+3)& (0+255),w,b
 14304  0047EE  A4D8               	btfss	status,2,c
 14305  0047F0  D7E8               	goto	l3334
 14306                           
 14307                           ; BSR set to: 0
 14308                           
 14309                           ; BSR set to: 0
 14310  0047F2  C068  F060         	movff	___lltoft@c,___ftpack@arg
 14311  0047F6  C069  F061         	movff	___lltoft@c+1,___ftpack@arg+1
 14312  0047FA  C06A  F062         	movff	___lltoft@c+2,___ftpack@arg+2
 14313  0047FE  C070  F063         	movff	___lltoft@exp,___ftpack@exp
 14314  004802  0E00               	movlw	0
 14315  004804  6F64               	movwf	___ftpack@sign& (0+255),b
 14316  004806  EC15  F01E         	call	___ftpack	;wreg free
 14317  00480A  C060  F068         	movff	?___ftpack,?___lltoft
 14318  00480E  C061  F069         	movff	?___ftpack+1,?___lltoft+1
 14319  004812  C062  F06A         	movff	?___ftpack+2,?___lltoft+2
 14320  004816  0012               	return	
 14321  004818                     __end_of___lltoft:
 14322                           	opt stack 0
 14323                           tblptru	equ	0xFF8
 14324                           tblptrh	equ	0xFF7
 14325                           tblptrl	equ	0xFF6
 14326                           tablat	equ	0xFF5
 14327                           prodh	equ	0xFF4
 14328                           prodl	equ	0xFF3
 14329                           intcon	equ	0xFF2
 14330                           indf0	equ	0xFEF
 14331                           postinc0	equ	0xFEE
 14332                           fsr0h	equ	0xFEA
 14333                           fsr0l	equ	0xFE9
 14334                           wreg	equ	0xFE8
 14335                           indf1	equ	0xFE7
 14336                           postdec1	equ	0xFE5
 14337                           fsr1h	equ	0xFE2
 14338                           fsr1l	equ	0xFE1
 14339                           indf2	equ	0xFDF
 14340                           postinc2	equ	0xFDE
 14341                           postdec2	equ	0xFDD
 14342                           plusw2	equ	0xFDB
 14343                           fsr2h	equ	0xFDA
 14344                           fsr2l	equ	0xFD9
 14345                           status	equ	0xFD8
 14346                           
 14347 ;; *************** function ___llmod *****************
 14348 ;; Defined at:
 14349 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\llmod.c"
 14350 ;; Parameters:    Size  Location     Type
 14351 ;;  dividend        4   14[BANK0 ] unsigned long 
 14352 ;;  divisor         4   18[BANK0 ] unsigned long 
 14353 ;; Auto vars:     Size  Location     Type
 14354 ;;  counter         1   22[BANK0 ] unsigned char 
 14355 ;; Return value:  Size  Location     Type
 14356 ;;                  4   14[BANK0 ] unsigned long 
 14357 ;; Registers used:
 14358 ;;		wreg, status,2, status,0
 14359 ;; Tracked objects:
 14360 ;;		On entry : 0/0
 14361 ;;		On exit  : 0/0
 14362 ;;		Unchanged: 0/0
 14363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14364 ;;      Params:         0       8       0       0       0       0       0       0       0
 14365 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14366 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14367 ;;      Totals:         0       9       0       0       0       0       0       0       0
 14368 ;;Total ram usage:        9 bytes
 14369 ;; Hardware stack levels used:    1
 14370 ;; Hardware stack levels required when called:   10
 14371 ;; This function calls:
 14372 ;;		Nothing
 14373 ;; This function is called by:
 14374 ;;		_send
 14375 ;;		_sprintf
 14376 ;; This function uses a non-reentrant model
 14377 ;;
 14378                           
 14379                           	psect	text49
 14380  0046EC                     __ptext49:
 14381                           	opt stack 0
 14382  0046EC                     ___llmod:
 14383                           	opt stack 19
 14384                           
 14385                           ;incstack = 0
 14386  0046EC  0100               	movlb	0	; () banked
 14387  0046EE  5172               	movf	___llmod@divisor& (0+255),w,b
 14388  0046F0  1173               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 14389  0046F2  1174               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 14390  0046F4  1175               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 14391  0046F6  B4D8               	btfsc	status,2,c
 14392  0046F8  D024               	goto	l3327
 14393                           
 14394                           ; BSR set to: 0
 14395  0046FA  0E01               	movlw	1
 14396  0046FC  6F76               	movwf	___llmod@counter& (0+255),b
 14397  0046FE  D006               	goto	l3322
 14398  004700                     
 14399                           ; BSR set to: 0
 14400                           
 14401                           ; BSR set to: 0
 14402  004700  90D8               	bcf	status,0,c
 14403  004702  3772               	rlcf	___llmod@divisor& (0+255),f,b
 14404  004704  3773               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 14405  004706  3774               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 14406  004708  3775               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 14407  00470A  2B76               	incf	___llmod@counter& (0+255),f,b
 14408  00470C                     l3322:
 14409                           
 14410                           ; BSR set to: 0
 14411                           
 14412                           ; BSR set to: 0
 14413  00470C  AF75               	btfss	(___llmod@divisor+3)& (0+255),7,b
 14414  00470E  D7F8               	goto	l3323
 14415  004710                     u7750:
 14416                           
 14417                           ; BSR set to: 0
 14418                           
 14419                           ; BSR set to: 0
 14420                           
 14421                           ; BSR set to: 0
 14422  004710  5172               	movf	___llmod@divisor& (0+255),w,b
 14423  004712  5D6E               	subwf	___llmod@dividend& (0+255),w,b
 14424  004714  5173               	movf	(___llmod@divisor+1)& (0+255),w,b
 14425  004716  596F               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 14426  004718  5174               	movf	(___llmod@divisor+2)& (0+255),w,b
 14427  00471A  5970               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 14428  00471C  5175               	movf	(___llmod@divisor+3)& (0+255),w,b
 14429  00471E  5971               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 14430  004720  A0D8               	btfss	status,0,c
 14431  004722  D008               	goto	l3326
 14432                           
 14433                           ; BSR set to: 0
 14434  004724  5172               	movf	___llmod@divisor& (0+255),w,b
 14435  004726  5F6E               	subwf	___llmod@dividend& (0+255),f,b
 14436  004728  5173               	movf	(___llmod@divisor+1)& (0+255),w,b
 14437  00472A  5B6F               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 14438  00472C  5174               	movf	(___llmod@divisor+2)& (0+255),w,b
 14439  00472E  5B70               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 14440  004730  5175               	movf	(___llmod@divisor+3)& (0+255),w,b
 14441  004732  5B71               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 14442  004734                     l3326:
 14443                           
 14444                           ; BSR set to: 0
 14445                           
 14446                           ; BSR set to: 0
 14447  004734  90D8               	bcf	status,0,c
 14448  004736  3375               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 14449  004738  3374               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 14450  00473A  3373               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 14451  00473C  3372               	rrcf	___llmod@divisor& (0+255),f,b
 14452                           
 14453                           ; BSR set to: 0
 14454  00473E  2F76               	decfsz	___llmod@counter& (0+255),f,b
 14455  004740  D7E7               	goto	u7750
 14456  004742                     l3327:
 14457                           
 14458                           ; BSR set to: 0
 14459                           
 14460                           ; BSR set to: 0
 14461  004742  C06E  F06E         	movff	___llmod@dividend,?___llmod
 14462  004746  C06F  F06F         	movff	___llmod@dividend+1,?___llmod+1
 14463  00474A  C070  F070         	movff	___llmod@dividend+2,?___llmod+2
 14464  00474E  C071  F071         	movff	___llmod@dividend+3,?___llmod+3
 14465                           
 14466                           ; BSR set to: 0
 14467  004752  0012               	return		;funcret
 14468  004754                     __end_of___llmod:
 14469                           	opt stack 0
 14470                           tblptru	equ	0xFF8
 14471                           tblptrh	equ	0xFF7
 14472                           tblptrl	equ	0xFF6
 14473                           tablat	equ	0xFF5
 14474                           prodh	equ	0xFF4
 14475                           prodl	equ	0xFF3
 14476                           intcon	equ	0xFF2
 14477                           indf0	equ	0xFEF
 14478                           postinc0	equ	0xFEE
 14479                           fsr0h	equ	0xFEA
 14480                           fsr0l	equ	0xFE9
 14481                           wreg	equ	0xFE8
 14482                           indf1	equ	0xFE7
 14483                           postdec1	equ	0xFE5
 14484                           fsr1h	equ	0xFE2
 14485                           fsr1l	equ	0xFE1
 14486                           indf2	equ	0xFDF
 14487                           postinc2	equ	0xFDE
 14488                           postdec2	equ	0xFDD
 14489                           plusw2	equ	0xFDB
 14490                           fsr2h	equ	0xFDA
 14491                           fsr2l	equ	0xFD9
 14492                           status	equ	0xFD8
 14493                           
 14494 ;; *************** function ___lldiv *****************
 14495 ;; Defined at:
 14496 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lldiv.c"
 14497 ;; Parameters:    Size  Location     Type
 14498 ;;  dividend        4    0[BANK0 ] unsigned long 
 14499 ;;  divisor         4    4[BANK0 ] unsigned long 
 14500 ;; Auto vars:     Size  Location     Type
 14501 ;;  quotient        4    8[BANK0 ] unsigned long 
 14502 ;;  counter         1   12[BANK0 ] unsigned char 
 14503 ;; Return value:  Size  Location     Type
 14504 ;;                  4    0[BANK0 ] unsigned long 
 14505 ;; Registers used:
 14506 ;;		wreg, status,2, status,0
 14507 ;; Tracked objects:
 14508 ;;		On entry : 0/0
 14509 ;;		On exit  : 0/0
 14510 ;;		Unchanged: 0/0
 14511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14512 ;;      Params:         0       8       0       0       0       0       0       0       0
 14513 ;;      Locals:         0       5       0       0       0       0       0       0       0
 14514 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14515 ;;      Totals:         0      13       0       0       0       0       0       0       0
 14516 ;;Total ram usage:       13 bytes
 14517 ;; Hardware stack levels used:    1
 14518 ;; Hardware stack levels required when called:   10
 14519 ;; This function calls:
 14520 ;;		Nothing
 14521 ;; This function is called by:
 14522 ;;		_setup_uart
 14523 ;;		_sprintf
 14524 ;; This function uses a non-reentrant model
 14525 ;;
 14526                           
 14527                           	psect	text50
 14528  00448E                     __ptext50:
 14529                           	opt stack 0
 14530  00448E                     ___lldiv:
 14531                           	opt stack 19
 14532                           
 14533                           ; BSR set to: 0
 14534                           ;incstack = 0
 14535  00448E  0E00               	movlw	0
 14536  004490  0100               	movlb	0	; () banked
 14537  004492  6F68               	movwf	___lldiv@quotient& (0+255),b
 14538  004494  0E00               	movlw	0
 14539  004496  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 14540  004498  0E00               	movlw	0
 14541  00449A  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 14542  00449C  0E00               	movlw	0
 14543  00449E  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 14544                           
 14545                           ; BSR set to: 0
 14546  0044A0  5164               	movf	___lldiv@divisor& (0+255),w,b
 14547  0044A2  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 14548  0044A4  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 14549  0044A6  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 14550  0044A8  B4D8               	btfsc	status,2,c
 14551  0044AA  D02A               	goto	l3317
 14552                           
 14553                           ; BSR set to: 0
 14554  0044AC  0E01               	movlw	1
 14555  0044AE  6F6C               	movwf	___lldiv@counter& (0+255),b
 14556  0044B0  D006               	goto	l3312
 14557  0044B2                     
 14558                           ; BSR set to: 0
 14559                           
 14560                           ; BSR set to: 0
 14561  0044B2  90D8               	bcf	status,0,c
 14562  0044B4  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 14563  0044B6  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 14564  0044B8  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 14565  0044BA  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 14566  0044BC  2B6C               	incf	___lldiv@counter& (0+255),f,b
 14567  0044BE                     l3312:
 14568                           
 14569                           ; BSR set to: 0
 14570                           
 14571                           ; BSR set to: 0
 14572  0044BE  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 14573  0044C0  D7F8               	goto	l3313
 14574  0044C2                     u7720:
 14575                           
 14576                           ; BSR set to: 0
 14577                           
 14578                           ; BSR set to: 0
 14579                           
 14580                           ; BSR set to: 0
 14581  0044C2  90D8               	bcf	status,0,c
 14582  0044C4  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 14583  0044C6  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 14584  0044C8  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 14585  0044CA  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 14586                           
 14587                           ; BSR set to: 0
 14588  0044CC  5164               	movf	___lldiv@divisor& (0+255),w,b
 14589  0044CE  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 14590  0044D0  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 14591  0044D2  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 14592  0044D4  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 14593  0044D6  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 14594  0044D8  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 14595  0044DA  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 14596  0044DC  A0D8               	btfss	status,0,c
 14597  0044DE  D009               	goto	l3316
 14598                           
 14599                           ; BSR set to: 0
 14600  0044E0  5164               	movf	___lldiv@divisor& (0+255),w,b
 14601  0044E2  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 14602  0044E4  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 14603  0044E6  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 14604  0044E8  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 14605  0044EA  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 14606  0044EC  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 14607  0044EE  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 14608                           
 14609                           ; BSR set to: 0
 14610  0044F0  8168               	bsf	___lldiv@quotient& (0+255),0,b
 14611  0044F2                     l3316:
 14612                           
 14613                           ; BSR set to: 0
 14614                           
 14615                           ; BSR set to: 0
 14616  0044F2  90D8               	bcf	status,0,c
 14617  0044F4  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 14618  0044F6  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 14619  0044F8  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 14620  0044FA  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 14621                           
 14622                           ; BSR set to: 0
 14623  0044FC  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 14624  0044FE  D7E1               	goto	u7720
 14625  004500                     l3317:
 14626                           
 14627                           ; BSR set to: 0
 14628                           
 14629                           ; BSR set to: 0
 14630  004500  C068  F060         	movff	___lldiv@quotient,?___lldiv
 14631  004504  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 14632  004508  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 14633  00450C  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 14634                           
 14635                           ; BSR set to: 0
 14636  004510  0012               	return		;funcret
 14637  004512                     __end_of___lldiv:
 14638                           	opt stack 0
 14639                           tblptru	equ	0xFF8
 14640                           tblptrh	equ	0xFF7
 14641                           tblptrl	equ	0xFF6
 14642                           tablat	equ	0xFF5
 14643                           prodh	equ	0xFF4
 14644                           prodl	equ	0xFF3
 14645                           intcon	equ	0xFF2
 14646                           indf0	equ	0xFEF
 14647                           postinc0	equ	0xFEE
 14648                           fsr0h	equ	0xFEA
 14649                           fsr0l	equ	0xFE9
 14650                           wreg	equ	0xFE8
 14651                           indf1	equ	0xFE7
 14652                           postdec1	equ	0xFE5
 14653                           fsr1h	equ	0xFE2
 14654                           fsr1l	equ	0xFE1
 14655                           indf2	equ	0xFDF
 14656                           postinc2	equ	0xFDE
 14657                           postdec2	equ	0xFDD
 14658                           plusw2	equ	0xFDB
 14659                           fsr2h	equ	0xFDA
 14660                           fsr2l	equ	0xFD9
 14661                           status	equ	0xFD8
 14662                           
 14663 ;; *************** function ___fttol *****************
 14664 ;; Defined at:
 14665 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\fttol.c"
 14666 ;; Parameters:    Size  Location     Type
 14667 ;;  f1              3   80[BANK0 ] float 
 14668 ;; Auto vars:     Size  Location     Type
 14669 ;;  lval            4   90[BANK0 ] unsigned long 
 14670 ;;  exp1            1   94[BANK0 ] unsigned char 
 14671 ;;  sign1           1   89[BANK0 ] unsigned char 
 14672 ;; Return value:  Size  Location     Type
 14673 ;;                  4   80[BANK0 ] long 
 14674 ;; Registers used:
 14675 ;;		wreg, status,2, status,0
 14676 ;; Tracked objects:
 14677 ;;		On entry : 0/0
 14678 ;;		On exit  : 0/0
 14679 ;;		Unchanged: 0/0
 14680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14681 ;;      Params:         0       4       0       0       0       0       0       0       0
 14682 ;;      Locals:         0       6       0       0       0       0       0       0       0
 14683 ;;      Temps:          0       5       0       0       0       0       0       0       0
 14684 ;;      Totals:         0      15       0       0       0       0       0       0       0
 14685 ;;Total ram usage:       15 bytes
 14686 ;; Hardware stack levels used:    1
 14687 ;; Hardware stack levels required when called:   10
 14688 ;; This function calls:
 14689 ;;		Nothing
 14690 ;; This function is called by:
 14691 ;;		_main
 14692 ;;		_sprintf
 14693 ;; This function uses a non-reentrant model
 14694 ;;
 14695                           
 14696                           	psect	text51
 14697  0030F4                     __ptext51:
 14698                           	opt stack 0
 14699  0030F4                     ___fttol:
 14700                           	opt stack 19
 14701                           
 14702                           ; BSR set to: 0
 14703                           ;incstack = 0
 14704  0030F4  C0B2  F0B4         	movff	___fttol@f1+2,??___fttol
 14705  0030F8  0100               	movlb	0	; () banked
 14706  0030FA  6BB5               	clrf	(??___fttol+1)& (0+255),b
 14707  0030FC  6BB6               	clrf	(??___fttol+2)& (0+255),b
 14708  0030FE  35B1               	rlcf	(___fttol@f1+1)& (0+255),w,b
 14709  003100  37B4               	rlcf	??___fttol& (0+255),f,b
 14710  003102  E301               	bnc	u7601
 14711  003104  81B5               	bsf	(??___fttol+1)& (0+255),0,b
 14712  003106                     u7601:
 14713  003106  51B4               	movf	??___fttol& (0+255),w,b
 14714  003108  6FBE               	movwf	___fttol@exp1& (0+255),b
 14715  00310A  51BE               	movf	___fttol@exp1& (0+255),w,b
 14716  00310C  A4D8               	btfss	status,2,c
 14717  00310E  D009               	goto	l3271
 14718                           
 14719                           ; BSR set to: 0
 14720  003110  0E00               	movlw	0
 14721  003112  6FB0               	movwf	?___fttol& (0+255),b
 14722  003114  0E00               	movlw	0
 14723  003116  6FB1               	movwf	(?___fttol+1)& (0+255),b
 14724  003118  0E00               	movlw	0
 14725  00311A  6FB2               	movwf	(?___fttol+2)& (0+255),b
 14726  00311C  0E00               	movlw	0
 14727  00311E  6FB3               	movwf	(?___fttol+3)& (0+255),b
 14728                           
 14729                           ; BSR set to: 0
 14730  003120  0012               	return	
 14731  003122                     l3271:
 14732                           
 14733                           ; BSR set to: 0
 14734                           
 14735                           ; BSR set to: 0
 14736  003122  0E17               	movlw	23
 14737  003124  6FB4               	movwf	??___fttol& (0+255),b
 14738  003126  C0B0  F0B5         	movff	___fttol@f1,??___fttol+1
 14739  00312A  C0B1  F0B6         	movff	___fttol@f1+1,??___fttol+2
 14740  00312E  C0B2  F0B7         	movff	___fttol@f1+2,??___fttol+3
 14741  003132  29B4               	incf	??___fttol& (0+255),w,b
 14742  003134  6FB8               	movwf	(??___fttol+4)& (0+255),b
 14743  003136  D004               	goto	u7620
 14744  003138                     u7625:
 14745  003138  90D8               	bcf	status,0,c
 14746  00313A  33B7               	rrcf	(??___fttol+3)& (0+255),f,b
 14747  00313C  33B6               	rrcf	(??___fttol+2)& (0+255),f,b
 14748  00313E  33B5               	rrcf	(??___fttol+1)& (0+255),f,b
 14749  003140                     u7620:
 14750  003140  2FB8               	decfsz	(??___fttol+4)& (0+255),f,b
 14751  003142  D7FA               	goto	u7625
 14752  003144  0100               	movlb	0	; () banked
 14753  003146  51B5               	movf	(??___fttol+1)& (0+255),w,b
 14754  003148  6FB9               	movwf	___fttol@sign1& (0+255),b
 14755                           
 14756                           ; BSR set to: 0
 14757  00314A  8FB1               	bsf	(___fttol@f1+1)& (0+255),7,b
 14758                           
 14759                           ; BSR set to: 0
 14760  00314C  0EFF               	movlw	255
 14761  00314E  17B0               	andwf	___fttol@f1& (0+255),f,b
 14762  003150  0EFF               	movlw	255
 14763  003152  17B1               	andwf	(___fttol@f1+1)& (0+255),f,b
 14764  003154  0E00               	movlw	0
 14765  003156  17B2               	andwf	(___fttol@f1+2)& (0+255),f,b
 14766                           
 14767                           ; BSR set to: 0
 14768  003158  51B0               	movf	___fttol@f1& (0+255),w,b
 14769  00315A  6FBA               	movwf	___fttol@lval& (0+255),b
 14770  00315C  51B1               	movf	(___fttol@f1+1)& (0+255),w,b
 14771  00315E  6FBB               	movwf	(___fttol@lval+1)& (0+255),b
 14772  003160  51B2               	movf	(___fttol@f1+2)& (0+255),w,b
 14773  003162  6FBC               	movwf	(___fttol@lval+2)& (0+255),b
 14774  003164  6BBD               	clrf	(___fttol@lval+3)& (0+255),b
 14775                           
 14776                           ; BSR set to: 0
 14777  003166  0E8E               	movlw	142
 14778  003168  5FBE               	subwf	___fttol@exp1& (0+255),f,b
 14779                           
 14780                           ; BSR set to: 0
 14781  00316A  AFBE               	btfss	___fttol@exp1& (0+255),7,b
 14782  00316C  D016               	goto	l3273
 14783                           
 14784                           ; BSR set to: 0
 14785  00316E  51BE               	movf	___fttol@exp1& (0+255),w,b
 14786  003170  0A80               	xorlw	128
 14787  003172  0F8F               	addlw	143
 14788  003174  B0D8               	btfsc	status,0,c
 14789  003176  D009               	goto	l3274
 14790                           
 14791                           ; BSR set to: 0
 14792  003178  0E00               	movlw	0
 14793  00317A  6FB0               	movwf	?___fttol& (0+255),b
 14794  00317C  0E00               	movlw	0
 14795  00317E  6FB1               	movwf	(?___fttol+1)& (0+255),b
 14796  003180  0E00               	movlw	0
 14797  003182  6FB2               	movwf	(?___fttol+2)& (0+255),b
 14798  003184  0E00               	movlw	0
 14799  003186  6FB3               	movwf	(?___fttol+3)& (0+255),b
 14800                           
 14801                           ; BSR set to: 0
 14802  003188  0012               	return	
 14803  00318A                     l3274:
 14804                           
 14805                           ; BSR set to: 0
 14806                           
 14807                           ; BSR set to: 0
 14808                           
 14809                           ; BSR set to: 0
 14810  00318A  90D8               	bcf	status,0,c
 14811  00318C  33BD               	rrcf	(___fttol@lval+3)& (0+255),f,b
 14812  00318E  33BC               	rrcf	(___fttol@lval+2)& (0+255),f,b
 14813  003190  33BB               	rrcf	(___fttol@lval+1)& (0+255),f,b
 14814  003192  33BA               	rrcf	___fttol@lval& (0+255),f,b
 14815                           
 14816                           ; BSR set to: 0
 14817  003194  3FBE               	incfsz	___fttol@exp1& (0+255),f,b
 14818  003196  D7F9               	goto	l3274
 14819                           
 14820                           ; BSR set to: 0
 14821  003198  D015               	goto	u7660
 14822  00319A                     l3273:
 14823                           
 14824                           ; BSR set to: 0
 14825                           
 14826                           ; BSR set to: 0
 14827  00319A  0E17               	movlw	23
 14828  00319C  65BE               	cpfsgt	___fttol@exp1& (0+255),b
 14829  00319E  D00F               	goto	l3279
 14830                           
 14831                           ; BSR set to: 0
 14832  0031A0  0E00               	movlw	0
 14833  0031A2  6FB0               	movwf	?___fttol& (0+255),b
 14834  0031A4  0E00               	movlw	0
 14835  0031A6  6FB1               	movwf	(?___fttol+1)& (0+255),b
 14836  0031A8  0E00               	movlw	0
 14837  0031AA  6FB2               	movwf	(?___fttol+2)& (0+255),b
 14838  0031AC  0E00               	movlw	0
 14839  0031AE  6FB3               	movwf	(?___fttol+3)& (0+255),b
 14840                           
 14841                           ; BSR set to: 0
 14842  0031B0  0012               	return	
 14843  0031B2                     
 14844                           ; BSR set to: 0
 14845                           
 14846                           ; BSR set to: 0
 14847  0031B2  90D8               	bcf	status,0,c
 14848  0031B4  37BA               	rlcf	___fttol@lval& (0+255),f,b
 14849  0031B6  37BB               	rlcf	(___fttol@lval+1)& (0+255),f,b
 14850  0031B8  37BC               	rlcf	(___fttol@lval+2)& (0+255),f,b
 14851  0031BA  37BD               	rlcf	(___fttol@lval+3)& (0+255),f,b
 14852  0031BC  07BE               	decf	___fttol@exp1& (0+255),f,b
 14853  0031BE                     l3279:
 14854                           
 14855                           ; BSR set to: 0
 14856                           
 14857                           ; BSR set to: 0
 14858  0031BE  51BE               	movf	___fttol@exp1& (0+255),w,b
 14859  0031C0  A4D8               	btfss	status,2,c
 14860  0031C2  D7F7               	goto	l3280
 14861  0031C4                     u7660:
 14862                           
 14863                           ; BSR set to: 0
 14864                           
 14865                           ; BSR set to: 0
 14866                           
 14867                           ; BSR set to: 0
 14868  0031C4  51B9               	movf	___fttol@sign1& (0+255),w,b
 14869  0031C6  B4D8               	btfsc	status,2,c
 14870  0031C8  D008               	goto	l3282
 14871                           
 14872                           ; BSR set to: 0
 14873  0031CA  1FBD               	comf	(___fttol@lval+3)& (0+255),f,b
 14874  0031CC  1FBC               	comf	(___fttol@lval+2)& (0+255),f,b
 14875  0031CE  1FBB               	comf	(___fttol@lval+1)& (0+255),f,b
 14876  0031D0  6DBA               	negf	___fttol@lval& (0+255),b
 14877  0031D2  0E00               	movlw	0
 14878  0031D4  23BB               	addwfc	(___fttol@lval+1)& (0+255),f,b
 14879  0031D6  23BC               	addwfc	(___fttol@lval+2)& (0+255),f,b
 14880  0031D8  23BD               	addwfc	(___fttol@lval+3)& (0+255),f,b
 14881  0031DA                     l3282:
 14882                           
 14883                           ; BSR set to: 0
 14884                           
 14885                           ; BSR set to: 0
 14886  0031DA  C0BA  F0B0         	movff	___fttol@lval,?___fttol
 14887  0031DE  C0BB  F0B1         	movff	___fttol@lval+1,?___fttol+1
 14888  0031E2  C0BC  F0B2         	movff	___fttol@lval+2,?___fttol+2
 14889  0031E6  C0BD  F0B3         	movff	___fttol@lval+3,?___fttol+3
 14890  0031EA  0012               	return	
 14891  0031EC                     __end_of___fttol:
 14892                           	opt stack 0
 14893                           tblptru	equ	0xFF8
 14894                           tblptrh	equ	0xFF7
 14895                           tblptrl	equ	0xFF6
 14896                           tablat	equ	0xFF5
 14897                           prodh	equ	0xFF4
 14898                           prodl	equ	0xFF3
 14899                           intcon	equ	0xFF2
 14900                           indf0	equ	0xFEF
 14901                           postinc0	equ	0xFEE
 14902                           fsr0h	equ	0xFEA
 14903                           fsr0l	equ	0xFE9
 14904                           wreg	equ	0xFE8
 14905                           indf1	equ	0xFE7
 14906                           postdec1	equ	0xFE5
 14907                           fsr1h	equ	0xFE2
 14908                           fsr1l	equ	0xFE1
 14909                           indf2	equ	0xFDF
 14910                           postinc2	equ	0xFDE
 14911                           postdec2	equ	0xFDD
 14912                           plusw2	equ	0xFDB
 14913                           fsr2h	equ	0xFDA
 14914                           fsr2l	equ	0xFD9
 14915                           status	equ	0xFD8
 14916                           
 14917 ;; *************** function ___ftsub *****************
 14918 ;; Defined at:
 14919 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftsub.c"
 14920 ;; Parameters:    Size  Location     Type
 14921 ;;  f1              3   32[BANK0 ] float 
 14922 ;;  f2              3   35[BANK0 ] float 
 14923 ;; Auto vars:     Size  Location     Type
 14924 ;;		None
 14925 ;; Return value:  Size  Location     Type
 14926 ;;                  3   32[BANK0 ] float 
 14927 ;; Registers used:
 14928 ;;		wreg, status,2, status,0, cstack
 14929 ;; Tracked objects:
 14930 ;;		On entry : 0/0
 14931 ;;		On exit  : 0/0
 14932 ;;		Unchanged: 0/0
 14933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14934 ;;      Params:         0       6       0       0       0       0       0       0       0
 14935 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14936 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14937 ;;      Totals:         0       6       0       0       0       0       0       0       0
 14938 ;;Total ram usage:        6 bytes
 14939 ;; Hardware stack levels used:    1
 14940 ;; Hardware stack levels required when called:   12
 14941 ;; This function calls:
 14942 ;;		___ftadd
 14943 ;; This function is called by:
 14944 ;;		_sprintf
 14945 ;; This function uses a non-reentrant model
 14946 ;;
 14947                           
 14948                           	psect	text52
 14949  004CCC                     __ptext52:
 14950                           	opt stack 0
 14951  004CCC                     ___ftsub:
 14952                           	opt stack 17
 14953                           
 14954                           ; BSR set to: 0
 14955                           ;incstack = 0
 14956  004CCC  0100               	movlb	0	; () banked
 14957  004CCE  5183               	movf	___ftsub@f2& (0+255),w,b
 14958  004CD0  1184               	iorwf	(___ftsub@f2+1)& (0+255),w,b
 14959  004CD2  1185               	iorwf	(___ftsub@f2+2)& (0+255),w,b
 14960  004CD4  B4D8               	btfsc	status,2,c
 14961  004CD6  D006               	goto	l3267
 14962                           
 14963                           ; BSR set to: 0
 14964  004CD8  0E00               	movlw	0
 14965  004CDA  1B83               	xorwf	___ftsub@f2& (0+255),f,b
 14966  004CDC  0E00               	movlw	0
 14967  004CDE  1B84               	xorwf	(___ftsub@f2+1)& (0+255),f,b
 14968  004CE0  0E80               	movlw	128
 14969  004CE2  1B85               	xorwf	(___ftsub@f2+2)& (0+255),f,b
 14970  004CE4                     l3267:
 14971                           
 14972                           ; BSR set to: 0
 14973                           
 14974                           ; BSR set to: 0
 14975  004CE4  C080  F074         	movff	___ftsub@f1,___ftadd@f1
 14976  004CE8  C081  F075         	movff	___ftsub@f1+1,___ftadd@f1+1
 14977  004CEC  C082  F076         	movff	___ftsub@f1+2,___ftadd@f1+2
 14978  004CF0  C083  F077         	movff	___ftsub@f2,___ftadd@f2
 14979  004CF4  C084  F078         	movff	___ftsub@f2+1,___ftadd@f2+1
 14980  004CF8  C085  F079         	movff	___ftsub@f2+2,___ftadd@f2+2
 14981  004CFC  ECD6  F010         	call	___ftadd	;wreg free
 14982  004D00  C074  F080         	movff	?___ftadd,?___ftsub
 14983  004D04  C075  F081         	movff	?___ftadd+1,?___ftsub+1
 14984  004D08  C076  F082         	movff	?___ftadd+2,?___ftsub+2
 14985  004D0C  0012               	return	
 14986  004D0E                     __end_of___ftsub:
 14987                           	opt stack 0
 14988                           tblptru	equ	0xFF8
 14989                           tblptrh	equ	0xFF7
 14990                           tblptrl	equ	0xFF6
 14991                           tablat	equ	0xFF5
 14992                           prodh	equ	0xFF4
 14993                           prodl	equ	0xFF3
 14994                           intcon	equ	0xFF2
 14995                           indf0	equ	0xFEF
 14996                           postinc0	equ	0xFEE
 14997                           fsr0h	equ	0xFEA
 14998                           fsr0l	equ	0xFE9
 14999                           wreg	equ	0xFE8
 15000                           indf1	equ	0xFE7
 15001                           postdec1	equ	0xFE5
 15002                           fsr1h	equ	0xFE2
 15003                           fsr1l	equ	0xFE1
 15004                           indf2	equ	0xFDF
 15005                           postinc2	equ	0xFDE
 15006                           postdec2	equ	0xFDD
 15007                           plusw2	equ	0xFDB
 15008                           fsr2h	equ	0xFDA
 15009                           fsr2l	equ	0xFD9
 15010                           status	equ	0xFD8
 15011                           
 15012 ;; *************** function ___ftadd *****************
 15013 ;; Defined at:
 15014 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftadd.c"
 15015 ;; Parameters:    Size  Location     Type
 15016 ;;  f1              3   20[BANK0 ] float 
 15017 ;;  f2              3   23[BANK0 ] float 
 15018 ;; Auto vars:     Size  Location     Type
 15019 ;;  exp1            1   31[BANK0 ] unsigned char 
 15020 ;;  exp2            1   30[BANK0 ] unsigned char 
 15021 ;;  sign            1   29[BANK0 ] unsigned char 
 15022 ;; Return value:  Size  Location     Type
 15023 ;;                  3   20[BANK0 ] float 
 15024 ;; Registers used:
 15025 ;;		wreg, status,2, status,0, cstack
 15026 ;; Tracked objects:
 15027 ;;		On entry : 0/0
 15028 ;;		On exit  : 0/0
 15029 ;;		Unchanged: 0/0
 15030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15031 ;;      Params:         0       6       0       0       0       0       0       0       0
 15032 ;;      Locals:         0       3       0       0       0       0       0       0       0
 15033 ;;      Temps:          0       3       0       0       0       0       0       0       0
 15034 ;;      Totals:         0      12       0       0       0       0       0       0       0
 15035 ;;Total ram usage:       12 bytes
 15036 ;; Hardware stack levels used:    1
 15037 ;; Hardware stack levels required when called:   11
 15038 ;; This function calls:
 15039 ;;		___ftpack
 15040 ;; This function is called by:
 15041 ;;		_le_AD
 15042 ;;		_sprintf
 15043 ;;		___ftsub
 15044 ;; This function uses a non-reentrant model
 15045 ;;
 15046                           
 15047                           	psect	text53
 15048  0021AC                     __ptext53:
 15049                           	opt stack 0
 15050  0021AC                     ___ftadd:
 15051                           	opt stack 17
 15052                           
 15053                           ;incstack = 0
 15054  0021AC  C076  F07A         	movff	___ftadd@f1+2,??___ftadd
 15055  0021B0  0100               	movlb	0	; () banked
 15056  0021B2  6B7B               	clrf	(??___ftadd+1)& (0+255),b
 15057  0021B4  6B7C               	clrf	(??___ftadd+2)& (0+255),b
 15058  0021B6  3575               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 15059  0021B8  377A               	rlcf	??___ftadd& (0+255),f,b
 15060  0021BA  E301               	bnc	u6551
 15061  0021BC  817B               	bsf	(??___ftadd+1)& (0+255),0,b
 15062  0021BE                     u6551:
 15063  0021BE  517A               	movf	??___ftadd& (0+255),w,b
 15064  0021C0  6F7F               	movwf	___ftadd@exp1& (0+255),b
 15065  0021C2  C079  F07A         	movff	___ftadd@f2+2,??___ftadd
 15066  0021C6  6B7B               	clrf	(??___ftadd+1)& (0+255),b
 15067  0021C8  6B7C               	clrf	(??___ftadd+2)& (0+255),b
 15068  0021CA  3578               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 15069  0021CC  377A               	rlcf	??___ftadd& (0+255),f,b
 15070  0021CE  E301               	bnc	u6561
 15071  0021D0  817B               	bsf	(??___ftadd+1)& (0+255),0,b
 15072  0021D2                     u6561:
 15073  0021D2  517A               	movf	??___ftadd& (0+255),w,b
 15074  0021D4  6F7E               	movwf	___ftadd@exp2& (0+255),b
 15075                           
 15076                           ; BSR set to: 0
 15077  0021D6  517F               	movf	___ftadd@exp1& (0+255),w,b
 15078  0021D8  B4D8               	btfsc	status,2,c
 15079  0021DA  D00B               	goto	u6590
 15080                           
 15081                           ; BSR set to: 0
 15082  0021DC  517E               	movf	___ftadd@exp2& (0+255),w,b
 15083  0021DE  5D7F               	subwf	___ftadd@exp1& (0+255),w,b
 15084  0021E0  B0D8               	btfsc	status,0,c
 15085  0021E2  D00E               	goto	l3185
 15086                           
 15087                           ; BSR set to: 0
 15088  0021E4  517F               	movf	___ftadd@exp1& (0+255),w,b
 15089  0021E6  0800               	sublw	0
 15090  0021E8  257E               	addwf	___ftadd@exp2& (0+255),w,b
 15091  0021EA  6F7A               	movwf	??___ftadd& (0+255),b
 15092  0021EC  0E18               	movlw	24
 15093  0021EE  657A               	cpfsgt	??___ftadd& (0+255),b
 15094  0021F0  D007               	goto	l3185
 15095  0021F2                     u6590:
 15096                           
 15097                           ; BSR set to: 0
 15098  0021F2  C077  F074         	movff	___ftadd@f2,?___ftadd
 15099  0021F6  C078  F075         	movff	___ftadd@f2+1,?___ftadd+1
 15100  0021FA  C079  F076         	movff	___ftadd@f2+2,?___ftadd+2
 15101  0021FE  0012               	return	
 15102  002200                     l3185:
 15103                           
 15104                           ; BSR set to: 0
 15105                           
 15106                           ; BSR set to: 0
 15107  002200  517E               	movf	___ftadd@exp2& (0+255),w,b
 15108  002202  B4D8               	btfsc	status,2,c
 15109  002204  D00B               	goto	u6620
 15110                           
 15111                           ; BSR set to: 0
 15112  002206  517F               	movf	___ftadd@exp1& (0+255),w,b
 15113  002208  5D7E               	subwf	___ftadd@exp2& (0+255),w,b
 15114  00220A  B0D8               	btfsc	status,0,c
 15115  00220C  D00E               	goto	l3189
 15116                           
 15117                           ; BSR set to: 0
 15118  00220E  517E               	movf	___ftadd@exp2& (0+255),w,b
 15119  002210  0800               	sublw	0
 15120  002212  257F               	addwf	___ftadd@exp1& (0+255),w,b
 15121  002214  6F7A               	movwf	??___ftadd& (0+255),b
 15122  002216  0E18               	movlw	24
 15123  002218  657A               	cpfsgt	??___ftadd& (0+255),b
 15124  00221A  D007               	goto	l3189
 15125  00221C                     u6620:
 15126                           
 15127                           ; BSR set to: 0
 15128  00221C  C074  F074         	movff	___ftadd@f1,?___ftadd
 15129  002220  C075  F075         	movff	___ftadd@f1+1,?___ftadd+1
 15130  002224  C076  F076         	movff	___ftadd@f1+2,?___ftadd+2
 15131  002228  0012               	return	
 15132  00222A                     l3189:
 15133                           
 15134                           ; BSR set to: 0
 15135                           
 15136                           ; BSR set to: 0
 15137  00222A  0E06               	movlw	6
 15138  00222C  6F7D               	movwf	___ftadd@sign& (0+255),b
 15139                           
 15140                           ; BSR set to: 0
 15141  00222E  BF76               	btfsc	(___ftadd@f1+2)& (0+255),7,b
 15142                           
 15143                           ; BSR set to: 0
 15144  002230  8F7D               	bsf	___ftadd@sign& (0+255),7,b
 15145                           
 15146                           ; BSR set to: 0
 15147                           
 15148                           ; BSR set to: 0
 15149  002232  BF79               	btfsc	(___ftadd@f2+2)& (0+255),7,b
 15150                           
 15151                           ; BSR set to: 0
 15152  002234  8D7D               	bsf	___ftadd@sign& (0+255),6,b
 15153                           
 15154                           ; BSR set to: 0
 15155  002236  8F75               	bsf	(___ftadd@f1+1)& (0+255),7,b
 15156                           
 15157                           ; BSR set to: 0
 15158  002238  0EFF               	movlw	255
 15159  00223A  1774               	andwf	___ftadd@f1& (0+255),f,b
 15160  00223C  0EFF               	movlw	255
 15161  00223E  1775               	andwf	(___ftadd@f1+1)& (0+255),f,b
 15162  002240  0E00               	movlw	0
 15163  002242  1776               	andwf	(___ftadd@f1+2)& (0+255),f,b
 15164  002244  8F78               	bsf	(___ftadd@f2+1)& (0+255),7,b
 15165                           
 15166                           ; BSR set to: 0
 15167  002246  0EFF               	movlw	255
 15168  002248  1777               	andwf	___ftadd@f2& (0+255),f,b
 15169  00224A  0EFF               	movlw	255
 15170  00224C  1778               	andwf	(___ftadd@f2+1)& (0+255),f,b
 15171  00224E  0E00               	movlw	0
 15172  002250  1779               	andwf	(___ftadd@f2+2)& (0+255),f,b
 15173                           
 15174                           ; BSR set to: 0
 15175  002252  517E               	movf	___ftadd@exp2& (0+255),w,b
 15176  002254  5D7F               	subwf	___ftadd@exp1& (0+255),w,b
 15177  002256  B0D8               	btfsc	status,0,c
 15178  002258  D01B               	goto	l3194
 15179  00225A                     u6650:
 15180                           
 15181                           ; BSR set to: 0
 15182                           
 15183                           ; BSR set to: 0
 15184  00225A  90D8               	bcf	status,0,c
 15185  00225C  3777               	rlcf	___ftadd@f2& (0+255),f,b
 15186  00225E  3778               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 15187  002260  3779               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 15188  002262  077E               	decf	___ftadd@exp2& (0+255),f,b
 15189                           
 15190                           ; BSR set to: 0
 15191  002264  517F               	movf	___ftadd@exp1& (0+255),w,b
 15192  002266  197E               	xorwf	___ftadd@exp2& (0+255),w,b
 15193  002268  B4D8               	btfsc	status,2,c
 15194  00226A  D00D               	goto	l3199
 15195                           
 15196                           ; BSR set to: 0
 15197  00226C  077D               	decf	___ftadd@sign& (0+255),f,b
 15198  00226E  C07D  F07A         	movff	___ftadd@sign,??___ftadd
 15199  002272  0E07               	movlw	7
 15200  002274  177A               	andwf	??___ftadd& (0+255),f,b
 15201  002276  B4D8               	btfsc	status,2,c
 15202  002278  D006               	goto	l3199
 15203  00227A  D7EF               	goto	u6650
 15204  00227C                     
 15205                           ; BSR set to: 0
 15206                           
 15207                           ; BSR set to: 0
 15208  00227C  90D8               	bcf	status,0,c
 15209  00227E  3376               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 15210  002280  3375               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 15211  002282  3374               	rrcf	___ftadd@f1& (0+255),f,b
 15212  002284  2B7F               	incf	___ftadd@exp1& (0+255),f,b
 15213  002286                     l3199:
 15214                           
 15215                           ; BSR set to: 0
 15216                           
 15217                           ; BSR set to: 0
 15218  002286  517E               	movf	___ftadd@exp2& (0+255),w,b
 15219  002288  197F               	xorwf	___ftadd@exp1& (0+255),w,b
 15220  00228A  B4D8               	btfsc	status,2,c
 15221  00228C  D01F               	goto	u6720
 15222  00228E  D7F6               	goto	l3200
 15223  002290                     l3194:
 15224                           
 15225                           ; BSR set to: 0
 15226                           
 15227                           ; BSR set to: 0
 15228  002290  517F               	movf	___ftadd@exp1& (0+255),w,b
 15229  002292  5D7E               	subwf	___ftadd@exp2& (0+255),w,b
 15230  002294  B0D8               	btfsc	status,0,c
 15231  002296  D01A               	goto	u6720
 15232  002298                     u6690:
 15233                           
 15234                           ; BSR set to: 0
 15235                           
 15236                           ; BSR set to: 0
 15237  002298  90D8               	bcf	status,0,c
 15238  00229A  3774               	rlcf	___ftadd@f1& (0+255),f,b
 15239  00229C  3775               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 15240  00229E  3776               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 15241  0022A0  077F               	decf	___ftadd@exp1& (0+255),f,b
 15242                           
 15243                           ; BSR set to: 0
 15244  0022A2  517F               	movf	___ftadd@exp1& (0+255),w,b
 15245  0022A4  197E               	xorwf	___ftadd@exp2& (0+255),w,b
 15246  0022A6  B4D8               	btfsc	status,2,c
 15247  0022A8  D00D               	goto	l3208
 15248                           
 15249                           ; BSR set to: 0
 15250  0022AA  077D               	decf	___ftadd@sign& (0+255),f,b
 15251  0022AC  C07D  F07A         	movff	___ftadd@sign,??___ftadd
 15252  0022B0  0E07               	movlw	7
 15253  0022B2  177A               	andwf	??___ftadd& (0+255),f,b
 15254  0022B4  B4D8               	btfsc	status,2,c
 15255  0022B6  D006               	goto	l3208
 15256  0022B8  D7EF               	goto	u6690
 15257  0022BA                     
 15258                           ; BSR set to: 0
 15259                           
 15260                           ; BSR set to: 0
 15261  0022BA  90D8               	bcf	status,0,c
 15262  0022BC  3379               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 15263  0022BE  3378               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 15264  0022C0  3377               	rrcf	___ftadd@f2& (0+255),f,b
 15265  0022C2  2B7E               	incf	___ftadd@exp2& (0+255),f,b
 15266  0022C4                     l3208:
 15267                           
 15268                           ; BSR set to: 0
 15269                           
 15270                           ; BSR set to: 0
 15271  0022C4  517E               	movf	___ftadd@exp2& (0+255),w,b
 15272  0022C6  197F               	xorwf	___ftadd@exp1& (0+255),w,b
 15273  0022C8  A4D8               	btfss	status,2,c
 15274  0022CA  D7F7               	goto	l3209
 15275  0022CC                     u6720:
 15276                           
 15277                           ; BSR set to: 0
 15278                           
 15279                           ; BSR set to: 0
 15280                           
 15281                           ; BSR set to: 0
 15282  0022CC  AF7D               	btfss	___ftadd@sign& (0+255),7,b
 15283  0022CE  D00C               	goto	l3211
 15284                           
 15285                           ; BSR set to: 0
 15286  0022D0  0EFF               	movlw	255
 15287  0022D2  1B74               	xorwf	___ftadd@f1& (0+255),f,b
 15288  0022D4  0EFF               	movlw	255
 15289  0022D6  1B75               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 15290  0022D8  0EFF               	movlw	255
 15291  0022DA  1B76               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 15292  0022DC  0E01               	movlw	1
 15293  0022DE  2774               	addwf	___ftadd@f1& (0+255),f,b
 15294  0022E0  0E00               	movlw	0
 15295  0022E2  2375               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 15296  0022E4  0E00               	movlw	0
 15297  0022E6  2376               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 15298  0022E8                     l3211:
 15299                           
 15300                           ; BSR set to: 0
 15301  0022E8  AD7D               	btfss	___ftadd@sign& (0+255),6,b
 15302  0022EA  D00C               	goto	l3212
 15303                           
 15304                           ; BSR set to: 0
 15305  0022EC  0EFF               	movlw	255
 15306  0022EE  1B77               	xorwf	___ftadd@f2& (0+255),f,b
 15307  0022F0  0EFF               	movlw	255
 15308  0022F2  1B78               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 15309  0022F4  0EFF               	movlw	255
 15310  0022F6  1B79               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 15311  0022F8  0E01               	movlw	1
 15312  0022FA  2777               	addwf	___ftadd@f2& (0+255),f,b
 15313  0022FC  0E00               	movlw	0
 15314  0022FE  2378               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 15315  002300  0E00               	movlw	0
 15316  002302  2379               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 15317  002304                     l3212:
 15318                           
 15319                           ; BSR set to: 0
 15320                           
 15321                           ; BSR set to: 0
 15322  002304  0E00               	movlw	0
 15323  002306  6F7D               	movwf	___ftadd@sign& (0+255),b
 15324                           
 15325                           ; BSR set to: 0
 15326  002308  5174               	movf	___ftadd@f1& (0+255),w,b
 15327  00230A  2777               	addwf	___ftadd@f2& (0+255),f,b
 15328  00230C  5175               	movf	(___ftadd@f1+1)& (0+255),w,b
 15329  00230E  2378               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 15330  002310  5176               	movf	(___ftadd@f1+2)& (0+255),w,b
 15331  002312  2379               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 15332                           
 15333                           ; BSR set to: 0
 15334  002314  AF79               	btfss	(___ftadd@f2+2)& (0+255),7,b
 15335  002316  D00E               	goto	l3213
 15336                           
 15337                           ; BSR set to: 0
 15338  002318  0EFF               	movlw	255
 15339  00231A  1B77               	xorwf	___ftadd@f2& (0+255),f,b
 15340  00231C  0EFF               	movlw	255
 15341  00231E  1B78               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 15342  002320  0EFF               	movlw	255
 15343  002322  1B79               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 15344  002324  0E01               	movlw	1
 15345  002326  2777               	addwf	___ftadd@f2& (0+255),f,b
 15346  002328  0E00               	movlw	0
 15347  00232A  2378               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 15348  00232C  0E00               	movlw	0
 15349  00232E  2379               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 15350                           
 15351                           ; BSR set to: 0
 15352  002330  0E01               	movlw	1
 15353  002332  6F7D               	movwf	___ftadd@sign& (0+255),b
 15354  002334                     l3213:
 15355                           
 15356                           ; BSR set to: 0
 15357                           
 15358                           ; BSR set to: 0
 15359  002334  C077  F060         	movff	___ftadd@f2,___ftpack@arg
 15360  002338  C078  F061         	movff	___ftadd@f2+1,___ftpack@arg+1
 15361  00233C  C079  F062         	movff	___ftadd@f2+2,___ftpack@arg+2
 15362  002340  C07F  F063         	movff	___ftadd@exp1,___ftpack@exp
 15363  002344  C07D  F064         	movff	___ftadd@sign,___ftpack@sign
 15364  002348  EC15  F01E         	call	___ftpack	;wreg free
 15365  00234C  C060  F074         	movff	?___ftpack,?___ftadd
 15366  002350  C061  F075         	movff	?___ftpack+1,?___ftadd+1
 15367  002354  C062  F076         	movff	?___ftpack+2,?___ftadd+2
 15368  002358  0012               	return	
 15369  00235A                     __end_of___ftadd:
 15370                           	opt stack 0
 15371                           tblptru	equ	0xFF8
 15372                           tblptrh	equ	0xFF7
 15373                           tblptrl	equ	0xFF6
 15374                           tablat	equ	0xFF5
 15375                           prodh	equ	0xFF4
 15376                           prodl	equ	0xFF3
 15377                           intcon	equ	0xFF2
 15378                           indf0	equ	0xFEF
 15379                           postinc0	equ	0xFEE
 15380                           fsr0h	equ	0xFEA
 15381                           fsr0l	equ	0xFE9
 15382                           wreg	equ	0xFE8
 15383                           indf1	equ	0xFE7
 15384                           postdec1	equ	0xFE5
 15385                           fsr1h	equ	0xFE2
 15386                           fsr1l	equ	0xFE1
 15387                           indf2	equ	0xFDF
 15388                           postinc2	equ	0xFDE
 15389                           postdec2	equ	0xFDD
 15390                           plusw2	equ	0xFDB
 15391                           fsr2h	equ	0xFDA
 15392                           fsr2l	equ	0xFD9
 15393                           status	equ	0xFD8
 15394                           
 15395 ;; *************** function ___ftpack *****************
 15396 ;; Defined at:
 15397 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\float.c"
 15398 ;; Parameters:    Size  Location     Type
 15399 ;;  arg             3    0[BANK0 ] unsigned um
 15400 ;;  exp             1    3[BANK0 ] unsigned char 
 15401 ;;  sign            1    4[BANK0 ] unsigned char 
 15402 ;; Auto vars:     Size  Location     Type
 15403 ;;		None
 15404 ;; Return value:  Size  Location     Type
 15405 ;;                  3    0[BANK0 ] float 
 15406 ;; Registers used:
 15407 ;;		wreg, status,2, status,0
 15408 ;; Tracked objects:
 15409 ;;		On entry : 0/0
 15410 ;;		On exit  : 0/0
 15411 ;;		Unchanged: 0/0
 15412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15413 ;;      Params:         0       5       0       0       0       0       0       0       0
 15414 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15415 ;;      Temps:          0       3       0       0       0       0       0       0       0
 15416 ;;      Totals:         0       8       0       0       0       0       0       0       0
 15417 ;;Total ram usage:        8 bytes
 15418 ;; Hardware stack levels used:    1
 15419 ;; Hardware stack levels required when called:   10
 15420 ;; This function calls:
 15421 ;;		Nothing
 15422 ;; This function is called by:
 15423 ;;		___awtoft
 15424 ;;		___ftadd
 15425 ;;		___ftdiv
 15426 ;;		___ftmul
 15427 ;;		___lltoft
 15428 ;; This function uses a non-reentrant model
 15429 ;;
 15430                           
 15431                           	psect	text54
 15432  003C2A                     __ptext54:
 15433                           	opt stack 0
 15434  003C2A                     ___ftpack:
 15435                           	opt stack 17
 15436                           
 15437                           ;incstack = 0
 15438  003C2A  0100               	movlb	0	; () banked
 15439  003C2C  5163               	movf	___ftpack@exp& (0+255),w,b
 15440  003C2E  B4D8               	btfsc	status,2,c
 15441  003C30  D005               	goto	u6320
 15442                           
 15443                           ; BSR set to: 0
 15444  003C32  5160               	movf	___ftpack@arg& (0+255),w,b
 15445  003C34  1161               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 15446  003C36  1162               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 15447  003C38  A4D8               	btfss	status,2,c
 15448  003C3A  D00C               	goto	l3154
 15449  003C3C                     u6320:
 15450                           
 15451                           ; BSR set to: 0
 15452                           
 15453                           ; BSR set to: 0
 15454  003C3C  0E00               	movlw	0
 15455  003C3E  6F60               	movwf	?___ftpack& (0+255),b
 15456  003C40  0E00               	movlw	0
 15457  003C42  6F61               	movwf	(?___ftpack+1)& (0+255),b
 15458  003C44  0E00               	movlw	0
 15459  003C46  6F62               	movwf	(?___ftpack+2)& (0+255),b
 15460                           
 15461                           ; BSR set to: 0
 15462  003C48  0012               	return	
 15463  003C4A                     
 15464                           ; BSR set to: 0
 15465                           
 15466                           ; BSR set to: 0
 15467  003C4A  2B63               	incf	___ftpack@exp& (0+255),f,b
 15468  003C4C  90D8               	bcf	status,0,c
 15469  003C4E  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 15470  003C50  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 15471  003C52  3360               	rrcf	___ftpack@arg& (0+255),f,b
 15472  003C54                     l3154:
 15473                           
 15474                           ; BSR set to: 0
 15475                           
 15476                           ; BSR set to: 0
 15477  003C54  0E00               	movlw	0
 15478  003C56  1560               	andwf	___ftpack@arg& (0+255),w,b
 15479  003C58  6F65               	movwf	??___ftpack& (0+255),b
 15480  003C5A  0E00               	movlw	0
 15481  003C5C  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 15482  003C5E  6F66               	movwf	(??___ftpack+1)& (0+255),b
 15483  003C60  0EFE               	movlw	254
 15484  003C62  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 15485  003C64  6F67               	movwf	(??___ftpack+2)& (0+255),b
 15486  003C66  5165               	movf	??___ftpack& (0+255),w,b
 15487  003C68  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 15488  003C6A  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 15489  003C6C  B4D8               	btfsc	status,2,c
 15490  003C6E  D00C               	goto	l3157
 15491  003C70  D7EC               	goto	l3155
 15492  003C72                     
 15493                           ; BSR set to: 0
 15494                           
 15495                           ; BSR set to: 0
 15496  003C72  2B63               	incf	___ftpack@exp& (0+255),f,b
 15497                           
 15498                           ; BSR set to: 0
 15499  003C74  0E01               	movlw	1
 15500  003C76  2760               	addwf	___ftpack@arg& (0+255),f,b
 15501  003C78  0E00               	movlw	0
 15502  003C7A  2361               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 15503  003C7C  0E00               	movlw	0
 15504  003C7E  2362               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 15505  003C80  90D8               	bcf	status,0,c
 15506  003C82  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 15507  003C84  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 15508  003C86  3360               	rrcf	___ftpack@arg& (0+255),f,b
 15509  003C88                     l3157:
 15510                           
 15511                           ; BSR set to: 0
 15512                           
 15513                           ; BSR set to: 0
 15514  003C88  0E00               	movlw	0
 15515  003C8A  1560               	andwf	___ftpack@arg& (0+255),w,b
 15516  003C8C  6F65               	movwf	??___ftpack& (0+255),b
 15517  003C8E  0E00               	movlw	0
 15518  003C90  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 15519  003C92  6F66               	movwf	(??___ftpack+1)& (0+255),b
 15520  003C94  0EFF               	movlw	255
 15521  003C96  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 15522  003C98  6F67               	movwf	(??___ftpack+2)& (0+255),b
 15523  003C9A  5165               	movf	??___ftpack& (0+255),w,b
 15524  003C9C  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 15525  003C9E  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 15526  003CA0  B4D8               	btfsc	status,2,c
 15527  003CA2  D006               	goto	l3160
 15528  003CA4  D7E6               	goto	l3158
 15529  003CA6                     
 15530                           ; BSR set to: 0
 15531                           
 15532                           ; BSR set to: 0
 15533  003CA6  0763               	decf	___ftpack@exp& (0+255),f,b
 15534  003CA8  90D8               	bcf	status,0,c
 15535  003CAA  3760               	rlcf	___ftpack@arg& (0+255),f,b
 15536  003CAC  3761               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 15537  003CAE  3762               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 15538  003CB0                     l3160:
 15539                           
 15540                           ; BSR set to: 0
 15541                           
 15542                           ; BSR set to: 0
 15543  003CB0  BF61               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 15544  003CB2  D003               	goto	u6360
 15545                           
 15546                           ; BSR set to: 0
 15547  003CB4  0E02               	movlw	2
 15548  003CB6  6163               	cpfslt	___ftpack@exp& (0+255),b
 15549  003CB8  D7F6               	goto	l3161
 15550  003CBA                     u6360:
 15551                           
 15552                           ; BSR set to: 0
 15553                           
 15554                           ; BSR set to: 0
 15555  003CBA  A163               	btfss	___ftpack@exp& (0+255),0,b
 15556                           
 15557                           ; BSR set to: 0
 15558  003CBC  9F61               	bcf	(___ftpack@arg+1)& (0+255),7,b
 15559                           
 15560                           ; BSR set to: 0
 15561                           
 15562                           ; BSR set to: 0
 15563  003CBE  90D8               	bcf	status,0,c
 15564  003CC0  3363               	rrcf	___ftpack@exp& (0+255),f,b
 15565  003CC2  5163               	movf	___ftpack@exp& (0+255),w,b
 15566  003CC4  1362               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 15567                           
 15568                           ; BSR set to: 0
 15569  003CC6  5164               	movf	___ftpack@sign& (0+255),w,b
 15570  003CC8  A4D8               	btfss	status,2,c
 15571                           
 15572                           ; BSR set to: 0
 15573  003CCA  8F62               	bsf	(___ftpack@arg+2)& (0+255),7,b
 15574                           
 15575                           ; BSR set to: 0
 15576                           
 15577                           ; BSR set to: 0
 15578  003CCC  C060  F060         	movff	___ftpack@arg,?___ftpack
 15579  003CD0  C061  F061         	movff	___ftpack@arg+1,?___ftpack+1
 15580  003CD4  C062  F062         	movff	___ftpack@arg+2,?___ftpack+2
 15581  003CD8  0012               	return	
 15582  003CDA                     __end_of___ftpack:
 15583                           	opt stack 0
 15584                           tblptru	equ	0xFF8
 15585                           tblptrh	equ	0xFF7
 15586                           tblptrl	equ	0xFF6
 15587                           tablat	equ	0xFF5
 15588                           prodh	equ	0xFF4
 15589                           prodl	equ	0xFF3
 15590                           intcon	equ	0xFF2
 15591                           indf0	equ	0xFEF
 15592                           postinc0	equ	0xFEE
 15593                           fsr0h	equ	0xFEA
 15594                           fsr0l	equ	0xFE9
 15595                           wreg	equ	0xFE8
 15596                           indf1	equ	0xFE7
 15597                           postdec1	equ	0xFE5
 15598                           fsr1h	equ	0xFE2
 15599                           fsr1l	equ	0xFE1
 15600                           indf2	equ	0xFDF
 15601                           postinc2	equ	0xFDE
 15602                           postdec2	equ	0xFDD
 15603                           plusw2	equ	0xFDB
 15604                           fsr2h	equ	0xFDA
 15605                           fsr2l	equ	0xFD9
 15606                           status	equ	0xFD8
 15607                           
 15608 ;; *************** function ___ftneg *****************
 15609 ;; Defined at:
 15610 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftneg.c"
 15611 ;; Parameters:    Size  Location     Type
 15612 ;;  f1              3    0[BANK0 ] float 
 15613 ;; Auto vars:     Size  Location     Type
 15614 ;;		None
 15615 ;; Return value:  Size  Location     Type
 15616 ;;                  3    0[BANK0 ] float 
 15617 ;; Registers used:
 15618 ;;		wreg, status,2, status,0
 15619 ;; Tracked objects:
 15620 ;;		On entry : 0/0
 15621 ;;		On exit  : 0/0
 15622 ;;		Unchanged: 0/0
 15623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15624 ;;      Params:         0       3       0       0       0       0       0       0       0
 15625 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15626 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15627 ;;      Totals:         0       3       0       0       0       0       0       0       0
 15628 ;;Total ram usage:        3 bytes
 15629 ;; Hardware stack levels used:    1
 15630 ;; Hardware stack levels required when called:   10
 15631 ;; This function calls:
 15632 ;;		Nothing
 15633 ;; This function is called by:
 15634 ;;		_sprintf
 15635 ;; This function uses a non-reentrant model
 15636 ;;
 15637                           
 15638                           	psect	text55
 15639  005100                     __ptext55:
 15640                           	opt stack 0
 15641  005100                     ___ftneg:
 15642                           	opt stack 19
 15643                           
 15644                           ; BSR set to: 0
 15645                           ;incstack = 0
 15646  005100  0100               	movlb	0	; () banked
 15647  005102  5160               	movf	___ftneg@f1& (0+255),w,b
 15648  005104  1161               	iorwf	(___ftneg@f1+1)& (0+255),w,b
 15649  005106  1162               	iorwf	(___ftneg@f1+2)& (0+255),w,b
 15650  005108  B4D8               	btfsc	status,2,c
 15651  00510A  D006               	goto	l3261
 15652                           
 15653                           ; BSR set to: 0
 15654  00510C  0E00               	movlw	0
 15655  00510E  1B60               	xorwf	___ftneg@f1& (0+255),f,b
 15656  005110  0E00               	movlw	0
 15657  005112  1B61               	xorwf	(___ftneg@f1+1)& (0+255),f,b
 15658  005114  0E80               	movlw	128
 15659  005116  1B62               	xorwf	(___ftneg@f1+2)& (0+255),f,b
 15660  005118                     l3261:
 15661                           
 15662                           ; BSR set to: 0
 15663  005118  C060  F060         	movff	___ftneg@f1,?___ftneg
 15664  00511C  C061  F061         	movff	___ftneg@f1+1,?___ftneg+1
 15665  005120  C062  F062         	movff	___ftneg@f1+2,?___ftneg+2
 15666                           
 15667                           ; BSR set to: 0
 15668  005124  0012               	return		;funcret
 15669  005126                     __end_of___ftneg:
 15670                           	opt stack 0
 15671                           tblptru	equ	0xFF8
 15672                           tblptrh	equ	0xFF7
 15673                           tblptrl	equ	0xFF6
 15674                           tablat	equ	0xFF5
 15675                           prodh	equ	0xFF4
 15676                           prodl	equ	0xFF3
 15677                           intcon	equ	0xFF2
 15678                           indf0	equ	0xFEF
 15679                           postinc0	equ	0xFEE
 15680                           fsr0h	equ	0xFEA
 15681                           fsr0l	equ	0xFE9
 15682                           wreg	equ	0xFE8
 15683                           indf1	equ	0xFE7
 15684                           postdec1	equ	0xFE5
 15685                           fsr1h	equ	0xFE2
 15686                           fsr1l	equ	0xFE1
 15687                           indf2	equ	0xFDF
 15688                           postinc2	equ	0xFDE
 15689                           postdec2	equ	0xFDD
 15690                           plusw2	equ	0xFDB
 15691                           fsr2h	equ	0xFDA
 15692                           fsr2l	equ	0xFD9
 15693                           status	equ	0xFD8
 15694                           
 15695 ;; *************** function ___ftge *****************
 15696 ;; Defined at:
 15697 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftge.c"
 15698 ;; Parameters:    Size  Location     Type
 15699 ;;  ff1             3    0[BANK0 ] float 
 15700 ;;  ff2             3    3[BANK0 ] float 
 15701 ;; Auto vars:     Size  Location     Type
 15702 ;;		None
 15703 ;; Return value:  Size  Location     Type
 15704 ;;		None               void
 15705 ;; Registers used:
 15706 ;;		wreg, status,2, status,0
 15707 ;; Tracked objects:
 15708 ;;		On entry : 0/0
 15709 ;;		On exit  : 0/0
 15710 ;;		Unchanged: 0/0
 15711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15712 ;;      Params:         0       6       0       0       0       0       0       0       0
 15713 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15714 ;;      Temps:          0       3       0       0       0       0       0       0       0
 15715 ;;      Totals:         0       9       0       0       0       0       0       0       0
 15716 ;;Total ram usage:        9 bytes
 15717 ;; Hardware stack levels used:    1
 15718 ;; Hardware stack levels required when called:   10
 15719 ;; This function calls:
 15720 ;;		Nothing
 15721 ;; This function is called by:
 15722 ;;		_sprintf
 15723 ;; This function uses a non-reentrant model
 15724 ;;
 15725                           
 15726                           	psect	text56
 15727  004144                     __ptext56:
 15728                           	opt stack 0
 15729  004144                     ___ftge:
 15730                           	opt stack 19
 15731                           
 15732                           ; BSR set to: 0
 15733                           ;incstack = 0
 15734  004144  0100               	movlb	0	; () banked
 15735  004146  AF62               	btfss	(___ftge@ff1+2)& (0+255),7,b
 15736  004148  D016               	goto	l3243
 15737                           
 15738                           ; BSR set to: 0
 15739  00414A  C060  F066         	movff	___ftge@ff1,??___ftge
 15740  00414E  C061  F067         	movff	___ftge@ff1+1,??___ftge+1
 15741  004152  C062  F068         	movff	___ftge@ff1+2,??___ftge+2
 15742  004156  1F66               	comf	??___ftge& (0+255),f,b
 15743  004158  1F67               	comf	(??___ftge+1)& (0+255),f,b
 15744  00415A  1F68               	comf	(??___ftge+2)& (0+255),f,b
 15745  00415C  2B66               	incf	??___ftge& (0+255),f,b
 15746  00415E  0E00               	movlw	0
 15747  004160  2367               	addwfc	(??___ftge+1)& (0+255),f,b
 15748  004162  2368               	addwfc	(??___ftge+2)& (0+255),f,b
 15749  004164  0E00               	movlw	0
 15750  004166  2566               	addwf	??___ftge& (0+255),w,b
 15751  004168  6F60               	movwf	___ftge@ff1& (0+255),b
 15752  00416A  0E00               	movlw	0
 15753  00416C  2167               	addwfc	(??___ftge+1)& (0+255),w,b
 15754  00416E  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
 15755  004170  0E80               	movlw	128
 15756  004172  2168               	addwfc	(??___ftge+2)& (0+255),w,b
 15757  004174  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
 15758  004176                     l3243:
 15759                           
 15760                           ; BSR set to: 0
 15761                           
 15762                           ; BSR set to: 0
 15763  004176  AF65               	btfss	(___ftge@ff2+2)& (0+255),7,b
 15764  004178  D016               	goto	l3244
 15765                           
 15766                           ; BSR set to: 0
 15767  00417A  C063  F066         	movff	___ftge@ff2,??___ftge
 15768  00417E  C064  F067         	movff	___ftge@ff2+1,??___ftge+1
 15769  004182  C065  F068         	movff	___ftge@ff2+2,??___ftge+2
 15770  004186  1F66               	comf	??___ftge& (0+255),f,b
 15771  004188  1F67               	comf	(??___ftge+1)& (0+255),f,b
 15772  00418A  1F68               	comf	(??___ftge+2)& (0+255),f,b
 15773  00418C  2B66               	incf	??___ftge& (0+255),f,b
 15774  00418E  0E00               	movlw	0
 15775  004190  2367               	addwfc	(??___ftge+1)& (0+255),f,b
 15776  004192  2368               	addwfc	(??___ftge+2)& (0+255),f,b
 15777  004194  0E00               	movlw	0
 15778  004196  2566               	addwf	??___ftge& (0+255),w,b
 15779  004198  6F63               	movwf	___ftge@ff2& (0+255),b
 15780  00419A  0E00               	movlw	0
 15781  00419C  2167               	addwfc	(??___ftge+1)& (0+255),w,b
 15782  00419E  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 15783  0041A0  0E80               	movlw	128
 15784  0041A2  2168               	addwfc	(??___ftge+2)& (0+255),w,b
 15785  0041A4  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 15786  0041A6                     l3244:
 15787                           
 15788                           ; BSR set to: 0
 15789                           
 15790                           ; BSR set to: 0
 15791  0041A6  0E00               	movlw	0
 15792  0041A8  1B60               	xorwf	___ftge@ff1& (0+255),f,b
 15793  0041AA  0E00               	movlw	0
 15794  0041AC  1B61               	xorwf	(___ftge@ff1+1)& (0+255),f,b
 15795  0041AE  0E80               	movlw	128
 15796  0041B0  1B62               	xorwf	(___ftge@ff1+2)& (0+255),f,b
 15797                           
 15798                           ; BSR set to: 0
 15799  0041B2  0E00               	movlw	0
 15800  0041B4  1B63               	xorwf	___ftge@ff2& (0+255),f,b
 15801  0041B6  0E00               	movlw	0
 15802  0041B8  1B64               	xorwf	(___ftge@ff2+1)& (0+255),f,b
 15803  0041BA  0E80               	movlw	128
 15804  0041BC  1B65               	xorwf	(___ftge@ff2+2)& (0+255),f,b
 15805  0041BE  5163               	movf	___ftge@ff2& (0+255),w,b
 15806  0041C0  5D60               	subwf	___ftge@ff1& (0+255),w,b
 15807  0041C2  5164               	movf	(___ftge@ff2+1)& (0+255),w,b
 15808  0041C4  5961               	subwfb	(___ftge@ff1+1)& (0+255),w,b
 15809  0041C6  5165               	movf	(___ftge@ff2+2)& (0+255),w,b
 15810  0041C8  5962               	subwfb	(___ftge@ff1+2)& (0+255),w,b
 15811  0041CA  B0D8               	btfsc	status,0,c
 15812  0041CC  D002               	goto	l7573
 15813                           
 15814                           ; BSR set to: 0
 15815  0041CE  90D8               	bcf	status,0,c
 15816  0041D0  0012               	return	
 15817  0041D2                     l7573:
 15818                           
 15819                           ; BSR set to: 0
 15820                           
 15821                           ; BSR set to: 0
 15822  0041D2  80D8               	bsf	status,0,c
 15823                           
 15824                           ; BSR set to: 0
 15825  0041D4  0012               	return	
 15826  0041D6                     __end_of___ftge:
 15827                           	opt stack 0
 15828                           tblptru	equ	0xFF8
 15829                           tblptrh	equ	0xFF7
 15830                           tblptrl	equ	0xFF6
 15831                           tablat	equ	0xFF5
 15832                           prodh	equ	0xFF4
 15833                           prodl	equ	0xFF3
 15834                           intcon	equ	0xFF2
 15835                           indf0	equ	0xFEF
 15836                           postinc0	equ	0xFEE
 15837                           fsr0h	equ	0xFEA
 15838                           fsr0l	equ	0xFE9
 15839                           wreg	equ	0xFE8
 15840                           indf1	equ	0xFE7
 15841                           postdec1	equ	0xFE5
 15842                           fsr1h	equ	0xFE2
 15843                           fsr1l	equ	0xFE1
 15844                           indf2	equ	0xFDF
 15845                           postinc2	equ	0xFDE
 15846                           postdec2	equ	0xFDD
 15847                           plusw2	equ	0xFDB
 15848                           fsr2h	equ	0xFDA
 15849                           fsr2l	equ	0xFD9
 15850                           status	equ	0xFD8
 15851                           
 15852 ;; *************** function _itoaVitor *****************
 15853 ;; Defined at:
 15854 ;;		line 22 in file "Frame.c"
 15855 ;; Parameters:    Size  Location     Type
 15856 ;;  value           1    wreg     unsigned char 
 15857 ;; Auto vars:     Size  Location     Type
 15858 ;;  value           1   12[BANK0 ] unsigned char 
 15859 ;;  c               2   10[BANK0 ] int 
 15860 ;;  original        2    8[BANK0 ] int 
 15861 ;; Return value:  Size  Location     Type
 15862 ;;                  2    6[BANK0 ] PTR unsigned char 
 15863 ;; Registers used:
 15864 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15865 ;; Tracked objects:
 15866 ;;		On entry : 0/0
 15867 ;;		On exit  : 0/0
 15868 ;;		Unchanged: 0/0
 15869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15870 ;;      Params:         0       2       0       0       0       0       0       0       0
 15871 ;;      Locals:         0       5       0       0       0       0       0       0       0
 15872 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15873 ;;      Totals:         0       7       0       0       0       0       0       0       0
 15874 ;;Total ram usage:        7 bytes
 15875 ;; Hardware stack levels used:    1
 15876 ;; Hardware stack levels required when called:   11
 15877 ;; This function calls:
 15878 ;;		___awmod
 15879 ;;		___lbdiv
 15880 ;; This function is called by:
 15881 ;;		_addSensor
 15882 ;; This function uses a non-reentrant model
 15883 ;;
 15884                           
 15885                           	psect	text57
 15886  0042F6                     __ptext57:
 15887                           	opt stack 0
 15888  0042F6                     _itoaVitor:
 15889                           	opt stack 18
 15890                           
 15891                           ; BSR set to: 0
 15892                           ;incstack = 0
 15893                           ;itoaVitor@value stored from wreg
 15894  0042F6  0100               	movlb	0	; () banked
 15895  0042F8  6F6C               	movwf	itoaVitor@value& (0+255),b
 15896                           
 15897                           ;Frame.c: 24: static char buffer[12];
 15898                           ;Frame.c: 25: int original = value;
 15899  0042FA  C06C  F068         	movff	itoaVitor@value,itoaVitor@original
 15900  0042FE  0100               	movlb	0	; () banked
 15901  004300  6B69               	clrf	(itoaVitor@original+1)& (0+255),b
 15902                           
 15903                           ; BSR set to: 0
 15904                           ;Frame.c: 27: int c = sizeof(buffer)-1;
 15905  004302  0E00               	movlw	0
 15906  004304  6F6B               	movwf	(itoaVitor@c+1)& (0+255),b
 15907  004306  0E0B               	movlw	11
 15908  004308  6F6A               	movwf	itoaVitor@c& (0+255),b
 15909                           
 15910                           ; BSR set to: 0
 15911                           ;Frame.c: 29: buffer[c] = 0;
 15912  00430A  0EDA               	movlw	low itoaVitor@buffer
 15913  00430C  256A               	addwf	itoaVitor@c& (0+255),w,b
 15914  00430E  6ED9               	movwf	fsr2l,c
 15915  004310  0E02               	movlw	high itoaVitor@buffer
 15916  004312  216B               	addwfc	(itoaVitor@c+1)& (0+255),w,b
 15917  004314  6EDA               	movwf	fsr2h,c
 15918  004316  0E00               	movlw	0
 15919  004318  6EDF               	movwf	indf2,c
 15920  00431A                     
 15921                           ; BSR set to: 0
 15922                           ;Frame.c: 35: {
 15923                           ;Frame.c: 36: buffer[--c] = (value % 10) + '0';
 15924                           
 15925                           ; BSR set to: 0
 15926                           
 15927                           ;Frame.c: 34: do
 15928                           
 15929                           ; BSR set to: 0
 15930  00431A  076A               	decf	itoaVitor@c& (0+255),f,b
 15931  00431C  A0D8               	btfss	status,0,c
 15932  00431E  076B               	decf	(itoaVitor@c+1)& (0+255),f,b
 15933  004320  0EDA               	movlw	low itoaVitor@buffer
 15934  004322  256A               	addwf	itoaVitor@c& (0+255),w,b
 15935  004324  6ED9               	movwf	fsr2l,c
 15936  004326  0E02               	movlw	high itoaVitor@buffer
 15937  004328  216B               	addwfc	(itoaVitor@c+1)& (0+255),w,b
 15938  00432A  6EDA               	movwf	fsr2h,c
 15939  00432C  C06C  F060         	movff	itoaVitor@value,___awmod@dividend
 15940  004330  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 15941  004332  0E00               	movlw	0
 15942  004334  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 15943  004336  0E0A               	movlw	10
 15944  004338  6F62               	movwf	___awmod@divisor& (0+255),b
 15945  00433A  EC3D  F023         	call	___awmod	;wreg free
 15946  00433E  0100               	movlb	0	; () banked
 15947  004340  5160               	movf	?___awmod& (0+255),w,b
 15948  004342  0F30               	addlw	48
 15949  004344  6EDF               	movwf	indf2,c
 15950                           
 15951                           ; BSR set to: 0
 15952                           ;Frame.c: 37: value /= 10;
 15953  004346  0E0A               	movlw	10
 15954  004348  6F60               	movwf	___lbdiv@divisor& (0+255),b
 15955  00434A  516C               	movf	itoaVitor@value& (0+255),w,b
 15956  00434C  EC08  F027         	call	___lbdiv
 15957  004350  0100               	movlb	0	; () banked
 15958  004352  6F6C               	movwf	itoaVitor@value& (0+255),b
 15959                           
 15960                           ; BSR set to: 0
 15961                           ;Frame.c: 38: } while (value);
 15962  004354  516C               	movf	itoaVitor@value& (0+255),w,b
 15963  004356  A4D8               	btfss	status,2,c
 15964  004358  D7E0               	goto	l1917
 15965                           
 15966                           ; BSR set to: 0
 15967                           ;Frame.c: 40: if (original < 0)
 15968                           
 15969                           ; BSR set to: 0
 15970  00435A  AF69               	btfss	(itoaVitor@original+1)& (0+255),7,b
 15971  00435C  D00B               	goto	l1920
 15972                           
 15973                           ; BSR set to: 0
 15974                           ;Frame.c: 41: buffer[--c] = '-';
 15975  00435E  076A               	decf	itoaVitor@c& (0+255),f,b
 15976  004360  A0D8               	btfss	status,0,c
 15977  004362  076B               	decf	(itoaVitor@c+1)& (0+255),f,b
 15978  004364  0EDA               	movlw	low itoaVitor@buffer
 15979  004366  256A               	addwf	itoaVitor@c& (0+255),w,b
 15980  004368  6ED9               	movwf	fsr2l,c
 15981  00436A  0E02               	movlw	high itoaVitor@buffer
 15982  00436C  216B               	addwfc	(itoaVitor@c+1)& (0+255),w,b
 15983  00436E  6EDA               	movwf	fsr2h,c
 15984  004370  0E2D               	movlw	45
 15985  004372  6EDF               	movwf	indf2,c
 15986  004374                     l1920:
 15987                           
 15988                           ; BSR set to: 0
 15989                           ;Frame.c: 43: return &buffer[c];
 15990                           
 15991                           ; BSR set to: 0
 15992  004374  0EDA               	movlw	low itoaVitor@buffer
 15993  004376  256A               	addwf	itoaVitor@c& (0+255),w,b
 15994  004378  6F66               	movwf	?_itoaVitor& (0+255),b
 15995  00437A  0E02               	movlw	high itoaVitor@buffer
 15996  00437C  216B               	addwfc	(itoaVitor@c+1)& (0+255),w,b
 15997  00437E  6F67               	movwf	(?_itoaVitor+1)& (0+255),b
 15998  004380  0012               	return	
 15999  004382                     __end_of_itoaVitor:
 16000                           	opt stack 0
 16001                           tblptru	equ	0xFF8
 16002                           tblptrh	equ	0xFF7
 16003                           tblptrl	equ	0xFF6
 16004                           tablat	equ	0xFF5
 16005                           prodh	equ	0xFF4
 16006                           prodl	equ	0xFF3
 16007                           intcon	equ	0xFF2
 16008                           indf0	equ	0xFEF
 16009                           postinc0	equ	0xFEE
 16010                           fsr0h	equ	0xFEA
 16011                           fsr0l	equ	0xFE9
 16012                           wreg	equ	0xFE8
 16013                           indf1	equ	0xFE7
 16014                           postdec1	equ	0xFE5
 16015                           fsr1h	equ	0xFE2
 16016                           fsr1l	equ	0xFE1
 16017                           indf2	equ	0xFDF
 16018                           postinc2	equ	0xFDE
 16019                           postdec2	equ	0xFDD
 16020                           plusw2	equ	0xFDB
 16021                           fsr2h	equ	0xFDA
 16022                           fsr2l	equ	0xFD9
 16023                           status	equ	0xFD8
 16024                           
 16025 ;; *************** function ___lbdiv *****************
 16026 ;; Defined at:
 16027 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lbdiv.c"
 16028 ;; Parameters:    Size  Location     Type
 16029 ;;  dividend        1    wreg     unsigned char 
 16030 ;;  divisor         1    0[BANK0 ] unsigned char 
 16031 ;; Auto vars:     Size  Location     Type
 16032 ;;  dividend        1    1[BANK0 ] unsigned char 
 16033 ;;  quotient        1    3[BANK0 ] unsigned char 
 16034 ;;  counter         1    2[BANK0 ] unsigned char 
 16035 ;; Return value:  Size  Location     Type
 16036 ;;                  1    wreg      unsigned char 
 16037 ;; Registers used:
 16038 ;;		wreg, status,2, status,0
 16039 ;; Tracked objects:
 16040 ;;		On entry : 0/0
 16041 ;;		On exit  : 0/0
 16042 ;;		Unchanged: 0/0
 16043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16044 ;;      Params:         0       1       0       0       0       0       0       0       0
 16045 ;;      Locals:         0       3       0       0       0       0       0       0       0
 16046 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16047 ;;      Totals:         0       4       0       0       0       0       0       0       0
 16048 ;;Total ram usage:        4 bytes
 16049 ;; Hardware stack levels used:    1
 16050 ;; Hardware stack levels required when called:   10
 16051 ;; This function calls:
 16052 ;;		Nothing
 16053 ;; This function is called by:
 16054 ;;		_itoaVitor
 16055 ;; This function uses a non-reentrant model
 16056 ;;
 16057                           
 16058                           	psect	text58
 16059  004E10                     __ptext58:
 16060                           	opt stack 0
 16061  004E10                     ___lbdiv:
 16062                           	opt stack 18
 16063                           
 16064                           ; BSR set to: 0
 16065                           ;incstack = 0
 16066                           ;___lbdiv@dividend stored from wreg
 16067  004E10  0100               	movlb	0	; () banked
 16068  004E12  6F61               	movwf	___lbdiv@dividend& (0+255),b
 16069  004E14  0E00               	movlw	0
 16070  004E16  0100               	movlb	0	; () banked
 16071  004E18  6F63               	movwf	___lbdiv@quotient& (0+255),b
 16072                           
 16073                           ; BSR set to: 0
 16074  004E1A  5160               	movf	___lbdiv@divisor& (0+255),w,b
 16075  004E1C  B4D8               	btfsc	status,2,c
 16076  004E1E  D015               	goto	l3296
 16077                           
 16078                           ; BSR set to: 0
 16079  004E20  0E01               	movlw	1
 16080  004E22  6F62               	movwf	___lbdiv@counter& (0+255),b
 16081  004E24  D003               	goto	l3291
 16082  004E26                     
 16083                           ; BSR set to: 0
 16084                           
 16085                           ; BSR set to: 0
 16086  004E26  90D8               	bcf	status,0,c
 16087  004E28  3760               	rlcf	___lbdiv@divisor& (0+255),f,b
 16088                           
 16089                           ; BSR set to: 0
 16090  004E2A  2B62               	incf	___lbdiv@counter& (0+255),f,b
 16091  004E2C                     l3291:
 16092                           
 16093                           ; BSR set to: 0
 16094                           
 16095                           ; BSR set to: 0
 16096  004E2C  AF60               	btfss	___lbdiv@divisor& (0+255),7,b
 16097  004E2E  D7FB               	goto	l3292
 16098  004E30                     u7690:
 16099                           
 16100                           ; BSR set to: 0
 16101                           
 16102                           ; BSR set to: 0
 16103                           
 16104                           ; BSR set to: 0
 16105  004E30  90D8               	bcf	status,0,c
 16106  004E32  3763               	rlcf	___lbdiv@quotient& (0+255),f,b
 16107  004E34  5160               	movf	___lbdiv@divisor& (0+255),w,b
 16108  004E36  5D61               	subwf	___lbdiv@dividend& (0+255),w,b
 16109  004E38  A0D8               	btfss	status,0,c
 16110  004E3A  D003               	goto	l3295
 16111                           
 16112                           ; BSR set to: 0
 16113  004E3C  5160               	movf	___lbdiv@divisor& (0+255),w,b
 16114  004E3E  5F61               	subwf	___lbdiv@dividend& (0+255),f,b
 16115                           
 16116                           ; BSR set to: 0
 16117  004E40  8163               	bsf	___lbdiv@quotient& (0+255),0,b
 16118  004E42                     l3295:
 16119                           
 16120                           ; BSR set to: 0
 16121                           
 16122                           ; BSR set to: 0
 16123  004E42  90D8               	bcf	status,0,c
 16124  004E44  3360               	rrcf	___lbdiv@divisor& (0+255),f,b
 16125                           
 16126                           ; BSR set to: 0
 16127  004E46  2F62               	decfsz	___lbdiv@counter& (0+255),f,b
 16128  004E48  D7F3               	goto	u7690
 16129  004E4A                     l3296:
 16130                           
 16131                           ; BSR set to: 0
 16132                           
 16133                           ; BSR set to: 0
 16134                           
 16135                           ; BSR set to: 0
 16136  004E4A  5163               	movf	___lbdiv@quotient& (0+255),w,b
 16137  004E4C  0012               	return	
 16138  004E4E                     __end_of___lbdiv:
 16139                           	opt stack 0
 16140                           tblptru	equ	0xFF8
 16141                           tblptrh	equ	0xFF7
 16142                           tblptrl	equ	0xFF6
 16143                           tablat	equ	0xFF5
 16144                           prodh	equ	0xFF4
 16145                           prodl	equ	0xFF3
 16146                           intcon	equ	0xFF2
 16147                           indf0	equ	0xFEF
 16148                           postinc0	equ	0xFEE
 16149                           fsr0h	equ	0xFEA
 16150                           fsr0l	equ	0xFE9
 16151                           wreg	equ	0xFE8
 16152                           indf1	equ	0xFE7
 16153                           postdec1	equ	0xFE5
 16154                           fsr1h	equ	0xFE2
 16155                           fsr1l	equ	0xFE1
 16156                           indf2	equ	0xFDF
 16157                           postinc2	equ	0xFDE
 16158                           postdec2	equ	0xFDD
 16159                           plusw2	equ	0xFDB
 16160                           fsr2h	equ	0xFDA
 16161                           fsr2l	equ	0xFD9
 16162                           status	equ	0xFD8
 16163                           
 16164 ;; *************** function ___awmod *****************
 16165 ;; Defined at:
 16166 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\awmod.c"
 16167 ;; Parameters:    Size  Location     Type
 16168 ;;  dividend        2    0[BANK0 ] int 
 16169 ;;  divisor         2    2[BANK0 ] int 
 16170 ;; Auto vars:     Size  Location     Type
 16171 ;;  sign            1    5[BANK0 ] unsigned char 
 16172 ;;  counter         1    4[BANK0 ] unsigned char 
 16173 ;; Return value:  Size  Location     Type
 16174 ;;                  2    0[BANK0 ] int 
 16175 ;; Registers used:
 16176 ;;		wreg, status,2, status,0
 16177 ;; Tracked objects:
 16178 ;;		On entry : 0/0
 16179 ;;		On exit  : 0/0
 16180 ;;		Unchanged: 0/0
 16181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16182 ;;      Params:         0       4       0       0       0       0       0       0       0
 16183 ;;      Locals:         0       2       0       0       0       0       0       0       0
 16184 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16185 ;;      Totals:         0       6       0       0       0       0       0       0       0
 16186 ;;Total ram usage:        6 bytes
 16187 ;; Hardware stack levels used:    1
 16188 ;; Hardware stack levels required when called:   10
 16189 ;; This function calls:
 16190 ;;		Nothing
 16191 ;; This function is called by:
 16192 ;;		_itoaVitor
 16193 ;;		_fround
 16194 ;;		_scale
 16195 ;; This function uses a non-reentrant model
 16196 ;;
 16197                           
 16198                           	psect	text59
 16199  00467A                     __ptext59:
 16200                           	opt stack 0
 16201  00467A                     ___awmod:
 16202                           	opt stack 18
 16203                           
 16204                           ; BSR set to: 0
 16205                           ;incstack = 0
 16206  00467A  0E00               	movlw	0
 16207  00467C  0100               	movlb	0	; () banked
 16208  00467E  6F65               	movwf	___awmod@sign& (0+255),b
 16209                           
 16210                           ; BSR set to: 0
 16211  004680  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 16212  004682  D006               	goto	l3103
 16213                           
 16214                           ; BSR set to: 0
 16215  004684  6D60               	negf	___awmod@dividend& (0+255),b
 16216  004686  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 16217  004688  B0D8               	btfsc	status,0,c
 16218  00468A  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 16219                           
 16220                           ; BSR set to: 0
 16221  00468C  0E01               	movlw	1
 16222  00468E  6F65               	movwf	___awmod@sign& (0+255),b
 16223  004690                     l3103:
 16224                           
 16225                           ; BSR set to: 0
 16226                           
 16227                           ; BSR set to: 0
 16228  004690  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 16229  004692  D004               	goto	l3104
 16230                           
 16231                           ; BSR set to: 0
 16232  004694  6D62               	negf	___awmod@divisor& (0+255),b
 16233  004696  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 16234  004698  B0D8               	btfsc	status,0,c
 16235  00469A  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 16236  00469C                     l3104:
 16237                           
 16238                           ; BSR set to: 0
 16239                           
 16240                           ; BSR set to: 0
 16241  00469C  5162               	movf	___awmod@divisor& (0+255),w,b
 16242  00469E  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 16243  0046A0  B4D8               	btfsc	status,2,c
 16244  0046A2  D018               	goto	l3111
 16245                           
 16246                           ; BSR set to: 0
 16247  0046A4  0E01               	movlw	1
 16248  0046A6  6F64               	movwf	___awmod@counter& (0+255),b
 16249  0046A8  D004               	goto	l3106
 16250  0046AA                     
 16251                           ; BSR set to: 0
 16252                           
 16253                           ; BSR set to: 0
 16254  0046AA  90D8               	bcf	status,0,c
 16255  0046AC  3762               	rlcf	___awmod@divisor& (0+255),f,b
 16256  0046AE  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 16257  0046B0  2B64               	incf	___awmod@counter& (0+255),f,b
 16258  0046B2                     l3106:
 16259                           
 16260                           ; BSR set to: 0
 16261                           
 16262                           ; BSR set to: 0
 16263  0046B2  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 16264  0046B4  D7FA               	goto	l3107
 16265  0046B6                     u6910:
 16266                           
 16267                           ; BSR set to: 0
 16268                           
 16269                           ; BSR set to: 0
 16270                           
 16271                           ; BSR set to: 0
 16272  0046B6  5162               	movf	___awmod@divisor& (0+255),w,b
 16273  0046B8  5D60               	subwf	___awmod@dividend& (0+255),w,b
 16274  0046BA  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 16275  0046BC  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 16276  0046BE  A0D8               	btfss	status,0,c
 16277  0046C0  D004               	goto	l3110
 16278                           
 16279                           ; BSR set to: 0
 16280  0046C2  5162               	movf	___awmod@divisor& (0+255),w,b
 16281  0046C4  5F60               	subwf	___awmod@dividend& (0+255),f,b
 16282  0046C6  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 16283  0046C8  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 16284  0046CA                     l3110:
 16285                           
 16286                           ; BSR set to: 0
 16287                           
 16288                           ; BSR set to: 0
 16289  0046CA  90D8               	bcf	status,0,c
 16290  0046CC  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 16291  0046CE  3362               	rrcf	___awmod@divisor& (0+255),f,b
 16292                           
 16293                           ; BSR set to: 0
 16294  0046D0  2F64               	decfsz	___awmod@counter& (0+255),f,b
 16295  0046D2  D7F1               	goto	u6910
 16296  0046D4                     l3111:
 16297                           
 16298                           ; BSR set to: 0
 16299                           
 16300                           ; BSR set to: 0
 16301                           
 16302                           ; BSR set to: 0
 16303  0046D4  5165               	movf	___awmod@sign& (0+255),w,b
 16304  0046D6  B4D8               	btfsc	status,2,c
 16305  0046D8  D004               	goto	l3112
 16306                           
 16307                           ; BSR set to: 0
 16308  0046DA  6D60               	negf	___awmod@dividend& (0+255),b
 16309  0046DC  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 16310  0046DE  B0D8               	btfsc	status,0,c
 16311  0046E0  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 16312  0046E2                     l3112:
 16313                           
 16314                           ; BSR set to: 0
 16315                           
 16316                           ; BSR set to: 0
 16317  0046E2  C060  F060         	movff	___awmod@dividend,?___awmod
 16318  0046E6  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 16319  0046EA  0012               	return	
 16320  0046EC                     __end_of___awmod:
 16321                           	opt stack 0
 16322                           tblptru	equ	0xFF8
 16323                           tblptrh	equ	0xFF7
 16324                           tblptrl	equ	0xFF6
 16325                           tablat	equ	0xFF5
 16326                           prodh	equ	0xFF4
 16327                           prodl	equ	0xFF3
 16328                           intcon	equ	0xFF2
 16329                           indf0	equ	0xFEF
 16330                           postinc0	equ	0xFEE
 16331                           fsr0h	equ	0xFEA
 16332                           fsr0l	equ	0xFE9
 16333                           wreg	equ	0xFE8
 16334                           indf1	equ	0xFE7
 16335                           postdec1	equ	0xFE5
 16336                           fsr1h	equ	0xFE2
 16337                           fsr1l	equ	0xFE1
 16338                           indf2	equ	0xFDF
 16339                           postinc2	equ	0xFDE
 16340                           postdec2	equ	0xFDD
 16341                           plusw2	equ	0xFDB
 16342                           fsr2h	equ	0xFDA
 16343                           fsr2l	equ	0xFD9
 16344                           status	equ	0xFD8
 16345                           
 16346 ;; *************** function _USBDeviceInit *****************
 16347 ;; Defined at:
 16348 ;;		line 277 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 16349 ;; Parameters:    Size  Location     Type
 16350 ;;		None
 16351 ;; Auto vars:     Size  Location     Type
 16352 ;;  i               1    8[BANK0 ] unsigned char 
 16353 ;; Return value:  Size  Location     Type
 16354 ;;                  1    wreg      void 
 16355 ;; Registers used:
 16356 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16357 ;; Tracked objects:
 16358 ;;		On entry : 0/0
 16359 ;;		On exit  : 0/0
 16360 ;;		Unchanged: 0/0
 16361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16362 ;;      Params:         0       0       0       0       0       0       0       0       0
 16363 ;;      Locals:         0       1       0       0       0       0       0       0       0
 16364 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16365 ;;      Totals:         0       1       0       0       0       0       0       0       0
 16366 ;;Total ram usage:        1 bytes
 16367 ;; Hardware stack levels used:    1
 16368 ;; Hardware stack levels required when called:   11
 16369 ;; This function calls:
 16370 ;;		_memset
 16371 ;; This function is called by:
 16372 ;;		_main
 16373 ;; This function uses a non-reentrant model
 16374 ;;
 16375                           
 16376                           	psect	text60
 16377  00235A                     __ptext60:
 16378                           	opt stack 0
 16379  00235A                     _USBDeviceInit:
 16380                           	opt stack 19
 16381                           
 16382                           ;usb_device.c: 279: uint8_t i;
 16383                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 16384                           
 16385                           ; BSR set to: 0
 16386                           ;incstack = 0
 16387  00235A  9AA0               	bcf	4000,5,c	;volatile
 16388                           
 16389                           ;usb_device.c: 285: ;
 16390                           ;usb_device.c: 288: {UEIR = 0;};
 16391  00235C  0E00               	movlw	0
 16392  00235E  6E6A               	movwf	3946,c	;volatile
 16393                           
 16394                           ;usb_device.c: 291: {UIR = 0;};
 16395  002360  0E00               	movlw	0
 16396  002362  6E68               	movwf	3944,c	;volatile
 16397                           
 16398                           ;usb_device.c: 294: UEP0 = 0;
 16399  002364  0E00               	movlw	0
 16400  002366  6E70               	movwf	3952,c	;volatile
 16401                           
 16402                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 16403  002368  0E71               	movlw	113
 16404  00236A  0100               	movlb	0	; () banked
 16405  00236C  6F60               	movwf	memset@p1& (0+255),b
 16406  00236E  0E0F               	movlw	15
 16407  002370  6F61               	movwf	(memset@p1+1)& (0+255),b
 16408  002372  0E00               	movlw	0
 16409  002374  6F63               	movwf	(memset@c+1)& (0+255),b
 16410  002376  0E00               	movlw	0
 16411  002378  6F62               	movwf	memset@c& (0+255),b
 16412  00237A  0E00               	movlw	0
 16413  00237C  6F65               	movwf	(memset@n+1)& (0+255),b
 16414  00237E  0E02               	movlw	2
 16415  002380  6F64               	movwf	memset@n& (0+255),b
 16416  002382  ECE5  F027         	call	_memset	;wreg free
 16417                           
 16418                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 16419  002386  0E16               	movlw	22
 16420  002388  6E6F               	movwf	3951,c	;volatile
 16421  00238A  0E9F               	movlw	159
 16422  00238C  6E6B               	movwf	3947,c	;volatile
 16423  00238E  0E7B               	movlw	123
 16424  002390  6E69               	movwf	3945,c	;volatile
 16425                           
 16426                           ;usb_device.c: 301: ;
 16427                           ;usb_device.c: 304: ;
 16428                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
 16429  002392  0E00               	movlw	0
 16430  002394  0100               	movlb	0	; () banked
 16431  002396  6F68               	movwf	USBDeviceInit@i& (0+255),b
 16432  002398                     l10103:
 16433                           
 16434                           ; BSR set to: 0
 16435  002398  0E0B               	movlw	11
 16436  00239A  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 16437  00239C  D001               	goto	l426
 16438  00239E  D00E               	goto	u9560
 16439  0023A0                     l426:
 16440                           
 16441                           ; BSR set to: 0
 16442                           ;usb_device.c: 308: {
 16443                           ;usb_device.c: 309: BDT[i].Val = 0x00;
 16444                           
 16445                           ; BSR set to: 0
 16446  0023A0  5168               	movf	USBDeviceInit@i& (0+255),w,b
 16447  0023A2  0D04               	mullw	4
 16448  0023A4  0E00               	movlw	0
 16449  0023A6  24F3               	addwf	prodl,w,c
 16450  0023A8  6ED9               	movwf	fsr2l,c
 16451  0023AA  0E04               	movlw	4
 16452  0023AC  20F4               	addwfc	prodh,w,c
 16453  0023AE  6EDA               	movwf	fsr2h,c
 16454  0023B0  6ADE               	clrf	postinc2,c
 16455  0023B2  6ADE               	clrf	postinc2,c
 16456  0023B4  6ADE               	clrf	postinc2,c
 16457  0023B6  6ADD               	clrf	postdec2,c
 16458                           
 16459                           ; BSR set to: 0
 16460  0023B8  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 16461  0023BA  D7EE               	goto	l10103
 16462  0023BC                     u9560:
 16463                           
 16464                           ; BSR set to: 0
 16465                           ;usb_device.c: 310: }
 16466                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
 16467  0023BC  8C6D               	bsf	3949,6,c	;volatile
 16468                           
 16469                           ; BSR set to: 0
 16470                           ;usb_device.c: 316: UADDR = 0x00;
 16471  0023BE  0E00               	movlw	0
 16472  0023C0  6E6E               	movwf	3950,c	;volatile
 16473                           
 16474                           ; BSR set to: 0
 16475                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 16476  0023C2  986D               	bcf	3949,4,c	;volatile
 16477                           
 16478                           ; BSR set to: 0
 16479                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 16480  0023C4  9C6D               	bcf	3949,6,c	;volatile
 16481  0023C6                     
 16482                           ; BSR set to: 0
 16483                           ;usb_device.c: 326: {
 16484                           ;usb_device.c: 327: (UIR &= 0xF7);
 16485                           
 16486                           ; BSR set to: 0
 16487  0023C6  9668               	bcf	3944,3,c	;volatile
 16488                           
 16489                           ; BSR set to: 0
 16490                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 16491  0023C8  0E00               	movlw	0
 16492  0023CA  6FFC               	movwf	(_inPipes+3)& (0+255),b	;volatile
 16493                           
 16494                           ; BSR set to: 0
 16495                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 16496  0023CC  0E00               	movlw	0
 16497  0023CE  6E3B               	movwf	_outPipes+3,c	;volatile
 16498                           
 16499                           ; BSR set to: 0
 16500                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 16501  0023D0  0E00               	movlw	0
 16502  0023D2  6E3D               	movwf	_outPipes+5,c	;volatile
 16503  0023D4  0E00               	movlw	0
 16504  0023D6  6E3C               	movwf	_outPipes+4,c	;volatile
 16505                           
 16506                           ; BSR set to: 0
 16507                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 16508  0023D8  B668               	btfsc	3944,3,c	;volatile
 16509  0023DA  D7F5               	goto	l428
 16510                           
 16511                           ; BSR set to: 0
 16512                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 16513                           
 16514                           ; BSR set to: 0
 16515  0023DC  0E01               	movlw	1
 16516  0023DE  0101               	movlb	1	; () banked
 16517  0023E0  6FD7               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 16518                           
 16519                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 16520  0023E2  0E01               	movlw	1
 16521  0023E4  6FD6               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 16522                           
 16523                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 16524  0023E6  0E00               	movlw	0
 16525  0023E8  6FD5               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 16526                           
 16527                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 16528  0023EA  0E00               	movlw	0
 16529  0023EC  6FD4               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 16530                           
 16531                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 16532  0023EE  0E00               	movlw	0
 16533  0023F0  6FD9               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 16534                           
 16535                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 16536  0023F2  0E00               	movlw	0
 16537  0023F4  0100               	movlb	0	; () banked
 16538  0023F6  6F68               	movwf	USBDeviceInit@i& (0+255),b
 16539  0023F8                     l10131:
 16540                           
 16541                           ; BSR set to: 0
 16542  0023F8  0E02               	movlw	2
 16543  0023FA  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 16544  0023FC  D001               	goto	l430
 16545  0023FE  D02E               	goto	u9590
 16546  002400                     l430:
 16547                           
 16548                           ; BSR set to: 0
 16549                           ;usb_device.c: 346: {
 16550                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 16551                           
 16552                           ; BSR set to: 0
 16553  002400  5168               	movf	USBDeviceInit@i& (0+255),w,b
 16554  002402  0D02               	mullw	2
 16555  002404  0E40               	movlw	low _pBDTEntryIn
 16556  002406  24F3               	addwf	prodl,w,c
 16557  002408  6ED9               	movwf	fsr2l,c
 16558  00240A  0E00               	movlw	high _pBDTEntryIn
 16559  00240C  20F4               	addwfc	prodh,w,c
 16560  00240E  6EDA               	movwf	fsr2h,c
 16561  002410  0E00               	movlw	0
 16562  002412  6EDE               	movwf	postinc2,c
 16563  002414  0E00               	movlw	0
 16564  002416  6EDD               	movwf	postdec2,c
 16565                           
 16566                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 16567  002418  5168               	movf	USBDeviceInit@i& (0+255),w,b
 16568  00241A  0D02               	mullw	2
 16569  00241C  0E8C               	movlw	low _pBDTEntryOut
 16570  00241E  24F3               	addwf	prodl,w,c
 16571  002420  6ED9               	movwf	fsr2l,c
 16572  002422  0E01               	movlw	high _pBDTEntryOut
 16573  002424  20F4               	addwfc	prodh,w,c
 16574  002426  6EDA               	movwf	fsr2h,c
 16575  002428  0E00               	movlw	0
 16576  00242A  6EDE               	movwf	postinc2,c
 16577  00242C  0E00               	movlw	0
 16578  00242E  6EDD               	movwf	postdec2,c
 16579                           
 16580                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 16581  002430  5168               	movf	USBDeviceInit@i& (0+255),w,b
 16582  002432  0D01               	mullw	1
 16583  002434  0EBB               	movlw	low _ep_data_in
 16584  002436  24F3               	addwf	prodl,w,c
 16585  002438  6ED9               	movwf	fsr2l,c
 16586  00243A  0E01               	movlw	high _ep_data_in
 16587  00243C  20F4               	addwfc	prodh,w,c
 16588  00243E  6EDA               	movwf	fsr2h,c
 16589  002440  0E00               	movlw	0
 16590  002442  6EDF               	movwf	indf2,c
 16591                           
 16592                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 16593  002444  5168               	movf	USBDeviceInit@i& (0+255),w,b
 16594  002446  0D01               	mullw	1
 16595  002448  0EB8               	movlw	low _ep_data_out
 16596  00244A  24F3               	addwf	prodl,w,c
 16597  00244C  6ED9               	movwf	fsr2l,c
 16598  00244E  0E01               	movlw	high _ep_data_out
 16599  002450  20F4               	addwfc	prodh,w,c
 16600  002452  6EDA               	movwf	fsr2h,c
 16601  002454  0E00               	movlw	0
 16602  002456  6EDF               	movwf	indf2,c
 16603                           
 16604                           ; BSR set to: 0
 16605  002458  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 16606  00245A  D7CE               	goto	l10131
 16607  00245C                     u9590:
 16608                           
 16609                           ; BSR set to: 0
 16610                           ;usb_device.c: 351: }
 16611                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 16612                           
 16613                           ; BSR set to: 0
 16614  00245C  0E08               	movlw	8
 16615  00245E  6E40               	movwf	_pBDTEntryIn,c
 16616  002460  0E04               	movlw	4
 16617  002462  6E41               	movwf	_pBDTEntryIn+1,c
 16618                           
 16619                           ; BSR set to: 0
 16620                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 16621  002464  0E16               	movlw	22
 16622  002466  6E70               	movwf	3952,c	;volatile
 16623                           
 16624                           ; BSR set to: 0
 16625                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 16626  002468  0E04               	movlw	4
 16627  00246A  0104               	movlb	4	; () banked
 16628  00246C  6F03               	movwf	3,b	;volatile
 16629  00246E  0E30               	movlw	48
 16630  002470  6F02               	movwf	2,b	;volatile
 16631                           
 16632                           ; BSR set to: 4
 16633                           ;usb_device.c: 359: BDT[0].CNT = 8;
 16634  002472  0E08               	movlw	8
 16635  002474  6F01               	movwf	1,b	;volatile
 16636                           
 16637                           ; BSR set to: 4
 16638                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 16639  002476  0E04               	movlw	4
 16640  002478  6F00               	movwf	0,b	;volatile
 16641                           
 16642                           ; BSR set to: 4
 16643                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 16644  00247A  8F00               	bsf	0,7,b	;volatile
 16645                           
 16646                           ; BSR set to: 4
 16647                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 16648  00247C  0E00               	movlw	0
 16649  00247E  6E5E               	movwf	_USBActiveConfiguration,c	;volatile
 16650                           
 16651                           ; BSR set to: 4
 16652                           ;usb_device.c: 366: USB1msTickCount = 0;
 16653  002480  0E00               	movlw	0
 16654  002482  0101               	movlb	1	; () banked
 16655  002484  6F92               	movwf	_USB1msTickCount& (0+255),b	;volatile
 16656  002486  0E00               	movlw	0
 16657  002488  6F93               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 16658  00248A  0E00               	movlw	0
 16659  00248C  6F94               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 16660  00248E  0E00               	movlw	0
 16661  002490  6F95               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 16662                           
 16663                           ; BSR set to: 1
 16664                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 16665  002492  0E00               	movlw	0
 16666  002494  6FD3               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 16667                           
 16668                           ; BSR set to: 1
 16669                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 16670  002496  0E00               	movlw	0
 16671  002498  6E58               	movwf	_USBDeviceState,c	;volatile
 16672                           
 16673                           ; BSR set to: 1
 16674  00249A  0012               	return		;funcret
 16675  00249C                     __end_of_USBDeviceInit:
 16676                           	opt stack 0
 16677                           tblptru	equ	0xFF8
 16678                           tblptrh	equ	0xFF7
 16679                           tblptrl	equ	0xFF6
 16680                           tablat	equ	0xFF5
 16681                           prodh	equ	0xFF4
 16682                           prodl	equ	0xFF3
 16683                           intcon	equ	0xFF2
 16684                           indf0	equ	0xFEF
 16685                           postinc0	equ	0xFEE
 16686                           fsr0h	equ	0xFEA
 16687                           fsr0l	equ	0xFE9
 16688                           wreg	equ	0xFE8
 16689                           indf1	equ	0xFE7
 16690                           postdec1	equ	0xFE5
 16691                           fsr1h	equ	0xFE2
 16692                           fsr1l	equ	0xFE1
 16693                           indf2	equ	0xFDF
 16694                           postinc2	equ	0xFDE
 16695                           postdec2	equ	0xFDD
 16696                           plusw2	equ	0xFDB
 16697                           fsr2h	equ	0xFDA
 16698                           fsr2l	equ	0xFD9
 16699                           status	equ	0xFD8
 16700                           
 16701 ;; *************** function _memset *****************
 16702 ;; Defined at:
 16703 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\memset.c"
 16704 ;; Parameters:    Size  Location     Type
 16705 ;;  p1              2    0[BANK0 ] PTR void 
 16706 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 16707 ;;  c               2    2[BANK0 ] int 
 16708 ;;  n               2    4[BANK0 ] unsigned int 
 16709 ;; Auto vars:     Size  Location     Type
 16710 ;;  p               2    6[BANK0 ] PTR unsigned char 
 16711 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 16712 ;; Return value:  Size  Location     Type
 16713 ;;                  2    0[BANK0 ] PTR void 
 16714 ;; Registers used:
 16715 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16716 ;; Tracked objects:
 16717 ;;		On entry : 0/0
 16718 ;;		On exit  : 0/0
 16719 ;;		Unchanged: 0/0
 16720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16721 ;;      Params:         0       6       0       0       0       0       0       0       0
 16722 ;;      Locals:         0       2       0       0       0       0       0       0       0
 16723 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16724 ;;      Totals:         0       8       0       0       0       0       0       0       0
 16725 ;;Total ram usage:        8 bytes
 16726 ;; Hardware stack levels used:    1
 16727 ;; Hardware stack levels required when called:   10
 16728 ;; This function calls:
 16729 ;;		Nothing
 16730 ;; This function is called by:
 16731 ;;		_USBDeviceInit
 16732 ;; This function uses a non-reentrant model
 16733 ;;
 16734                           
 16735                           	psect	text61
 16736  004FCA                     __ptext61:
 16737                           	opt stack 0
 16738  004FCA                     _memset:
 16739                           	opt stack 19
 16740                           
 16741                           ; BSR set to: 1
 16742                           ;incstack = 0
 16743  004FCA  C060  F066         	movff	memset@p1,memset@p
 16744  004FCE  C061  F067         	movff	memset@p1+1,memset@p+1
 16745  004FD2  D009               	goto	l3395
 16746  004FD4                     l8995:
 16747  004FD4  C066  FFD9         	movff	memset@p,fsr2l
 16748  004FD8  C067  FFDA         	movff	memset@p+1,fsr2h
 16749  004FDC  C062  FFDF         	movff	memset@c,indf2
 16750  004FE0  0100               	movlb	0	; () banked
 16751  004FE2  4B66               	infsnz	memset@p& (0+255),f,b
 16752  004FE4  2B67               	incf	(memset@p+1)& (0+255),f,b
 16753  004FE6                     l3395:
 16754                           
 16755                           ; BSR set to: 0
 16756  004FE6  0100               	movlb	0	; () banked
 16757  004FE8  0764               	decf	memset@n& (0+255),f,b
 16758  004FEA  A0D8               	btfss	status,0,c
 16759  004FEC  0765               	decf	(memset@n+1)& (0+255),f,b
 16760  004FEE  2964               	incf	memset@n& (0+255),w,b
 16761  004FF0  E1F1               	bnz	l8995
 16762  004FF2  2965               	incf	(memset@n+1)& (0+255),w,b
 16763  004FF4  B4D8               	btfsc	status,2,c
 16764  004FF6  0012               	return	
 16765  004FF8  D7ED               	goto	l3396
 16766  004FFA                     __end_of_memset:
 16767                           	opt stack 0
 16768                           tblptru	equ	0xFF8
 16769                           tblptrh	equ	0xFF7
 16770                           tblptrl	equ	0xFF6
 16771                           tablat	equ	0xFF5
 16772                           prodh	equ	0xFF4
 16773                           prodl	equ	0xFF3
 16774                           intcon	equ	0xFF2
 16775                           indf0	equ	0xFEF
 16776                           postinc0	equ	0xFEE
 16777                           fsr0h	equ	0xFEA
 16778                           fsr0l	equ	0xFE9
 16779                           wreg	equ	0xFE8
 16780                           indf1	equ	0xFE7
 16781                           postdec1	equ	0xFE5
 16782                           fsr1h	equ	0xFE2
 16783                           fsr1l	equ	0xFE1
 16784                           indf2	equ	0xFDF
 16785                           postinc2	equ	0xFDE
 16786                           postdec2	equ	0xFDD
 16787                           plusw2	equ	0xFDB
 16788                           fsr2h	equ	0xFDA
 16789                           fsr2l	equ	0xFD9
 16790                           status	equ	0xFD8
 16791                           
 16792 ;; *************** function _SYS_InterruptHigh *****************
 16793 ;; Defined at:
 16794 ;;		line 59 in file "usb/system.c"
 16795 ;; Parameters:    Size  Location     Type
 16796 ;;		None
 16797 ;; Auto vars:     Size  Location     Type
 16798 ;;  dig4            2   53[COMRAM] int 
 16799 ;;  dig3            2   51[COMRAM] int 
 16800 ;;  dig2            2   49[COMRAM] int 
 16801 ;;  dig1            2   47[COMRAM] int 
 16802 ;; Return value:  Size  Location     Type
 16803 ;;                  1    wreg      void 
 16804 ;; Registers used:
 16805 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16806 ;; Tracked objects:
 16807 ;;		On entry : 0/0
 16808 ;;		On exit  : 0/0
 16809 ;;		Unchanged: 0/0
 16810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16811 ;;      Params:         0       0       0       0       0       0       0       0       0
 16812 ;;      Locals:         8       0       0       0       0       0       0       0       0
 16813 ;;      Temps:         19       0       0       0       0       0       0       0       0
 16814 ;;      Totals:        27       0       0       0       0       0       0       0       0
 16815 ;;Total ram usage:       27 bytes
 16816 ;; Hardware stack levels used:    1
 16817 ;; Hardware stack levels required when called:    9
 16818 ;; This function calls:
 16819 ;;		_USBDeviceTasks
 16820 ;;		_getch
 16821 ;;		_recebeByteLoRaWan
 16822 ;; This function is called by:
 16823 ;;		Interrupt level 2
 16824 ;; This function uses a non-reentrant model
 16825 ;;
 16826                           
 16827                           	psect	intcode
 16828  000008                     __pintcode:
 16829                           	opt stack 0
 16830  000008                     _SYS_InterruptHigh:
 16831                           	opt stack 16
 16832                           
 16833                           ; BSR set to: 0
 16834                           ;incstack = 0
 16835  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 16836  00000A  EDFB  F00F         	call	int_func,f	;refresh shadow registers
 16837                           tblptru	equ	0xFF8
 16838                           tblptrh	equ	0xFF7
 16839                           tblptrl	equ	0xFF6
 16840                           tablat	equ	0xFF5
 16841                           prodh	equ	0xFF4
 16842                           prodl	equ	0xFF3
 16843                           intcon	equ	0xFF2
 16844                           indf0	equ	0xFEF
 16845                           postinc0	equ	0xFEE
 16846                           fsr0h	equ	0xFEA
 16847                           fsr0l	equ	0xFE9
 16848                           wreg	equ	0xFE8
 16849                           indf1	equ	0xFE7
 16850                           postdec1	equ	0xFE5
 16851                           fsr1h	equ	0xFE2
 16852                           fsr1l	equ	0xFE1
 16853                           indf2	equ	0xFDF
 16854                           postinc2	equ	0xFDE
 16855                           postdec2	equ	0xFDD
 16856                           plusw2	equ	0xFDB
 16857                           fsr2h	equ	0xFDA
 16858                           fsr2l	equ	0xFD9
 16859                           status	equ	0xFD8
 16860                           
 16861                           	psect	intcode_body
 16862  001FF6                     __pintcode_body:
 16863                           	opt stack 16
 16864  001FF6                     int_func:
 16865                           	opt stack 16
 16866  001FF6  0006               	pop		; remove dummy address from shadow register refresh
 16867  001FF8  CFFA F01E          	movff	pclath,??_SYS_InterruptHigh+1
 16868  001FFC  CFFB F01F          	movff	pclatu,??_SYS_InterruptHigh+2
 16869  002000  CFE9 F020          	movff	fsr0l,??_SYS_InterruptHigh+3
 16870  002004  CFEA F021          	movff	fsr0h,??_SYS_InterruptHigh+4
 16871  002008  CFE1 F022          	movff	fsr1l,??_SYS_InterruptHigh+5
 16872  00200C  CFE2 F023          	movff	fsr1h,??_SYS_InterruptHigh+6
 16873  002010  CFD9 F024          	movff	fsr2l,??_SYS_InterruptHigh+7
 16874  002014  CFDA F025          	movff	fsr2h,??_SYS_InterruptHigh+8
 16875  002018  CFF3 F026          	movff	prodl,??_SYS_InterruptHigh+9
 16876  00201C  CFF4 F027          	movff	prodh,??_SYS_InterruptHigh+10
 16877  002020  CFF6 F028          	movff	tblptrl,??_SYS_InterruptHigh+11
 16878  002024  CFF7 F029          	movff	tblptrh,??_SYS_InterruptHigh+12
 16879  002028  CFF8 F02A          	movff	tblptru,??_SYS_InterruptHigh+13
 16880  00202C  CFF5 F02B          	movff	tablat,??_SYS_InterruptHigh+14
 16881  002030  C05F  F02C         	movff	btemp,??_SYS_InterruptHigh+15
 16882  002034  C060  F02D         	movff	btemp+1,??_SYS_InterruptHigh+16
 16883  002038  C061  F02E         	movff	btemp+2,??_SYS_InterruptHigh+17
 16884  00203C  C062  F02F         	movff	btemp+3,??_SYS_InterruptHigh+18
 16885                           
 16886                           ;system.c: 64: if (CCP1IF && CCP1IE)
 16887  002040  B49E               	btfsc	3998,2,c	;volatile
 16888  002042  A49D               	btfss	3997,2,c	;volatile
 16889  002044  D082               	goto	i2l133
 16890                           
 16891                           ;system.c: 65: {
 16892                           ;system.c: 66: CCP1IF=0;
 16893  002046  949E               	bcf	3998,2,c	;volatile
 16894                           
 16895                           ;system.c: 67: ticks++;
 16896  002048  0E01               	movlw	1
 16897  00204A  0101               	movlb	1	; () banked
 16898  00204C  2796               	addwf	_ticks& (0+255),f,b	;volatile
 16899  00204E  0E00               	movlw	0
 16900  002050  2397               	addwfc	(_ticks+1)& (0+255),f,b	;volatile
 16901  002052  2398               	addwfc	(_ticks+2)& (0+255),f,b	;volatile
 16902  002054  2399               	addwfc	(_ticks+3)& (0+255),f,b	;volatile
 16903                           
 16904                           ; BSR set to: 1
 16905                           ;system.c: 69: int dig1=PORTDbits.RD0;
 16906  002056  A083               	btfss	3971,0,c	;volatile
 16907  002058  D003               	goto	i2u1009_40
 16908  00205A  6A1D               	clrf	??_SYS_InterruptHigh& (0+255),c
 16909  00205C  2A1D               	incf	??_SYS_InterruptHigh& (0+255),f,c
 16910  00205E  D001               	goto	i2u1009_48
 16911  002060                     i2u1009_40:
 16912  002060  6A1D               	clrf	??_SYS_InterruptHigh& (0+255),c
 16913  002062                     i2u1009_48:
 16914  002062  501D               	movf	??_SYS_InterruptHigh,w,c
 16915  002064  6E30               	movwf	SYS_InterruptHigh@dig1,c
 16916  002066  6A31               	clrf	SYS_InterruptHigh@dig1+1,c
 16917                           
 16918                           ;system.c: 70: int dig2=PORTDbits.RD1;
 16919  002068  A283               	btfss	3971,1,c	;volatile
 16920  00206A  D003               	goto	i2u1010_40
 16921  00206C  6A1D               	clrf	??_SYS_InterruptHigh& (0+255),c
 16922  00206E  2A1D               	incf	??_SYS_InterruptHigh& (0+255),f,c
 16923  002070  D001               	goto	i2u1010_48
 16924  002072                     i2u1010_40:
 16925  002072  6A1D               	clrf	??_SYS_InterruptHigh& (0+255),c
 16926  002074                     i2u1010_48:
 16927  002074  501D               	movf	??_SYS_InterruptHigh,w,c
 16928  002076  6E32               	movwf	SYS_InterruptHigh@dig2,c
 16929  002078  6A33               	clrf	SYS_InterruptHigh@dig2+1,c
 16930                           
 16931                           ;system.c: 71: int dig3=PORTDbits.RD2;
 16932  00207A  A483               	btfss	3971,2,c	;volatile
 16933  00207C  D003               	goto	i2u1011_40
 16934  00207E  6A1D               	clrf	??_SYS_InterruptHigh& (0+255),c
 16935  002080  2A1D               	incf	??_SYS_InterruptHigh& (0+255),f,c
 16936  002082  D001               	goto	i2u1011_48
 16937  002084                     i2u1011_40:
 16938  002084  6A1D               	clrf	??_SYS_InterruptHigh& (0+255),c
 16939  002086                     i2u1011_48:
 16940  002086  501D               	movf	??_SYS_InterruptHigh,w,c
 16941  002088  6E34               	movwf	SYS_InterruptHigh@dig3,c
 16942  00208A  6A35               	clrf	SYS_InterruptHigh@dig3+1,c
 16943                           
 16944                           ;system.c: 72: int dig4=PORTDbits.RD3;
 16945  00208C  A683               	btfss	3971,3,c	;volatile
 16946  00208E  D003               	goto	i2u1012_40
 16947  002090  6A1D               	clrf	??_SYS_InterruptHigh& (0+255),c
 16948  002092  2A1D               	incf	??_SYS_InterruptHigh& (0+255),f,c
 16949  002094  D001               	goto	i2u1012_48
 16950  002096                     i2u1012_40:
 16951  002096  6A1D               	clrf	??_SYS_InterruptHigh& (0+255),c
 16952  002098                     i2u1012_48:
 16953  002098  501D               	movf	??_SYS_InterruptHigh,w,c
 16954  00209A  6E36               	movwf	SYS_InterruptHigh@dig4,c
 16955  00209C  6A37               	clrf	SYS_InterruptHigh@dig4+1,c
 16956                           
 16957                           ;system.c: 74: if ((dig_1!=dig1) && (dig1==1))
 16958  00209E  5030               	movf	SYS_InterruptHigh@dig1,w,c
 16959  0020A0  0101               	movlb	1	; () banked
 16960  0020A2  19CA               	xorwf	_dig_1& (0+255),w,b	;volatile
 16961  0020A4  E104               	bnz	i2u1013_40
 16962  0020A6  5031               	movf	SYS_InterruptHigh@dig1+1,w,c
 16963  0020A8  19CB               	xorwf	(_dig_1+1)& (0+255),w,b	;volatile
 16964  0020AA  B4D8               	btfsc	status,2,c
 16965  0020AC  D00A               	goto	i2l134
 16966  0020AE                     i2u1013_40:
 16967                           
 16968                           ; BSR set to: 1
 16969  0020AE  0430               	decf	SYS_InterruptHigh@dig1,w,c
 16970  0020B0  1031               	iorwf	SYS_InterruptHigh@dig1+1,w,c
 16971  0020B2  A4D8               	btfss	status,2,c
 16972  0020B4  D006               	goto	i2l134
 16973                           
 16974                           ; BSR set to: 1
 16975                           ;system.c: 75: freqPulses1++;
 16976  0020B6  0E01               	movlw	1
 16977  0020B8  27A6               	addwf	_freqPulses1& (0+255),f,b	;volatile
 16978  0020BA  0E00               	movlw	0
 16979  0020BC  23A7               	addwfc	(_freqPulses1+1)& (0+255),f,b	;volatile
 16980  0020BE  23A8               	addwfc	(_freqPulses1+2)& (0+255),f,b	;volatile
 16981  0020C0  23A9               	addwfc	(_freqPulses1+3)& (0+255),f,b	;volatile
 16982  0020C2                     i2l134:
 16983                           
 16984                           ; BSR set to: 1
 16985                           ;system.c: 76: dig_1=dig1;
 16986                           
 16987                           ; BSR set to: 1
 16988  0020C2  C030  F1CA         	movff	SYS_InterruptHigh@dig1,_dig_1	;volatile
 16989  0020C6  C031  F1CB         	movff	SYS_InterruptHigh@dig1+1,_dig_1+1	;volatile
 16990                           
 16991                           ;system.c: 77: if ((dig_2!=dig2) && (dig2==1))
 16992  0020CA  5032               	movf	SYS_InterruptHigh@dig2,w,c
 16993  0020CC  19C8               	xorwf	_dig_2& (0+255),w,b	;volatile
 16994  0020CE  E104               	bnz	i2u1015_40
 16995  0020D0  5033               	movf	SYS_InterruptHigh@dig2+1,w,c
 16996  0020D2  19C9               	xorwf	(_dig_2+1)& (0+255),w,b	;volatile
 16997  0020D4  B4D8               	btfsc	status,2,c
 16998  0020D6  D00A               	goto	i2l135
 16999  0020D8                     i2u1015_40:
 17000                           
 17001                           ; BSR set to: 1
 17002  0020D8  0432               	decf	SYS_InterruptHigh@dig2,w,c
 17003  0020DA  1033               	iorwf	SYS_InterruptHigh@dig2+1,w,c
 17004  0020DC  A4D8               	btfss	status,2,c
 17005  0020DE  D006               	goto	i2l135
 17006                           
 17007                           ; BSR set to: 1
 17008                           ;system.c: 78: freqPulses2++;
 17009  0020E0  0E01               	movlw	1
 17010  0020E2  27A2               	addwf	_freqPulses2& (0+255),f,b	;volatile
 17011  0020E4  0E00               	movlw	0
 17012  0020E6  23A3               	addwfc	(_freqPulses2+1)& (0+255),f,b	;volatile
 17013  0020E8  23A4               	addwfc	(_freqPulses2+2)& (0+255),f,b	;volatile
 17014  0020EA  23A5               	addwfc	(_freqPulses2+3)& (0+255),f,b	;volatile
 17015  0020EC                     i2l135:
 17016                           
 17017                           ; BSR set to: 1
 17018                           ;system.c: 79: dig_2=dig2;
 17019                           
 17020                           ; BSR set to: 1
 17021  0020EC  C032  F1C8         	movff	SYS_InterruptHigh@dig2,_dig_2	;volatile
 17022  0020F0  C033  F1C9         	movff	SYS_InterruptHigh@dig2+1,_dig_2+1	;volatile
 17023                           
 17024                           ;system.c: 80: if ((dig_3!=dig3) && (dig3==1))
 17025  0020F4  5034               	movf	SYS_InterruptHigh@dig3,w,c
 17026  0020F6  19C6               	xorwf	_dig_3& (0+255),w,b	;volatile
 17027  0020F8  E104               	bnz	i2u1017_40
 17028  0020FA  5035               	movf	SYS_InterruptHigh@dig3+1,w,c
 17029  0020FC  19C7               	xorwf	(_dig_3+1)& (0+255),w,b	;volatile
 17030  0020FE  B4D8               	btfsc	status,2,c
 17031  002100  D00A               	goto	i2l136
 17032  002102                     i2u1017_40:
 17033                           
 17034                           ; BSR set to: 1
 17035  002102  0434               	decf	SYS_InterruptHigh@dig3,w,c
 17036  002104  1035               	iorwf	SYS_InterruptHigh@dig3+1,w,c
 17037  002106  A4D8               	btfss	status,2,c
 17038  002108  D006               	goto	i2l136
 17039                           
 17040                           ; BSR set to: 1
 17041                           ;system.c: 81: freqPulses3++;
 17042  00210A  0E01               	movlw	1
 17043  00210C  279E               	addwf	_freqPulses3& (0+255),f,b	;volatile
 17044  00210E  0E00               	movlw	0
 17045  002110  239F               	addwfc	(_freqPulses3+1)& (0+255),f,b	;volatile
 17046  002112  23A0               	addwfc	(_freqPulses3+2)& (0+255),f,b	;volatile
 17047  002114  23A1               	addwfc	(_freqPulses3+3)& (0+255),f,b	;volatile
 17048  002116                     i2l136:
 17049                           
 17050                           ; BSR set to: 1
 17051                           ;system.c: 82: dig_3=dig3;
 17052                           
 17053                           ; BSR set to: 1
 17054  002116  C034  F1C6         	movff	SYS_InterruptHigh@dig3,_dig_3	;volatile
 17055  00211A  C035  F1C7         	movff	SYS_InterruptHigh@dig3+1,_dig_3+1	;volatile
 17056                           
 17057                           ;system.c: 83: if ((dig_4!=dig4) && (dig4==1))
 17058  00211E  5036               	movf	SYS_InterruptHigh@dig4,w,c
 17059  002120  19C4               	xorwf	_dig_4& (0+255),w,b	;volatile
 17060  002122  E104               	bnz	i2u1019_40
 17061  002124  5037               	movf	SYS_InterruptHigh@dig4+1,w,c
 17062  002126  19C5               	xorwf	(_dig_4+1)& (0+255),w,b	;volatile
 17063  002128  B4D8               	btfsc	status,2,c
 17064  00212A  D00A               	goto	i2l137
 17065  00212C                     i2u1019_40:
 17066                           
 17067                           ; BSR set to: 1
 17068  00212C  0436               	decf	SYS_InterruptHigh@dig4,w,c
 17069  00212E  1037               	iorwf	SYS_InterruptHigh@dig4+1,w,c
 17070  002130  A4D8               	btfss	status,2,c
 17071  002132  D006               	goto	i2l137
 17072                           
 17073                           ; BSR set to: 1
 17074                           ;system.c: 84: freqPulses4++;
 17075  002134  0E01               	movlw	1
 17076  002136  279A               	addwf	_freqPulses4& (0+255),f,b	;volatile
 17077  002138  0E00               	movlw	0
 17078  00213A  239B               	addwfc	(_freqPulses4+1)& (0+255),f,b	;volatile
 17079  00213C  239C               	addwfc	(_freqPulses4+2)& (0+255),f,b	;volatile
 17080  00213E  239D               	addwfc	(_freqPulses4+3)& (0+255),f,b	;volatile
 17081  002140                     i2l137:
 17082                           
 17083                           ; BSR set to: 1
 17084                           ;system.c: 85: dig_4=dig4;
 17085                           
 17086                           ; BSR set to: 1
 17087  002140  C036  F1C4         	movff	SYS_InterruptHigh@dig4,_dig_4	;volatile
 17088  002144  C037  F1C5         	movff	SYS_InterruptHigh@dig4+1,_dig_4+1	;volatile
 17089                           
 17090                           ;system.c: 86: }
 17091  002148  D00B               	goto	i2l141
 17092  00214A                     i2l133:
 17093                           
 17094                           ;system.c: 87: else if (RCIE && RCIF)
 17095  00214A  BA9D               	btfsc	3997,5,c	;volatile
 17096  00214C  AA9E               	btfss	3998,5,c	;volatile
 17097  00214E  D005               	goto	i2l139
 17098                           
 17099                           ;system.c: 88: {
 17100                           ;system.c: 90: recebeByteLoRaWan(getch());
 17101  002150  EC93  F028         	call	_getch	;wreg free
 17102  002154  EC1E  F00B         	call	_recebeByteLoRaWan
 17103                           
 17104                           ;system.c: 92: }
 17105  002158  D003               	goto	i2l141
 17106  00215A                     i2l139:
 17107                           
 17108                           ;system.c: 93: else if (USBIE)
 17109  00215A  BAA0               	btfsc	4000,5,c	;volatile
 17110                           
 17111                           ;system.c: 94: {
 17112                           ;system.c: 96: USBDeviceTasks();
 17113  00215C  EC87  F013         	call	_USBDeviceTasks	;wreg free
 17114  002160                     i2l141:
 17115  002160  C02F  F062         	movff	??_SYS_InterruptHigh+18,btemp+3
 17116  002164  C02E  F061         	movff	??_SYS_InterruptHigh+17,btemp+2
 17117  002168  C02D  F060         	movff	??_SYS_InterruptHigh+16,btemp+1
 17118  00216C  C02C  F05F         	movff	??_SYS_InterruptHigh+15,btemp
 17119  002170  C02B  FFF5         	movff	??_SYS_InterruptHigh+14,tablat
 17120  002174  C02A  FFF8         	movff	??_SYS_InterruptHigh+13,tblptru
 17121  002178  C029  FFF7         	movff	??_SYS_InterruptHigh+12,tblptrh
 17122  00217C  C028  FFF6         	movff	??_SYS_InterruptHigh+11,tblptrl
 17123  002180  C027  FFF4         	movff	??_SYS_InterruptHigh+10,prodh
 17124  002184  C026  FFF3         	movff	??_SYS_InterruptHigh+9,prodl
 17125  002188  C025  FFDA         	movff	??_SYS_InterruptHigh+8,fsr2h
 17126  00218C  C024  FFD9         	movff	??_SYS_InterruptHigh+7,fsr2l
 17127  002190  C023  FFE2         	movff	??_SYS_InterruptHigh+6,fsr1h
 17128  002194  C022  FFE1         	movff	??_SYS_InterruptHigh+5,fsr1l
 17129  002198  C021  FFEA         	movff	??_SYS_InterruptHigh+4,fsr0h
 17130  00219C  C020  FFE9         	movff	??_SYS_InterruptHigh+3,fsr0l
 17131  0021A0  C01F  FFFB         	movff	??_SYS_InterruptHigh+2,pclatu
 17132  0021A4  C01E  FFFA         	movff	??_SYS_InterruptHigh+1,pclath
 17133  0021A8  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 17134  0021AA  0011               	retfie		f
 17135  0021AC                     __end_of_SYS_InterruptHigh:
 17136                           	opt stack 0
 17137                           pclatu	equ	0xFFB
 17138                           pclath	equ	0xFFA
 17139                           tblptru	equ	0xFF8
 17140                           tblptrh	equ	0xFF7
 17141                           tblptrl	equ	0xFF6
 17142                           tablat	equ	0xFF5
 17143                           prodh	equ	0xFF4
 17144                           prodl	equ	0xFF3
 17145                           intcon	equ	0xFF2
 17146                           indf0	equ	0xFEF
 17147                           postinc0	equ	0xFEE
 17148                           fsr0h	equ	0xFEA
 17149                           fsr0l	equ	0xFE9
 17150                           wreg	equ	0xFE8
 17151                           indf1	equ	0xFE7
 17152                           postdec1	equ	0xFE5
 17153                           fsr1h	equ	0xFE2
 17154                           fsr1l	equ	0xFE1
 17155                           indf2	equ	0xFDF
 17156                           postinc2	equ	0xFDE
 17157                           postdec2	equ	0xFDD
 17158                           plusw2	equ	0xFDB
 17159                           fsr2h	equ	0xFDA
 17160                           fsr2l	equ	0xFD9
 17161                           status	equ	0xFD8
 17162                           
 17163 ;; *************** function _recebeByteLoRaWan *****************
 17164 ;; Defined at:
 17165 ;;		line 346 in file "LoRaWanCore.c"
 17166 ;; Parameters:    Size  Location     Type
 17167 ;;  b               1    wreg     char 
 17168 ;; Auto vars:     Size  Location     Type
 17169 ;;  b               1   15[COMRAM] char 
 17170 ;;  i               1   18[COMRAM] unsigned char 
 17171 ;;  port            1   14[COMRAM] unsigned char 
 17172 ;;  i               1   16[COMRAM] unsigned char 
 17173 ;;  tamMsgRx        1   17[COMRAM] unsigned char 
 17174 ;;  len             1   13[COMRAM] unsigned char 
 17175 ;; Return value:  Size  Location     Type
 17176 ;;                  1    wreg      void 
 17177 ;; Registers used:
 17178 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17179 ;; Tracked objects:
 17180 ;;		On entry : 0/0
 17181 ;;		On exit  : 0/0
 17182 ;;		Unchanged: 0/0
 17183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17184 ;;      Params:         0       0       0       0       0       0       0       0       0
 17185 ;;      Locals:         6       0       0       0       0       0       0       0       0
 17186 ;;      Temps:          4       0       0       0       0       0       0       0       0
 17187 ;;      Totals:        10       0       0       0       0       0       0       0       0
 17188 ;;Total ram usage:       10 bytes
 17189 ;; Hardware stack levels used:    1
 17190 ;; Hardware stack levels required when called:    2
 17191 ;; This function calls:
 17192 ;;		_strcmp
 17193 ;;		_strcpy
 17194 ;;		_strncmp
 17195 ;;		i2_converter
 17196 ;;		i2_strlen
 17197 ;; This function is called by:
 17198 ;;		_SYS_InterruptHigh
 17199 ;; This function uses a non-reentrant model
 17200 ;;
 17201                           
 17202                           	psect	text63
 17203  00163C                     __ptext63:
 17204                           	opt stack 0
 17205  00163C                     _recebeByteLoRaWan:
 17206                           	opt stack 22
 17207                           
 17208                           ;incstack = 0
 17209                           ;recebeByteLoRaWan@b stored from wreg
 17210  00163C  6E10               	movwf	recebeByteLoRaWan@b,c
 17211                           
 17212                           ;LoRaWanCore.c: 348: static uint8_t frameData[100];
 17213                           ;LoRaWanCore.c: 349: frameData[tamFrame++]=b;
 17214  00163E  505A               	movf	_tamFrame,w,c	;volatile
 17215  001640  0D01               	mullw	1
 17216  001642  0E40               	movlw	low recebeByteLoRaWan@frameData
 17217  001644  24F3               	addwf	prodl,w,c
 17218  001646  6ED9               	movwf	fsr2l,c
 17219  001648  0E04               	movlw	high recebeByteLoRaWan@frameData
 17220  00164A  20F4               	addwfc	prodh,w,c
 17221  00164C  6EDA               	movwf	fsr2h,c
 17222  00164E  C010  FFDF         	movff	recebeByteLoRaWan@b,indf2
 17223  001652  2A5A               	incf	_tamFrame,f,c	;volatile
 17224                           
 17225                           ;LoRaWanCore.c: 350: if ((b==0x0A) && (tamFrame>2))
 17226  001654  0E0A               	movlw	10
 17227  001656  1810               	xorwf	recebeByteLoRaWan@b,w,c
 17228  001658  A4D8               	btfss	status,2,c
 17229  00165A  D131               	goto	i2u928_40
 17230  00165C  0E02               	movlw	2
 17231  00165E  645A               	cpfsgt	_tamFrame,c	;volatile
 17232  001660  D12E               	goto	i2u928_40
 17233                           
 17234                           ;LoRaWanCore.c: 351: {
 17235                           ;LoRaWanCore.c: 352: frameData[tamFrame]=0x00;
 17236  001662  505A               	movf	_tamFrame,w,c	;volatile
 17237  001664  0D01               	mullw	1
 17238  001666  0E40               	movlw	low recebeByteLoRaWan@frameData
 17239  001668  24F3               	addwf	prodl,w,c
 17240  00166A  6ED9               	movwf	fsr2l,c
 17241  00166C  0E04               	movlw	high recebeByteLoRaWan@frameData
 17242  00166E  20F4               	addwfc	prodh,w,c
 17243  001670  6EDA               	movwf	fsr2h,c
 17244  001672  0E00               	movlw	0
 17245  001674  6EDF               	movwf	indf2,c
 17246                           
 17247                           ;LoRaWanCore.c: 353: strcpy(frameBuffer,frameData);
 17248  001676  0EC8               	movlw	low _frameBuffer
 17249  001678  6E01               	movwf	strcpy@to,c
 17250  00167A  0E06               	movlw	high _frameBuffer
 17251  00167C  6E02               	movwf	strcpy@to+1,c
 17252  00167E  0E40               	movlw	low recebeByteLoRaWan@frameData
 17253  001680  6E03               	movwf	strcpy@from,c
 17254  001682  0E04               	movlw	high recebeByteLoRaWan@frameData
 17255  001684  6E04               	movwf	strcpy@from+1,c
 17256  001686  EC15  F028         	call	_strcpy	;wreg free
 17257                           
 17258                           ;LoRaWanCore.c: 355: frameData[tamFrame-2]=0x00;
 17259  00168A  0EFE               	movlw	254
 17260  00168C  6E0A               	movwf	??_recebeByteLoRaWan& (0+255),c
 17261  00168E  0EFF               	movlw	255
 17262  001690  6E0B               	movwf	(??_recebeByteLoRaWan+1)& (0+255),c
 17263  001692  505A               	movf	_tamFrame,w,c	;volatile
 17264  001694  6E0C               	movwf	(??_recebeByteLoRaWan+2)& (0+255),c
 17265  001696  6A0D               	clrf	(??_recebeByteLoRaWan+3)& (0+255),c
 17266  001698  500A               	movf	??_recebeByteLoRaWan,w,c
 17267  00169A  260C               	addwf	??_recebeByteLoRaWan+2,f,c
 17268  00169C  500B               	movf	??_recebeByteLoRaWan+1,w,c
 17269  00169E  220D               	addwfc	??_recebeByteLoRaWan+3,f,c
 17270  0016A0  0E40               	movlw	low recebeByteLoRaWan@frameData
 17271  0016A2  240C               	addwf	??_recebeByteLoRaWan+2,w,c
 17272  0016A4  6ED9               	movwf	fsr2l,c
 17273  0016A6  0E04               	movlw	high recebeByteLoRaWan@frameData
 17274  0016A8  200D               	addwfc	??_recebeByteLoRaWan+3,w,c
 17275  0016AA  6EDA               	movwf	fsr2h,c
 17276  0016AC  0E00               	movlw	0
 17277  0016AE  6EDF               	movwf	indf2,c
 17278                           
 17279                           ;LoRaWanCore.c: 356: tamFrame=0;
 17280  0016B0  0E00               	movlw	0
 17281  0016B2  6E5A               	movwf	_tamFrame,c	;volatile
 17282                           
 17283                           ;LoRaWanCore.c: 357: uint8_t len = (sizeof(MSG_LORAWAN) / sizeof((MSG_LORAWAN)[0]));
 17284  0016B4  0E0F               	movlw	15
 17285  0016B6  6E0E               	movwf	recebeByteLoRaWan@len,c
 17286                           
 17287                           ;LoRaWanCore.c: 358: responseLoRaWan=0xFF;
 17288  0016B8  0101               	movlb	1	; () banked
 17289  0016BA  69E4               	setf	_responseLoRaWan& (0+255),b	;volatile
 17290                           
 17291                           ; BSR set to: 1
 17292                           ;LoRaWanCore.c: 359: for (uint8_t i=0;i<len;i++)
 17293  0016BC  0E00               	movlw	0
 17294  0016BE  6E11               	movwf	recebeByteLoRaWan@i,c
 17295  0016C0  D01C               	goto	i2l2589
 17296  0016C2                     
 17297                           ;LoRaWanCore.c: 360: {
 17298                           ;LoRaWanCore.c: 361: if (strcmp(frameData,MSG_LORAWAN[i])==0)
 17299                           
 17300                           ; BSR set to: 1
 17301  0016C2  0E40               	movlw	low recebeByteLoRaWan@frameData
 17302  0016C4  6E01               	movwf	strcmp@s1,c
 17303  0016C6  0E04               	movlw	high recebeByteLoRaWan@frameData
 17304  0016C8  6E02               	movwf	strcmp@s1+1,c
 17305  0016CA  5011               	movf	recebeByteLoRaWan@i,w,c
 17306  0016CC  0D02               	mullw	2
 17307  0016CE  0E6E               	movlw	low _MSG_LORAWAN
 17308  0016D0  24F3               	addwf	prodl,w,c
 17309  0016D2  6ED9               	movwf	fsr2l,c
 17310  0016D4  0E03               	movlw	high _MSG_LORAWAN
 17311  0016D6  20F4               	addwfc	prodh,w,c
 17312  0016D8  6EDA               	movwf	fsr2h,c
 17313  0016DA  CFDE F003          	movff	postinc2,strcmp@s2
 17314  0016DE  CFDD F004          	movff	postdec2,strcmp@s2+1
 17315  0016E2  ECBA  F025         	call	_strcmp	;wreg free
 17316  0016E6  5001               	movf	?_strcmp,w,c
 17317  0016E8  1002               	iorwf	?_strcmp+1,w,c
 17318  0016EA  A4D8               	btfss	status,2,c
 17319  0016EC  D005               	goto	i2l2591
 17320                           
 17321                           ;LoRaWanCore.c: 362: {
 17322                           ;LoRaWanCore.c: 363: responseLoRaWan=i;
 17323  0016EE  C011  F1E4         	movff	recebeByteLoRaWan@i,_responseLoRaWan	;volatile
 17324                           
 17325                           ;LoRaWanCore.c: 364: novaMsgLoRaWan=1;
 17326  0016F2  0E01               	movlw	1
 17327  0016F4  6E59               	movwf	_novaMsgLoRaWan,c	;volatile
 17328                           
 17329                           ;LoRaWanCore.c: 365: return;
 17330  0016F6  0012               	return	
 17331  0016F8                     i2l2591:
 17332  0016F8  2A11               	incf	recebeByteLoRaWan@i,f,c
 17333  0016FA                     i2l2589:
 17334  0016FA  500E               	movf	recebeByteLoRaWan@len,w,c
 17335  0016FC  5C11               	subwf	recebeByteLoRaWan@i,w,c
 17336  0016FE  A0D8               	btfss	status,0,c
 17337  001700  D7E0               	goto	i2l2590
 17338                           
 17339                           ;LoRaWanCore.c: 366: }
 17340                           ;LoRaWanCore.c: 367: }
 17341                           ;LoRaWanCore.c: 368: uint8_t tamMsgRx=strlen(MSG_LORAWAN[15]);
 17342  001702  C38C  F001         	movff	_MSG_LORAWAN+30,i2strlen@s
 17343  001706  C38D  F002         	movff	_MSG_LORAWAN+31,i2strlen@s+1
 17344  00170A  EC45  F025         	call	i2_strlen	;wreg free
 17345  00170E  5001               	movf	?i2_strlen,w,c
 17346  001710  6E12               	movwf	recebeByteLoRaWan@tamMsgRx,c
 17347                           
 17348                           ;LoRaWanCore.c: 369: if (strncmp(frameData,MSG_LORAWAN[15],tamMsgRx)==0)
 17349  001712  0E40               	movlw	low recebeByteLoRaWan@frameData
 17350  001714  6E01               	movwf	strncmp@s1,c
 17351  001716  0E04               	movlw	high recebeByteLoRaWan@frameData
 17352  001718  6E02               	movwf	strncmp@s1+1,c
 17353  00171A  C38C  F003         	movff	_MSG_LORAWAN+30,strncmp@s2
 17354  00171E  C38D  F004         	movff	_MSG_LORAWAN+31,strncmp@s2+1
 17355  001722  C012  F005         	movff	recebeByteLoRaWan@tamMsgRx,strncmp@len
 17356  001726  6A06               	clrf	strncmp@len+1,c
 17357  001728  EC89  F022         	call	_strncmp	;wreg free
 17358  00172C  5001               	movf	?_strncmp,w,c
 17359  00172E  1002               	iorwf	?_strncmp+1,w,c
 17360  001730  A4D8               	btfss	status,2,c
 17361  001732  D006               	goto	i2l2594
 17362                           
 17363                           ;LoRaWanCore.c: 370: {
 17364                           ;LoRaWanCore.c: 371: responseLoRaWan=15;
 17365  001734  0E0F               	movlw	15
 17366  001736  0101               	movlb	1	; () banked
 17367  001738  6FE4               	movwf	_responseLoRaWan& (0+255),b	;volatile
 17368                           
 17369                           ;LoRaWanCore.c: 372: novaMsgLoRaWan=1;
 17370  00173A  0E01               	movlw	1
 17371  00173C  6E59               	movwf	_novaMsgLoRaWan,c	;volatile
 17372                           
 17373                           ; BSR set to: 1
 17374                           ;LoRaWanCore.c: 373: return;
 17375  00173E  0012               	return	
 17376  001740                     i2l2594:
 17377                           
 17378                           ;LoRaWanCore.c: 374: }
 17379                           ;LoRaWanCore.c: 377: tamMsgRx=strlen(MSG_LORAWAN[10]);
 17380                           
 17381                           ; BSR set to: 1
 17382  001740  C382  F001         	movff	_MSG_LORAWAN+20,i2strlen@s
 17383  001744  C383  F002         	movff	_MSG_LORAWAN+21,i2strlen@s+1
 17384  001748  EC45  F025         	call	i2_strlen	;wreg free
 17385  00174C  5001               	movf	?i2_strlen,w,c
 17386  00174E  6E12               	movwf	recebeByteLoRaWan@tamMsgRx,c
 17387                           
 17388                           ;LoRaWanCore.c: 379: if (strncmp(frameData,MSG_LORAWAN[10],tamMsgRx)==0)
 17389  001750  0E40               	movlw	low recebeByteLoRaWan@frameData
 17390  001752  6E01               	movwf	strncmp@s1,c
 17391  001754  0E04               	movlw	high recebeByteLoRaWan@frameData
 17392  001756  6E02               	movwf	strncmp@s1+1,c
 17393  001758  C382  F003         	movff	_MSG_LORAWAN+20,strncmp@s2
 17394  00175C  C383  F004         	movff	_MSG_LORAWAN+21,strncmp@s2+1
 17395  001760  C012  F005         	movff	recebeByteLoRaWan@tamMsgRx,strncmp@len
 17396  001764  6A06               	clrf	strncmp@len+1,c
 17397  001766  EC89  F022         	call	_strncmp	;wreg free
 17398  00176A  5001               	movf	?_strncmp,w,c
 17399  00176C  1002               	iorwf	?_strncmp+1,w,c
 17400  00176E  A4D8               	btfss	status,2,c
 17401  001770  D0A6               	goto	i2u928_40
 17402                           
 17403                           ;LoRaWanCore.c: 380: {
 17404                           ;LoRaWanCore.c: 383: uint8_t i=tamMsgRx;
 17405  001772  C012  F013         	movff	recebeByteLoRaWan@tamMsgRx,recebeByteLoRaWan@i_4900
 17406                           
 17407                           ;LoRaWanCore.c: 384: uint8_t port=0;
 17408  001776  0E00               	movlw	0
 17409  001778  6E0F               	movwf	recebeByteLoRaWan@port,c
 17410                           
 17411                           ;LoRaWanCore.c: 386: for (;i<strlen(frameData);i++)
 17412  00177A  D027               	goto	i2l2596
 17413  00177C                     
 17414                           ;LoRaWanCore.c: 387: {
 17415                           ;LoRaWanCore.c: 388: if ((frameData[i]<'0') || (frameData[i]>'9'))
 17416  00177C  5013               	movf	recebeByteLoRaWan@i_4900,w,c
 17417  00177E  0D01               	mullw	1
 17418  001780  0E40               	movlw	low recebeByteLoRaWan@frameData
 17419  001782  24F3               	addwf	prodl,w,c
 17420  001784  6ED9               	movwf	fsr2l,c
 17421  001786  0E04               	movlw	high recebeByteLoRaWan@frameData
 17422  001788  20F4               	addwfc	prodh,w,c
 17423  00178A  6EDA               	movwf	fsr2h,c
 17424  00178C  0E2F               	movlw	47
 17425  00178E  64DF               	cpfsgt	indf2,c
 17426  001790  D02B               	goto	i2u924_40
 17427  001792  5013               	movf	recebeByteLoRaWan@i_4900,w,c
 17428  001794  0D01               	mullw	1
 17429  001796  0E40               	movlw	low recebeByteLoRaWan@frameData
 17430  001798  24F3               	addwf	prodl,w,c
 17431  00179A  6ED9               	movwf	fsr2l,c
 17432  00179C  0E04               	movlw	high recebeByteLoRaWan@frameData
 17433  00179E  20F4               	addwfc	prodh,w,c
 17434  0017A0  6EDA               	movwf	fsr2h,c
 17435  0017A2  0E39               	movlw	57
 17436  0017A4  64DF               	cpfsgt	indf2,c
 17437  0017A6  D001               	goto	i2l2598
 17438  0017A8  D01F               	goto	i2u924_40
 17439  0017AA                     i2l2598:
 17440                           
 17441                           ;LoRaWanCore.c: 391: port*=10;
 17442  0017AA  0E0A               	movlw	10
 17443  0017AC  020F               	mulwf	recebeByteLoRaWan@port,c
 17444  0017AE  50F3               	movf	prodl,w,c
 17445  0017B0  6E0F               	movwf	recebeByteLoRaWan@port,c
 17446                           
 17447                           ;LoRaWanCore.c: 392: port+=frameData[i]-'0';
 17448  0017B2  5013               	movf	recebeByteLoRaWan@i_4900,w,c
 17449  0017B4  0D01               	mullw	1
 17450  0017B6  0E40               	movlw	low recebeByteLoRaWan@frameData
 17451  0017B8  24F3               	addwf	prodl,w,c
 17452  0017BA  6ED9               	movwf	fsr2l,c
 17453  0017BC  0E04               	movlw	high recebeByteLoRaWan@frameData
 17454  0017BE  20F4               	addwfc	prodh,w,c
 17455  0017C0  6EDA               	movwf	fsr2h,c
 17456  0017C2  50DF               	movf	indf2,w,c
 17457  0017C4  0FD0               	addlw	208
 17458  0017C6  260F               	addwf	recebeByteLoRaWan@port,f,c
 17459  0017C8  2A13               	incf	recebeByteLoRaWan@i_4900,f,c
 17460  0017CA                     i2l2596:
 17461  0017CA  0E40               	movlw	low recebeByteLoRaWan@frameData
 17462  0017CC  6E01               	movwf	i2strlen@s,c
 17463  0017CE  0E04               	movlw	high recebeByteLoRaWan@frameData
 17464  0017D0  6E02               	movwf	i2strlen@s+1,c
 17465  0017D2  EC45  F025         	call	i2_strlen	;wreg free
 17466  0017D6  5013               	movf	recebeByteLoRaWan@i_4900,w,c
 17467  0017D8  6E0A               	movwf	??_recebeByteLoRaWan& (0+255),c
 17468  0017DA  6A0B               	clrf	(??_recebeByteLoRaWan+1)& (0+255),c
 17469  0017DC  5001               	movf	?i2_strlen,w,c
 17470  0017DE  5C0A               	subwf	??_recebeByteLoRaWan,w,c
 17471  0017E0  5002               	movf	?i2_strlen+1,w,c
 17472  0017E2  580B               	subwfb	??_recebeByteLoRaWan+1,w,c
 17473  0017E4  A0D8               	btfss	status,0,c
 17474  0017E6  D7CA               	goto	i2l2597
 17475  0017E8                     i2u924_40:
 17476                           
 17477                           ;LoRaWanCore.c: 393: }
 17478                           ;LoRaWanCore.c: 394: i++;
 17479  0017E8  2A13               	incf	recebeByteLoRaWan@i_4900,f,c
 17480                           
 17481                           ;LoRaWanCore.c: 396: for (;i<strlen(frameData);i+=2)
 17482  0017EA  D038               	goto	i2l2602
 17483  0017EC                     
 17484                           ;LoRaWanCore.c: 397: {
 17485                           ;LoRaWanCore.c: 398: dadosRecebidos[tamDadosRecebidos].port=port;
 17486  0017EC  505B               	movf	_tamDadosRecebidos,w,c	;volatile
 17487  0017EE  0D02               	mullw	2
 17488  0017F0  0EBF               	movlw	low _dadosRecebidos
 17489  0017F2  24F3               	addwf	prodl,w,c
 17490  0017F4  6ED9               	movwf	fsr2l,c
 17491  0017F6  0E02               	movlw	high _dadosRecebidos
 17492  0017F8  20F4               	addwfc	prodh,w,c
 17493  0017FA  6EDA               	movwf	fsr2h,c
 17494  0017FC  C00F  FFDF         	movff	recebeByteLoRaWan@port,indf2
 17495                           
 17496                           ;LoRaWanCore.c: 399: dadosRecebidos[tamDadosRecebidos++].data=converter(frameData[i],fra
      +                          meData[i+1]);
 17497  001800  505B               	movf	_tamDadosRecebidos,w,c	;volatile
 17498  001802  0D02               	mullw	2
 17499  001804  0E01               	movlw	1
 17500  001806  26F3               	addwf	prodl,f,c
 17501  001808  0E00               	movlw	0
 17502  00180A  22F4               	addwfc	prodh,f,c
 17503  00180C  0EBF               	movlw	low _dadosRecebidos
 17504  00180E  24F3               	addwf	prodl,w,c
 17505  001810  6ED9               	movwf	fsr2l,c
 17506  001812  0E02               	movlw	high _dadosRecebidos
 17507  001814  20F4               	addwfc	prodh,w,c
 17508  001816  6EDA               	movwf	fsr2h,c
 17509  001818  5013               	movf	recebeByteLoRaWan@i_4900,w,c
 17510  00181A  6E0A               	movwf	??_recebeByteLoRaWan& (0+255),c
 17511  00181C  6A0B               	clrf	(??_recebeByteLoRaWan+1)& (0+255),c
 17512  00181E  0E01               	movlw	1
 17513  001820  260A               	addwf	??_recebeByteLoRaWan,f,c
 17514  001822  0E00               	movlw	0
 17515  001824  220B               	addwfc	??_recebeByteLoRaWan+1,f,c
 17516  001826  0E40               	movlw	low recebeByteLoRaWan@frameData
 17517  001828  240A               	addwf	??_recebeByteLoRaWan,w,c
 17518  00182A  6EE1               	movwf	fsr1l,c
 17519  00182C  0E04               	movlw	high recebeByteLoRaWan@frameData
 17520  00182E  200B               	addwfc	??_recebeByteLoRaWan+1,w,c
 17521  001830  6EE2               	movwf	fsr1h,c
 17522  001832  50E7               	movf	indf1,w,c
 17523  001834  6E02               	movwf	i2converter@conv2,c
 17524  001836  5013               	movf	recebeByteLoRaWan@i_4900,w,c
 17525  001838  0D01               	mullw	1
 17526  00183A  0E40               	movlw	low recebeByteLoRaWan@frameData
 17527  00183C  24F3               	addwf	prodl,w,c
 17528  00183E  6EE1               	movwf	fsr1l,c
 17529  001840  0E04               	movlw	high recebeByteLoRaWan@frameData
 17530  001842  20F4               	addwfc	prodh,w,c
 17531  001844  6EE2               	movwf	fsr1h,c
 17532  001846  50E7               	movf	indf1,w,c
 17533  001848  EC04  F022         	call	i2_converter
 17534  00184C  6EDF               	movwf	indf2,c
 17535  00184E  2A5B               	incf	_tamDadosRecebidos,f,c	;volatile
 17536                           
 17537                           ;LoRaWanCore.c: 400: if (tamDadosRecebidos>=10)
 17538  001850  0E09               	movlw	9
 17539  001852  645B               	cpfsgt	_tamDadosRecebidos,c	;volatile
 17540  001854  D001               	goto	i2l2604
 17541  001856  0012               	return	
 17542  001858                     i2l2604:
 17543  001858  0E02               	movlw	2
 17544  00185A  2613               	addwf	recebeByteLoRaWan@i_4900,f,c
 17545  00185C                     i2l2602:
 17546  00185C  0E40               	movlw	low recebeByteLoRaWan@frameData
 17547  00185E  6E01               	movwf	i2strlen@s,c
 17548  001860  0E04               	movlw	high recebeByteLoRaWan@frameData
 17549  001862  6E02               	movwf	i2strlen@s+1,c
 17550  001864  EC45  F025         	call	i2_strlen	;wreg free
 17551  001868  5013               	movf	recebeByteLoRaWan@i_4900,w,c
 17552  00186A  6E0A               	movwf	??_recebeByteLoRaWan& (0+255),c
 17553  00186C  6A0B               	clrf	(??_recebeByteLoRaWan+1)& (0+255),c
 17554  00186E  5001               	movf	?i2_strlen,w,c
 17555  001870  5C0A               	subwf	??_recebeByteLoRaWan,w,c
 17556  001872  5002               	movf	?i2_strlen+1,w,c
 17557  001874  580B               	subwfb	??_recebeByteLoRaWan+1,w,c
 17558  001876  A0D8               	btfss	status,0,c
 17559  001878  D7B9               	goto	i2l2603
 17560                           
 17561                           ;LoRaWanCore.c: 402: }
 17562                           ;LoRaWanCore.c: 404: if (i>=strlen(frameData)){
 17563  00187A  0E40               	movlw	low recebeByteLoRaWan@frameData
 17564  00187C  6E01               	movwf	i2strlen@s,c
 17565  00187E  0E04               	movlw	high recebeByteLoRaWan@frameData
 17566  001880  6E02               	movwf	i2strlen@s+1,c
 17567  001882  EC45  F025         	call	i2_strlen	;wreg free
 17568  001886  5013               	movf	recebeByteLoRaWan@i_4900,w,c
 17569  001888  6E0A               	movwf	??_recebeByteLoRaWan& (0+255),c
 17570  00188A  6A0B               	clrf	(??_recebeByteLoRaWan+1)& (0+255),c
 17571  00188C  5001               	movf	?i2_strlen,w,c
 17572  00188E  5C0A               	subwf	??_recebeByteLoRaWan,w,c
 17573  001890  5002               	movf	?i2_strlen+1,w,c
 17574  001892  580B               	subwfb	??_recebeByteLoRaWan+1,w,c
 17575  001894  B0D8               	btfsc	status,0,c
 17576  001896  D010               	goto	i2l2607
 17577  001898  D012               	goto	i2u928_40
 17578  00189A                     
 17579                           ;LoRaWanCore.c: 406: dadosRecebidos[tamDadosRecebidos].data = 0;
 17580  00189A  505B               	movf	_tamDadosRecebidos,w,c	;volatile
 17581  00189C  0D02               	mullw	2
 17582  00189E  0E01               	movlw	1
 17583  0018A0  26F3               	addwf	prodl,f,c
 17584  0018A2  0E00               	movlw	0
 17585  0018A4  22F4               	addwfc	prodh,f,c
 17586  0018A6  0EBF               	movlw	low _dadosRecebidos
 17587  0018A8  24F3               	addwf	prodl,w,c
 17588  0018AA  6ED9               	movwf	fsr2l,c
 17589  0018AC  0E02               	movlw	high _dadosRecebidos
 17590  0018AE  20F4               	addwfc	prodh,w,c
 17591  0018B0  6EDA               	movwf	fsr2h,c
 17592  0018B2  0E00               	movlw	0
 17593  0018B4  6EDF               	movwf	indf2,c
 17594  0018B6  2A5B               	incf	_tamDadosRecebidos,f,c	;volatile
 17595  0018B8                     i2l2607:
 17596  0018B8  0E0A               	movlw	10
 17597  0018BA  645B               	cpfsgt	_tamDadosRecebidos,c	;volatile
 17598  0018BC  D7EE               	goto	i2l2608
 17599  0018BE                     i2u928_40:
 17600                           
 17601                           ;LoRaWanCore.c: 407: }
 17602                           ;LoRaWanCore.c: 408: }
 17603                           ;LoRaWanCore.c: 410: }
 17604                           ;LoRaWanCore.c: 411: }
 17605                           ;LoRaWanCore.c: 412: if ((tamFrame>=100) || (b==0x0A))
 17606  0018BE  0E64               	movlw	100
 17607  0018C0  605A               	cpfslt	_tamFrame,c	;volatile
 17608  0018C2  D004               	goto	i2u930_40
 17609  0018C4  0E0A               	movlw	10
 17610  0018C6  1810               	xorwf	recebeByteLoRaWan@b,w,c
 17611  0018C8  A4D8               	btfss	status,2,c
 17612  0018CA  0012               	return	
 17613  0018CC                     i2u930_40:
 17614                           
 17615                           ;LoRaWanCore.c: 413: {
 17616                           ;LoRaWanCore.c: 414: tamFrame=0;
 17617  0018CC  0E00               	movlw	0
 17618  0018CE  6E5A               	movwf	_tamFrame,c	;volatile
 17619  0018D0  0012               	return	
 17620  0018D2                     __end_of_recebeByteLoRaWan:
 17621                           	opt stack 0
 17622                           pclatu	equ	0xFFB
 17623                           pclath	equ	0xFFA
 17624                           tblptru	equ	0xFF8
 17625                           tblptrh	equ	0xFF7
 17626                           tblptrl	equ	0xFF6
 17627                           tablat	equ	0xFF5
 17628                           prodh	equ	0xFF4
 17629                           prodl	equ	0xFF3
 17630                           intcon	equ	0xFF2
 17631                           indf0	equ	0xFEF
 17632                           postinc0	equ	0xFEE
 17633                           fsr0h	equ	0xFEA
 17634                           fsr0l	equ	0xFE9
 17635                           wreg	equ	0xFE8
 17636                           indf1	equ	0xFE7
 17637                           postdec1	equ	0xFE5
 17638                           fsr1h	equ	0xFE2
 17639                           fsr1l	equ	0xFE1
 17640                           indf2	equ	0xFDF
 17641                           postinc2	equ	0xFDE
 17642                           postdec2	equ	0xFDD
 17643                           plusw2	equ	0xFDB
 17644                           fsr2h	equ	0xFDA
 17645                           fsr2l	equ	0xFD9
 17646                           status	equ	0xFD8
 17647                           
 17648 ;; *************** function i2_strlen *****************
 17649 ;; Defined at:
 17650 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strlen.c"
 17651 ;; Parameters:    Size  Location     Type
 17652 ;;  s               2    0[COMRAM] PTR const unsigned char 
 17653 ;;		 -> recebeByteLoRaWan@frameData(100), SYS(5), MAC(5), TxLoRaWan@comando(200), 
 17654 ;;		 -> DataRate@comando(200), SetBandWidth@comando(200), SetSpreadingFactor@comando(200), MacSave@comando(200), 
 17655 ;;		 -> GetAdr@comando(200), SetAdr@comando(200), SetChannelLoRaWan@comando(200), MAC_JOIN_OTAA(10), 
 17656 ;;		 -> SYS_RESET(6), SetAppKey@comando(200), SetAppEUI@comando(200), SetDevEUI@comando(200), 
 17657 ;;		 -> GetDnctr@comando(200), STR_23(16), STR_22(7), STR_21(14), 
 17658 ;;		 -> STR_20(8), STR_19(8), STR_18(10), STR_17(17), 
 17659 ;;		 -> STR_16(11), STR_15(5), STR_14(32), STR_13(7), 
 17660 ;;		 -> STR_12(11), STR_11(11), STR_10(14), STR_9(3), 
 17661 ;;		 -> frameBuffer(300), 
 17662 ;; Auto vars:     Size  Location     Type
 17663 ;;  strlen          2    4[COMRAM] PTR const unsigned char 
 17664 ;;		 -> recebeByteLoRaWan@frameData(100), SYS(5), MAC(5), TxLoRaWan@comando(200), 
 17665 ;;		 -> DataRate@comando(200), SetBandWidth@comando(200), SetSpreadingFactor@comando(200), MacSave@comando(200), 
 17666 ;;		 -> GetAdr@comando(200), SetAdr@comando(200), SetChannelLoRaWan@comando(200), MAC_JOIN_OTAA(10), 
 17667 ;;		 -> SYS_RESET(6), SetAppKey@comando(200), SetAppEUI@comando(200), SetDevEUI@comando(200), 
 17668 ;;		 -> GetDnctr@comando(200), STR_23(16), STR_22(7), STR_21(14), 
 17669 ;;		 -> STR_20(8), STR_19(8), STR_18(10), STR_17(17), 
 17670 ;;		 -> STR_16(11), STR_15(5), STR_14(32), STR_13(7), 
 17671 ;;		 -> STR_12(11), STR_11(11), STR_10(14), STR_9(3), 
 17672 ;;		 -> frameBuffer(300), 
 17673 ;; Return value:  Size  Location     Type
 17674 ;;                  2    0[COMRAM] unsigned int 
 17675 ;; Registers used:
 17676 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 17677 ;; Tracked objects:
 17678 ;;		On entry : 0/0
 17679 ;;		On exit  : 0/0
 17680 ;;		Unchanged: 0/0
 17681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17682 ;;      Params:         2       0       0       0       0       0       0       0       0
 17683 ;;      Locals:         2       0       0       0       0       0       0       0       0
 17684 ;;      Temps:          2       0       0       0       0       0       0       0       0
 17685 ;;      Totals:         6       0       0       0       0       0       0       0       0
 17686 ;;Total ram usage:        6 bytes
 17687 ;; Hardware stack levels used:    1
 17688 ;; This function calls:
 17689 ;;		Nothing
 17690 ;; This function is called by:
 17691 ;;		_recebeByteLoRaWan
 17692 ;; This function uses a non-reentrant model
 17693 ;;
 17694                           
 17695                           	psect	text64
 17696  004A8A                     __ptext64:
 17697                           	opt stack 0
 17698  004A8A                     i2_strlen:
 17699                           	opt stack 23
 17700                           
 17701                           ;incstack = 0
 17702  004A8A  C001  F005         	movff	i2strlen@s,i2strlen@cp
 17703  004A8E  C002  F006         	movff	i2strlen@s+1,i2strlen@cp+1
 17704  004A92  D002               	goto	i2l3556
 17705  004A94  4A05               	infsnz	i2strlen@cp,f,c
 17706  004A96  2A06               	incf	i2strlen@cp+1,f,c
 17707  004A98                     i2l3556:
 17708  004A98  C005  FFF6         	movff	i2strlen@cp,tblptrl
 17709  004A9C  C006  FFF7         	movff	i2strlen@cp+1,tblptrh
 17710  004AA0  6AF8               	clrf	tblptru,c
 17711  004AA2  0E07               	movlw	(high __ramtop+-1)
 17712  004AA4  64F7               	cpfsgt	tblptrh,c
 17713  004AA6  D003               	bra	i2u912_47
 17714  004AA8  0008               	tblrd		*
 17715  004AAA  50F5               	movf	tablat,w,c
 17716  004AAC  D005               	bra	i2u912_40
 17717  004AAE                     i2u912_47:
 17718  004AAE  CFF6 FFE9          	movff	tblptrl,fsr0l
 17719  004AB2  CFF7 FFEA          	movff	tblptrh,fsr0h
 17720  004AB6  50EF               	movf	indf0,w,c
 17721  004AB8                     i2u912_40:
 17722  004AB8  0900               	iorlw	0
 17723  004ABA  A4D8               	btfss	status,2,c
 17724  004ABC  D7EB               	goto	i2l3557
 17725  004ABE  C001  F003         	movff	i2strlen@s,??i2_strlen
 17726  004AC2  C002  F004         	movff	i2strlen@s+1,??i2_strlen+1
 17727  004AC6  1E03               	comf	??i2_strlen,f,c
 17728  004AC8  1E04               	comf	??i2_strlen+1,f,c
 17729  004ACA  4A03               	infsnz	??i2_strlen,f,c
 17730  004ACC  2A04               	incf	??i2_strlen+1,f,c
 17731  004ACE  5005               	movf	i2strlen@cp,w,c
 17732  004AD0  2403               	addwf	??i2_strlen,w,c
 17733  004AD2  6E01               	movwf	?i2_strlen,c
 17734  004AD4  5006               	movf	i2strlen@cp+1,w,c
 17735  004AD6  2004               	addwfc	??i2_strlen+1,w,c
 17736  004AD8  6E02               	movwf	?i2_strlen+1,c
 17737  004ADA  0012               	return	
 17738  004ADC                     __end_ofi2_strlen:
 17739                           	opt stack 0
 17740                           pclatu	equ	0xFFB
 17741                           pclath	equ	0xFFA
 17742                           tblptru	equ	0xFF8
 17743                           tblptrh	equ	0xFF7
 17744                           tblptrl	equ	0xFF6
 17745                           tablat	equ	0xFF5
 17746                           prodh	equ	0xFF4
 17747                           prodl	equ	0xFF3
 17748                           intcon	equ	0xFF2
 17749                           indf0	equ	0xFEF
 17750                           postinc0	equ	0xFEE
 17751                           fsr0h	equ	0xFEA
 17752                           fsr0l	equ	0xFE9
 17753                           wreg	equ	0xFE8
 17754                           indf1	equ	0xFE7
 17755                           postdec1	equ	0xFE5
 17756                           fsr1h	equ	0xFE2
 17757                           fsr1l	equ	0xFE1
 17758                           indf2	equ	0xFDF
 17759                           postinc2	equ	0xFDE
 17760                           postdec2	equ	0xFDD
 17761                           plusw2	equ	0xFDB
 17762                           fsr2h	equ	0xFDA
 17763                           fsr2l	equ	0xFD9
 17764                           status	equ	0xFD8
 17765                           
 17766 ;; *************** function i2_converter *****************
 17767 ;; Defined at:
 17768 ;;		line 360 in file "XBeeCore.c"
 17769 ;; Parameters:    Size  Location     Type
 17770 ;;  conv1           1    wreg     unsigned char 
 17771 ;;  conv2           1    1[COMRAM] unsigned char 
 17772 ;; Auto vars:     Size  Location     Type
 17773 ;;  conv1           1    5[COMRAM] unsigned char 
 17774 ;;  converter       1    4[COMRAM] unsigned char 
 17775 ;;  converter       1    3[COMRAM] unsigned char 
 17776 ;;  converter       1    2[COMRAM] unsigned char 
 17777 ;; Return value:  Size  Location     Type
 17778 ;;                  1    wreg      unsigned char 
 17779 ;; Registers used:
 17780 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 17781 ;; Tracked objects:
 17782 ;;		On entry : 0/0
 17783 ;;		On exit  : 0/0
 17784 ;;		Unchanged: 0/0
 17785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17786 ;;      Params:         1       0       0       0       0       0       0       0       0
 17787 ;;      Locals:         4       0       0       0       0       0       0       0       0
 17788 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17789 ;;      Totals:         5       0       0       0       0       0       0       0       0
 17790 ;;Total ram usage:        5 bytes
 17791 ;; Hardware stack levels used:    1
 17792 ;; Hardware stack levels required when called:    1
 17793 ;; This function calls:
 17794 ;;		i2_toupper
 17795 ;; This function is called by:
 17796 ;;		_recebeByteLoRaWan
 17797 ;; This function uses a non-reentrant model
 17798 ;;
 17799                           
 17800                           	psect	text65
 17801  004408                     __ptext65:
 17802                           	opt stack 0
 17803  004408                     i2_converter:
 17804                           	opt stack 22
 17805                           
 17806                           ;incstack = 0
 17807                           ;i2converter@conv1 stored from wreg
 17808  004408  6E06               	movwf	i2converter@conv1,c
 17809                           
 17810                           ;XBeeCore.c: 362: uint8_t aux=0;
 17811  00440A  0E00               	movlw	0
 17812  00440C  6E04               	movwf	i2converter@aux,c
 17813                           
 17814                           ;XBeeCore.c: 363: uint8_t aux2=0;
 17815  00440E  0E00               	movlw	0
 17816  004410  6E05               	movwf	i2converter@aux2,c
 17817                           
 17818                           ;XBeeCore.c: 364: uint8_t resul=0;
 17819  004412  0E00               	movlw	0
 17820  004414  6E03               	movwf	i2converter@resul,c
 17821                           
 17822                           ;XBeeCore.c: 367: conv1=toupper(conv1);
 17823  004416  5006               	movf	i2converter@conv1,w,c
 17824  004418  ECDD  F028         	call	i2_toupper
 17825  00441C  6E06               	movwf	i2converter@conv1,c
 17826                           
 17827                           ;XBeeCore.c: 368: conv2=toupper(conv2);
 17828  00441E  5002               	movf	i2converter@conv2,w,c
 17829  004420  ECDD  F028         	call	i2_toupper
 17830  004424  6E02               	movwf	i2converter@conv2,c
 17831                           
 17832                           ;XBeeCore.c: 370: if ((conv1>='0') && (conv1<='9'))
 17833  004426  0E2F               	movlw	47
 17834  004428  6406               	cpfsgt	i2converter@conv1,c
 17835  00442A  D006               	goto	i2l1529
 17836  00442C  0E3A               	movlw	58
 17837  00442E  6006               	cpfslt	i2converter@conv1,c
 17838  004430  D003               	goto	i2l1529
 17839                           
 17840                           ;XBeeCore.c: 371: {
 17841                           ;XBeeCore.c: 372: aux=conv1-'0';
 17842  004432  5006               	movf	i2converter@conv1,w,c
 17843  004434  0FD0               	addlw	208
 17844  004436  D008               	goto	L15
 17845  004438                     i2l1529:
 17846                           
 17847                           ;XBeeCore.c: 374: else if ((conv1>='A') && (conv1<='F'))
 17848  004438  0E40               	movlw	64
 17849  00443A  6406               	cpfsgt	i2converter@conv1,c
 17850  00443C  D006               	goto	i2l1531
 17851  00443E  0E47               	movlw	71
 17852  004440  6006               	cpfslt	i2converter@conv1,c
 17853  004442  D003               	goto	i2l1531
 17854                           
 17855                           ;XBeeCore.c: 375: {
 17856                           ;XBeeCore.c: 376: aux=conv1-'A'+10;
 17857  004444  5006               	movf	i2converter@conv1,w,c
 17858  004446  0FC9               	addlw	201
 17859  004448                     L15:
 17860  004448  6E04               	movwf	i2converter@aux,c
 17861  00444A                     i2l1531:
 17862                           
 17863                           ;XBeeCore.c: 377: }
 17864                           ;XBeeCore.c: 379: if ((conv2>='0') && (conv2<='9'))
 17865  00444A  0E2F               	movlw	47
 17866  00444C  6402               	cpfsgt	i2converter@conv2,c
 17867  00444E  D006               	goto	i2l1532
 17868  004450  0E3A               	movlw	58
 17869  004452  6002               	cpfslt	i2converter@conv2,c
 17870  004454  D003               	goto	i2l1532
 17871                           
 17872                           ;XBeeCore.c: 380: {
 17873                           ;XBeeCore.c: 381: aux2=conv2-'0';
 17874  004456  5002               	movf	i2converter@conv2,w,c
 17875  004458  0FD0               	addlw	208
 17876  00445A  D00A               	goto	L17
 17877  00445C                     i2l1532:
 17878                           
 17879                           ;XBeeCore.c: 383: else if ((conv2>='A') && (conv2<='F'))
 17880  00445C  0E40               	movlw	64
 17881  00445E  6402               	cpfsgt	i2converter@conv2,c
 17882  004460  D006               	goto	i2l1534
 17883  004462  0E47               	movlw	71
 17884  004464  6002               	cpfslt	i2converter@conv2,c
 17885  004466  D003               	goto	i2l1534
 17886                           
 17887                           ;XBeeCore.c: 384: {
 17888                           ;XBeeCore.c: 385: aux2=conv2-'A'+10;
 17889  004468  5002               	movf	i2converter@conv2,w,c
 17890  00446A  0FC9               	addlw	201
 17891  00446C  D001               	goto	L17
 17892  00446E                     i2l1534:
 17893                           
 17894                           ;XBeeCore.c: 387: else
 17895                           ;XBeeCore.c: 388: {
 17896                           ;XBeeCore.c: 389: aux2=100;
 17897  00446E  0E64               	movlw	100
 17898  004470                     L17:
 17899  004470  6E05               	movwf	i2converter@aux2,c
 17900                           
 17901                           ;XBeeCore.c: 390: }
 17902                           ;XBeeCore.c: 392: if(aux2==100)
 17903  004472  0E64               	movlw	100
 17904  004474  1805               	xorwf	i2converter@aux2,w,c
 17905  004476  A4D8               	btfss	status,2,c
 17906  004478  D003               	goto	i2l1536
 17907                           
 17908                           ;XBeeCore.c: 393: {
 17909                           ;XBeeCore.c: 394: resul=aux;
 17910  00447A  C004  F003         	movff	i2converter@aux,i2converter@resul
 17911                           
 17912                           ;XBeeCore.c: 395: }
 17913  00447E  D005               	goto	i2l1537
 17914  004480                     i2l1536:
 17915                           
 17916                           ;XBeeCore.c: 396: else
 17917                           ;XBeeCore.c: 397: {
 17918                           ;XBeeCore.c: 398: resul=(uint8_t)((aux*16)+aux2);
 17919  004480  5004               	movf	i2converter@aux,w,c
 17920  004482  0D10               	mullw	16
 17921  004484  50F3               	movf	prodl,w,c
 17922  004486  2405               	addwf	i2converter@aux2,w,c
 17923  004488  6E03               	movwf	i2converter@resul,c
 17924  00448A                     i2l1537:
 17925                           
 17926                           ;XBeeCore.c: 399: }
 17927                           ;XBeeCore.c: 400: return resul;
 17928  00448A  5003               	movf	i2converter@resul,w,c
 17929  00448C  0012               	return	
 17930  00448E                     __end_ofi2_converter:
 17931                           	opt stack 0
 17932                           pclatu	equ	0xFFB
 17933                           pclath	equ	0xFFA
 17934                           tblptru	equ	0xFF8
 17935                           tblptrh	equ	0xFF7
 17936                           tblptrl	equ	0xFF6
 17937                           tablat	equ	0xFF5
 17938                           prodh	equ	0xFF4
 17939                           prodl	equ	0xFF3
 17940                           intcon	equ	0xFF2
 17941                           indf0	equ	0xFEF
 17942                           postinc0	equ	0xFEE
 17943                           fsr0h	equ	0xFEA
 17944                           fsr0l	equ	0xFE9
 17945                           wreg	equ	0xFE8
 17946                           indf1	equ	0xFE7
 17947                           postdec1	equ	0xFE5
 17948                           fsr1h	equ	0xFE2
 17949                           fsr1l	equ	0xFE1
 17950                           indf2	equ	0xFDF
 17951                           postinc2	equ	0xFDE
 17952                           postdec2	equ	0xFDD
 17953                           plusw2	equ	0xFDB
 17954                           fsr2h	equ	0xFDA
 17955                           fsr2l	equ	0xFD9
 17956                           status	equ	0xFD8
 17957                           
 17958 ;; *************** function i2_toupper *****************
 17959 ;; Defined at:
 17960 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\toupper.c"
 17961 ;; Parameters:    Size  Location     Type
 17962 ;;  c               1    wreg     unsigned char 
 17963 ;; Auto vars:     Size  Location     Type
 17964 ;;  c               1    0[COMRAM] unsigned char 
 17965 ;; Return value:  Size  Location     Type
 17966 ;;                  1    wreg      unsigned char 
 17967 ;; Registers used:
 17968 ;;		wreg, status,2, status,0
 17969 ;; Tracked objects:
 17970 ;;		On entry : 0/0
 17971 ;;		On exit  : 0/0
 17972 ;;		Unchanged: 0/0
 17973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17974 ;;      Params:         0       0       0       0       0       0       0       0       0
 17975 ;;      Locals:         1       0       0       0       0       0       0       0       0
 17976 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17977 ;;      Totals:         1       0       0       0       0       0       0       0       0
 17978 ;;Total ram usage:        1 bytes
 17979 ;; Hardware stack levels used:    1
 17980 ;; This function calls:
 17981 ;;		Nothing
 17982 ;; This function is called by:
 17983 ;;		i2_converter
 17984 ;; This function uses a non-reentrant model
 17985 ;;
 17986                           
 17987                           	psect	text66
 17988  0051BA                     __ptext66:
 17989                           	opt stack 0
 17990  0051BA                     i2_toupper:
 17991                           	opt stack 22
 17992                           
 17993                           ;incstack = 0
 17994                           ;i2toupper@c stored from wreg
 17995  0051BA  6E01               	movwf	i2toupper@c,c
 17996  0051BC  0E7B               	movlw	123
 17997  0051BE  6001               	cpfslt	i2toupper@c,c
 17998  0051C0  D004               	goto	i2l3571
 17999  0051C2  0E60               	movlw	96
 18000  0051C4  6401               	cpfsgt	i2toupper@c,c
 18001  0051C6  D001               	goto	i2l3571
 18002  0051C8  9A01               	bcf	i2toupper@c,5,c
 18003  0051CA                     i2l3571:
 18004  0051CA  5001               	movf	i2toupper@c,w,c
 18005  0051CC  0012               	return	
 18006  0051CE                     __end_ofi2_toupper:
 18007                           	opt stack 0
 18008                           pclatu	equ	0xFFB
 18009                           pclath	equ	0xFFA
 18010                           tblptru	equ	0xFF8
 18011                           tblptrh	equ	0xFF7
 18012                           tblptrl	equ	0xFF6
 18013                           tablat	equ	0xFF5
 18014                           prodh	equ	0xFF4
 18015                           prodl	equ	0xFF3
 18016                           intcon	equ	0xFF2
 18017                           indf0	equ	0xFEF
 18018                           postinc0	equ	0xFEE
 18019                           fsr0h	equ	0xFEA
 18020                           fsr0l	equ	0xFE9
 18021                           wreg	equ	0xFE8
 18022                           indf1	equ	0xFE7
 18023                           postdec1	equ	0xFE5
 18024                           fsr1h	equ	0xFE2
 18025                           fsr1l	equ	0xFE1
 18026                           indf2	equ	0xFDF
 18027                           postinc2	equ	0xFDE
 18028                           postdec2	equ	0xFDD
 18029                           plusw2	equ	0xFDB
 18030                           fsr2h	equ	0xFDA
 18031                           fsr2l	equ	0xFD9
 18032                           status	equ	0xFD8
 18033                           
 18034 ;; *************** function _strncmp *****************
 18035 ;; Defined at:
 18036 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strncmp.c"
 18037 ;; Parameters:    Size  Location     Type
 18038 ;;  s1              2    0[COMRAM] PTR const unsigned char 
 18039 ;;		 -> recebeByteLoRaWan@frameData(100), 
 18040 ;;  s2              2    2[COMRAM] PTR const unsigned char 
 18041 ;;		 -> STR_23(16), STR_22(7), STR_21(14), STR_20(8), 
 18042 ;;		 -> STR_19(8), STR_18(10), STR_17(17), STR_16(11), 
 18043 ;;		 -> STR_15(5), STR_14(32), STR_13(7), STR_12(11), 
 18044 ;;		 -> STR_11(11), STR_10(14), STR_9(3), 
 18045 ;;  len             2    4[COMRAM] unsigned int 
 18046 ;; Auto vars:     Size  Location     Type
 18047 ;;		None
 18048 ;; Return value:  Size  Location     Type
 18049 ;;                  2    0[COMRAM] int 
 18050 ;; Registers used:
 18051 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 18052 ;; Tracked objects:
 18053 ;;		On entry : 0/0
 18054 ;;		On exit  : 0/0
 18055 ;;		Unchanged: 0/0
 18056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18057 ;;      Params:         6       0       0       0       0       0       0       0       0
 18058 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18059 ;;      Temps:          3       0       0       0       0       0       0       0       0
 18060 ;;      Totals:         9       0       0       0       0       0       0       0       0
 18061 ;;Total ram usage:        9 bytes
 18062 ;; Hardware stack levels used:    1
 18063 ;; This function calls:
 18064 ;;		Nothing
 18065 ;; This function is called by:
 18066 ;;		_recebeByteLoRaWan
 18067 ;; This function uses a non-reentrant model
 18068 ;;
 18069                           
 18070                           	psect	text67
 18071  004512                     __ptext67:
 18072                           	opt stack 0
 18073  004512                     _strncmp:
 18074                           	opt stack 23
 18075                           
 18076                           ;incstack = 0
 18077  004512  D033               	goto	i2l3562
 18078  004514                     i2l9683:
 18079  004514  C001  FFD9         	movff	strncmp@s1,fsr2l
 18080  004518  C002  FFDA         	movff	strncmp@s1+1,fsr2h
 18081  00451C  50DF               	movf	indf2,w,c
 18082  00451E  B4D8               	btfsc	status,2,c
 18083  004520  D00F               	goto	i2u890_40
 18084  004522  C001  FFD9         	movff	strncmp@s1,fsr2l
 18085  004526  C002  FFDA         	movff	strncmp@s1+1,fsr2h
 18086  00452A  50DF               	movf	indf2,w,c
 18087  00452C  6E07               	movwf	??_strncmp& (0+255),c
 18088  00452E  C003  FFF6         	movff	strncmp@s2,tblptrl
 18089  004532  C004  FFF7         	movff	strncmp@s2+1,tblptrh
 18090  004536                     	if	0	;tblptru may be non-zero
 18091  004536                     	endif
 18092  004536                     	if	0	;tblptru may be non-zero
 18093  004536                     	endif
 18094  004536  0008               	tblrd		*
 18095  004538  50F5               	movf	tablat,w,c
 18096  00453A  1807               	xorwf	??_strncmp,w,c
 18097  00453C  B4D8               	btfsc	status,2,c
 18098  00453E  D019               	goto	i2l3564
 18099  004540                     i2u890_40:
 18100  004540  C003  FFF6         	movff	strncmp@s2,tblptrl
 18101  004544  C004  FFF7         	movff	strncmp@s2+1,tblptrh
 18102  004548                     	if	0	;tblptru may be non-zero
 18103  004548                     	endif
 18104  004548                     	if	0	;tblptru may be non-zero
 18105  004548                     	endif
 18106  004548  0008               	tblrd		*
 18107  00454A  50F5               	movf	tablat,w,c
 18108  00454C  6E07               	movwf	??_strncmp& (0+255),c
 18109  00454E  6A08               	clrf	(??_strncmp+1)& (0+255),c
 18110  004550  1E07               	comf	??_strncmp,f,c
 18111  004552  1E08               	comf	??_strncmp+1,f,c
 18112  004554  4A07               	infsnz	??_strncmp,f,c
 18113  004556  2A08               	incf	??_strncmp+1,f,c
 18114  004558  C001  FFD9         	movff	strncmp@s1,fsr2l
 18115  00455C  C002  FFDA         	movff	strncmp@s1+1,fsr2h
 18116  004560  50DF               	movf	indf2,w,c
 18117  004562  6E09               	movwf	(??_strncmp+2)& (0+255),c
 18118  004564  5009               	movf	??_strncmp+2,w,c
 18119  004566  2407               	addwf	??_strncmp,w,c
 18120  004568  6E01               	movwf	?_strncmp,c
 18121  00456A  0E00               	movlw	0
 18122  00456C  2008               	addwfc	??_strncmp+1,w,c
 18123  00456E  6E02               	movwf	?_strncmp+1,c
 18124  004570  0012               	return	
 18125  004572                     i2l3564:
 18126  004572  4A01               	infsnz	strncmp@s1,f,c
 18127  004574  2A02               	incf	strncmp@s1+1,f,c
 18128  004576  4A03               	infsnz	strncmp@s2,f,c
 18129  004578  2A04               	incf	strncmp@s2+1,f,c
 18130  00457A                     i2l3562:
 18131  00457A  0605               	decf	strncmp@len,f,c
 18132  00457C  A0D8               	btfss	status,0,c
 18133  00457E  0606               	decf	strncmp@len+1,f,c
 18134  004580  2805               	incf	strncmp@len,w,c
 18135  004582  E1C8               	bnz	i2l9683
 18136  004584  2806               	incf	strncmp@len+1,w,c
 18137  004586  A4D8               	btfss	status,2,c
 18138  004588  D7C5               	goto	i2l3563
 18139  00458A  0E00               	movlw	0
 18140  00458C  6E02               	movwf	?_strncmp+1,c
 18141  00458E  0E00               	movlw	0
 18142  004590  6E01               	movwf	?_strncmp,c
 18143  004592  0012               	return	
 18144  004594                     __end_of_strncmp:
 18145                           	opt stack 0
 18146                           pclatu	equ	0xFFB
 18147                           pclath	equ	0xFFA
 18148                           tblptru	equ	0xFF8
 18149                           tblptrh	equ	0xFF7
 18150                           tblptrl	equ	0xFF6
 18151                           tablat	equ	0xFF5
 18152                           prodh	equ	0xFF4
 18153                           prodl	equ	0xFF3
 18154                           intcon	equ	0xFF2
 18155                           indf0	equ	0xFEF
 18156                           postinc0	equ	0xFEE
 18157                           fsr0h	equ	0xFEA
 18158                           fsr0l	equ	0xFE9
 18159                           wreg	equ	0xFE8
 18160                           indf1	equ	0xFE7
 18161                           postdec1	equ	0xFE5
 18162                           fsr1h	equ	0xFE2
 18163                           fsr1l	equ	0xFE1
 18164                           indf2	equ	0xFDF
 18165                           postinc2	equ	0xFDE
 18166                           postdec2	equ	0xFDD
 18167                           plusw2	equ	0xFDB
 18168                           fsr2h	equ	0xFDA
 18169                           fsr2l	equ	0xFD9
 18170                           status	equ	0xFD8
 18171                           
 18172 ;; *************** function _strcpy *****************
 18173 ;; Defined at:
 18174 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strcpy.c"
 18175 ;; Parameters:    Size  Location     Type
 18176 ;;  to              2    0[COMRAM] PTR unsigned char 
 18177 ;;		 -> frameBuffer(300), 
 18178 ;;  from            2    2[COMRAM] PTR const unsigned char 
 18179 ;;		 -> recebeByteLoRaWan@frameData(100), 
 18180 ;; Auto vars:     Size  Location     Type
 18181 ;;  cp              2    4[COMRAM] PTR unsigned char 
 18182 ;;		 -> frameBuffer(300), 
 18183 ;; Return value:  Size  Location     Type
 18184 ;;                  2    0[COMRAM] PTR unsigned char 
 18185 ;; Registers used:
 18186 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 18187 ;; Tracked objects:
 18188 ;;		On entry : 0/0
 18189 ;;		On exit  : 0/0
 18190 ;;		Unchanged: 0/0
 18191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18192 ;;      Params:         4       0       0       0       0       0       0       0       0
 18193 ;;      Locals:         2       0       0       0       0       0       0       0       0
 18194 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18195 ;;      Totals:         6       0       0       0       0       0       0       0       0
 18196 ;;Total ram usage:        6 bytes
 18197 ;; Hardware stack levels used:    1
 18198 ;; This function calls:
 18199 ;;		Nothing
 18200 ;; This function is called by:
 18201 ;;		_recebeByteLoRaWan
 18202 ;; This function uses a non-reentrant model
 18203 ;;
 18204                           
 18205                           	psect	text68
 18206  00502A                     __ptext68:
 18207                           	opt stack 0
 18208  00502A                     _strcpy:
 18209                           	opt stack 23
 18210                           
 18211                           ;incstack = 0
 18212  00502A  C001  F005         	movff	strcpy@to,strcpy@cp
 18213  00502E  C002  F006         	movff	strcpy@to+1,strcpy@cp+1
 18214  005032  D004               	goto	i2l3550
 18215  005034  4A05               	infsnz	strcpy@cp,f,c
 18216  005036  2A06               	incf	strcpy@cp+1,f,c
 18217  005038  4A03               	infsnz	strcpy@from,f,c
 18218  00503A  2A04               	incf	strcpy@from+1,f,c
 18219  00503C                     i2l3550:
 18220  00503C  C003  FFD9         	movff	strcpy@from,fsr2l
 18221  005040  C004  FFDA         	movff	strcpy@from+1,fsr2h
 18222  005044  C005  FFE1         	movff	strcpy@cp,fsr1l
 18223  005048  C006  FFE2         	movff	strcpy@cp+1,fsr1h
 18224  00504C  CFDF FFE7          	movff	indf2,indf1
 18225  005050  50E7               	movf	indf1,w,c
 18226  005052  B4D8               	btfsc	status,2,c
 18227  005054  0012               	return	
 18228  005056  D7EE               	goto	i2l3551
 18229  005058                     __end_of_strcpy:
 18230                           	opt stack 0
 18231                           pclatu	equ	0xFFB
 18232                           pclath	equ	0xFFA
 18233                           tblptru	equ	0xFF8
 18234                           tblptrh	equ	0xFF7
 18235                           tblptrl	equ	0xFF6
 18236                           tablat	equ	0xFF5
 18237                           prodh	equ	0xFF4
 18238                           prodl	equ	0xFF3
 18239                           intcon	equ	0xFF2
 18240                           indf0	equ	0xFEF
 18241                           postinc0	equ	0xFEE
 18242                           fsr0h	equ	0xFEA
 18243                           fsr0l	equ	0xFE9
 18244                           wreg	equ	0xFE8
 18245                           indf1	equ	0xFE7
 18246                           postdec1	equ	0xFE5
 18247                           fsr1h	equ	0xFE2
 18248                           fsr1l	equ	0xFE1
 18249                           indf2	equ	0xFDF
 18250                           postinc2	equ	0xFDE
 18251                           postdec2	equ	0xFDD
 18252                           plusw2	equ	0xFDB
 18253                           fsr2h	equ	0xFDA
 18254                           fsr2l	equ	0xFD9
 18255                           status	equ	0xFD8
 18256                           
 18257 ;; *************** function _strcmp *****************
 18258 ;; Defined at:
 18259 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strcmp.c"
 18260 ;; Parameters:    Size  Location     Type
 18261 ;;  s1              2    0[COMRAM] PTR const unsigned char 
 18262 ;;		 -> recebeByteLoRaWan@frameData(100), 
 18263 ;;  s2              2    2[COMRAM] PTR const unsigned char 
 18264 ;;		 -> STR_23(16), STR_22(7), STR_21(14), STR_20(8), 
 18265 ;;		 -> STR_19(8), STR_18(10), STR_17(17), STR_16(11), 
 18266 ;;		 -> STR_15(5), STR_14(32), STR_13(7), STR_12(11), 
 18267 ;;		 -> STR_11(11), STR_10(14), STR_9(3), 
 18268 ;; Auto vars:     Size  Location     Type
 18269 ;;  r               1    5[COMRAM] char 
 18270 ;; Return value:  Size  Location     Type
 18271 ;;                  2    0[COMRAM] int 
 18272 ;; Registers used:
 18273 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 18274 ;; Tracked objects:
 18275 ;;		On entry : 0/0
 18276 ;;		On exit  : 0/0
 18277 ;;		Unchanged: 0/0
 18278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18279 ;;      Params:         4       0       0       0       0       0       0       0       0
 18280 ;;      Locals:         1       0       0       0       0       0       0       0       0
 18281 ;;      Temps:          1       0       0       0       0       0       0       0       0
 18282 ;;      Totals:         6       0       0       0       0       0       0       0       0
 18283 ;;Total ram usage:        6 bytes
 18284 ;; Hardware stack levels used:    1
 18285 ;; This function calls:
 18286 ;;		Nothing
 18287 ;; This function is called by:
 18288 ;;		_recebeByteLoRaWan
 18289 ;; This function uses a non-reentrant model
 18290 ;;
 18291                           
 18292                           	psect	text69
 18293  004B74                     __ptext69:
 18294                           	opt stack 0
 18295  004B74                     _strcmp:
 18296                           	opt stack 23
 18297                           
 18298                           ;incstack = 0
 18299  004B74  D004               	goto	i2l3542
 18300  004B76  4A01               	infsnz	strcmp@s1,f,c
 18301  004B78  2A02               	incf	strcmp@s1+1,f,c
 18302  004B7A  4A03               	infsnz	strcmp@s2,f,c
 18303  004B7C  2A04               	incf	strcmp@s2+1,f,c
 18304  004B7E                     i2l3542:
 18305  004B7E  C001  FFD9         	movff	strcmp@s1,fsr2l
 18306  004B82  C002  FFDA         	movff	strcmp@s1+1,fsr2h
 18307  004B86  50DF               	movf	indf2,w,c
 18308  004B88  6E05               	movwf	??_strcmp& (0+255),c
 18309  004B8A  C003  FFF6         	movff	strcmp@s2,tblptrl
 18310  004B8E  C004  FFF7         	movff	strcmp@s2+1,tblptrh
 18311  004B92                     	if	0	;tblptru may be non-zero
 18312  004B92                     	endif
 18313  004B92                     	if	0	;tblptru may be non-zero
 18314  004B92                     	endif
 18315  004B92  0008               	tblrd		*
 18316  004B94  50F5               	movf	tablat,w,c
 18317  004B96  0800               	sublw	0
 18318  004B98  2405               	addwf	??_strcmp,w,c
 18319  004B9A  6E06               	movwf	strcmp@r,c
 18320  004B9C  5006               	movf	strcmp@r,w,c
 18321  004B9E  A4D8               	btfss	status,2,c
 18322  004BA0  D007               	goto	i2u888_40
 18323  004BA2  C001  FFD9         	movff	strcmp@s1,fsr2l
 18324  004BA6  C002  FFDA         	movff	strcmp@s1+1,fsr2h
 18325  004BAA  50DF               	movf	indf2,w,c
 18326  004BAC  A4D8               	btfss	status,2,c
 18327  004BAE  D7E3               	goto	i2l3543
 18328  004BB0                     i2u888_40:
 18329  004BB0  5006               	movf	strcmp@r,w,c
 18330  004BB2  6E01               	movwf	?_strcmp,c
 18331  004BB4  6A02               	clrf	?_strcmp+1,c
 18332  004BB6  BE01               	btfsc	?_strcmp,7,c
 18333  004BB8  0602               	decf	?_strcmp+1,f,c
 18334  004BBA  0012               	return	
 18335  004BBC                     __end_of_strcmp:
 18336                           	opt stack 0
 18337                           pclatu	equ	0xFFB
 18338                           pclath	equ	0xFFA
 18339                           tblptru	equ	0xFF8
 18340                           tblptrh	equ	0xFF7
 18341                           tblptrl	equ	0xFF6
 18342                           tablat	equ	0xFF5
 18343                           prodh	equ	0xFF4
 18344                           prodl	equ	0xFF3
 18345                           intcon	equ	0xFF2
 18346                           indf0	equ	0xFEF
 18347                           postinc0	equ	0xFEE
 18348                           fsr0h	equ	0xFEA
 18349                           fsr0l	equ	0xFE9
 18350                           wreg	equ	0xFE8
 18351                           indf1	equ	0xFE7
 18352                           postdec1	equ	0xFE5
 18353                           fsr1h	equ	0xFE2
 18354                           fsr1l	equ	0xFE1
 18355                           indf2	equ	0xFDF
 18356                           postinc2	equ	0xFDE
 18357                           postdec2	equ	0xFDD
 18358                           plusw2	equ	0xFDB
 18359                           fsr2h	equ	0xFDA
 18360                           fsr2l	equ	0xFD9
 18361                           status	equ	0xFD8
 18362                           
 18363 ;; *************** function _getch *****************
 18364 ;; Defined at:
 18365 ;;		line 52 in file "uart/uart.c"
 18366 ;; Parameters:    Size  Location     Type
 18367 ;;		None
 18368 ;; Auto vars:     Size  Location     Type
 18369 ;;  data            1    2[COMRAM] unsigned char 
 18370 ;;  RC              1    1[COMRAM] unsigned char 
 18371 ;; Return value:  Size  Location     Type
 18372 ;;                  1    wreg      unsigned char 
 18373 ;; Registers used:
 18374 ;;		wreg, status,2, status,0
 18375 ;; Tracked objects:
 18376 ;;		On entry : 0/0
 18377 ;;		On exit  : 0/0
 18378 ;;		Unchanged: 0/0
 18379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18380 ;;      Params:         0       0       0       0       0       0       0       0       0
 18381 ;;      Locals:         2       0       0       0       0       0       0       0       0
 18382 ;;      Temps:          1       0       0       0       0       0       0       0       0
 18383 ;;      Totals:         3       0       0       0       0       0       0       0       0
 18384 ;;Total ram usage:        3 bytes
 18385 ;; Hardware stack levels used:    1
 18386 ;; This function calls:
 18387 ;;		Nothing
 18388 ;; This function is called by:
 18389 ;;		_SYS_InterruptHigh
 18390 ;;		_flush
 18391 ;; This function uses a non-reentrant model
 18392 ;;
 18393                           
 18394                           	psect	text70
 18395  005126                     __ptext70:
 18396                           	opt stack 0
 18397  005126                     _getch:
 18398                           	opt stack 24
 18399                           
 18400                           ;uart.c: 54: uint8_t RC;
 18401                           ;uart.c: 55: char data;
 18402                           ;uart.c: 57: if (!RCIF)
 18403                           
 18404                           ;incstack = 0
 18405  005126  BA9E               	btfsc	3998,5,c	;volatile
 18406  005128  D002               	goto	i2l1264
 18407                           
 18408                           ;uart.c: 58: return 0;
 18409  00512A  0E00               	movlw	0
 18410  00512C  0012               	return	
 18411  00512E                     i2l1264:
 18412                           
 18413                           ;uart.c: 60: RC=RCSTA;
 18414  00512E  CFAB F002          	movff	4011,getch@RC	;volatile
 18415                           
 18416                           ;uart.c: 61: data=RCREG;
 18417  005132  CFAE F003          	movff	4014,getch@data	;volatile
 18418                           
 18419                           ;uart.c: 64: if ((RC & 0x06)!=0)
 18420  005136  C002  F001         	movff	getch@RC,??_getch
 18421  00513A  0E06               	movlw	6
 18422  00513C  1601               	andwf	??_getch,f,c
 18423  00513E  B4D8               	btfsc	status,2,c
 18424  005140  D003               	goto	i2l1266
 18425                           
 18426                           ;uart.c: 65: {
 18427                           ;uart.c: 66: RCSTAbits.CREN=0;
 18428  005142  98AB               	bcf	4011,4,c	;volatile
 18429                           
 18430                           ;uart.c: 67: __nop();
 18431  005144  F000               	nop	
 18432                           
 18433                           ;uart.c: 68: RCSTAbits.CREN=1;
 18434  005146  88AB               	bsf	4011,4,c	;volatile
 18435  005148                     i2l1266:
 18436                           
 18437                           ;uart.c: 69: }
 18438                           ;uart.c: 71: return data;
 18439  005148  5003               	movf	getch@data,w,c
 18440  00514A  0012               	return	
 18441  00514C                     __end_of_getch:
 18442                           	opt stack 0
 18443                           pclatu	equ	0xFFB
 18444                           pclath	equ	0xFFA
 18445                           tblptru	equ	0xFF8
 18446                           tblptrh	equ	0xFF7
 18447                           tblptrl	equ	0xFF6
 18448                           tablat	equ	0xFF5
 18449                           prodh	equ	0xFF4
 18450                           prodl	equ	0xFF3
 18451                           intcon	equ	0xFF2
 18452                           indf0	equ	0xFEF
 18453                           postinc0	equ	0xFEE
 18454                           fsr0h	equ	0xFEA
 18455                           fsr0l	equ	0xFE9
 18456                           wreg	equ	0xFE8
 18457                           indf1	equ	0xFE7
 18458                           postdec1	equ	0xFE5
 18459                           fsr1h	equ	0xFE2
 18460                           fsr1l	equ	0xFE1
 18461                           indf2	equ	0xFDF
 18462                           postinc2	equ	0xFDE
 18463                           postdec2	equ	0xFDD
 18464                           plusw2	equ	0xFDB
 18465                           fsr2h	equ	0xFDA
 18466                           fsr2l	equ	0xFD9
 18467                           status	equ	0xFD8
 18468                           
 18469 ;; *************** function _USBDeviceTasks *****************
 18470 ;; Defined at:
 18471 ;;		line 477 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 18472 ;; Parameters:    Size  Location     Type
 18473 ;;		None
 18474 ;; Auto vars:     Size  Location     Type
 18475 ;;  i               1   27[COMRAM] unsigned char 
 18476 ;; Return value:  Size  Location     Type
 18477 ;;                  1    wreg      void 
 18478 ;; Registers used:
 18479 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18480 ;; Tracked objects:
 18481 ;;		On entry : 0/0
 18482 ;;		On exit  : 0/0
 18483 ;;		Unchanged: 0/0
 18484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18485 ;;      Params:         0       0       0       0       0       0       0       0       0
 18486 ;;      Locals:         1       0       0       0       0       0       0       0       0
 18487 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18488 ;;      Totals:         1       0       0       0       0       0       0       0       0
 18489 ;;Total ram usage:        1 bytes
 18490 ;; Hardware stack levels used:    1
 18491 ;; Hardware stack levels required when called:    8
 18492 ;; This function calls:
 18493 ;;		_USBCtrlEPAllowStatusStage
 18494 ;;		_USBCtrlEPService
 18495 ;;		_USBIncrement1msInternalTimers
 18496 ;;		_USBStallHandler
 18497 ;;		_USBSuspend
 18498 ;;		_USBWakeFromSuspend
 18499 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 18500 ;;		i2_USBDeviceInit
 18501 ;; This function is called by:
 18502 ;;		_SYS_InterruptHigh
 18503 ;; This function uses a non-reentrant model
 18504 ;;
 18505                           
 18506                           	psect	text71
 18507  00270E                     __ptext71:
 18508                           	opt stack 0
 18509  00270E                     _USBDeviceTasks:
 18510                           	opt stack 16
 18511                           
 18512                           ;usb_device.c: 479: uint8_t i;
 18513                           ;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 18514                           
 18515                           ;incstack = 0
 18516  00270E  0458               	decf	_USBDeviceState,w,c	;volatile
 18517  002710  B4D8               	btfsc	status,2,c
 18518                           
 18519                           ;usb_device.c: 591: {
 18520                           ;usb_device.c: 601: if(!UCONbits.SE0)
 18521  002712  BA6D               	btfsc	3949,5,c	;volatile
 18522  002714  D006               	goto	i2l436
 18523                           
 18524                           ;usb_device.c: 602: {
 18525                           ;usb_device.c: 608: {UIR = 0;};
 18526  002716  0E00               	movlw	0
 18527  002718  6E68               	movwf	3944,c	;volatile
 18528                           
 18529                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 18530  00271A  8069               	bsf	3945,0,c	;volatile
 18531                           
 18532                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 18533  00271C  8869               	bsf	3945,4,c	;volatile
 18534                           
 18535                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 18536  00271E  0E02               	movlw	2
 18537  002720  6E58               	movwf	_USBDeviceState,c	;volatile
 18538  002722                     i2l436:
 18539                           
 18540                           ;usb_device.c: 617: }
 18541                           ;usb_device.c: 618: }
 18542                           ;usb_device.c: 634: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 18543  002722  B468               	btfsc	3944,2,c	;volatile
 18544  002724  A469               	btfss	3945,2,c	;volatile
 18545  002726  D003               	goto	i2l437
 18546                           
 18547                           ;usb_device.c: 635: {
 18548                           ;usb_device.c: 636: (UIR &= 0xFB);
 18549  002728  9468               	bcf	3944,2,c	;volatile
 18550                           
 18551                           ;usb_device.c: 640: USBWakeFromSuspend();
 18552  00272A  EC80  F027         	call	_USBWakeFromSuspend	;wreg free
 18553  00272E                     i2l437:
 18554                           
 18555                           ;usb_device.c: 642: }
 18556                           ;usb_device.c: 647: if(UCONbits.SUSPND==1)
 18557  00272E  A26D               	btfss	3949,1,c	;volatile
 18558  002730  D002               	goto	i2l438
 18559                           
 18560                           ;usb_device.c: 648: {
 18561                           ;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 18562  002732  9AA1               	bcf	4001,5,c	;volatile
 18563                           
 18564                           ;usb_device.c: 650: return;
 18565  002734  0012               	return	
 18566  002736                     i2l438:
 18567                           
 18568                           ;usb_device.c: 651: }
 18569                           ;usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 18570  002736  B068               	btfsc	3944,0,c	;volatile
 18571  002738  A069               	btfss	3945,0,c	;volatile
 18572  00273A  D006               	goto	i2l440
 18573                           
 18574                           ;usb_device.c: 664: {
 18575                           ;usb_device.c: 665: USBDeviceInit();
 18576  00273C  EC4E  F012         	call	i2_USBDeviceInit	;wreg free
 18577                           
 18578                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
 18579  002740  8AA0               	bsf	4000,5,c	;volatile
 18580                           
 18581                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 18582  002742  0E04               	movlw	4
 18583  002744  6E58               	movwf	_USBDeviceState,c	;volatile
 18584                           
 18585                           ;usb_device.c: 681: (UIR &= 0xFE);
 18586  002746  9068               	bcf	3944,0,c	;volatile
 18587  002748                     i2l440:
 18588                           
 18589                           ;usb_device.c: 682: }
 18590                           ;usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 18591  002748  B868               	btfsc	3944,4,c	;volatile
 18592  00274A  A869               	btfss	3945,4,c	;volatile
 18593  00274C  D002               	goto	i2l441
 18594                           
 18595                           ;usb_device.c: 688: {
 18596                           ;usb_device.c: 694: USBSuspend();
 18597  00274E  EC2C  F028         	call	_USBSuspend	;wreg free
 18598  002752                     i2l441:
 18599                           
 18600                           ;usb_device.c: 696: }
 18601                           ;usb_device.c: 708: if(UIRbits.SOFIF)
 18602  002752  AC68               	btfss	3944,6,c	;volatile
 18603  002754  D01A               	goto	i2l445
 18604                           
 18605                           ;usb_device.c: 709: {
 18606                           ;usb_device.c: 711: if(UIEbits.SOFIE)
 18607  002756  AC69               	btfss	3945,6,c	;volatile
 18608  002758  D00E               	goto	i2l443
 18609                           
 18610                           ;usb_device.c: 712: {
 18611                           ;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 18612  00275A  0E00               	movlw	0
 18613  00275C  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18614  00275E  0E73               	movlw	115
 18615  002760  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18616  002762  0E00               	movlw	0
 18617  002764  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 18618  002766  0E00               	movlw	0
 18619  002768  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 18620  00276A  0E00               	movlw	0
 18621  00276C  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18622  00276E  0E01               	movlw	1
 18623  002770  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18624  002772  EC69  F024         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18625  002776                     i2l443:
 18626                           
 18627                           ;usb_device.c: 714: }
 18628                           ;usb_device.c: 715: (UIR &= 0xBF);
 18629  002776  9C68               	bcf	3944,6,c	;volatile
 18630                           
 18631                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 18632  002778  ECB7  F028         	call	_USBIncrement1msInternalTimers	;wreg free
 18633                           
 18634                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 18635  00277C  5054               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 18636  00277E  A4D8               	btfss	status,2,c
 18637                           
 18638                           ;usb_device.c: 736: {
 18639                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 18640  002780  0654               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 18641                           
 18642                           ;usb_device.c: 738: }
 18643                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 18644  002782  5054               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 18645  002784  B4D8               	btfsc	status,2,c
 18646                           
 18647                           ;usb_device.c: 745: {
 18648                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 18649  002786  EC55  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
 18650  00278A                     i2l445:
 18651                           
 18652                           ;usb_device.c: 747: }
 18653                           ;usb_device.c: 749: }
 18654                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
 18655  00278A  BA68               	btfsc	3944,5,c	;volatile
 18656  00278C  AA69               	btfss	3945,5,c	;volatile
 18657  00278E  D002               	goto	i2l446
 18658                           
 18659                           ;usb_device.c: 752: {
 18660                           ;usb_device.c: 753: USBStallHandler();
 18661  002790  EC87  F026         	call	_USBStallHandler	;wreg free
 18662  002794                     i2l446:
 18663                           
 18664                           ;usb_device.c: 754: }
 18665                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 18666  002794  B268               	btfsc	3944,1,c	;volatile
 18667  002796  A269               	btfss	3945,1,c	;volatile
 18668  002798  D00F               	goto	i2l447
 18669                           
 18670                           ;usb_device.c: 757: {
 18671                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 18672  00279A  0E7F               	movlw	127
 18673  00279C  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18674  00279E  680D               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18675  0027A0  0E00               	movlw	0
 18676  0027A2  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 18677  0027A4  0E00               	movlw	0
 18678  0027A6  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 18679  0027A8  0E00               	movlw	0
 18680  0027AA  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18681  0027AC  0E01               	movlw	1
 18682  0027AE  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18683  0027B0  EC69  F024         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18684                           
 18685                           ;usb_device.c: 759: {UEIR = 0;};
 18686  0027B4  0E00               	movlw	0
 18687  0027B6  6E6A               	movwf	3946,c	;volatile
 18688  0027B8                     i2l447:
 18689                           
 18690                           ;usb_device.c: 767: }
 18691                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 18692  0027B8  0E04               	movlw	4
 18693  0027BA  6058               	cpfslt	_USBDeviceState,c	;volatile
 18694  0027BC  D002               	goto	i2l448
 18695                           
 18696                           ;usb_device.c: 775: {
 18697                           ;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 18698  0027BE  9AA1               	bcf	4001,5,c	;volatile
 18699                           
 18700                           ;usb_device.c: 777: return;
 18701  0027C0  0012               	return	
 18702  0027C2                     i2l448:
 18703                           
 18704                           ;usb_device.c: 778: }
 18705                           ;usb_device.c: 783: if(UIEbits.TRNIE)
 18706  0027C2  A669               	btfss	3945,3,c	;volatile
 18707  0027C4  D039               	goto	i2u954_40
 18708                           
 18709                           ;usb_device.c: 784: {
 18710                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
 18711  0027C6  0E00               	movlw	0
 18712  0027C8  6E1C               	movwf	USBDeviceTasks@i,c
 18713  0027CA                     i2l10063:
 18714  0027CA  0E03               	movlw	3
 18715  0027CC  641C               	cpfsgt	USBDeviceTasks@i,c
 18716  0027CE  D001               	goto	i2l450
 18717  0027D0  D033               	goto	i2u954_40
 18718  0027D2                     i2l450:
 18719                           
 18720                           ;usb_device.c: 786: {
 18721                           ;usb_device.c: 787: if(UIRbits.TRNIF)
 18722  0027D2  A668               	btfss	3944,3,c	;volatile
 18723  0027D4  D031               	goto	i2u954_40
 18724                           
 18725                           ;usb_device.c: 788: {
 18726                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
 18727  0027D6  CF6C F05D          	movff	3948,_USTATcopy	;volatile
 18728                           
 18729                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 18730  0027DA  305D               	rrcf	_USTATcopy,w,c	;volatile
 18731  0027DC  32E8               	rrcf	wreg,f,c
 18732  0027DE  32E8               	rrcf	wreg,f,c
 18733  0027E0  0B0F               	andlw	15
 18734  0027E2  6E55               	movwf	_endpoint_number,c	;volatile
 18735                           
 18736                           ;usb_device.c: 793: (UIR &= 0xF7);
 18737  0027E4  9668               	bcf	3944,3,c	;volatile
 18738                           
 18739                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 18740  0027E6  B45D               	btfsc	_USTATcopy,2,c	;volatile
 18741  0027E8  D007               	goto	i2l453
 18742                           
 18743                           ;usb_device.c: 799: {
 18744                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 18745  0027EA  5055               	movf	_endpoint_number,w,c	;volatile
 18746  0027EC  0D01               	mullw	1
 18747  0027EE  0EB8               	movlw	low _ep_data_out
 18748  0027F0  24F3               	addwf	prodl,w,c
 18749  0027F2  6ED9               	movwf	fsr2l,c
 18750  0027F4  0E01               	movlw	high _ep_data_out
 18751  0027F6  D006               	goto	L18
 18752  0027F8                     i2l453:
 18753                           
 18754                           ;usb_device.c: 802: else
 18755                           ;usb_device.c: 803: {
 18756                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 18757                           
 18758                           ; BSR set to: 1
 18759  0027F8  5055               	movf	_endpoint_number,w,c	;volatile
 18760  0027FA  0D01               	mullw	1
 18761  0027FC  0EBB               	movlw	low _ep_data_in
 18762  0027FE  24F3               	addwf	prodl,w,c
 18763  002800  6ED9               	movwf	fsr2l,c
 18764  002802  0E01               	movlw	high _ep_data_in
 18765  002804                     L18:
 18766  002804  20F4               	addwfc	prodh,w,c
 18767  002806  6EDA               	movwf	fsr2h,c
 18768  002808  0101               	movlb	1	; () banked
 18769  00280A  70DF               	btg	indf2,0,c
 18770                           
 18771                           ; BSR set to: 1
 18772                           ;usb_device.c: 805: }
 18773                           ;usb_device.c: 810: if(endpoint_number == 0)
 18774                           
 18775                           ; BSR set to: 1
 18776  00280C  5055               	movf	_endpoint_number,w,c	;volatile
 18777  00280E  A4D8               	btfss	status,2,c
 18778  002810  D003               	goto	i2l455
 18779                           
 18780                           ; BSR set to: 1
 18781                           ;usb_device.c: 811: {
 18782                           ;usb_device.c: 812: USBCtrlEPService();
 18783  002812  EC0D  F020         	call	_USBCtrlEPService	;wreg free
 18784                           
 18785                           ;usb_device.c: 813: }
 18786  002816  D00E               	goto	i2l457
 18787  002818                     i2l455:
 18788                           
 18789                           ;usb_device.c: 814: else
 18790                           ;usb_device.c: 815: {
 18791                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 18792  002818  0E00               	movlw	0
 18793  00281A  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18794  00281C  0E72               	movlw	114
 18795  00281E  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18796  002820  0E5D               	movlw	low _USTATcopy
 18797  002822  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 18798  002824  0E00               	movlw	high _USTATcopy
 18799  002826  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 18800  002828  0E00               	movlw	0
 18801  00282A  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18802  00282C  0E00               	movlw	0
 18803  00282E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18804  002830  EC69  F024         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18805  002834                     i2l457:
 18806  002834  2A1C               	incf	USBDeviceTasks@i,f,c
 18807  002836  D7C9               	goto	i2l10063
 18808  002838                     i2u954_40:
 18809                           
 18810                           ;usb_device.c: 822: }
 18811                           ;usb_device.c: 823: }
 18812                           ;usb_device.c: 824: }
 18813                           ;usb_device.c: 826: {PIR2bits.USBIF = 0;};
 18814  002838  9AA1               	bcf	4001,5,c	;volatile
 18815  00283A  0012               	return		;funcret
 18816  00283C                     __end_of_USBDeviceTasks:
 18817                           	opt stack 0
 18818                           pclatu	equ	0xFFB
 18819                           pclath	equ	0xFFA
 18820                           tblptru	equ	0xFF8
 18821                           tblptrh	equ	0xFF7
 18822                           tblptrl	equ	0xFF6
 18823                           tablat	equ	0xFF5
 18824                           prodh	equ	0xFF4
 18825                           prodl	equ	0xFF3
 18826                           intcon	equ	0xFF2
 18827                           indf0	equ	0xFEF
 18828                           postinc0	equ	0xFEE
 18829                           fsr0h	equ	0xFEA
 18830                           fsr0l	equ	0xFE9
 18831                           wreg	equ	0xFE8
 18832                           indf1	equ	0xFE7
 18833                           postdec1	equ	0xFE5
 18834                           fsr1h	equ	0xFE2
 18835                           fsr1l	equ	0xFE1
 18836                           indf2	equ	0xFDF
 18837                           postinc2	equ	0xFDE
 18838                           postdec2	equ	0xFDD
 18839                           plusw2	equ	0xFDB
 18840                           fsr2h	equ	0xFDA
 18841                           fsr2l	equ	0xFD9
 18842                           status	equ	0xFD8
 18843                           
 18844 ;; *************** function i2_USBDeviceInit *****************
 18845 ;; Defined at:
 18846 ;;		line 277 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 18847 ;; Parameters:    Size  Location     Type
 18848 ;;		None
 18849 ;; Auto vars:     Size  Location     Type
 18850 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 18851 ;; Return value:  Size  Location     Type
 18852 ;;                  1    wreg      void 
 18853 ;; Registers used:
 18854 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18855 ;; Tracked objects:
 18856 ;;		On entry : 0/0
 18857 ;;		On exit  : 0/0
 18858 ;;		Unchanged: 0/0
 18859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18860 ;;      Params:         0       0       0       0       0       0       0       0       0
 18861 ;;      Locals:         1       0       0       0       0       0       0       0       0
 18862 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18863 ;;      Totals:         1       0       0       0       0       0       0       0       0
 18864 ;;Total ram usage:        1 bytes
 18865 ;; Hardware stack levels used:    1
 18866 ;; Hardware stack levels required when called:    1
 18867 ;; This function calls:
 18868 ;;		i2_memset
 18869 ;; This function is called by:
 18870 ;;		_USBDeviceTasks
 18871 ;; This function uses a non-reentrant model
 18872 ;;
 18873                           
 18874                           	psect	text72
 18875  00249C                     __ptext72:
 18876                           	opt stack 0
 18877  00249C                     i2_USBDeviceInit:
 18878                           	opt stack 22
 18879                           
 18880                           ;usb_device.c: 279: uint8_t i;
 18881                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 18882                           
 18883                           ;incstack = 0
 18884  00249C  9AA0               	bcf	4000,5,c	;volatile
 18885                           
 18886                           ;usb_device.c: 285: ;
 18887                           ;usb_device.c: 288: {UEIR = 0;};
 18888  00249E  0E00               	movlw	0
 18889  0024A0  6E6A               	movwf	3946,c	;volatile
 18890                           
 18891                           ;usb_device.c: 291: {UIR = 0;};
 18892  0024A2  0E00               	movlw	0
 18893  0024A4  6E68               	movwf	3944,c	;volatile
 18894                           
 18895                           ;usb_device.c: 294: UEP0 = 0;
 18896  0024A6  0E00               	movlw	0
 18897  0024A8  6E70               	movwf	3952,c	;volatile
 18898                           
 18899                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 18900  0024AA  0E71               	movlw	113
 18901  0024AC  6E01               	movwf	i2memset@p1,c
 18902  0024AE  0E0F               	movlw	15
 18903  0024B0  6E02               	movwf	i2memset@p1+1,c
 18904  0024B2  0E00               	movlw	0
 18905  0024B4  6E04               	movwf	i2memset@c+1,c
 18906  0024B6  0E00               	movlw	0
 18907  0024B8  6E03               	movwf	i2memset@c,c
 18908  0024BA  0E00               	movlw	0
 18909  0024BC  6E06               	movwf	i2memset@n+1,c
 18910  0024BE  0E02               	movlw	2
 18911  0024C0  6E05               	movwf	i2memset@n,c
 18912  0024C2  EC43  F028         	call	i2_memset	;wreg free
 18913                           
 18914                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 18915  0024C6  0E16               	movlw	22
 18916  0024C8  6E6F               	movwf	3951,c	;volatile
 18917  0024CA  0E9F               	movlw	159
 18918  0024CC  6E6B               	movwf	3947,c	;volatile
 18919  0024CE  0E7B               	movlw	123
 18920  0024D0  6E69               	movwf	3945,c	;volatile
 18921                           
 18922                           ;usb_device.c: 301: ;
 18923                           ;usb_device.c: 304: ;
 18924                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
 18925  0024D2  0E00               	movlw	0
 18926  0024D4  6E09               	movwf	i2USBDeviceInit@i,c
 18927  0024D6                     i2l9771:
 18928  0024D6  0E0B               	movlw	11
 18929  0024D8  6409               	cpfsgt	i2USBDeviceInit@i,c
 18930  0024DA  D001               	goto	i2l426
 18931  0024DC  D00E               	goto	i2u899_40
 18932  0024DE                     i2l426:
 18933                           
 18934                           ;usb_device.c: 308: {
 18935                           ;usb_device.c: 309: BDT[i].Val = 0x00;
 18936  0024DE  5009               	movf	i2USBDeviceInit@i,w,c
 18937  0024E0  0D04               	mullw	4
 18938  0024E2  0E00               	movlw	0
 18939  0024E4  24F3               	addwf	prodl,w,c
 18940  0024E6  6ED9               	movwf	fsr2l,c
 18941  0024E8  0E04               	movlw	4
 18942  0024EA  20F4               	addwfc	prodh,w,c
 18943  0024EC  6EDA               	movwf	fsr2h,c
 18944  0024EE  6ADE               	clrf	postinc2,c
 18945  0024F0  6ADE               	clrf	postinc2,c
 18946  0024F2  6ADE               	clrf	postinc2,c
 18947  0024F4  6ADD               	clrf	postdec2,c
 18948  0024F6  2A09               	incf	i2USBDeviceInit@i,f,c
 18949  0024F8  D7EE               	goto	i2l9771
 18950  0024FA                     i2u899_40:
 18951                           
 18952                           ;usb_device.c: 310: }
 18953                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
 18954  0024FA  8C6D               	bsf	3949,6,c	;volatile
 18955                           
 18956                           ;usb_device.c: 316: UADDR = 0x00;
 18957  0024FC  0E00               	movlw	0
 18958  0024FE  6E6E               	movwf	3950,c	;volatile
 18959                           
 18960                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 18961  002500  986D               	bcf	3949,4,c	;volatile
 18962                           
 18963                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 18964  002502  9C6D               	bcf	3949,6,c	;volatile
 18965  002504                     
 18966                           ;usb_device.c: 326: {
 18967                           ;usb_device.c: 327: (UIR &= 0xF7);
 18968  002504  9668               	bcf	3944,3,c	;volatile
 18969                           
 18970                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 18971  002506  0E00               	movlw	0
 18972  002508  0100               	movlb	0	; () banked
 18973  00250A  6FFC               	movwf	(_inPipes+3)& (0+255),b	;volatile
 18974                           
 18975                           ; BSR set to: 0
 18976                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 18977  00250C  0E00               	movlw	0
 18978  00250E  6E3B               	movwf	_outPipes+3,c	;volatile
 18979                           
 18980                           ; BSR set to: 0
 18981                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 18982  002510  0E00               	movlw	0
 18983  002512  6E3D               	movwf	_outPipes+5,c	;volatile
 18984  002514  0E00               	movlw	0
 18985  002516  6E3C               	movwf	_outPipes+4,c	;volatile
 18986                           
 18987                           ; BSR set to: 0
 18988                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 18989  002518  B668               	btfsc	3944,3,c	;volatile
 18990  00251A  D7F4               	goto	i2l428
 18991                           
 18992                           ; BSR set to: 0
 18993                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 18994                           
 18995                           ; BSR set to: 0
 18996  00251C  0E01               	movlw	1
 18997  00251E  0101               	movlb	1	; () banked
 18998  002520  6FD7               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 18999                           
 19000                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 19001  002522  0E01               	movlw	1
 19002  002524  6FD6               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 19003                           
 19004                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 19005  002526  0E00               	movlw	0
 19006  002528  6FD5               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 19007                           
 19008                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 19009  00252A  0E00               	movlw	0
 19010  00252C  6FD4               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 19011                           
 19012                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 19013  00252E  0E00               	movlw	0
 19014  002530  6FD9               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 19015                           
 19016                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 19017  002532  0E00               	movlw	0
 19018  002534  6E09               	movwf	i2USBDeviceInit@i,c
 19019  002536                     i2l9799:
 19020                           
 19021                           ; BSR set to: 1
 19022  002536  0E02               	movlw	2
 19023  002538  6409               	cpfsgt	i2USBDeviceInit@i,c
 19024  00253A  D001               	goto	i2l430
 19025  00253C  D02E               	goto	i2u902_40
 19026  00253E                     i2l430:
 19027                           
 19028                           ;usb_device.c: 346: {
 19029                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 19030                           
 19031                           ; BSR set to: 1
 19032  00253E  5009               	movf	i2USBDeviceInit@i,w,c
 19033  002540  0D02               	mullw	2
 19034  002542  0E40               	movlw	low _pBDTEntryIn
 19035  002544  24F3               	addwf	prodl,w,c
 19036  002546  6ED9               	movwf	fsr2l,c
 19037  002548  0E00               	movlw	high _pBDTEntryIn
 19038  00254A  20F4               	addwfc	prodh,w,c
 19039  00254C  6EDA               	movwf	fsr2h,c
 19040  00254E  0E00               	movlw	0
 19041  002550  6EDE               	movwf	postinc2,c
 19042  002552  0E00               	movlw	0
 19043  002554  6EDD               	movwf	postdec2,c
 19044                           
 19045                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 19046  002556  5009               	movf	i2USBDeviceInit@i,w,c
 19047  002558  0D02               	mullw	2
 19048  00255A  0E8C               	movlw	low _pBDTEntryOut
 19049  00255C  24F3               	addwf	prodl,w,c
 19050  00255E  6ED9               	movwf	fsr2l,c
 19051  002560  0E01               	movlw	high _pBDTEntryOut
 19052  002562  20F4               	addwfc	prodh,w,c
 19053  002564  6EDA               	movwf	fsr2h,c
 19054  002566  0E00               	movlw	0
 19055  002568  6EDE               	movwf	postinc2,c
 19056  00256A  0E00               	movlw	0
 19057  00256C  6EDD               	movwf	postdec2,c
 19058                           
 19059                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 19060  00256E  5009               	movf	i2USBDeviceInit@i,w,c
 19061  002570  0D01               	mullw	1
 19062  002572  0EBB               	movlw	low _ep_data_in
 19063  002574  24F3               	addwf	prodl,w,c
 19064  002576  6ED9               	movwf	fsr2l,c
 19065  002578  0E01               	movlw	high _ep_data_in
 19066  00257A  20F4               	addwfc	prodh,w,c
 19067  00257C  6EDA               	movwf	fsr2h,c
 19068  00257E  0E00               	movlw	0
 19069  002580  6EDF               	movwf	indf2,c
 19070                           
 19071                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 19072  002582  5009               	movf	i2USBDeviceInit@i,w,c
 19073  002584  0D01               	mullw	1
 19074  002586  0EB8               	movlw	low _ep_data_out
 19075  002588  24F3               	addwf	prodl,w,c
 19076  00258A  6ED9               	movwf	fsr2l,c
 19077  00258C  0E01               	movlw	high _ep_data_out
 19078  00258E  20F4               	addwfc	prodh,w,c
 19079  002590  6EDA               	movwf	fsr2h,c
 19080  002592  0E00               	movlw	0
 19081  002594  6EDF               	movwf	indf2,c
 19082  002596  2A09               	incf	i2USBDeviceInit@i,f,c
 19083  002598  D7CE               	goto	i2l9799
 19084  00259A                     i2u902_40:
 19085                           
 19086                           ;usb_device.c: 351: }
 19087                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 19088  00259A  0E08               	movlw	8
 19089  00259C  6E40               	movwf	_pBDTEntryIn,c
 19090  00259E  0E04               	movlw	4
 19091  0025A0  6E41               	movwf	_pBDTEntryIn+1,c
 19092                           
 19093                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 19094  0025A2  0E16               	movlw	22
 19095  0025A4  6E70               	movwf	3952,c	;volatile
 19096                           
 19097                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 19098  0025A6  0E04               	movlw	4
 19099  0025A8  0104               	movlb	4	; () banked
 19100  0025AA  6F03               	movwf	3,b	;volatile
 19101  0025AC  0E30               	movlw	48
 19102  0025AE  6F02               	movwf	2,b	;volatile
 19103                           
 19104                           ; BSR set to: 4
 19105                           ;usb_device.c: 359: BDT[0].CNT = 8;
 19106  0025B0  0E08               	movlw	8
 19107  0025B2  6F01               	movwf	1,b	;volatile
 19108                           
 19109                           ; BSR set to: 4
 19110                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 19111  0025B4  0E04               	movlw	4
 19112  0025B6  6F00               	movwf	0,b	;volatile
 19113                           
 19114                           ; BSR set to: 4
 19115                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 19116  0025B8  8F00               	bsf	0,7,b	;volatile
 19117                           
 19118                           ; BSR set to: 4
 19119                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 19120  0025BA  0E00               	movlw	0
 19121  0025BC  6E5E               	movwf	_USBActiveConfiguration,c	;volatile
 19122                           
 19123                           ; BSR set to: 4
 19124                           ;usb_device.c: 366: USB1msTickCount = 0;
 19125  0025BE  0E00               	movlw	0
 19126  0025C0  0101               	movlb	1	; () banked
 19127  0025C2  6F92               	movwf	_USB1msTickCount& (0+255),b	;volatile
 19128  0025C4  0E00               	movlw	0
 19129  0025C6  6F93               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 19130  0025C8  0E00               	movlw	0
 19131  0025CA  6F94               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 19132  0025CC  0E00               	movlw	0
 19133  0025CE  6F95               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 19134                           
 19135                           ; BSR set to: 1
 19136                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 19137  0025D0  0E00               	movlw	0
 19138  0025D2  6FD3               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 19139                           
 19140                           ; BSR set to: 1
 19141                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 19142  0025D4  0E00               	movlw	0
 19143  0025D6  6E58               	movwf	_USBDeviceState,c	;volatile
 19144                           
 19145                           ; BSR set to: 1
 19146  0025D8  0012               	return		;funcret
 19147  0025DA                     __end_ofi2_USBDeviceInit:
 19148                           	opt stack 0
 19149                           pclatu	equ	0xFFB
 19150                           pclath	equ	0xFFA
 19151                           tblptru	equ	0xFF8
 19152                           tblptrh	equ	0xFF7
 19153                           tblptrl	equ	0xFF6
 19154                           tablat	equ	0xFF5
 19155                           prodh	equ	0xFF4
 19156                           prodl	equ	0xFF3
 19157                           intcon	equ	0xFF2
 19158                           indf0	equ	0xFEF
 19159                           postinc0	equ	0xFEE
 19160                           fsr0h	equ	0xFEA
 19161                           fsr0l	equ	0xFE9
 19162                           wreg	equ	0xFE8
 19163                           indf1	equ	0xFE7
 19164                           postdec1	equ	0xFE5
 19165                           fsr1h	equ	0xFE2
 19166                           fsr1l	equ	0xFE1
 19167                           indf2	equ	0xFDF
 19168                           postinc2	equ	0xFDE
 19169                           postdec2	equ	0xFDD
 19170                           plusw2	equ	0xFDB
 19171                           fsr2h	equ	0xFDA
 19172                           fsr2l	equ	0xFD9
 19173                           status	equ	0xFD8
 19174                           
 19175 ;; *************** function _USBWakeFromSuspend *****************
 19176 ;; Defined at:
 19177 ;;		line 2303 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 19178 ;; Parameters:    Size  Location     Type
 19179 ;;		None
 19180 ;; Auto vars:     Size  Location     Type
 19181 ;;		None
 19182 ;; Return value:  Size  Location     Type
 19183 ;;                  1    wreg      void 
 19184 ;; Registers used:
 19185 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19186 ;; Tracked objects:
 19187 ;;		On entry : 0/0
 19188 ;;		On exit  : 0/0
 19189 ;;		Unchanged: 0/0
 19190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19191 ;;      Params:         0       0       0       0       0       0       0       0       0
 19192 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19193 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19194 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19195 ;;Total ram usage:        0 bytes
 19196 ;; Hardware stack levels used:    1
 19197 ;; Hardware stack levels required when called:    4
 19198 ;; This function calls:
 19199 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 19200 ;; This function is called by:
 19201 ;;		_USBDeviceTasks
 19202 ;; This function uses a non-reentrant model
 19203 ;;
 19204                           
 19205                           	psect	text73
 19206  004F00                     __ptext73:
 19207                           	opt stack 0
 19208  004F00                     _USBWakeFromSuspend:
 19209                           	opt stack 19
 19210                           
 19211                           ;usb_device.c: 2305: USBBusIsSuspended = 0;
 19212                           
 19213                           ; BSR set to: 1
 19214                           ;incstack = 0
 19215  004F00  0E00               	movlw	0
 19216  004F02  0101               	movlb	1	; () banked
 19217  004F04  6FD9               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 19218                           
 19219                           ; BSR set to: 1
 19220                           ;usb_device.c: 2311: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 19221  004F06  0E00               	movlw	0
 19222  004F08  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 19223  004F0A  0E74               	movlw	116
 19224  004F0C  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 19225  004F0E  0E00               	movlw	0
 19226  004F10  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 19227  004F12  0E00               	movlw	0
 19228  004F14  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 19229  004F16  0E00               	movlw	0
 19230  004F18  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 19231  004F1A  0E00               	movlw	0
 19232  004F1C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 19233  004F1E  EC69  F024         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 19234                           
 19235                           ;usb_device.c: 2318: UCONbits.SUSPND = 0;
 19236  004F22  926D               	bcf	3949,1,c	;volatile
 19237                           
 19238                           ;usb_device.c: 2323: UIEbits.ACTVIE = 0;
 19239  004F24  9469               	bcf	3945,2,c	;volatile
 19240                           
 19241                           ;usb_device.c: 2341: while(UIRbits.ACTVIF)
 19242  004F26  D001               	goto	i2l596
 19243  004F28                     
 19244                           ;usb_device.c: 2343: {
 19245                           ;usb_device.c: 2344: (UIR &= 0xFB);
 19246  004F28  9468               	bcf	3944,2,c	;volatile
 19247  004F2A                     i2l596:
 19248  004F2A  B468               	btfsc	3944,2,c	;volatile
 19249  004F2C  D7FD               	goto	i2l597
 19250                           
 19251                           ;usb_device.c: 2345: }
 19252                           ;usb_device.c: 2347: USBTicksSinceSuspendEnd = 0;
 19253  004F2E  0E00               	movlw	0
 19254  004F30  0101               	movlb	1	; () banked
 19255  004F32  6FD3               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 19256                           
 19257                           ; BSR set to: 1
 19258  004F34  0012               	return		;funcret
 19259  004F36                     __end_of_USBWakeFromSuspend:
 19260                           	opt stack 0
 19261                           pclatu	equ	0xFFB
 19262                           pclath	equ	0xFFA
 19263                           tblptru	equ	0xFF8
 19264                           tblptrh	equ	0xFF7
 19265                           tblptrl	equ	0xFF6
 19266                           tablat	equ	0xFF5
 19267                           prodh	equ	0xFF4
 19268                           prodl	equ	0xFF3
 19269                           intcon	equ	0xFF2
 19270                           indf0	equ	0xFEF
 19271                           postinc0	equ	0xFEE
 19272                           fsr0h	equ	0xFEA
 19273                           fsr0l	equ	0xFE9
 19274                           wreg	equ	0xFE8
 19275                           indf1	equ	0xFE7
 19276                           postdec1	equ	0xFE5
 19277                           fsr1h	equ	0xFE2
 19278                           fsr1l	equ	0xFE1
 19279                           indf2	equ	0xFDF
 19280                           postinc2	equ	0xFDE
 19281                           postdec2	equ	0xFDD
 19282                           plusw2	equ	0xFDB
 19283                           fsr2h	equ	0xFDA
 19284                           fsr2l	equ	0xFD9
 19285                           status	equ	0xFD8
 19286                           
 19287 ;; *************** function _USBSuspend *****************
 19288 ;; Defined at:
 19289 ;;		line 2245 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 19290 ;; Parameters:    Size  Location     Type
 19291 ;;		None
 19292 ;; Auto vars:     Size  Location     Type
 19293 ;;		None
 19294 ;; Return value:  Size  Location     Type
 19295 ;;                  1    wreg      void 
 19296 ;; Registers used:
 19297 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19298 ;; Tracked objects:
 19299 ;;		On entry : 0/0
 19300 ;;		On exit  : 0/0
 19301 ;;		Unchanged: 0/0
 19302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19303 ;;      Params:         0       0       0       0       0       0       0       0       0
 19304 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19305 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19306 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19307 ;;Total ram usage:        0 bytes
 19308 ;; Hardware stack levels used:    1
 19309 ;; Hardware stack levels required when called:    4
 19310 ;; This function calls:
 19311 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 19312 ;; This function is called by:
 19313 ;;		_USBDeviceTasks
 19314 ;; This function uses a non-reentrant model
 19315 ;;
 19316                           
 19317                           	psect	text74
 19318  005058                     __ptext74:
 19319                           	opt stack 0
 19320  005058                     _USBSuspend:
 19321                           	opt stack 19
 19322                           
 19323                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
 19324                           
 19325                           ; BSR set to: 1
 19326                           ;incstack = 0
 19327  005058  8469               	bsf	3945,2,c	;volatile
 19328                           
 19329                           ;usb_device.c: 2271: (UIR &= 0xEF);
 19330  00505A  9868               	bcf	3944,4,c	;volatile
 19331                           
 19332                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
 19333  00505C  826D               	bsf	3949,1,c	;volatile
 19334                           
 19335                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
 19336  00505E  0E01               	movlw	1
 19337  005060  0101               	movlb	1	; () banked
 19338  005062  6FD9               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 19339                           
 19340                           ; BSR set to: 1
 19341                           ;usb_device.c: 2278: USBTicksSinceSuspendEnd = 0;
 19342  005064  0E00               	movlw	0
 19343  005066  6FD3               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 19344                           
 19345                           ; BSR set to: 1
 19346                           ;usb_device.c: 2285: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 19347  005068  0E00               	movlw	0
 19348  00506A  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 19349  00506C  0E75               	movlw	117
 19350  00506E  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 19351  005070  0E00               	movlw	0
 19352  005072  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 19353  005074  0E00               	movlw	0
 19354  005076  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 19355  005078  0E00               	movlw	0
 19356  00507A  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 19357  00507C  0E00               	movlw	0
 19358  00507E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 19359  005080  EC69  F024         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 19360  005084  0012               	return		;funcret
 19361  005086                     __end_of_USBSuspend:
 19362                           	opt stack 0
 19363                           pclatu	equ	0xFFB
 19364                           pclath	equ	0xFFA
 19365                           tblptru	equ	0xFF8
 19366                           tblptrh	equ	0xFF7
 19367                           tblptrl	equ	0xFF6
 19368                           tablat	equ	0xFF5
 19369                           prodh	equ	0xFF4
 19370                           prodl	equ	0xFF3
 19371                           intcon	equ	0xFF2
 19372                           indf0	equ	0xFEF
 19373                           postinc0	equ	0xFEE
 19374                           fsr0h	equ	0xFEA
 19375                           fsr0l	equ	0xFE9
 19376                           wreg	equ	0xFE8
 19377                           indf1	equ	0xFE7
 19378                           postdec1	equ	0xFE5
 19379                           fsr1h	equ	0xFE2
 19380                           fsr1l	equ	0xFE1
 19381                           indf2	equ	0xFDF
 19382                           postinc2	equ	0xFDE
 19383                           postdec2	equ	0xFDD
 19384                           plusw2	equ	0xFDB
 19385                           fsr2h	equ	0xFDA
 19386                           fsr2l	equ	0xFD9
 19387                           status	equ	0xFD8
 19388                           
 19389 ;; *************** function _USBStallHandler *****************
 19390 ;; Defined at:
 19391 ;;		line 2202 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 19392 ;; Parameters:    Size  Location     Type
 19393 ;;		None
 19394 ;; Auto vars:     Size  Location     Type
 19395 ;;		None
 19396 ;; Return value:  Size  Location     Type
 19397 ;;                  1    wreg      void 
 19398 ;; Registers used:
 19399 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19400 ;; Tracked objects:
 19401 ;;		On entry : 0/0
 19402 ;;		On exit  : 0/0
 19403 ;;		Unchanged: 0/0
 19404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19405 ;;      Params:         0       0       0       0       0       0       0       0       0
 19406 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19407 ;;      Temps:          1       0       0       0       0       0       0       0       0
 19408 ;;      Totals:         1       0       0       0       0       0       0       0       0
 19409 ;;Total ram usage:        1 bytes
 19410 ;; Hardware stack levels used:    1
 19411 ;; This function calls:
 19412 ;;		Nothing
 19413 ;; This function is called by:
 19414 ;;		_USBDeviceTasks
 19415 ;; This function uses a non-reentrant model
 19416 ;;
 19417                           
 19418                           	psect	text75
 19419  004D0E                     __ptext75:
 19420                           	opt stack 0
 19421  004D0E                     _USBStallHandler:
 19422                           	opt stack 23
 19423                           
 19424                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
 19425                           
 19426                           ;incstack = 0
 19427  004D0E  A070               	btfss	3952,0,c	;volatile
 19428  004D10  D01D               	goto	i2l588
 19429                           
 19430                           ;usb_device.c: 2215: {
 19431                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 19432  004D12  C04E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19433  004D16  C04F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19434  004D1A  0E80               	movlw	128
 19435  004D1C  18DE               	xorwf	postinc2,w,c
 19436  004D1E  A4D8               	btfss	status,2,c
 19437  004D20  D014               	goto	i2l589
 19438  004D22  C040  FFD9         	movff	_pBDTEntryIn,fsr2l
 19439  004D26  C041  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19440  004D2A  0E84               	movlw	132
 19441  004D2C  18DE               	xorwf	postinc2,w,c
 19442  004D2E  A4D8               	btfss	status,2,c
 19443  004D30  D00C               	goto	i2l589
 19444                           
 19445                           ;usb_device.c: 2218: {
 19446                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 19447  004D32  C04E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19448  004D36  C04F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19449  004D3A  0E0C               	movlw	12
 19450  004D3C  6EDF               	movwf	indf2,c
 19451                           
 19452                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 19453  004D3E  C04E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19454  004D42  C04F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19455  004D46  0E00               	movlw	0
 19456  004D48  8EDB               	bsf	plusw2,7,c
 19457  004D4A                     i2l589:
 19458                           
 19459                           ;usb_device.c: 2222: }
 19460                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
 19461  004D4A  9070               	bcf	3952,0,c	;volatile
 19462  004D4C                     i2l588:
 19463                           
 19464                           ;usb_device.c: 2224: }
 19465                           ;usb_device.c: 2226: (UIR &= 0xDF);
 19466  004D4C  9A68               	bcf	3944,5,c	;volatile
 19467  004D4E  0012               	return		;funcret
 19468  004D50                     __end_of_USBStallHandler:
 19469                           	opt stack 0
 19470                           pclatu	equ	0xFFB
 19471                           pclath	equ	0xFFA
 19472                           tblptru	equ	0xFF8
 19473                           tblptrh	equ	0xFF7
 19474                           tblptrl	equ	0xFF6
 19475                           tablat	equ	0xFF5
 19476                           prodh	equ	0xFF4
 19477                           prodl	equ	0xFF3
 19478                           intcon	equ	0xFF2
 19479                           indf0	equ	0xFEF
 19480                           postinc0	equ	0xFEE
 19481                           fsr0h	equ	0xFEA
 19482                           fsr0l	equ	0xFE9
 19483                           wreg	equ	0xFE8
 19484                           indf1	equ	0xFE7
 19485                           postdec1	equ	0xFE5
 19486                           fsr1h	equ	0xFE2
 19487                           fsr1l	equ	0xFE1
 19488                           indf2	equ	0xFDF
 19489                           postinc2	equ	0xFDE
 19490                           postdec2	equ	0xFDD
 19491                           plusw2	equ	0xFDB
 19492                           fsr2h	equ	0xFDA
 19493                           fsr2l	equ	0xFD9
 19494                           status	equ	0xFD8
 19495                           
 19496 ;; *************** function _USBIncrement1msInternalTimers *****************
 19497 ;; Defined at:
 19498 ;;		line 3025 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 19499 ;; Parameters:    Size  Location     Type
 19500 ;;		None
 19501 ;; Auto vars:     Size  Location     Type
 19502 ;;		None
 19503 ;; Return value:  Size  Location     Type
 19504 ;;                  1    wreg      void 
 19505 ;; Registers used:
 19506 ;;		wreg, status,2, status,0
 19507 ;; Tracked objects:
 19508 ;;		On entry : 0/0
 19509 ;;		On exit  : 0/0
 19510 ;;		Unchanged: 0/0
 19511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19512 ;;      Params:         0       0       0       0       0       0       0       0       0
 19513 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19514 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19515 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19516 ;;Total ram usage:        0 bytes
 19517 ;; Hardware stack levels used:    1
 19518 ;; This function calls:
 19519 ;;		Nothing
 19520 ;; This function is called by:
 19521 ;;		_USBDeviceTasks
 19522 ;; This function uses a non-reentrant model
 19523 ;;
 19524                           
 19525                           	psect	text76
 19526  00516E                     __ptext76:
 19527                           	opt stack 0
 19528  00516E                     _USBIncrement1msInternalTimers:
 19529                           	opt stack 23
 19530                           
 19531                           ;usb_device.c: 3033: USB1msTickCount++;
 19532                           
 19533                           ;incstack = 0
 19534  00516E  0E01               	movlw	1
 19535  005170  0101               	movlb	1	; () banked
 19536  005172  2792               	addwf	_USB1msTickCount& (0+255),f,b	;volatile
 19537  005174  0E00               	movlw	0
 19538  005176  2393               	addwfc	(_USB1msTickCount+1)& (0+255),f,b	;volatile
 19539  005178  2394               	addwfc	(_USB1msTickCount+2)& (0+255),f,b	;volatile
 19540  00517A  2395               	addwfc	(_USB1msTickCount+3)& (0+255),f,b	;volatile
 19541                           
 19542                           ; BSR set to: 1
 19543                           ;usb_device.c: 3034: if(USBBusIsSuspended == 0)
 19544  00517C  51D9               	movf	_USBBusIsSuspended& (0+255),w,b	;volatile
 19545  00517E  A4D8               	btfss	status,2,c
 19546  005180  0012               	return	
 19547                           
 19548                           ; BSR set to: 1
 19549                           ;usb_device.c: 3035: {
 19550                           ;usb_device.c: 3036: USBTicksSinceSuspendEnd++;
 19551  005182  2BD3               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b	;volatile
 19552                           
 19553                           ; BSR set to: 1
 19554                           ;usb_device.c: 3038: if(USBTicksSinceSuspendEnd == 0)
 19555  005184  51D3               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b	;volatile
 19556  005186  A4D8               	btfss	status,2,c
 19557  005188  0012               	return	
 19558                           
 19559                           ; BSR set to: 1
 19560                           ;usb_device.c: 3039: {
 19561                           ;usb_device.c: 3040: USBTicksSinceSuspendEnd = 255;
 19562  00518A  69D3               	setf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 19563                           
 19564                           ; BSR set to: 1
 19565  00518C  0012               	return	
 19566  00518E                     __end_of_USBIncrement1msInternalTimers:
 19567                           	opt stack 0
 19568                           pclatu	equ	0xFFB
 19569                           pclath	equ	0xFFA
 19570                           tblptru	equ	0xFF8
 19571                           tblptrh	equ	0xFF7
 19572                           tblptrl	equ	0xFF6
 19573                           tablat	equ	0xFF5
 19574                           prodh	equ	0xFF4
 19575                           prodl	equ	0xFF3
 19576                           intcon	equ	0xFF2
 19577                           indf0	equ	0xFEF
 19578                           postinc0	equ	0xFEE
 19579                           fsr0h	equ	0xFEA
 19580                           fsr0l	equ	0xFE9
 19581                           wreg	equ	0xFE8
 19582                           indf1	equ	0xFE7
 19583                           postdec1	equ	0xFE5
 19584                           fsr1h	equ	0xFE2
 19585                           fsr1l	equ	0xFE1
 19586                           indf2	equ	0xFDF
 19587                           postinc2	equ	0xFDE
 19588                           postdec2	equ	0xFDD
 19589                           plusw2	equ	0xFDB
 19590                           fsr2h	equ	0xFDA
 19591                           fsr2l	equ	0xFD9
 19592                           status	equ	0xFD8
 19593                           
 19594 ;; *************** function _USBCtrlEPService *****************
 19595 ;; Defined at:
 19596 ;;		line 2372 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 19597 ;; Parameters:    Size  Location     Type
 19598 ;;		None
 19599 ;; Auto vars:     Size  Location     Type
 19600 ;;		None
 19601 ;; Return value:  Size  Location     Type
 19602 ;;                  1    wreg      void 
 19603 ;; Registers used:
 19604 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19605 ;; Tracked objects:
 19606 ;;		On entry : 0/0
 19607 ;;		On exit  : 0/0
 19608 ;;		Unchanged: 0/0
 19609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19610 ;;      Params:         0       0       0       0       0       0       0       0       0
 19611 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19612 ;;      Temps:          1       0       0       0       0       0       0       0       0
 19613 ;;      Totals:         1       0       0       0       0       0       0       0       0
 19614 ;;Total ram usage:        1 bytes
 19615 ;; Hardware stack levels used:    1
 19616 ;; Hardware stack levels required when called:    7
 19617 ;; This function calls:
 19618 ;;		_USBCtrlTrfInHandler
 19619 ;;		_USBCtrlTrfOutHandler
 19620 ;;		_USBCtrlTrfSetupHandler
 19621 ;;		_memcpy
 19622 ;; This function is called by:
 19623 ;;		_USBDeviceTasks
 19624 ;; This function uses a non-reentrant model
 19625 ;;
 19626                           
 19627                           	psect	text77
 19628  00401A                     __ptext77:
 19629                           	opt stack 0
 19630  00401A                     _USBCtrlEPService:
 19631                           	opt stack 16
 19632                           
 19633                           ;usb_device.c: 2378: USBStatusStageTimeoutCounter = (uint8_t)45;
 19634                           
 19635                           ; BSR set to: 1
 19636                           ;incstack = 0
 19637  00401A  0E2D               	movlw	45
 19638  00401C  6E54               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 19639                           
 19640                           ;usb_device.c: 2382: if((USTATcopy.Val & ~0x02) == 0x00)
 19641  00401E  C05D  F01B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 19642  004022  0EFD               	movlw	253
 19643  004024  161B               	andwf	??_USBCtrlEPService,f,c
 19644  004026  A4D8               	btfss	status,2,c
 19645  004028  D03B               	goto	i2l602
 19646                           
 19647                           ;usb_device.c: 2383: {
 19648                           ;usb_device.c: 2386: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 19649  00402A  C05D  F01B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 19650  00402E  90D8               	bcf	status,0,c
 19651  004030  321B               	rrcf	??_USBCtrlEPService,f,c
 19652  004032  0E3F               	movlw	63
 19653  004034  161B               	andwf	??_USBCtrlEPService,f,c
 19654  004036  501B               	movf	??_USBCtrlEPService,w,c
 19655  004038  0D04               	mullw	4
 19656  00403A  0E00               	movlw	0
 19657  00403C  24F3               	addwf	prodl,w,c
 19658  00403E  6E4E               	movwf	_pBDTEntryEP0OutCurrent,c
 19659  004040  0E04               	movlw	4
 19660  004042  20F4               	addwfc	prodh,w,c
 19661  004044  6E4F               	movwf	_pBDTEntryEP0OutCurrent+1,c
 19662                           
 19663                           ;usb_device.c: 2394: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 19664  004046  C04E  F04C         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 19665  00404A  C04F  F04D         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 19666                           
 19667                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 19668  00404E  0E04               	movlw	4
 19669  004050  184C               	xorwf	_pBDTEntryEP0OutNext,w,c
 19670  004052  6E4C               	movwf	_pBDTEntryEP0OutNext,c
 19671  004054  504D               	movf	_pBDTEntryEP0OutNext+1,w,c
 19672  004056  6E4D               	movwf	_pBDTEntryEP0OutNext+1,c
 19673                           
 19674                           ;usb_device.c: 2399: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 19675  004058  C04E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19676  00405C  C04F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19677  004060  30DF               	rrcf	indf2,w,c
 19678  004062  32E8               	rrcf	wreg,f,c
 19679  004064  0B0F               	andlw	15
 19680  004066  0A0D               	xorlw	13
 19681  004068  A4D8               	btfss	status,2,c
 19682  00406A  D017               	goto	i2l603
 19683                           
 19684                           ;usb_device.c: 2400: {
 19685                           ;usb_device.c: 2405: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
 19686  00406C  0E30               	movlw	48
 19687  00406E  6E01               	movwf	memcpy@d1,c
 19688  004070  0E04               	movlw	4
 19689  004072  6E02               	movwf	memcpy@d1+1,c
 19690  004074  EE20 F002          	lfsr	2,2
 19691  004078  504E               	movf	_pBDTEntryEP0OutCurrent,w,c
 19692  00407A  26D9               	addwf	fsr2l,f,c
 19693  00407C  504F               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 19694  00407E  22DA               	addwfc	fsr2h,f,c
 19695  004080  CFDE F003          	movff	postinc2,memcpy@s1
 19696  004084  CFDD F004          	movff	postdec2,memcpy@s1+1
 19697  004088  0E00               	movlw	0
 19698  00408A  6E06               	movwf	memcpy@n+1,c
 19699  00408C  0E08               	movlw	8
 19700  00408E  6E05               	movwf	memcpy@n,c
 19701  004090  EC23  F026         	call	_memcpy	;wreg free
 19702                           
 19703                           ;usb_device.c: 2408: USBCtrlTrfSetupHandler();
 19704  004094  ECEB  F020         	call	_USBCtrlTrfSetupHandler	;wreg free
 19705                           
 19706                           ;usb_device.c: 2409: }
 19707  004098  0012               	return	
 19708  00409A                     i2l603:
 19709                           
 19710                           ;usb_device.c: 2410: else
 19711                           ;usb_device.c: 2411: {
 19712                           ;usb_device.c: 2413: USBCtrlTrfOutHandler();
 19713  00409A  EC0C  F024         	call	_USBCtrlTrfOutHandler	;wreg free
 19714                           
 19715                           ;usb_device.c: 2414: }
 19716                           ;usb_device.c: 2415: }
 19717  00409E  0012               	return	
 19718  0040A0                     i2l602:
 19719                           
 19720                           ;usb_device.c: 2416: else if((USTATcopy.Val & ~0x02) == 0x04)
 19721  0040A0  505D               	movf	_USTATcopy,w,c	;volatile
 19722  0040A2  0BFD               	andlw	253
 19723  0040A4  0A04               	xorlw	4
 19724  0040A6  A4D8               	btfss	status,2,c
 19725  0040A8  0012               	return	
 19726                           
 19727                           ;usb_device.c: 2417: {
 19728                           ;usb_device.c: 2420: USBCtrlTrfInHandler();
 19729  0040AA  ECB7  F01D         	call	_USBCtrlTrfInHandler	;wreg free
 19730  0040AE  0012               	return	
 19731  0040B0                     __end_of_USBCtrlEPService:
 19732                           	opt stack 0
 19733                           pclatu	equ	0xFFB
 19734                           pclath	equ	0xFFA
 19735                           tblptru	equ	0xFF8
 19736                           tblptrh	equ	0xFF7
 19737                           tblptrl	equ	0xFF6
 19738                           tablat	equ	0xFF5
 19739                           prodh	equ	0xFF4
 19740                           prodl	equ	0xFF3
 19741                           intcon	equ	0xFF2
 19742                           indf0	equ	0xFEF
 19743                           postinc0	equ	0xFEE
 19744                           fsr0h	equ	0xFEA
 19745                           fsr0l	equ	0xFE9
 19746                           wreg	equ	0xFE8
 19747                           indf1	equ	0xFE7
 19748                           postdec1	equ	0xFE5
 19749                           fsr1h	equ	0xFE2
 19750                           fsr1l	equ	0xFE1
 19751                           indf2	equ	0xFDF
 19752                           postinc2	equ	0xFDE
 19753                           postdec2	equ	0xFDD
 19754                           plusw2	equ	0xFDB
 19755                           fsr2h	equ	0xFDA
 19756                           fsr2l	equ	0xFD9
 19757                           status	equ	0xFD8
 19758                           
 19759 ;; *************** function _memcpy *****************
 19760 ;; Defined at:
 19761 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\memcpy.c"
 19762 ;; Parameters:    Size  Location     Type
 19763 ;;  d1              2    0[COMRAM] PTR void 
 19764 ;;		 -> receivePacket(100), response(100), SetupPkt(8), 
 19765 ;;  s1              2    2[COMRAM] PTR const void 
 19766 ;;		 -> recebeByte@frameData(100), CtrlTrfData(8), RAM(2047), SetupPkt(8), 
 19767 ;;  n               2    4[COMRAM] unsigned int 
 19768 ;; Auto vars:     Size  Location     Type
 19769 ;;  s               2    8[COMRAM] PTR const unsigned char 
 19770 ;;		 -> recebeByte@frameData(100), CtrlTrfData(8), RAM(2047), SetupPkt(8), 
 19771 ;;  d               2    6[COMRAM] PTR unsigned char 
 19772 ;;		 -> receivePacket(100), response(100), SetupPkt(8), 
 19773 ;;  tmp             1   10[COMRAM] unsigned char 
 19774 ;; Return value:  Size  Location     Type
 19775 ;;                  2    0[COMRAM] PTR void 
 19776 ;; Registers used:
 19777 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19778 ;; Tracked objects:
 19779 ;;		On entry : 0/0
 19780 ;;		On exit  : 0/0
 19781 ;;		Unchanged: 0/0
 19782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19783 ;;      Params:         6       0       0       0       0       0       0       0       0
 19784 ;;      Locals:         5       0       0       0       0       0       0       0       0
 19785 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19786 ;;      Totals:        11       0       0       0       0       0       0       0       0
 19787 ;;Total ram usage:       11 bytes
 19788 ;; Hardware stack levels used:    1
 19789 ;; This function calls:
 19790 ;;		Nothing
 19791 ;; This function is called by:
 19792 ;;		_USBCtrlEPService
 19793 ;;		_recebeByte
 19794 ;; This function uses a non-reentrant model
 19795 ;;
 19796                           
 19797                           	psect	text78
 19798  004C46                     __ptext78:
 19799                           	opt stack 0
 19800  004C46                     _memcpy:
 19801                           	opt stack 22
 19802                           
 19803                           ;incstack = 0
 19804  004C46  C003  F009         	movff	memcpy@s1,memcpy@s
 19805  004C4A  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
 19806  004C4E  C001  F007         	movff	memcpy@d1,memcpy@d
 19807  004C52  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
 19808  004C56  D010               	goto	i2l3389
 19809  004C58                     i2l8421:
 19810  004C58  C009  FFD9         	movff	memcpy@s,fsr2l
 19811  004C5C  C00A  FFDA         	movff	memcpy@s+1,fsr2h
 19812  004C60  50DF               	movf	indf2,w,c
 19813  004C62  6E0B               	movwf	memcpy@tmp,c
 19814  004C64  4A09               	infsnz	memcpy@s,f,c
 19815  004C66  2A0A               	incf	memcpy@s+1,f,c
 19816  004C68  C007  FFD9         	movff	memcpy@d,fsr2l
 19817  004C6C  C008  FFDA         	movff	memcpy@d+1,fsr2h
 19818  004C70  C00B  FFDF         	movff	memcpy@tmp,indf2
 19819  004C74  4A07               	infsnz	memcpy@d,f,c
 19820  004C76  2A08               	incf	memcpy@d+1,f,c
 19821  004C78                     i2l3389:
 19822  004C78  0605               	decf	memcpy@n,f,c
 19823  004C7A  A0D8               	btfss	status,0,c
 19824  004C7C  0606               	decf	memcpy@n+1,f,c
 19825  004C7E  2805               	incf	memcpy@n,w,c
 19826  004C80  E1EB               	bnz	i2l8421
 19827  004C82  2806               	incf	memcpy@n+1,w,c
 19828  004C84  B4D8               	btfsc	status,2,c
 19829  004C86  0012               	return	
 19830  004C88  D7E7               	goto	i2l3390
 19831  004C8A                     __end_of_memcpy:
 19832                           	opt stack 0
 19833                           pclatu	equ	0xFFB
 19834                           pclath	equ	0xFFA
 19835                           tblptru	equ	0xFF8
 19836                           tblptrh	equ	0xFF7
 19837                           tblptrl	equ	0xFF6
 19838                           tablat	equ	0xFF5
 19839                           prodh	equ	0xFF4
 19840                           prodl	equ	0xFF3
 19841                           intcon	equ	0xFF2
 19842                           indf0	equ	0xFEF
 19843                           postinc0	equ	0xFEE
 19844                           fsr0h	equ	0xFEA
 19845                           fsr0l	equ	0xFE9
 19846                           wreg	equ	0xFE8
 19847                           indf1	equ	0xFE7
 19848                           postdec1	equ	0xFE5
 19849                           fsr1h	equ	0xFE2
 19850                           fsr1l	equ	0xFE1
 19851                           indf2	equ	0xFDF
 19852                           postinc2	equ	0xFDE
 19853                           postdec2	equ	0xFDD
 19854                           plusw2	equ	0xFDB
 19855                           fsr2h	equ	0xFDA
 19856                           fsr2l	equ	0xFD9
 19857                           status	equ	0xFD8
 19858                           
 19859 ;; *************** function _USBCtrlTrfSetupHandler *****************
 19860 ;; Defined at:
 19861 ;;		line 2465 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 19862 ;; Parameters:    Size  Location     Type
 19863 ;;		None
 19864 ;; Auto vars:     Size  Location     Type
 19865 ;;		None
 19866 ;; Return value:  Size  Location     Type
 19867 ;;                  1    wreg      void 
 19868 ;; Registers used:
 19869 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19870 ;; Tracked objects:
 19871 ;;		On entry : 0/0
 19872 ;;		On exit  : 0/0
 19873 ;;		Unchanged: 0/0
 19874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19875 ;;      Params:         0       0       0       0       0       0       0       0       0
 19876 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19877 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19878 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19879 ;;Total ram usage:        0 bytes
 19880 ;; Hardware stack levels used:    1
 19881 ;; Hardware stack levels required when called:    6
 19882 ;; This function calls:
 19883 ;;		_USBCheckStdRequest
 19884 ;;		_USBCtrlEPServiceComplete
 19885 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 19886 ;; This function is called by:
 19887 ;;		_USBCtrlEPService
 19888 ;; This function uses a non-reentrant model
 19889 ;;
 19890                           
 19891                           	psect	text79
 19892  0041D6                     __ptext79:
 19893                           	opt stack 0
 19894  0041D6                     _USBCtrlTrfSetupHandler:
 19895                           	opt stack 16
 19896                           
 19897                           ;usb_device.c: 2470: shortPacketStatus = 0;
 19898                           
 19899                           ;incstack = 0
 19900  0041D6  0E00               	movlw	0
 19901  0041D8  6E57               	movwf	_shortPacketStatus,c	;volatile
 19902                           
 19903                           ;usb_device.c: 2471: USBDeferStatusStagePacket = 0;
 19904  0041DA  0E00               	movlw	0
 19905  0041DC  6E53               	movwf	_USBDeferStatusStagePacket,c	;volatile
 19906                           
 19907                           ;usb_device.c: 2472: USBDeferINDataStagePackets = 0;
 19908  0041DE  0E00               	movlw	0
 19909  0041E0  0101               	movlb	1	; () banked
 19910  0041E2  6FD5               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 19911                           
 19912                           ;usb_device.c: 2473: USBDeferOUTDataStagePackets = 0;
 19913  0041E4  0E00               	movlw	0
 19914  0041E6  6FD4               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 19915                           
 19916                           ;usb_device.c: 2474: BothEP0OutUOWNsSet = 0;
 19917  0041E8  0E00               	movlw	0
 19918  0041EA  6FD8               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 19919                           
 19920                           ;usb_device.c: 2475: controlTransferState = 0;
 19921  0041EC  0E00               	movlw	0
 19922  0041EE  6E56               	movwf	_controlTransferState,c	;volatile
 19923                           
 19924                           ; BSR set to: 1
 19925                           ;usb_device.c: 2484: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 19926  0041F0  C040  FFD9         	movff	_pBDTEntryIn,fsr2l
 19927  0041F4  C041  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19928  0041F8  0E7F               	movlw	127
 19929  0041FA  16DF               	andwf	indf2,f,c
 19930                           
 19931                           ; BSR set to: 1
 19932                           ;usb_device.c: 2486: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 19933  0041FC  0E04               	movlw	4
 19934  0041FE  1840               	xorwf	_pBDTEntryIn,w,c
 19935  004200  6E40               	movwf	_pBDTEntryIn,c
 19936  004202  5041               	movf	_pBDTEntryIn+1,w,c
 19937  004204  6E41               	movwf	_pBDTEntryIn+1,c
 19938                           
 19939                           ; BSR set to: 1
 19940                           ;usb_device.c: 2487: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 19941  004206  C040  FFD9         	movff	_pBDTEntryIn,fsr2l
 19942  00420A  C041  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19943  00420E  0E7F               	movlw	127
 19944  004210  16DF               	andwf	indf2,f,c
 19945                           
 19946                           ; BSR set to: 1
 19947                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 19948  004212  0E04               	movlw	4
 19949  004214  1840               	xorwf	_pBDTEntryIn,w,c
 19950  004216  6E40               	movwf	_pBDTEntryIn,c
 19951  004218  5041               	movf	_pBDTEntryIn+1,w,c
 19952  00421A  6E41               	movwf	_pBDTEntryIn+1,c
 19953                           
 19954                           ; BSR set to: 1
 19955                           ;usb_device.c: 2489: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 19956  00421C  C04C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19957  004220  C04D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19958  004224  0E7F               	movlw	127
 19959  004226  16DF               	andwf	indf2,f,c
 19960                           
 19961                           ; BSR set to: 1
 19962                           ;usb_device.c: 2491: inPipes[0].info.Val = 0;
 19963  004228  0E00               	movlw	0
 19964  00422A  0100               	movlb	0	; () banked
 19965  00422C  6FFC               	movwf	(_inPipes+3)& (0+255),b	;volatile
 19966                           
 19967                           ; BSR set to: 0
 19968                           ;usb_device.c: 2492: inPipes[0].wCount.Val = 0;
 19969  00422E  0E00               	movlw	0
 19970  004230  6FFE               	movwf	(_inPipes+5)& (0+255),b	;volatile
 19971  004232  0E00               	movlw	0
 19972  004234  6FFD               	movwf	(_inPipes+4)& (0+255),b	;volatile
 19973                           
 19974                           ; BSR set to: 0
 19975                           ;usb_device.c: 2493: outPipes[0].info.Val = 0;
 19976  004236  0E00               	movlw	0
 19977  004238  6E3B               	movwf	_outPipes+3,c	;volatile
 19978                           
 19979                           ; BSR set to: 0
 19980                           ;usb_device.c: 2494: outPipes[0].wCount.Val = 0;
 19981  00423A  0E00               	movlw	0
 19982  00423C  6E3D               	movwf	_outPipes+5,c	;volatile
 19983  00423E  0E00               	movlw	0
 19984  004240  6E3C               	movwf	_outPipes+4,c	;volatile
 19985                           
 19986                           ; BSR set to: 0
 19987                           ;usb_device.c: 2500: USBCheckStdRequest();
 19988  004242  ECCB  F01A         	call	_USBCheckStdRequest	;wreg free
 19989                           
 19990                           ;usb_device.c: 2501: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 19991  004246  0E00               	movlw	0
 19992  004248  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 19993  00424A  0E03               	movlw	3
 19994  00424C  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 19995  00424E  0E00               	movlw	0
 19996  004250  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 19997  004252  0E00               	movlw	0
 19998  004254  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 19999  004256  0E00               	movlw	0
 20000  004258  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 20001  00425A  0E00               	movlw	0
 20002  00425C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 20003  00425E  EC69  F024         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 20004                           
 20005                           ;usb_device.c: 2514: USBCtrlEPServiceComplete();
 20006  004262  ECFC  F017         	call	_USBCtrlEPServiceComplete	;wreg free
 20007  004266  0012               	return		;funcret
 20008  004268                     __end_of_USBCtrlTrfSetupHandler:
 20009                           	opt stack 0
 20010                           pclatu	equ	0xFFB
 20011                           pclath	equ	0xFFA
 20012                           tblptru	equ	0xFF8
 20013                           tblptrh	equ	0xFF7
 20014                           tblptrl	equ	0xFF6
 20015                           tablat	equ	0xFF5
 20016                           prodh	equ	0xFF4
 20017                           prodl	equ	0xFF3
 20018                           intcon	equ	0xFF2
 20019                           indf0	equ	0xFEF
 20020                           postinc0	equ	0xFEE
 20021                           fsr0h	equ	0xFEA
 20022                           fsr0l	equ	0xFE9
 20023                           wreg	equ	0xFE8
 20024                           indf1	equ	0xFE7
 20025                           postdec1	equ	0xFE5
 20026                           fsr1h	equ	0xFE2
 20027                           fsr1l	equ	0xFE1
 20028                           indf2	equ	0xFDF
 20029                           postinc2	equ	0xFDE
 20030                           postdec2	equ	0xFDD
 20031                           plusw2	equ	0xFDB
 20032                           fsr2h	equ	0xFDA
 20033                           fsr2l	equ	0xFD9
 20034                           status	equ	0xFD8
 20035                           
 20036 ;; *************** function _USBCtrlEPServiceComplete *****************
 20037 ;; Defined at:
 20038 ;;		line 1616 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 20039 ;; Parameters:    Size  Location     Type
 20040 ;;		None
 20041 ;; Auto vars:     Size  Location     Type
 20042 ;;		None
 20043 ;; Return value:  Size  Location     Type
 20044 ;;                  1    wreg      void 
 20045 ;; Registers used:
 20046 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20047 ;; Tracked objects:
 20048 ;;		On entry : 0/0
 20049 ;;		On exit  : 0/0
 20050 ;;		Unchanged: 0/0
 20051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20052 ;;      Params:         0       0       0       0       0       0       0       0       0
 20053 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20054 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20055 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20056 ;;Total ram usage:        0 bytes
 20057 ;; Hardware stack levels used:    1
 20058 ;; Hardware stack levels required when called:    2
 20059 ;; This function calls:
 20060 ;;		_USBCtrlEPAllowDataStage
 20061 ;;		_USBCtrlEPAllowStatusStage
 20062 ;; This function is called by:
 20063 ;;		_USBCtrlTrfSetupHandler
 20064 ;; This function uses a non-reentrant model
 20065 ;;
 20066                           
 20067                           	psect	text80
 20068  002FF8                     __ptext80:
 20069                           	opt stack 0
 20070  002FF8                     _USBCtrlEPServiceComplete:
 20071                           	opt stack 19
 20072                           
 20073                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
 20074                           
 20075                           ;incstack = 0
 20076  002FF8  986D               	bcf	3949,4,c	;volatile
 20077                           
 20078                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
 20079  002FFA  0100               	movlb	0	; () banked
 20080  002FFC  BFFC               	btfsc	(_inPipes+3)& (0+255),7,b	;volatile
 20081  002FFE  D03A               	goto	i2l512
 20082                           
 20083                           ; BSR set to: 0
 20084                           ;usb_device.c: 1629: {
 20085                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
 20086  003000  AE3B               	btfss	_outPipes+3,7,c	;volatile
 20087  003002  D00D               	goto	i2l513
 20088                           
 20089                           ; BSR set to: 0
 20090                           ;usb_device.c: 1631: {
 20091                           ;usb_device.c: 1632: controlTransferState = 2;
 20092  003004  0E02               	movlw	2
 20093  003006  6E56               	movwf	_controlTransferState,c	;volatile
 20094                           
 20095                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
 20096  003008  0101               	movlb	1	; () banked
 20097  00300A  51D4               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 20098  00300C  B4D8               	btfsc	status,2,c
 20099                           
 20100                           ; BSR set to: 1
 20101                           ;usb_device.c: 1644: {
 20102                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
 20103  00300E  ECBE  F01F         	call	_USBCtrlEPAllowDataStage	;wreg free
 20104                           
 20105                           ;usb_device.c: 1646: }
 20106                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
 20107  003012  0E00               	movlw	0
 20108  003014  0101               	movlb	1	; () banked
 20109  003016  6FD6               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 20110                           
 20111                           ; BSR set to: 1
 20112                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
 20113  003018  0E00               	movlw	0
 20114  00301A  6FD7               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 20115                           
 20116                           ;usb_device.c: 1652: }
 20117  00301C  0012               	return	
 20118  00301E                     i2l513:
 20119                           
 20120                           ;usb_device.c: 1653: else
 20121                           ;usb_device.c: 1654: {
 20122                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
 20123                           
 20124                           ; BSR set to: 1
 20125  00301E  EE20 F001          	lfsr	2,1
 20126  003022  504C               	movf	_pBDTEntryEP0OutNext,w,c
 20127  003024  26D9               	addwf	fsr2l,f,c
 20128  003026  504D               	movf	_pBDTEntryEP0OutNext+1,w,c
 20129  003028  22DA               	addwfc	fsr2h,f,c
 20130  00302A  0E08               	movlw	8
 20131  00302C  6EDF               	movwf	indf2,c
 20132                           
 20133                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 20134  00302E  EE20 F002          	lfsr	2,2
 20135  003032  504C               	movf	_pBDTEntryEP0OutNext,w,c
 20136  003034  26D9               	addwf	fsr2l,f,c
 20137  003036  504D               	movf	_pBDTEntryEP0OutNext+1,w,c
 20138  003038  22DA               	addwfc	fsr2h,f,c
 20139  00303A  0E30               	movlw	48
 20140  00303C  6EDE               	movwf	postinc2,c
 20141  00303E  0E04               	movlw	4
 20142  003040  6EDD               	movwf	postdec2,c
 20143                           
 20144                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 20145  003042  C04C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20146  003046  C04D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20147  00304A  0E0C               	movlw	12
 20148  00304C  6EDF               	movwf	indf2,c
 20149                           
 20150                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 20151  00304E  C04C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20152  003052  C04D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20153  003056  0E00               	movlw	0
 20154  003058  8EDB               	bsf	plusw2,7,c
 20155                           
 20156                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
 20157  00305A  C040  FFD9         	movff	_pBDTEntryIn,fsr2l
 20158  00305E  C041  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20159  003062  0E04               	movlw	4
 20160  003064  6EDF               	movwf	indf2,c
 20161                           
 20162                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
 20163  003066  C040  FFD9         	movff	_pBDTEntryIn,fsr2l
 20164  00306A  C041  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20165  00306E  0E00               	movlw	0
 20166  003070  8EDB               	bsf	plusw2,7,c
 20167                           
 20168                           ;usb_device.c: 1665: }
 20169                           ;usb_device.c: 1666: }
 20170  003072  0012               	return	
 20171  003074                     i2l512:
 20172                           
 20173                           ; BSR set to: 0
 20174                           ;usb_device.c: 1667: else
 20175                           ;usb_device.c: 1668: {
 20176                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
 20177  003074  0104               	movlb	4	; () banked
 20178  003076  AF30               	btfss	48,7,b	;volatile
 20179  003078  D012               	goto	i2l517
 20180                           
 20181                           ; BSR set to: 4
 20182                           ;usb_device.c: 1670: {
 20183                           ;usb_device.c: 1671: controlTransferState = 1;
 20184  00307A  0E01               	movlw	1
 20185  00307C  6E56               	movwf	_controlTransferState,c	;volatile
 20186                           
 20187                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
 20188  00307E  0101               	movlb	1	; () banked
 20189  003080  51D5               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 20190  003082  B4D8               	btfsc	status,2,c
 20191                           
 20192                           ; BSR set to: 1
 20193                           ;usb_device.c: 1686: {
 20194                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
 20195  003084  ECBE  F01F         	call	_USBCtrlEPAllowDataStage	;wreg free
 20196                           
 20197                           ;usb_device.c: 1688: }
 20198                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
 20199  003088  0E00               	movlw	0
 20200  00308A  0101               	movlb	1	; () banked
 20201  00308C  6FD6               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 20202                           
 20203                           ; BSR set to: 1
 20204                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
 20205  00308E  0E00               	movlw	0
 20206  003090  6FD7               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 20207                           
 20208                           ; BSR set to: 1
 20209                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
 20210  003092  5053               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 20211  003094  A4D8               	btfss	status,2,c
 20212  003096  0012               	return	
 20213                           
 20214                           ; BSR set to: 1
 20215                           ;usb_device.c: 1713: {
 20216                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
 20217  003098  EC55  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
 20218                           
 20219                           ;usb_device.c: 1715: }
 20220                           ;usb_device.c: 1716: }
 20221  00309C  0012               	return	
 20222  00309E                     i2l517:
 20223                           
 20224                           ;usb_device.c: 1717: else
 20225                           ;usb_device.c: 1718: {
 20226                           ;usb_device.c: 1729: controlTransferState = 2;
 20227  00309E  0E02               	movlw	2
 20228  0030A0  6E56               	movwf	_controlTransferState,c	;volatile
 20229                           
 20230                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
 20231  0030A2  EE20 F001          	lfsr	2,1
 20232  0030A6  504C               	movf	_pBDTEntryEP0OutNext,w,c
 20233  0030A8  26D9               	addwf	fsr2l,f,c
 20234  0030AA  504D               	movf	_pBDTEntryEP0OutNext+1,w,c
 20235  0030AC  22DA               	addwfc	fsr2h,f,c
 20236  0030AE  0E08               	movlw	8
 20237  0030B0  6EDF               	movwf	indf2,c
 20238                           
 20239                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 20240  0030B2  EE20 F002          	lfsr	2,2
 20241  0030B6  504C               	movf	_pBDTEntryEP0OutNext,w,c
 20242  0030B8  26D9               	addwf	fsr2l,f,c
 20243  0030BA  504D               	movf	_pBDTEntryEP0OutNext+1,w,c
 20244  0030BC  22DA               	addwfc	fsr2h,f,c
 20245  0030BE  0E30               	movlw	48
 20246  0030C0  6EDE               	movwf	postinc2,c
 20247  0030C2  0E04               	movlw	4
 20248  0030C4  6EDD               	movwf	postdec2,c
 20249                           
 20250                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 20251  0030C6  C04C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20252  0030CA  C04D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20253  0030CE  0E04               	movlw	4
 20254  0030D0  6EDF               	movwf	indf2,c
 20255                           
 20256                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 20257  0030D2  C04C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20258  0030D6  C04D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20259  0030DA  0E00               	movlw	0
 20260  0030DC  8EDB               	bsf	plusw2,7,c
 20261                           
 20262                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
 20263  0030DE  0E00               	movlw	0
 20264  0030E0  0101               	movlb	1	; () banked
 20265  0030E2  6FD6               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 20266                           
 20267                           ; BSR set to: 1
 20268                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
 20269  0030E4  0E00               	movlw	0
 20270  0030E6  6FD7               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 20271                           
 20272                           ; BSR set to: 1
 20273                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
 20274  0030E8  5053               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 20275  0030EA  A4D8               	btfss	status,2,c
 20276  0030EC  0012               	return	
 20277                           
 20278                           ; BSR set to: 1
 20279                           ;usb_device.c: 1741: {
 20280                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
 20281  0030EE  EC55  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
 20282  0030F2  0012               	return	
 20283  0030F4                     __end_of_USBCtrlEPServiceComplete:
 20284                           	opt stack 0
 20285                           pclatu	equ	0xFFB
 20286                           pclath	equ	0xFFA
 20287                           tblptru	equ	0xFF8
 20288                           tblptrh	equ	0xFF7
 20289                           tblptrl	equ	0xFF6
 20290                           tablat	equ	0xFF5
 20291                           prodh	equ	0xFF4
 20292                           prodl	equ	0xFF3
 20293                           intcon	equ	0xFF2
 20294                           indf0	equ	0xFEF
 20295                           postinc0	equ	0xFEE
 20296                           fsr0h	equ	0xFEA
 20297                           fsr0l	equ	0xFE9
 20298                           wreg	equ	0xFE8
 20299                           indf1	equ	0xFE7
 20300                           postdec1	equ	0xFE5
 20301                           fsr1h	equ	0xFE2
 20302                           fsr1l	equ	0xFE1
 20303                           indf2	equ	0xFDF
 20304                           postinc2	equ	0xFDE
 20305                           postdec2	equ	0xFDD
 20306                           plusw2	equ	0xFDB
 20307                           fsr2h	equ	0xFDA
 20308                           fsr2l	equ	0xFD9
 20309                           status	equ	0xFD8
 20310                           
 20311 ;; *************** function _USBCtrlEPAllowDataStage *****************
 20312 ;; Defined at:
 20313 ;;		line 1488 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 20314 ;; Parameters:    Size  Location     Type
 20315 ;;		None
 20316 ;; Auto vars:     Size  Location     Type
 20317 ;;		None
 20318 ;; Return value:  Size  Location     Type
 20319 ;;                  1    wreg      void 
 20320 ;; Registers used:
 20321 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20322 ;; Tracked objects:
 20323 ;;		On entry : 0/0
 20324 ;;		On exit  : 0/0
 20325 ;;		Unchanged: 0/0
 20326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20327 ;;      Params:         0       0       0       0       0       0       0       0       0
 20328 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20329 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20330 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20331 ;;Total ram usage:        0 bytes
 20332 ;; Hardware stack levels used:    1
 20333 ;; Hardware stack levels required when called:    1
 20334 ;; This function calls:
 20335 ;;		_USBCtrlTrfTxService
 20336 ;; This function is called by:
 20337 ;;		_USBCtrlEPServiceComplete
 20338 ;; This function uses a non-reentrant model
 20339 ;;
 20340                           
 20341                           	psect	text81
 20342  003F7C                     __ptext81:
 20343                           	opt stack 0
 20344  003F7C                     _USBCtrlEPAllowDataStage:
 20345                           	opt stack 19
 20346                           
 20347                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
 20348                           
 20349                           ;incstack = 0
 20350  003F7C  0E00               	movlw	0
 20351  003F7E  0101               	movlb	1	; () banked
 20352  003F80  6FD5               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 20353                           
 20354                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
 20355  003F82  0E00               	movlw	0
 20356  003F84  6FD4               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 20357                           
 20358                           ; BSR set to: 1
 20359                           ;usb_device.c: 1493: if(controlTransferState == 2)
 20360  003F86  0E02               	movlw	2
 20361  003F88  1856               	xorwf	_controlTransferState,w,c	;volatile
 20362  003F8A  A4D8               	btfss	status,2,c
 20363  003F8C  D01F               	goto	i2l501
 20364                           
 20365                           ; BSR set to: 1
 20366                           ;usb_device.c: 1494: {
 20367                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
 20368  003F8E  EE20 F001          	lfsr	2,1
 20369  003F92  504C               	movf	_pBDTEntryEP0OutNext,w,c
 20370  003F94  26D9               	addwf	fsr2l,f,c
 20371  003F96  504D               	movf	_pBDTEntryEP0OutNext+1,w,c
 20372  003F98  22DA               	addwfc	fsr2h,f,c
 20373  003F9A  0E08               	movlw	8
 20374  003F9C  6EDF               	movwf	indf2,c
 20375                           
 20376                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 20377  003F9E  EE20 F002          	lfsr	2,2
 20378  003FA2  504C               	movf	_pBDTEntryEP0OutNext,w,c
 20379  003FA4  26D9               	addwf	fsr2l,f,c
 20380  003FA6  504D               	movf	_pBDTEntryEP0OutNext+1,w,c
 20381  003FA8  22DA               	addwfc	fsr2h,f,c
 20382  003FAA  0E38               	movlw	56
 20383  003FAC  6EDE               	movwf	postinc2,c
 20384  003FAE  0E04               	movlw	4
 20385  003FB0  6EDD               	movwf	postdec2,c
 20386                           
 20387                           ; BSR set to: 1
 20388                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 20389  003FB2  C04C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20390  003FB6  C04D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20391  003FBA  0E48               	movlw	72
 20392  003FBC  6EDF               	movwf	indf2,c
 20393                           
 20394                           ; BSR set to: 1
 20395                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 20396  003FBE  C04C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20397  003FC2  C04D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20398  003FC6  0E00               	movlw	0
 20399  003FC8  8EDB               	bsf	plusw2,7,c
 20400                           
 20401                           ;usb_device.c: 1500: }
 20402  003FCA  0012               	return	
 20403  003FCC                     i2l501:
 20404                           
 20405                           ; BSR set to: 1
 20406                           ;usb_device.c: 1501: else
 20407                           ;usb_device.c: 1502: {
 20408                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 20409                           
 20410                           ; BSR set to: 1
 20411  003FCC  0100               	movlb	0	; () banked
 20412  003FCE  51FD               	movf	(_inPipes+4)& (0+255),w,b	;volatile
 20413  003FD0  0104               	movlb	4	; () banked
 20414  003FD2  5D36               	subwf	54,w,b	;volatile
 20415  003FD4  0100               	movlb	0	; () banked
 20416  003FD6  51FE               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 20417  003FD8  0104               	movlb	4	; () banked
 20418  003FDA  5937               	subwfb	55,w,b	;volatile
 20419  003FDC  B0D8               	btfsc	status,0,c
 20420  003FDE  D004               	goto	i2l503
 20421                           
 20422                           ; BSR set to: 4
 20423                           ;usb_device.c: 1506: {
 20424                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
 20425  003FE0  C436 F0FD          	movff	1078,_inPipes+4	;volatile
 20426  003FE4  C437 F0FE          	movff	1079,_inPipes+5	;volatile
 20427  003FE8                     i2l503:
 20428                           
 20429                           ; BSR set to: 4
 20430                           ;usb_device.c: 1508: }
 20431                           ;usb_device.c: 1509: USBCtrlTrfTxService();
 20432                           
 20433                           ; BSR set to: 4
 20434  003FE8  EC1B  F01C         	call	_USBCtrlTrfTxService	;wreg free
 20435                           
 20436                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 20437  003FEC  EE20 F002          	lfsr	2,2
 20438  003FF0  5040               	movf	_pBDTEntryIn,w,c
 20439  003FF2  26D9               	addwf	fsr2l,f,c
 20440  003FF4  5041               	movf	_pBDTEntryIn+1,w,c
 20441  003FF6  22DA               	addwfc	fsr2h,f,c
 20442  003FF8  0E38               	movlw	56
 20443  003FFA  6EDE               	movwf	postinc2,c
 20444  003FFC  0E04               	movlw	4
 20445  003FFE  6EDD               	movwf	postdec2,c
 20446                           
 20447                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 20448  004000  C040  FFD9         	movff	_pBDTEntryIn,fsr2l
 20449  004004  C041  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20450  004008  0E48               	movlw	72
 20451  00400A  6EDF               	movwf	indf2,c
 20452                           
 20453                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
 20454  00400C  C040  FFD9         	movff	_pBDTEntryIn,fsr2l
 20455  004010  C041  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20456  004014  0E00               	movlw	0
 20457  004016  8EDB               	bsf	plusw2,7,c
 20458  004018  0012               	return	
 20459  00401A                     __end_of_USBCtrlEPAllowDataStage:
 20460                           	opt stack 0
 20461                           pclatu	equ	0xFFB
 20462                           pclath	equ	0xFFA
 20463                           tblptru	equ	0xFF8
 20464                           tblptrh	equ	0xFF7
 20465                           tblptrl	equ	0xFF6
 20466                           tablat	equ	0xFF5
 20467                           prodh	equ	0xFF4
 20468                           prodl	equ	0xFF3
 20469                           intcon	equ	0xFF2
 20470                           indf0	equ	0xFEF
 20471                           postinc0	equ	0xFEE
 20472                           fsr0h	equ	0xFEA
 20473                           fsr0l	equ	0xFE9
 20474                           wreg	equ	0xFE8
 20475                           indf1	equ	0xFE7
 20476                           postdec1	equ	0xFE5
 20477                           fsr1h	equ	0xFE2
 20478                           fsr1l	equ	0xFE1
 20479                           indf2	equ	0xFDF
 20480                           postinc2	equ	0xFDE
 20481                           postdec2	equ	0xFDD
 20482                           plusw2	equ	0xFDB
 20483                           fsr2h	equ	0xFDA
 20484                           fsr2l	equ	0xFD9
 20485                           status	equ	0xFD8
 20486                           
 20487 ;; *************** function _USBCheckStdRequest *****************
 20488 ;; Defined at:
 20489 ;;		line 2686 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 20490 ;; Parameters:    Size  Location     Type
 20491 ;;		None
 20492 ;; Auto vars:     Size  Location     Type
 20493 ;;		None
 20494 ;; Return value:  Size  Location     Type
 20495 ;;                  1    wreg      void 
 20496 ;; Registers used:
 20497 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20498 ;; Tracked objects:
 20499 ;;		On entry : 0/0
 20500 ;;		On exit  : 0/0
 20501 ;;		Unchanged: 0/0
 20502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20503 ;;      Params:         0       0       0       0       0       0       0       0       0
 20504 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20505 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20506 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20507 ;;Total ram usage:        0 bytes
 20508 ;; Hardware stack levels used:    1
 20509 ;; Hardware stack levels required when called:    5
 20510 ;; This function calls:
 20511 ;;		_USBStdFeatureReqHandler
 20512 ;;		_USBStdGetDscHandler
 20513 ;;		_USBStdGetStatusHandler
 20514 ;;		_USBStdSetCfgHandler
 20515 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20516 ;; This function is called by:
 20517 ;;		_USBCtrlTrfSetupHandler
 20518 ;; This function uses a non-reentrant model
 20519 ;;
 20520                           
 20521                           	psect	text82
 20522  003596                     __ptext82:
 20523                           	opt stack 0
 20524  003596                     _USBCheckStdRequest:
 20525                           	opt stack 16
 20526                           
 20527                           ;usb_device.c: 2688: if(SetupPkt.RequestType != (0x00>>5)) return;
 20528                           
 20529                           ;incstack = 0
 20530  003596  0104               	movlb	4	; () banked
 20531  003598  3930               	swapf	48,w,b	;volatile
 20532  00359A  32E8               	rrcf	wreg,f,c
 20533  00359C  0B03               	andlw	3
 20534  00359E  0900               	iorlw	0
 20535  0035A0  A4D8               	btfss	status,2,c
 20536  0035A2  0012               	return	
 20537  0035A4  D047               	goto	i2l636
 20538  0035A6                     i2l637:
 20539                           
 20540                           ; BSR set to: 4
 20541                           ;usb_device.c: 2693: inPipes[0].info.bits.busy = 1;
 20542  0035A6  0100               	movlb	0	; () banked
 20543  0035A8  8FFC               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 20544                           
 20545                           ; BSR set to: 0
 20546                           ;usb_device.c: 2694: USBDeviceState = ADR_PENDING_STATE;
 20547  0035AA  0E08               	movlw	8
 20548  0035AC  6E58               	movwf	_USBDeviceState,c	;volatile
 20549                           
 20550                           ;usb_device.c: 2696: break;
 20551  0035AE  0012               	return	
 20552  0035B0                     
 20553                           ;usb_device.c: 2698: USBStdGetDscHandler();
 20554                           
 20555                           ; BSR set to: 0
 20556  0035B0  EC1E  F014         	call	_USBStdGetDscHandler	;wreg free
 20557                           
 20558                           ;usb_device.c: 2699: break;
 20559  0035B4  0012               	return	
 20560  0035B6                     
 20561                           ;usb_device.c: 2701: USBStdSetCfgHandler();
 20562  0035B6  ECAC  F01B         	call	_USBStdSetCfgHandler	;wreg free
 20563                           
 20564                           ;usb_device.c: 2702: break;
 20565  0035BA  0012               	return	
 20566  0035BC                     
 20567                           ;usb_device.c: 2704: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 20568  0035BC  0E5E               	movlw	low _USBActiveConfiguration
 20569  0035BE  0100               	movlb	0	; () banked
 20570  0035C0  6FF9               	movwf	_inPipes& (0+255),b	;volatile
 20571  0035C2  0E00               	movlw	high _USBActiveConfiguration
 20572  0035C4  6FFA               	movwf	(_inPipes+1)& (0+255),b	;volatile
 20573                           
 20574                           ; BSR set to: 0
 20575                           ;usb_device.c: 2705: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 20576  0035C6  81FC               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 20577                           
 20578                           ; BSR set to: 0
 20579                           ;usb_device.c: 2706: inPipes[0].wCount.v[0] = 1;
 20580  0035C8  0E01               	movlw	1
 20581  0035CA  6FFD               	movwf	(_inPipes+4)& (0+255),b	;volatile
 20582                           
 20583                           ; BSR set to: 0
 20584                           ;usb_device.c: 2707: inPipes[0].info.bits.busy = 1;
 20585  0035CC  8FFC               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 20586                           
 20587                           ;usb_device.c: 2708: break;
 20588  0035CE  0012               	return	
 20589  0035D0                     
 20590                           ;usb_device.c: 2710: USBStdGetStatusHandler();
 20591                           
 20592                           ; BSR set to: 0
 20593  0035D0  EC19  F01F         	call	_USBStdGetStatusHandler	;wreg free
 20594                           
 20595                           ;usb_device.c: 2711: break;
 20596  0035D4  0012               	return	
 20597  0035D6                     
 20598                           ;usb_device.c: 2713: case 3:
 20599                           ;usb_device.c: 2714: USBStdFeatureReqHandler();
 20600  0035D6  EC69  F00C         	call	_USBStdFeatureReqHandler	;wreg free
 20601                           
 20602                           ;usb_device.c: 2715: break;
 20603  0035DA  0012               	return	
 20604  0035DC                     
 20605                           ;usb_device.c: 2717: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 20606  0035DC  0104               	movlb	4	; () banked
 20607  0035DE  5134               	movf	52,w,b	;volatile
 20608  0035E0  0D01               	mullw	1
 20609  0035E2  0EF8               	movlw	low _USBAlternateInterface
 20610  0035E4  24F3               	addwf	prodl,w,c
 20611  0035E6  0100               	movlb	0	; () banked
 20612  0035E8  6FF9               	movwf	_inPipes& (0+255),b	;volatile
 20613  0035EA  0E01               	movlw	high _USBAlternateInterface
 20614  0035EC  20F4               	addwfc	prodh,w,c
 20615  0035EE  6FFA               	movwf	(_inPipes+1)& (0+255),b	;volatile
 20616                           
 20617                           ; BSR set to: 0
 20618                           ;usb_device.c: 2718: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 20619  0035F0  81FC               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 20620                           
 20621                           ; BSR set to: 0
 20622                           ;usb_device.c: 2719: inPipes[0].wCount.v[0] = 1;
 20623  0035F2  0E01               	movlw	1
 20624  0035F4  6FFD               	movwf	(_inPipes+4)& (0+255),b	;volatile
 20625                           
 20626                           ; BSR set to: 0
 20627                           ;usb_device.c: 2720: inPipes[0].info.bits.busy = 1;
 20628  0035F6  8FFC               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 20629                           
 20630                           ;usb_device.c: 2721: break;
 20631  0035F8  0012               	return	
 20632  0035FA                     i2l646:
 20633                           
 20634                           ; BSR set to: 4
 20635                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
 20636  0035FA  0100               	movlb	0	; () banked
 20637  0035FC  8FFC               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 20638                           
 20639                           ; BSR set to: 0
 20640                           ;usb_device.c: 2724: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 20641  0035FE  0104               	movlb	4	; () banked
 20642  003600  5134               	movf	52,w,b	;volatile
 20643  003602  0D01               	mullw	1
 20644  003604  0EF8               	movlw	low _USBAlternateInterface
 20645  003606  24F3               	addwf	prodl,w,c
 20646  003608  6ED9               	movwf	fsr2l,c
 20647  00360A  0E01               	movlw	high _USBAlternateInterface
 20648  00360C  20F4               	addwfc	prodh,w,c
 20649  00360E  6EDA               	movwf	fsr2h,c
 20650  003610  C432 FFDF          	movff	1074,indf2	;volatile
 20651                           
 20652                           ;usb_device.c: 2725: break;
 20653  003614  0012               	return	
 20654  003616                     
 20655                           ; BSR set to: 4
 20656                           ;usb_device.c: 2727: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 20657                           
 20658                           ; BSR set to: 4
 20659  003616  0E00               	movlw	0
 20660  003618  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 20661  00361A  0E02               	movlw	2
 20662  00361C  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 20663  00361E  0E00               	movlw	0
 20664  003620  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 20665  003622  0E00               	movlw	0
 20666  003624  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 20667  003626  0E00               	movlw	0
 20668  003628  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 20669  00362A  0E00               	movlw	0
 20670  00362C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 20671  00362E  EC69  F024         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 20672                           
 20673                           ;usb_device.c: 2732: }
 20674                           
 20675                           ;usb_device.c: 2731: break;
 20676                           
 20677                           ;usb_device.c: 2730: default:
 20678                           
 20679                           ;usb_device.c: 2729: case 12:
 20680                           
 20681                           ;usb_device.c: 2728: break;
 20682  003632  0012               	return	
 20683  003634                     i2l636:
 20684  003634  0104               	movlb	4	; () banked
 20685  003636  5131               	movf	49,w,b	;volatile
 20686                           
 20687                           ; Switch size 1, requested type "space"
 20688                           ; Number of cases is 11, Range of values is 0 to 12
 20689                           ; switch strategies available:
 20690                           ; Name         Instructions Cycles
 20691                           ; simple_byte           34    18 (average)
 20692                           ;	Chosen strategy is simple_byte
 20693  003638  0A00               	xorlw	0	; case 0
 20694  00363A  B4D8               	btfsc	status,2,c
 20695  00363C  D7C9               	goto	i2l642
 20696  00363E  0A01               	xorlw	1	; case 1
 20697  003640  B4D8               	btfsc	status,2,c
 20698  003642  D7C9               	goto	i2l643
 20699  003644  0A02               	xorlw	2	; case 3
 20700  003646  B4D8               	btfsc	status,2,c
 20701  003648  D7C6               	goto	i2l643
 20702  00364A  0A06               	xorlw	6	; case 5
 20703  00364C  B4D8               	btfsc	status,2,c
 20704  00364E  D7AB               	goto	i2l637
 20705  003650  0A03               	xorlw	3	; case 6
 20706  003652  B4D8               	btfsc	status,2,c
 20707  003654  D7AD               	goto	i2l639
 20708  003656  0A01               	xorlw	1	; case 7
 20709  003658  B4D8               	btfsc	status,2,c
 20710  00365A  D7DD               	goto	i2l647
 20711  00365C  0A0F               	xorlw	15	; case 8
 20712  00365E  B4D8               	btfsc	status,2,c
 20713  003660  D7AD               	goto	i2l641
 20714  003662  0A01               	xorlw	1	; case 9
 20715  003664  B4D8               	btfsc	status,2,c
 20716  003666  D7A7               	goto	i2l640
 20717  003668  0A03               	xorlw	3	; case 10
 20718  00366A  B4D8               	btfsc	status,2,c
 20719  00366C  D7B7               	goto	i2l645
 20720  00366E  0A01               	xorlw	1	; case 11
 20721  003670  B4D8               	btfsc	status,2,c
 20722  003672  D7C3               	goto	i2l646
 20723  003674  0A07               	xorlw	7	; case 12
 20724  003676  0012               	return	
 20725  003678                     __end_of_USBCheckStdRequest:
 20726                           	opt stack 0
 20727                           pclatu	equ	0xFFB
 20728                           pclath	equ	0xFFA
 20729                           tblptru	equ	0xFF8
 20730                           tblptrh	equ	0xFF7
 20731                           tblptrl	equ	0xFF6
 20732                           tablat	equ	0xFF5
 20733                           prodh	equ	0xFF4
 20734                           prodl	equ	0xFF3
 20735                           intcon	equ	0xFF2
 20736                           indf0	equ	0xFEF
 20737                           postinc0	equ	0xFEE
 20738                           fsr0h	equ	0xFEA
 20739                           fsr0l	equ	0xFE9
 20740                           wreg	equ	0xFE8
 20741                           indf1	equ	0xFE7
 20742                           postdec1	equ	0xFE5
 20743                           fsr1h	equ	0xFE2
 20744                           fsr1l	equ	0xFE1
 20745                           indf2	equ	0xFDF
 20746                           postinc2	equ	0xFDE
 20747                           postdec2	equ	0xFDD
 20748                           plusw2	equ	0xFDB
 20749                           fsr2h	equ	0xFDA
 20750                           fsr2l	equ	0xFD9
 20751                           status	equ	0xFD8
 20752                           
 20753 ;; *************** function _USBStdSetCfgHandler *****************
 20754 ;; Defined at:
 20755 ;;		line 1968 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 20756 ;; Parameters:    Size  Location     Type
 20757 ;;		None
 20758 ;; Auto vars:     Size  Location     Type
 20759 ;;  i               1   20[COMRAM] unsigned char 
 20760 ;; Return value:  Size  Location     Type
 20761 ;;                  1    wreg      void 
 20762 ;; Registers used:
 20763 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20764 ;; Tracked objects:
 20765 ;;		On entry : 0/0
 20766 ;;		On exit  : 0/0
 20767 ;;		Unchanged: 0/0
 20768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20769 ;;      Params:         0       0       0       0       0       0       0       0       0
 20770 ;;      Locals:         1       0       0       0       0       0       0       0       0
 20771 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20772 ;;      Totals:         1       0       0       0       0       0       0       0       0
 20773 ;;Total ram usage:        1 bytes
 20774 ;; Hardware stack levels used:    1
 20775 ;; Hardware stack levels required when called:    4
 20776 ;; This function calls:
 20777 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20778 ;;		i2_memset
 20779 ;; This function is called by:
 20780 ;;		_USBCheckStdRequest
 20781 ;; This function uses a non-reentrant model
 20782 ;;
 20783                           
 20784                           	psect	text83
 20785  003758                     __ptext83:
 20786                           	opt stack 0
 20787  003758                     _USBStdSetCfgHandler:
 20788                           	opt stack 16
 20789                           
 20790                           ;usb_device.c: 1970: uint8_t i;
 20791                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
 20792                           
 20793                           ;incstack = 0
 20794  003758  0100               	movlb	0	; () banked
 20795  00375A  8FFC               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 20796                           
 20797                           ; BSR set to: 0
 20798                           ;usb_device.c: 1976: memset((void*)&UEP1,0x00,(2));;
 20799  00375C  0E71               	movlw	113
 20800  00375E  6E01               	movwf	i2memset@p1,c
 20801  003760  0E0F               	movlw	15
 20802  003762  6E02               	movwf	i2memset@p1+1,c
 20803  003764  0E00               	movlw	0
 20804  003766  6E04               	movwf	i2memset@c+1,c
 20805  003768  0E00               	movlw	0
 20806  00376A  6E03               	movwf	i2memset@c,c
 20807  00376C  0E00               	movlw	0
 20808  00376E  6E06               	movwf	i2memset@n+1,c
 20809  003770  0E02               	movlw	2
 20810  003772  6E05               	movwf	i2memset@n,c
 20811  003774  EC43  F028         	call	i2_memset	;wreg free
 20812                           
 20813                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 20814  003778  0E00               	movlw	0
 20815  00377A  6E01               	movwf	i2memset@p1,c
 20816  00377C  0E04               	movlw	4
 20817  00377E  6E02               	movwf	i2memset@p1+1,c
 20818  003780  0E00               	movlw	0
 20819  003782  6E04               	movwf	i2memset@c+1,c
 20820  003784  0E00               	movlw	0
 20821  003786  6E03               	movwf	i2memset@c,c
 20822  003788  0E00               	movlw	0
 20823  00378A  6E06               	movwf	i2memset@n+1,c
 20824  00378C  0E30               	movlw	48
 20825  00378E  6E05               	movwf	i2memset@n,c
 20826  003790  EC43  F028         	call	i2_memset	;wreg free
 20827                           
 20828                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
 20829  003794  8C6D               	bsf	3949,6,c	;volatile
 20830                           
 20831                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
 20832  003796  0E00               	movlw	0
 20833  003798  6E15               	movwf	USBStdSetCfgHandler@i,c
 20834  00379A                     i2l7821:
 20835  00379A  0E02               	movlw	2
 20836  00379C  6415               	cpfsgt	USBStdSetCfgHandler@i,c
 20837  00379E  D001               	goto	i2l553
 20838  0037A0  D016               	goto	i2u600_40
 20839  0037A2                     i2l553:
 20840                           
 20841                           ;usb_device.c: 1988: {
 20842                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
 20843  0037A2  5015               	movf	USBStdSetCfgHandler@i,w,c
 20844  0037A4  0D01               	mullw	1
 20845  0037A6  0EBB               	movlw	low _ep_data_in
 20846  0037A8  24F3               	addwf	prodl,w,c
 20847  0037AA  6ED9               	movwf	fsr2l,c
 20848  0037AC  0E01               	movlw	high _ep_data_in
 20849  0037AE  20F4               	addwfc	prodh,w,c
 20850  0037B0  6EDA               	movwf	fsr2h,c
 20851  0037B2  0E00               	movlw	0
 20852  0037B4  6EDF               	movwf	indf2,c
 20853                           
 20854                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
 20855  0037B6  5015               	movf	USBStdSetCfgHandler@i,w,c
 20856  0037B8  0D01               	mullw	1
 20857  0037BA  0EB8               	movlw	low _ep_data_out
 20858  0037BC  24F3               	addwf	prodl,w,c
 20859  0037BE  6ED9               	movwf	fsr2l,c
 20860  0037C0  0E01               	movlw	high _ep_data_out
 20861  0037C2  20F4               	addwfc	prodh,w,c
 20862  0037C4  6EDA               	movwf	fsr2h,c
 20863  0037C6  0E00               	movlw	0
 20864  0037C8  6EDF               	movwf	indf2,c
 20865  0037CA  2A15               	incf	USBStdSetCfgHandler@i,f,c
 20866  0037CC  D7E6               	goto	i2l7821
 20867  0037CE                     i2u600_40:
 20868                           
 20869                           ;usb_device.c: 1991: }
 20870                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
 20871  0037CE  0EF8               	movlw	low _USBAlternateInterface
 20872  0037D0  6E01               	movwf	i2memset@p1,c
 20873  0037D2  0E01               	movlw	high _USBAlternateInterface
 20874  0037D4  6E02               	movwf	i2memset@p1+1,c
 20875  0037D6  0E00               	movlw	0
 20876  0037D8  6E04               	movwf	i2memset@c+1,c
 20877  0037DA  0E00               	movlw	0
 20878  0037DC  6E03               	movwf	i2memset@c,c
 20879  0037DE  0E00               	movlw	0
 20880  0037E0  6E06               	movwf	i2memset@n+1,c
 20881  0037E2  0E02               	movlw	2
 20882  0037E4  6E05               	movwf	i2memset@n,c
 20883  0037E6  EC43  F028         	call	i2_memset	;wreg free
 20884                           
 20885                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
 20886  0037EA  9C6D               	bcf	3949,6,c	;volatile
 20887                           
 20888                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 20889  0037EC  0E08               	movlw	8
 20890  0037EE  6E40               	movwf	_pBDTEntryIn,c
 20891  0037F0  0E04               	movlw	4
 20892  0037F2  6E41               	movwf	_pBDTEntryIn+1,c
 20893                           
 20894                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 20895  0037F4  0E00               	movlw	0
 20896  0037F6  6E4E               	movwf	_pBDTEntryEP0OutCurrent,c
 20897  0037F8  0E04               	movlw	4
 20898  0037FA  6E4F               	movwf	_pBDTEntryEP0OutCurrent+1,c
 20899                           
 20900                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 20901  0037FC  C04E  F04C         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 20902  003800  C04F  F04D         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 20903                           
 20904                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 20905  003804  C432 F05E          	movff	1074,_USBActiveConfiguration	;volatile
 20906                           
 20907                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
 20908  003808  505E               	movf	_USBActiveConfiguration,w,c	;volatile
 20909  00380A  A4D8               	btfss	status,2,c
 20910  00380C  D003               	goto	i2l555
 20911                           
 20912                           ;usb_device.c: 2010: {
 20913                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
 20914  00380E  0E10               	movlw	16
 20915  003810  6E58               	movwf	_USBDeviceState,c	;volatile
 20916                           
 20917                           ;usb_device.c: 2013: }
 20918  003812  0012               	return	
 20919  003814                     i2l555:
 20920                           
 20921                           ;usb_device.c: 2014: else
 20922                           ;usb_device.c: 2015: {
 20923                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 20924  003814  0E00               	movlw	0
 20925  003816  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 20926  003818  0E01               	movlw	1
 20927  00381A  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 20928  00381C  0E5E               	movlw	low _USBActiveConfiguration
 20929  00381E  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 20930  003820  0E00               	movlw	high _USBActiveConfiguration
 20931  003822  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 20932  003824  0E00               	movlw	0
 20933  003826  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 20934  003828  0E01               	movlw	1
 20935  00382A  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 20936  00382C  EC69  F024         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 20937                           
 20938                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
 20939  003830  0E20               	movlw	32
 20940  003832  6E58               	movwf	_USBDeviceState,c	;volatile
 20941  003834  0012               	return	
 20942  003836                     __end_of_USBStdSetCfgHandler:
 20943                           	opt stack 0
 20944                           pclatu	equ	0xFFB
 20945                           pclath	equ	0xFFA
 20946                           tblptru	equ	0xFF8
 20947                           tblptrh	equ	0xFF7
 20948                           tblptrl	equ	0xFF6
 20949                           tablat	equ	0xFF5
 20950                           prodh	equ	0xFF4
 20951                           prodl	equ	0xFF3
 20952                           intcon	equ	0xFF2
 20953                           indf0	equ	0xFEF
 20954                           postinc0	equ	0xFEE
 20955                           fsr0h	equ	0xFEA
 20956                           fsr0l	equ	0xFE9
 20957                           wreg	equ	0xFE8
 20958                           indf1	equ	0xFE7
 20959                           postdec1	equ	0xFE5
 20960                           fsr1h	equ	0xFE2
 20961                           fsr1l	equ	0xFE1
 20962                           indf2	equ	0xFDF
 20963                           postinc2	equ	0xFDE
 20964                           postdec2	equ	0xFDD
 20965                           plusw2	equ	0xFDB
 20966                           fsr2h	equ	0xFDA
 20967                           fsr2l	equ	0xFD9
 20968                           status	equ	0xFD8
 20969                           
 20970 ;; *************** function i2_memset *****************
 20971 ;; Defined at:
 20972 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\memset.c"
 20973 ;; Parameters:    Size  Location     Type
 20974 ;;  p1              2    0[COMRAM] PTR void 
 20975 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 20976 ;;  c               2    2[COMRAM] int 
 20977 ;;  n               2    4[COMRAM] unsigned int 
 20978 ;; Auto vars:     Size  Location     Type
 20979 ;;  memset          2    6[COMRAM] PTR unsigned char 
 20980 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 20981 ;; Return value:  Size  Location     Type
 20982 ;;                  2    0[COMRAM] PTR void 
 20983 ;; Registers used:
 20984 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20985 ;; Tracked objects:
 20986 ;;		On entry : 0/0
 20987 ;;		On exit  : 0/0
 20988 ;;		Unchanged: 0/0
 20989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20990 ;;      Params:         6       0       0       0       0       0       0       0       0
 20991 ;;      Locals:         2       0       0       0       0       0       0       0       0
 20992 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20993 ;;      Totals:         8       0       0       0       0       0       0       0       0
 20994 ;;Total ram usage:        8 bytes
 20995 ;; Hardware stack levels used:    1
 20996 ;; This function calls:
 20997 ;;		Nothing
 20998 ;; This function is called by:
 20999 ;;		_USBStdSetCfgHandler
 21000 ;;		i2_USBDeviceInit
 21001 ;; This function uses a non-reentrant model
 21002 ;;
 21003                           
 21004                           	psect	text84
 21005  005086                     __ptext84:
 21006                           	opt stack 0
 21007  005086                     i2_memset:
 21008                           	opt stack 22
 21009                           
 21010                           ;incstack = 0
 21011  005086  C001  F007         	movff	i2memset@p1,i2memset@p
 21012  00508A  C002  F008         	movff	i2memset@p1+1,i2memset@p+1
 21013  00508E  D008               	goto	i2l3395
 21014  005090                     i2l7751:
 21015  005090  C007  FFD9         	movff	i2memset@p,fsr2l
 21016  005094  C008  FFDA         	movff	i2memset@p+1,fsr2h
 21017  005098  C003  FFDF         	movff	i2memset@c,indf2
 21018  00509C  4A07               	infsnz	i2memset@p,f,c
 21019  00509E  2A08               	incf	i2memset@p+1,f,c
 21020  0050A0                     i2l3395:
 21021  0050A0  0605               	decf	i2memset@n,f,c
 21022  0050A2  A0D8               	btfss	status,0,c
 21023  0050A4  0606               	decf	i2memset@n+1,f,c
 21024  0050A6  2805               	incf	i2memset@n,w,c
 21025  0050A8  E1F3               	bnz	i2l7751
 21026  0050AA  2806               	incf	i2memset@n+1,w,c
 21027  0050AC  B4D8               	btfsc	status,2,c
 21028  0050AE  0012               	return	
 21029  0050B0  D7EF               	goto	i2l3396
 21030  0050B2                     __end_ofi2_memset:
 21031                           	opt stack 0
 21032                           pclatu	equ	0xFFB
 21033                           pclath	equ	0xFFA
 21034                           tblptru	equ	0xFF8
 21035                           tblptrh	equ	0xFF7
 21036                           tblptrl	equ	0xFF6
 21037                           tablat	equ	0xFF5
 21038                           prodh	equ	0xFF4
 21039                           prodl	equ	0xFF3
 21040                           intcon	equ	0xFF2
 21041                           indf0	equ	0xFEF
 21042                           postinc0	equ	0xFEE
 21043                           fsr0h	equ	0xFEA
 21044                           fsr0l	equ	0xFE9
 21045                           wreg	equ	0xFE8
 21046                           indf1	equ	0xFE7
 21047                           postdec1	equ	0xFE5
 21048                           fsr1h	equ	0xFE2
 21049                           fsr1l	equ	0xFE1
 21050                           indf2	equ	0xFDF
 21051                           postinc2	equ	0xFDE
 21052                           postdec2	equ	0xFDD
 21053                           plusw2	equ	0xFDB
 21054                           fsr2h	equ	0xFDA
 21055                           fsr2l	equ	0xFD9
 21056                           status	equ	0xFD8
 21057                           
 21058 ;; *************** function _USBStdGetStatusHandler *****************
 21059 ;; Defined at:
 21060 ;;		line 2129 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 21061 ;; Parameters:    Size  Location     Type
 21062 ;;		None
 21063 ;; Auto vars:     Size  Location     Type
 21064 ;;  p               2    1[COMRAM] PTR struct __BDT
 21065 ;;		 -> RAM(2047), NULL(0), BDT(48), 
 21066 ;; Return value:  Size  Location     Type
 21067 ;;                  1    wreg      void 
 21068 ;; Registers used:
 21069 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21070 ;; Tracked objects:
 21071 ;;		On entry : 0/0
 21072 ;;		On exit  : 0/0
 21073 ;;		Unchanged: 0/0
 21074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21075 ;;      Params:         0       0       0       0       0       0       0       0       0
 21076 ;;      Locals:         2       0       0       0       0       0       0       0       0
 21077 ;;      Temps:          1       0       0       0       0       0       0       0       0
 21078 ;;      Totals:         3       0       0       0       0       0       0       0       0
 21079 ;;Total ram usage:        3 bytes
 21080 ;; Hardware stack levels used:    1
 21081 ;; This function calls:
 21082 ;;		Nothing
 21083 ;; This function is called by:
 21084 ;;		_USBCheckStdRequest
 21085 ;; This function uses a non-reentrant model
 21086 ;;
 21087                           
 21088                           	psect	text85
 21089  003E32                     __ptext85:
 21090                           	opt stack 0
 21091  003E32                     _USBStdGetStatusHandler:
 21092                           	opt stack 20
 21093                           
 21094                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
 21095                           
 21096                           ;incstack = 0
 21097  003E32  0E00               	movlw	0
 21098  003E34  0104               	movlb	4	; () banked
 21099  003E36  6F38               	movwf	56,b	;volatile
 21100                           
 21101                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
 21102  003E38  0E00               	movlw	0
 21103  003E3A  6F39               	movwf	57,b	;volatile
 21104                           
 21105                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
 21106  003E3C  D039               	goto	i2l574
 21107  003E3E                     i2l575:
 21108                           
 21109                           ; BSR set to: 4
 21110                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
 21111  003E3E  0100               	movlb	0	; () banked
 21112  003E40  8FFC               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 21113                           
 21114                           ;usb_device.c: 2145: }
 21115                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
 21116                           
 21117                           ; BSR set to: 4
 21118                           
 21119                           ; BSR set to: 0
 21120                           ;usb_device.c: 2143: {
 21121                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
 21122                           
 21123                           ;usb_device.c: 2142: if(0 == 1)
 21124  003E42  0101               	movlb	1	; () banked
 21125  003E44  05DA               	decf	_RemoteWakeup& (0+255),w,b	;volatile
 21126  003E46  A4D8               	btfss	status,2,c
 21127  003E48  D03E               	goto	i2l578
 21128                           
 21129                           ; BSR set to: 1
 21130                           ;usb_device.c: 2148: {
 21131                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
 21132  003E4A  0104               	movlb	4	; () banked
 21133  003E4C  8338               	bsf	56,1,b	;volatile
 21134                           
 21135                           ; BSR set to: 4
 21136                           ;usb_device.c: 2150: }
 21137                           ;usb_device.c: 2151: break;
 21138  003E4E  D03B               	goto	i2l578
 21139  003E50                     i2l579:
 21140                           
 21141                           ; BSR set to: 4
 21142                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
 21143  003E50  0100               	movlb	0	; () banked
 21144  003E52  8FFC               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 21145                           
 21146                           ;usb_device.c: 2154: break;
 21147  003E54  D038               	goto	i2l578
 21148  003E56                     i2l580:
 21149                           
 21150                           ; BSR set to: 4
 21151                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
 21152  003E56  0100               	movlb	0	; () banked
 21153  003E58  8FFC               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 21154                           
 21155                           ;usb_device.c: 2160: {
 21156                           ;usb_device.c: 2161: BDT_ENTRY *p;
 21157                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
 21158  003E5A  0104               	movlb	4	; () banked
 21159  003E5C  BF34               	btfsc	52,7,b	;volatile
 21160  003E5E  D00A               	goto	i2l581
 21161                           
 21162                           ; BSR set to: 4
 21163                           ;usb_device.c: 2164: {
 21164                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 21165  003E60  5134               	movf	52,w,b	;volatile
 21166  003E62  0B0F               	andlw	15
 21167  003E64  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 21168  003E66  5001               	movf	??_USBStdGetStatusHandler,w,c
 21169  003E68  0D02               	mullw	2
 21170  003E6A  0E8C               	movlw	low _pBDTEntryOut
 21171  003E6C  24F3               	addwf	prodl,w,c
 21172  003E6E  6ED9               	movwf	fsr2l,c
 21173  003E70  0E01               	movlw	high _pBDTEntryOut
 21174  003E72  D009               	goto	L19
 21175  003E74                     i2l581:
 21176                           
 21177                           ; BSR set to: 4
 21178                           ;usb_device.c: 2167: else
 21179                           ;usb_device.c: 2168: {
 21180                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 21181                           
 21182                           ; BSR set to: 4
 21183  003E74  5134               	movf	52,w,b	;volatile
 21184  003E76  0B0F               	andlw	15
 21185  003E78  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 21186  003E7A  5001               	movf	??_USBStdGetStatusHandler,w,c
 21187  003E7C  0D02               	mullw	2
 21188  003E7E  0E40               	movlw	low _pBDTEntryIn
 21189  003E80  24F3               	addwf	prodl,w,c
 21190  003E82  6ED9               	movwf	fsr2l,c
 21191  003E84  0E00               	movlw	high _pBDTEntryIn
 21192  003E86                     L19:
 21193  003E86  20F4               	addwfc	prodh,w,c
 21194  003E88  6EDA               	movwf	fsr2h,c
 21195  003E8A  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 21196  003E8E  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 21197                           
 21198                           ; BSR set to: 4
 21199                           ;usb_device.c: 2170: }
 21200                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 21201                           
 21202                           ; BSR set to: 4
 21203  003E92  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 21204  003E96  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 21205  003E9A  AEDF               	btfss	indf2,7,c
 21206  003E9C  D014               	goto	i2l578
 21207                           
 21208                           ; BSR set to: 4
 21209  003E9E  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 21210  003EA2  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 21211  003EA6  A4DF               	btfss	indf2,2,c
 21212  003EA8  D00E               	goto	i2l578
 21213                           
 21214                           ; BSR set to: 4
 21215                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
 21216  003EAA  0E01               	movlw	1
 21217  003EAC  6F38               	movwf	56,b	;volatile
 21218                           
 21219                           ; BSR set to: 4
 21220                           ;usb_device.c: 2175: }
 21221                           ;usb_device.c: 2176: }
 21222                           
 21223                           ; BSR set to: 4
 21224                           ;usb_device.c: 2174: break;
 21225  003EAE  D00B               	goto	i2l578
 21226  003EB0                     i2l574:
 21227                           
 21228                           ; BSR set to: 4
 21229                           
 21230                           ; BSR set to: 4
 21231  003EB0  5130               	movf	48,w,b	;volatile
 21232  003EB2  0B1F               	andlw	31
 21233                           
 21234                           ; Switch size 1, requested type "space"
 21235                           ; Number of cases is 3, Range of values is 0 to 2
 21236                           ; switch strategies available:
 21237                           ; Name         Instructions Cycles
 21238                           ; simple_byte           10     6 (average)
 21239                           ;	Chosen strategy is simple_byte
 21240  003EB4  0A00               	xorlw	0	; case 0
 21241  003EB6  B4D8               	btfsc	status,2,c
 21242  003EB8  D7C2               	goto	i2l575
 21243  003EBA  0A01               	xorlw	1	; case 1
 21244  003EBC  B4D8               	btfsc	status,2,c
 21245  003EBE  D7C8               	goto	i2l579
 21246  003EC0  0A03               	xorlw	3	; case 2
 21247  003EC2  B4D8               	btfsc	status,2,c
 21248  003EC4  D7C8               	goto	i2l580
 21249  003EC6                     i2l578:
 21250                           
 21251                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
 21252  003EC6  0100               	movlb	0	; () banked
 21253  003EC8  AFFC               	btfss	(_inPipes+3)& (0+255),7,b	;volatile
 21254  003ECA  0012               	return	
 21255                           
 21256                           ; BSR set to: 0
 21257                           ;usb_device.c: 2179: {
 21258                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 21259  003ECC  0E38               	movlw	56
 21260  003ECE  6FF9               	movwf	_inPipes& (0+255),b	;volatile
 21261  003ED0  0E04               	movlw	4
 21262  003ED2  6FFA               	movwf	(_inPipes+1)& (0+255),b	;volatile
 21263                           
 21264                           ; BSR set to: 0
 21265                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 21266  003ED4  81FC               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 21267                           
 21268                           ; BSR set to: 0
 21269                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
 21270  003ED6  0E02               	movlw	2
 21271  003ED8  6FFD               	movwf	(_inPipes+4)& (0+255),b	;volatile
 21272  003EDA  0012               	return	
 21273  003EDC                     __end_of_USBStdGetStatusHandler:
 21274                           	opt stack 0
 21275                           pclatu	equ	0xFFB
 21276                           pclath	equ	0xFFA
 21277                           tblptru	equ	0xFF8
 21278                           tblptrh	equ	0xFF7
 21279                           tblptrl	equ	0xFF6
 21280                           tablat	equ	0xFF5
 21281                           prodh	equ	0xFF4
 21282                           prodl	equ	0xFF3
 21283                           intcon	equ	0xFF2
 21284                           indf0	equ	0xFEF
 21285                           postinc0	equ	0xFEE
 21286                           fsr0h	equ	0xFEA
 21287                           fsr0l	equ	0xFE9
 21288                           wreg	equ	0xFE8
 21289                           indf1	equ	0xFE7
 21290                           postdec1	equ	0xFE5
 21291                           fsr1h	equ	0xFE2
 21292                           fsr1l	equ	0xFE1
 21293                           indf2	equ	0xFDF
 21294                           postinc2	equ	0xFDE
 21295                           postdec2	equ	0xFDD
 21296                           plusw2	equ	0xFDB
 21297                           fsr2h	equ	0xFDA
 21298                           fsr2l	equ	0xFD9
 21299                           status	equ	0xFD8
 21300                           
 21301 ;; *************** function _USBStdGetDscHandler *****************
 21302 ;; Defined at:
 21303 ;;		line 2043 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 21304 ;; Parameters:    Size  Location     Type
 21305 ;;		None
 21306 ;; Auto vars:     Size  Location     Type
 21307 ;;		None
 21308 ;; Return value:  Size  Location     Type
 21309 ;;                  1    wreg      void 
 21310 ;; Registers used:
 21311 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 21312 ;; Tracked objects:
 21313 ;;		On entry : 0/0
 21314 ;;		On exit  : 0/0
 21315 ;;		Unchanged: 0/0
 21316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21317 ;;      Params:         0       0       0       0       0       0       0       0       0
 21318 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21319 ;;      Temps:          2       0       0       0       0       0       0       0       0
 21320 ;;      Totals:         2       0       0       0       0       0       0       0       0
 21321 ;;Total ram usage:        2 bytes
 21322 ;; Hardware stack levels used:    1
 21323 ;; This function calls:
 21324 ;;		Nothing
 21325 ;; This function is called by:
 21326 ;;		_USBCheckStdRequest
 21327 ;; This function uses a non-reentrant model
 21328 ;;
 21329                           
 21330                           	psect	text86
 21331  00283C                     __ptext86:
 21332                           	opt stack 0
 21333  00283C                     _USBStdGetDscHandler:
 21334                           	opt stack 20
 21335                           
 21336                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
 21337                           
 21338                           ; BSR set to: 0
 21339                           ;incstack = 0
 21340  00283C  0E80               	movlw	128
 21341  00283E  0104               	movlb	4	; () banked
 21342  002840  1930               	xorwf	48,w,b	;volatile
 21343  002842  A4D8               	btfss	status,2,c
 21344  002844  0012               	return	
 21345                           
 21346                           ; BSR set to: 4
 21347                           ;usb_device.c: 2046: {
 21348                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 21349  002846  0EC0               	movlw	192
 21350  002848  0100               	movlb	0	; () banked
 21351  00284A  6FFC               	movwf	(_inPipes+3)& (0+255),b	;volatile
 21352                           
 21353                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
 21354  00284C  D082               	goto	i2l561
 21355  00284E                     
 21356                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 21357                           
 21358                           ; BSR set to: 0
 21359  00284E  0E23               	movlw	low _device_dsc
 21360  002850  0100               	movlb	0	; () banked
 21361  002852  6FF9               	movwf	_inPipes& (0+255),b	;volatile
 21362  002854  0E7D               	movlw	high _device_dsc
 21363  002856  6FFA               	movwf	(_inPipes+1)& (0+255),b	;volatile
 21364                           
 21365                           ; BSR set to: 0
 21366                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
 21367  002858  0E00               	movlw	0
 21368  00285A  6FFE               	movwf	(_inPipes+5)& (0+255),b	;volatile
 21369  00285C  0E12               	movlw	18
 21370  00285E  6FFD               	movwf	(_inPipes+4)& (0+255),b	;volatile
 21371                           
 21372                           ;usb_device.c: 2058: break;
 21373  002860  0012               	return	
 21374  002862                     
 21375                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
 21376                           
 21377                           ; BSR set to: 0
 21378  002862  0104               	movlb	4	; () banked
 21379  002864  5132               	movf	50,w,b	;volatile
 21380  002866  A4D8               	btfss	status,2,c
 21381  002868  D040               	goto	i2l565
 21382                           
 21383                           ; BSR set to: 4
 21384                           ;usb_device.c: 2064: {
 21385                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 21386  00286A  5132               	movf	50,w,b	;volatile
 21387  00286C  0D02               	mullw	2
 21388  00286E  0E76               	movlw	low _USB_CD_Ptr
 21389  002870  24F3               	addwf	prodl,w,c
 21390  002872  6EF6               	movwf	tblptrl,c
 21391  002874  0E7C               	movlw	high _USB_CD_Ptr
 21392  002876  20F4               	addwfc	prodh,w,c
 21393  002878  6EF7               	movwf	tblptrh,c
 21394  00287A                     	if	0	;There are less than 3 active tblptr bytes
 21395  00287A                     	endif
 21396  00287A  0009               	tblrd		*+
 21397  00287C  CFF5 F0F9          	movff	tablat,_inPipes	;volatile
 21398  002880  000A               	tblrd		*-
 21399  002882  CFF5 F0FA          	movff	tablat,_inPipes+1	;volatile
 21400                           
 21401                           ; BSR set to: 4
 21402                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 21403  002886  0E02               	movlw	2
 21404  002888  0100               	movlb	0	; () banked
 21405  00288A  25F9               	addwf	_inPipes& (0+255),w,b	;volatile
 21406  00288C  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 21407  00288E  0E00               	movlw	0
 21408  002890  21FA               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 21409  002892  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 21410  002894  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 21411  002898  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 21412  00289C  6AF8               	clrf	tblptru,c
 21413  00289E  0E07               	movlw	(high __ramtop+-1)
 21414  0028A0  64F7               	cpfsgt	tblptrh,c
 21415  0028A2  D003               	bra	i2u604_47
 21416  0028A4  0008               	tblrd		*
 21417  0028A6  50F5               	movf	tablat,w,c
 21418  0028A8  D005               	bra	i2u604_40
 21419  0028AA                     i2u604_47:
 21420  0028AA  CFF6 FFE9          	movff	tblptrl,fsr0l
 21421  0028AE  CFF7 FFEA          	movff	tblptrh,fsr0h
 21422  0028B2  50EF               	movf	indf0,w,c
 21423  0028B4                     i2u604_40:
 21424  0028B4  0100               	movlb	0	; () banked
 21425  0028B6  6FFD               	movwf	(_inPipes+4)& (0+255),b	;volatile
 21426                           
 21427                           ; BSR set to: 0
 21428                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 21429  0028B8  0E03               	movlw	3
 21430  0028BA  25F9               	addwf	_inPipes& (0+255),w,b	;volatile
 21431  0028BC  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 21432  0028BE  0E00               	movlw	0
 21433  0028C0  21FA               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 21434  0028C2  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 21435  0028C4  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 21436  0028C8  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 21437  0028CC  6AF8               	clrf	tblptru,c
 21438  0028CE  0E07               	movlw	(high __ramtop+-1)
 21439  0028D0  64F7               	cpfsgt	tblptrh,c
 21440  0028D2  D003               	bra	i2u605_47
 21441  0028D4  0008               	tblrd		*
 21442  0028D6  50F5               	movf	tablat,w,c
 21443  0028D8  D005               	bra	i2u605_40
 21444  0028DA                     i2u605_47:
 21445  0028DA  CFF6 FFE9          	movff	tblptrl,fsr0l
 21446  0028DE  CFF7 FFEA          	movff	tblptrh,fsr0h
 21447  0028E2  50EF               	movf	indf0,w,c
 21448  0028E4                     i2u605_40:
 21449  0028E4  0100               	movlb	0	; () banked
 21450  0028E6  6FFE               	movwf	(_inPipes+5)& (0+255),b	;volatile
 21451                           
 21452                           ;usb_device.c: 2076: }
 21453  0028E8  0012               	return	
 21454  0028EA                     i2l565:
 21455                           
 21456                           ;usb_device.c: 2077: else
 21457                           ;usb_device.c: 2078: {
 21458                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
 21459                           
 21460                           ; BSR set to: 0
 21461  0028EA  0E00               	movlw	0
 21462  0028EC  0100               	movlb	0	; () banked
 21463  0028EE  6FFC               	movwf	(_inPipes+3)& (0+255),b	;volatile
 21464                           
 21465                           ; BSR set to: 0
 21466                           ;usb_device.c: 2080: }
 21467                           ;usb_device.c: 2081: break;
 21468  0028F0  0012               	return	
 21469  0028F2                     
 21470                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
 21471                           
 21472                           ; BSR set to: 0
 21473  0028F2  0E03               	movlw	3
 21474  0028F4  0104               	movlb	4	; () banked
 21475  0028F6  6132               	cpfslt	50,b	;volatile
 21476  0028F8  D024               	goto	i2l568
 21477                           
 21478                           ; BSR set to: 4
 21479                           ;usb_device.c: 2087: {
 21480                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 21481  0028FA  5132               	movf	50,w,b	;volatile
 21482  0028FC  0D02               	mullw	2
 21483  0028FE  0E69               	movlw	low _USB_SD_Ptr
 21484  002900  24F3               	addwf	prodl,w,c
 21485  002902  6EF6               	movwf	tblptrl,c
 21486  002904  0E7C               	movlw	high _USB_SD_Ptr
 21487  002906  20F4               	addwfc	prodh,w,c
 21488  002908  6EF7               	movwf	tblptrh,c
 21489  00290A                     	if	0	;There are less than 3 active tblptr bytes
 21490  00290A                     	endif
 21491  00290A  0009               	tblrd		*+
 21492  00290C  CFF5 F0F9          	movff	tablat,_inPipes	;volatile
 21493  002910  000A               	tblrd		*-
 21494  002912  CFF5 F0FA          	movff	tablat,_inPipes+1	;volatile
 21495                           
 21496                           ; BSR set to: 4
 21497                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 21498  002916  C0F9  FFF6         	movff	_inPipes,tblptrl	;volatile
 21499  00291A  C0FA  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 21500  00291E  6AF8               	clrf	tblptru,c
 21501  002920  0E07               	movlw	(high __ramtop+-1)
 21502  002922  64F7               	cpfsgt	tblptrh,c
 21503  002924  D003               	bra	i2u607_47
 21504  002926  0008               	tblrd		*
 21505  002928  50F5               	movf	tablat,w,c
 21506  00292A  D005               	bra	i2u607_40
 21507  00292C                     i2u607_47:
 21508  00292C  CFF6 FFE9          	movff	tblptrl,fsr0l
 21509  002930  CFF7 FFEA          	movff	tblptrh,fsr0h
 21510  002934  50EF               	movf	indf0,w,c
 21511  002936                     i2u607_40:
 21512  002936  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 21513  002938  5001               	movf	??_USBStdGetDscHandler,w,c
 21514  00293A  0100               	movlb	0	; () banked
 21515  00293C  6FFD               	movwf	(_inPipes+4)& (0+255),b	;volatile
 21516  00293E  6BFE               	clrf	(_inPipes+5)& (0+255),b	;volatile
 21517                           
 21518                           ;usb_device.c: 2092: }
 21519  002940  0012               	return	
 21520  002942                     i2l568:
 21521                           
 21522                           ;usb_device.c: 2102: else
 21523                           ;usb_device.c: 2103: {
 21524                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
 21525                           
 21526                           ; BSR set to: 0
 21527  002942  0E00               	movlw	0
 21528  002944  0100               	movlb	0	; () banked
 21529  002946  6FFC               	movwf	(_inPipes+3)& (0+255),b	;volatile
 21530                           
 21531                           ; BSR set to: 0
 21532                           ;usb_device.c: 2105: }
 21533                           ;usb_device.c: 2106: break;
 21534  002948  0012               	return	
 21535  00294A                     
 21536                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
 21537                           
 21538                           ; BSR set to: 0
 21539  00294A  0E00               	movlw	0
 21540  00294C  0100               	movlb	0	; () banked
 21541  00294E  6FFC               	movwf	(_inPipes+3)& (0+255),b	;volatile
 21542                           
 21543                           ; BSR set to: 0
 21544                           ;usb_device.c: 2110: }
 21545                           
 21546                           ;usb_device.c: 2109: break;
 21547  002950  0012               	return	
 21548  002952                     i2l561:
 21549                           
 21550                           ; BSR set to: 0
 21551                           
 21552                           ; BSR set to: 0
 21553  002952  0104               	movlb	4	; () banked
 21554  002954  5133               	movf	51,w,b	;volatile
 21555                           
 21556                           ; Switch size 1, requested type "space"
 21557                           ; Number of cases is 3, Range of values is 1 to 3
 21558                           ; switch strategies available:
 21559                           ; Name         Instructions Cycles
 21560                           ; simple_byte           10     6 (average)
 21561                           ;	Chosen strategy is simple_byte
 21562  002956  0A01               	xorlw	1	; case 1
 21563  002958  B4D8               	btfsc	status,2,c
 21564  00295A  D779               	goto	i2l562
 21565  00295C  0A03               	xorlw	3	; case 2
 21566  00295E  B4D8               	btfsc	status,2,c
 21567  002960  D780               	goto	i2l564
 21568  002962  0A01               	xorlw	1	; case 3
 21569  002964  B4D8               	btfsc	status,2,c
 21570  002966  D7C5               	goto	i2l567
 21571  002968  D7F0               	goto	i2l570
 21572  00296A                     __end_of_USBStdGetDscHandler:
 21573                           	opt stack 0
 21574                           pclatu	equ	0xFFB
 21575                           pclath	equ	0xFFA
 21576                           tblptru	equ	0xFF8
 21577                           tblptrh	equ	0xFF7
 21578                           tblptrl	equ	0xFF6
 21579                           tablat	equ	0xFF5
 21580                           prodh	equ	0xFF4
 21581                           prodl	equ	0xFF3
 21582                           intcon	equ	0xFF2
 21583                           indf0	equ	0xFEF
 21584                           postinc0	equ	0xFEE
 21585                           fsr0h	equ	0xFEA
 21586                           fsr0l	equ	0xFE9
 21587                           wreg	equ	0xFE8
 21588                           indf1	equ	0xFE7
 21589                           postdec1	equ	0xFE5
 21590                           fsr1h	equ	0xFE2
 21591                           fsr1l	equ	0xFE1
 21592                           indf2	equ	0xFDF
 21593                           postinc2	equ	0xFDE
 21594                           postdec2	equ	0xFDD
 21595                           plusw2	equ	0xFDB
 21596                           fsr2h	equ	0xFDA
 21597                           fsr2l	equ	0xFD9
 21598                           status	equ	0xFD8
 21599                           
 21600 ;; *************** function _USBStdFeatureReqHandler *****************
 21601 ;; Defined at:
 21602 ;;		line 2754 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 21603 ;; Parameters:    Size  Location     Type
 21604 ;;		None
 21605 ;; Auto vars:     Size  Location     Type
 21606 ;;  p               2   24[COMRAM] PTR struct __BDT
 21607 ;;		 -> RAM(2047), NULL(0), BDT(48), 
 21608 ;;  pUEP            2   21[COMRAM] PTR unsigned char 
 21609 ;;		 -> UEP0(1), 
 21610 ;;  current_ep_d    1   23[COMRAM] struct .
 21611 ;; Return value:  Size  Location     Type
 21612 ;;                  1    wreg      void 
 21613 ;; Registers used:
 21614 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21615 ;; Tracked objects:
 21616 ;;		On entry : 0/0
 21617 ;;		On exit  : 0/0
 21618 ;;		Unchanged: 0/0
 21619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21620 ;;      Params:         0       0       0       0       0       0       0       0       0
 21621 ;;      Locals:         5       0       0       0       0       0       0       0       0
 21622 ;;      Temps:          1       0       0       0       0       0       0       0       0
 21623 ;;      Totals:         6       0       0       0       0       0       0       0       0
 21624 ;;Total ram usage:        6 bytes
 21625 ;; Hardware stack levels used:    1
 21626 ;; Hardware stack levels required when called:    4
 21627 ;; This function calls:
 21628 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 21629 ;; This function is called by:
 21630 ;;		_USBCheckStdRequest
 21631 ;; This function uses a non-reentrant model
 21632 ;;
 21633                           
 21634                           	psect	text87
 21635  0018D2                     __ptext87:
 21636                           	opt stack 0
 21637  0018D2                     _USBStdFeatureReqHandler:
 21638                           	opt stack 16
 21639                           
 21640                           ;usb_device.c: 2756: BDT_ENTRY *p;
 21641                           ;usb_device.c: 2757: EP_STATUS current_ep_data;
 21642                           ;usb_device.c: 2761: unsigned char* pUEP;
 21643                           ;usb_device.c: 2799: if((SetupPkt.bFeature == 1)&&
 21644                           ;usb_device.c: 2800: (SetupPkt.Recipient == (0x00)))
 21645                           
 21646                           ;incstack = 0
 21647  0018D2  0104               	movlb	4	; () banked
 21648  0018D4  0532               	decf	50,w,b	;volatile
 21649  0018D6  A4D8               	btfss	status,2,c
 21650  0018D8  D011               	goto	i2l654
 21651                           
 21652                           ; BSR set to: 4
 21653  0018DA  5130               	movf	48,w,b	;volatile
 21654  0018DC  0B1F               	andlw	31
 21655  0018DE  0900               	iorlw	0
 21656  0018E0  A4D8               	btfss	status,2,c
 21657  0018E2  D00C               	goto	i2l654
 21658                           
 21659                           ; BSR set to: 4
 21660                           ;usb_device.c: 2801: {
 21661                           ;usb_device.c: 2802: inPipes[0].info.bits.busy = 1;
 21662  0018E4  0100               	movlb	0	; () banked
 21663  0018E6  8FFC               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 21664                           
 21665                           ; BSR set to: 0
 21666                           ;usb_device.c: 2803: if(SetupPkt.bRequest == 3)
 21667  0018E8  0E03               	movlw	3
 21668  0018EA  0104               	movlb	4	; () banked
 21669  0018EC  1931               	xorwf	49,w,b	;volatile
 21670  0018EE  A4D8               	btfss	status,2,c
 21671  0018F0  D002               	goto	i2l653
 21672                           
 21673                           ; BSR set to: 4
 21674                           ;usb_device.c: 2804: RemoteWakeup = 1;
 21675  0018F2  0E01               	movlw	1
 21676  0018F4  D001               	goto	L20
 21677  0018F6                     i2l653:
 21678                           
 21679                           ;usb_device.c: 2805: else
 21680                           ;usb_device.c: 2806: RemoteWakeup = 0;
 21681                           
 21682                           ; BSR set to: 1
 21683  0018F6  0E00               	movlw	0
 21684  0018F8                     L20:
 21685  0018F8  0101               	movlb	1	; () banked
 21686  0018FA  6FDA               	movwf	_RemoteWakeup& (0+255),b	;volatile
 21687  0018FC                     i2l654:
 21688                           
 21689                           ;usb_device.c: 2807: }
 21690                           ;usb_device.c: 2810: if((SetupPkt.bFeature == 0)&&
 21691                           ;usb_device.c: 2811: (SetupPkt.Recipient == (0x02))&&
 21692                           ;usb_device.c: 2812: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 21693                           ;usb_device.c: 2813: (USBDeviceState == CONFIGURED_STATE))
 21694                           
 21695                           ; BSR set to: 1
 21696  0018FC  0104               	movlb	4	; () banked
 21697  0018FE  5132               	movf	50,w,b	;volatile
 21698  001900  A4D8               	btfss	status,2,c
 21699  001902  0012               	return	
 21700                           
 21701                           ; BSR set to: 4
 21702  001904  5130               	movf	48,w,b	;volatile
 21703  001906  0B1F               	andlw	31
 21704  001908  0A02               	xorlw	2
 21705  00190A  A4D8               	btfss	status,2,c
 21706  00190C  0012               	return	
 21707                           
 21708                           ; BSR set to: 4
 21709  00190E  5134               	movf	52,w,b	;volatile
 21710  001910  0B0F               	andlw	15
 21711  001912  0900               	iorlw	0
 21712  001914  B4D8               	btfsc	status,2,c
 21713  001916  0012               	return	
 21714                           
 21715                           ; BSR set to: 4
 21716  001918  5134               	movf	52,w,b	;volatile
 21717  00191A  0B0F               	andlw	15
 21718  00191C  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21719  00191E  0E03               	movlw	3
 21720  001920  6015               	cpfslt	??_USBStdFeatureReqHandler,c
 21721  001922  0012               	return	
 21722                           
 21723                           ; BSR set to: 4
 21724  001924  0E20               	movlw	32
 21725  001926  1858               	xorwf	_USBDeviceState,w,c	;volatile
 21726  001928  A4D8               	btfss	status,2,c
 21727  00192A  0012               	return	
 21728                           
 21729                           ; BSR set to: 4
 21730                           ;usb_device.c: 2814: {
 21731                           ;usb_device.c: 2817: inPipes[0].info.bits.busy = 1;
 21732  00192C  0100               	movlb	0	; () banked
 21733  00192E  8FFC               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 21734                           
 21735                           ;usb_device.c: 2820: if(SetupPkt.EPDir == 0)
 21736  001930  0104               	movlb	4	; () banked
 21737  001932  BF34               	btfsc	52,7,b	;volatile
 21738  001934  D019               	goto	i2l656
 21739                           
 21740                           ; BSR set to: 4
 21741                           ;usb_device.c: 2821: {
 21742                           ;usb_device.c: 2822: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 21743  001936  5134               	movf	52,w,b	;volatile
 21744  001938  0B0F               	andlw	15
 21745  00193A  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21746  00193C  5015               	movf	??_USBStdFeatureReqHandler,w,c
 21747  00193E  0D02               	mullw	2
 21748  001940  0E8C               	movlw	low _pBDTEntryOut
 21749  001942  24F3               	addwf	prodl,w,c
 21750  001944  6ED9               	movwf	fsr2l,c
 21751  001946  0E01               	movlw	high _pBDTEntryOut
 21752  001948  20F4               	addwfc	prodh,w,c
 21753  00194A  6EDA               	movwf	fsr2h,c
 21754  00194C  CFDE F019          	movff	postinc2,USBStdFeatureReqHandler@p
 21755  001950  CFDD F01A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 21756                           
 21757                           ;usb_device.c: 2823: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 21758  001954  5134               	movf	52,w,b	;volatile
 21759  001956  0B0F               	andlw	15
 21760  001958  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21761  00195A  5015               	movf	??_USBStdFeatureReqHandler,w,c
 21762  00195C  0D01               	mullw	1
 21763  00195E  0EB8               	movlw	low _ep_data_out
 21764  001960  24F3               	addwf	prodl,w,c
 21765  001962  6ED9               	movwf	fsr2l,c
 21766  001964  0E01               	movlw	high _ep_data_out
 21767  001966  D018               	goto	L21
 21768  001968                     i2l656:
 21769                           
 21770                           ; BSR set to: 4
 21771                           ;usb_device.c: 2825: else
 21772                           ;usb_device.c: 2826: {
 21773                           ;usb_device.c: 2827: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 21774                           
 21775                           ; BSR set to: 4
 21776  001968  5134               	movf	52,w,b	;volatile
 21777  00196A  0B0F               	andlw	15
 21778  00196C  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21779  00196E  5015               	movf	??_USBStdFeatureReqHandler,w,c
 21780  001970  0D02               	mullw	2
 21781  001972  0E40               	movlw	low _pBDTEntryIn
 21782  001974  24F3               	addwf	prodl,w,c
 21783  001976  6ED9               	movwf	fsr2l,c
 21784  001978  0E00               	movlw	high _pBDTEntryIn
 21785  00197A  20F4               	addwfc	prodh,w,c
 21786  00197C  6EDA               	movwf	fsr2h,c
 21787  00197E  CFDE F019          	movff	postinc2,USBStdFeatureReqHandler@p
 21788  001982  CFDD F01A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 21789                           
 21790                           ;usb_device.c: 2828: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 21791  001986  5134               	movf	52,w,b	;volatile
 21792  001988  0B0F               	andlw	15
 21793  00198A  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21794  00198C  5015               	movf	??_USBStdFeatureReqHandler,w,c
 21795  00198E  0D01               	mullw	1
 21796  001990  0EBB               	movlw	low _ep_data_in
 21797  001992  24F3               	addwf	prodl,w,c
 21798  001994  6ED9               	movwf	fsr2l,c
 21799  001996  0E01               	movlw	high _ep_data_in
 21800  001998                     L21:
 21801  001998  20F4               	addwfc	prodh,w,c
 21802  00199A  6EDA               	movwf	fsr2h,c
 21803  00199C  50DF               	movf	indf2,w,c
 21804  00199E  6E18               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 21805                           
 21806                           ; BSR set to: 4
 21807                           ;usb_device.c: 2829: }
 21808                           ;usb_device.c: 2835: if(current_ep_data.bits.ping_pong_state == 0)
 21809                           
 21810                           ; BSR set to: 4
 21811  0019A0  B018               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 21812  0019A2  D006               	goto	i2l658
 21813                           
 21814                           ; BSR set to: 4
 21815                           ;usb_device.c: 2836: {
 21816                           ;usb_device.c: 2837: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 21817  0019A4  0EFB               	movlw	251
 21818  0019A6  1419               	andwf	USBStdFeatureReqHandler@p,w,c
 21819  0019A8  6E19               	movwf	USBStdFeatureReqHandler@p,c
 21820  0019AA  0EFF               	movlw	255
 21821  0019AC  141A               	andwf	USBStdFeatureReqHandler@p+1,w,c
 21822  0019AE  D004               	goto	L22
 21823  0019B0                     i2l658:
 21824                           
 21825                           ; BSR set to: 4
 21826                           ;usb_device.c: 2839: else
 21827                           ;usb_device.c: 2840: {
 21828                           ;usb_device.c: 2841: p = (BDT_ENTRY*)(((uintptr_t)p) | 0x0004);
 21829                           
 21830                           ; BSR set to: 4
 21831  0019B0  0E04               	movlw	4
 21832  0019B2  1019               	iorwf	USBStdFeatureReqHandler@p,w,c
 21833  0019B4  6E19               	movwf	USBStdFeatureReqHandler@p,c
 21834  0019B6  501A               	movf	USBStdFeatureReqHandler@p+1,w,c
 21835  0019B8                     L22:
 21836  0019B8  6E1A               	movwf	USBStdFeatureReqHandler@p+1,c
 21837                           
 21838                           ; BSR set to: 4
 21839                           ;usb_device.c: 2842: }
 21840                           ;usb_device.c: 2847: if(SetupPkt.EPDir == 0)
 21841                           
 21842                           ; BSR set to: 4
 21843  0019BA  BF34               	btfsc	52,7,b	;volatile
 21844  0019BC  D00A               	goto	i2l660
 21845                           
 21846                           ; BSR set to: 4
 21847                           ;usb_device.c: 2848: {
 21848                           ;usb_device.c: 2849: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 21849  0019BE  5134               	movf	52,w,b	;volatile
 21850  0019C0  0B0F               	andlw	15
 21851  0019C2  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21852  0019C4  5015               	movf	??_USBStdFeatureReqHandler,w,c
 21853  0019C6  0D02               	mullw	2
 21854  0019C8  0E8C               	movlw	low _pBDTEntryOut
 21855  0019CA  24F3               	addwf	prodl,w,c
 21856  0019CC  6ED9               	movwf	fsr2l,c
 21857  0019CE  0E01               	movlw	high _pBDTEntryOut
 21858  0019D0  D009               	goto	L23
 21859  0019D2                     i2l660:
 21860                           
 21861                           ; BSR set to: 4
 21862                           ;usb_device.c: 2851: else
 21863                           ;usb_device.c: 2852: {
 21864                           ;usb_device.c: 2853: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 21865                           
 21866                           ; BSR set to: 4
 21867  0019D2  5134               	movf	52,w,b	;volatile
 21868  0019D4  0B0F               	andlw	15
 21869  0019D6  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21870  0019D8  5015               	movf	??_USBStdFeatureReqHandler,w,c
 21871  0019DA  0D02               	mullw	2
 21872  0019DC  0E40               	movlw	low _pBDTEntryIn
 21873  0019DE  24F3               	addwf	prodl,w,c
 21874  0019E0  6ED9               	movwf	fsr2l,c
 21875  0019E2  0E00               	movlw	high _pBDTEntryIn
 21876  0019E4                     L23:
 21877  0019E4  20F4               	addwfc	prodh,w,c
 21878  0019E6  6EDA               	movwf	fsr2h,c
 21879  0019E8  C019  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 21880  0019EC  C01A  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 21881                           
 21882                           ; BSR set to: 4
 21883                           ;usb_device.c: 2854: }
 21884                           ;usb_device.c: 2857: if(SetupPkt.bRequest == 3)
 21885                           
 21886                           ; BSR set to: 4
 21887  0019F0  0E03               	movlw	3
 21888  0019F2  1931               	xorwf	49,w,b	;volatile
 21889  0019F4  A4D8               	btfss	status,2,c
 21890  0019F6  D02D               	goto	i2l662
 21891                           
 21892                           ; BSR set to: 4
 21893                           ;usb_device.c: 2858: {
 21894                           ;usb_device.c: 2859: if(p->STAT.UOWN == 1)
 21895  0019F8  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 21896  0019FC  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 21897  001A00  AEDF               	btfss	indf2,7,c
 21898  001A02  D01A               	goto	i2l665
 21899                           
 21900                           ; BSR set to: 4
 21901                           ;usb_device.c: 2860: {
 21902                           ;usb_device.c: 2863: if(SetupPkt.EPDir == 0)
 21903  001A04  BF34               	btfsc	52,7,b	;volatile
 21904  001A06  D00A               	goto	i2l664
 21905                           
 21906                           ; BSR set to: 4
 21907                           ;usb_device.c: 2864: {
 21908                           ;usb_device.c: 2865: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 21909  001A08  5134               	movf	52,w,b	;volatile
 21910  001A0A  0B0F               	andlw	15
 21911  001A0C  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21912  001A0E  5015               	movf	??_USBStdFeatureReqHandler,w,c
 21913  001A10  0D01               	mullw	1
 21914  001A12  0EB8               	movlw	low _ep_data_out
 21915  001A14  24F3               	addwf	prodl,w,c
 21916  001A16  6ED9               	movwf	fsr2l,c
 21917  001A18  0E01               	movlw	high _ep_data_out
 21918  001A1A  D00A               	goto	L24
 21919  001A1C                     i2l664:
 21920                           
 21921                           ;usb_device.c: 2867: else
 21922                           ;usb_device.c: 2868: {
 21923                           ;usb_device.c: 2869: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 21924                           
 21925                           ; BSR set to: 1
 21926  001A1C  0104               	movlb	4	; () banked
 21927  001A1E  5134               	movf	52,w,b	;volatile
 21928  001A20  0B0F               	andlw	15
 21929  001A22  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21930  001A24  5015               	movf	??_USBStdFeatureReqHandler,w,c
 21931  001A26  0D01               	mullw	1
 21932  001A28  0EBB               	movlw	low _ep_data_in
 21933  001A2A  24F3               	addwf	prodl,w,c
 21934  001A2C  6ED9               	movwf	fsr2l,c
 21935  001A2E  0E01               	movlw	high _ep_data_in
 21936  001A30                     L24:
 21937  001A30  20F4               	addwfc	prodh,w,c
 21938  001A32  6EDA               	movwf	fsr2h,c
 21939  001A34  0101               	movlb	1	; () banked
 21940  001A36  82DF               	bsf	indf2,1,c
 21941  001A38                     i2l665:
 21942                           
 21943                           ;usb_device.c: 2870: }
 21944                           ;usb_device.c: 2871: }
 21945                           ;usb_device.c: 2874: p->STAT.Val |= 0x04;
 21946                           
 21947                           ; BSR set to: 1
 21948                           
 21949                           ; BSR set to: 1
 21950  001A38  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 21951  001A3C  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 21952  001A40  0E00               	movlw	0
 21953  001A42  84DB               	bsf	plusw2,2,c
 21954                           
 21955                           ;usb_device.c: 2875: p->STAT.Val |= 0x80;
 21956  001A44  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 21957  001A48  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 21958  001A4C  0E00               	movlw	0
 21959  001A4E  8EDB               	bsf	plusw2,7,c
 21960                           
 21961                           ;usb_device.c: 2876: }
 21962  001A50  0012               	return	
 21963  001A52                     i2l662:
 21964                           
 21965                           ;usb_device.c: 2877: else
 21966                           ;usb_device.c: 2878: {
 21967                           ;usb_device.c: 2882: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 21968  001A52  0E04               	movlw	4
 21969  001A54  1819               	xorwf	USBStdFeatureReqHandler@p,w,c
 21970  001A56  6E19               	movwf	USBStdFeatureReqHandler@p,c
 21971  001A58  501A               	movf	USBStdFeatureReqHandler@p+1,w,c
 21972  001A5A  6E1A               	movwf	USBStdFeatureReqHandler@p+1,c
 21973                           
 21974                           ;usb_device.c: 2884: if(p->STAT.UOWN == 1)
 21975  001A5C  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 21976  001A60  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 21977  001A64  AEDF               	btfss	indf2,7,c
 21978  001A66  D01B               	goto	i2l667
 21979                           
 21980                           ;usb_device.c: 2885: {
 21981                           ;usb_device.c: 2888: p->STAT.Val &= (~0x80);
 21982  001A68  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 21983  001A6C  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 21984  001A70  0E7F               	movlw	127
 21985  001A72  16DF               	andwf	indf2,f,c
 21986                           
 21987                           ;usb_device.c: 2889: p->STAT.Val |= 0x40;
 21988  001A74  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 21989  001A78  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 21990  001A7C  0E00               	movlw	0
 21991  001A7E  8CDB               	bsf	plusw2,6,c
 21992                           
 21993                           ;usb_device.c: 2890: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 21994  001A80  0E00               	movlw	0
 21995  001A82  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 21996  001A84  0E05               	movlw	5
 21997  001A86  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 21998  001A88  C019  F00F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 21999  001A8C  C01A  F010         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 22000  001A90  0E00               	movlw	0
 22001  001A92  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 22002  001A94  0E02               	movlw	2
 22003  001A96  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 22004  001A98  EC69  F024         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 22005                           
 22006                           ;usb_device.c: 2891: }
 22007  001A9C  D006               	goto	i2l668
 22008  001A9E                     i2l667:
 22009                           
 22010                           ;usb_device.c: 2892: else
 22011                           ;usb_device.c: 2893: {
 22012                           ;usb_device.c: 2895: p->STAT.Val |= 0x40;
 22013  001A9E  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 22014  001AA2  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 22015  001AA6  0E00               	movlw	0
 22016  001AA8  8CDB               	bsf	plusw2,6,c
 22017  001AAA                     i2l668:
 22018                           
 22019                           ;usb_device.c: 2896: }
 22020                           ;usb_device.c: 2900: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 22021  001AAA  0E04               	movlw	4
 22022  001AAC  1819               	xorwf	USBStdFeatureReqHandler@p,w,c
 22023  001AAE  6E19               	movwf	USBStdFeatureReqHandler@p,c
 22024  001AB0  501A               	movf	USBStdFeatureReqHandler@p+1,w,c
 22025  001AB2  6E1A               	movwf	USBStdFeatureReqHandler@p+1,c
 22026                           
 22027                           ;usb_device.c: 2906: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 22028  001AB4  B218               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 22029  001AB6  D006               	goto	i2u629_40
 22030  001AB8  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 22031  001ABC  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 22032  001AC0  AEDF               	btfss	indf2,7,c
 22033  001AC2  D030               	goto	i2l669
 22034  001AC4                     i2u629_40:
 22035                           
 22036                           ;usb_device.c: 2907: {
 22037                           ;usb_device.c: 2908: if(SetupPkt.EPDir == 0)
 22038  001AC4  0104               	movlb	4	; () banked
 22039  001AC6  BF34               	btfsc	52,7,b	;volatile
 22040  001AC8  D00A               	goto	i2l672
 22041                           
 22042                           ; BSR set to: 4
 22043                           ;usb_device.c: 2909: {
 22044                           ;usb_device.c: 2910: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 22045  001ACA  5134               	movf	52,w,b	;volatile
 22046  001ACC  0B0F               	andlw	15
 22047  001ACE  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 22048  001AD0  5015               	movf	??_USBStdFeatureReqHandler,w,c
 22049  001AD2  0D01               	mullw	1
 22050  001AD4  0EB8               	movlw	low _ep_data_out
 22051  001AD6  24F3               	addwf	prodl,w,c
 22052  001AD8  6ED9               	movwf	fsr2l,c
 22053  001ADA  0E01               	movlw	high _ep_data_out
 22054  001ADC  D00A               	goto	L25
 22055  001ADE                     i2l672:
 22056                           
 22057                           ;usb_device.c: 2912: else
 22058                           ;usb_device.c: 2913: {
 22059                           ;usb_device.c: 2914: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 22060                           
 22061                           ; BSR set to: 1
 22062  001ADE  0104               	movlb	4	; () banked
 22063  001AE0  5134               	movf	52,w,b	;volatile
 22064  001AE2  0B0F               	andlw	15
 22065  001AE4  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 22066  001AE6  5015               	movf	??_USBStdFeatureReqHandler,w,c
 22067  001AE8  0D01               	mullw	1
 22068  001AEA  0EBB               	movlw	low _ep_data_in
 22069  001AEC  24F3               	addwf	prodl,w,c
 22070  001AEE  6ED9               	movwf	fsr2l,c
 22071  001AF0  0E01               	movlw	high _ep_data_in
 22072  001AF2                     L25:
 22073  001AF2  20F4               	addwfc	prodh,w,c
 22074  001AF4  6EDA               	movwf	fsr2h,c
 22075  001AF6  0101               	movlb	1	; () banked
 22076  001AF8  92DF               	bcf	indf2,1,c
 22077                           
 22078                           ; BSR set to: 1
 22079                           ;usb_device.c: 2915: }
 22080                           ;usb_device.c: 2917: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 22081                           
 22082                           ; BSR set to: 1
 22083  001AFA  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 22084  001AFE  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 22085  001B02  0E3B               	movlw	59
 22086  001B04  16DF               	andwf	indf2,f,c
 22087                           
 22088                           ; BSR set to: 1
 22089                           ;usb_device.c: 2920: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 22090  001B06  0E00               	movlw	0
 22091  001B08  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 22092  001B0A  0E05               	movlw	5
 22093  001B0C  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 22094  001B0E  C019  F00F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 22095  001B12  C01A  F010         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 22096  001B16  0E00               	movlw	0
 22097  001B18  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 22098  001B1A  0E02               	movlw	2
 22099  001B1C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 22100  001B1E  EC69  F024         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 22101                           
 22102                           ;usb_device.c: 2921: }
 22103  001B22  D006               	goto	i2l674
 22104  001B24                     i2l669:
 22105                           
 22106                           ;usb_device.c: 2922: else
 22107                           ;usb_device.c: 2923: {
 22108                           ;usb_device.c: 2925: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 22109  001B24  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 22110  001B28  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 22111  001B2C  0E3B               	movlw	59
 22112  001B2E  16DF               	andwf	indf2,f,c
 22113  001B30                     i2l674:
 22114                           
 22115                           ;usb_device.c: 2926: }
 22116                           ;usb_device.c: 2973: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 22117  001B30  0104               	movlb	4	; () banked
 22118  001B32  5134               	movf	52,w,b	;volatile
 22119  001B34  0B0F               	andlw	15
 22120  001B36  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 22121  001B38  5015               	movf	??_USBStdFeatureReqHandler,w,c
 22122  001B3A  0D01               	mullw	1
 22123  001B3C  0E70               	movlw	112
 22124  001B3E  24F3               	addwf	prodl,w,c
 22125  001B40  6E16               	movwf	USBStdFeatureReqHandler@pUEP,c
 22126  001B42  0E0F               	movlw	15
 22127  001B44  20F4               	addwfc	prodh,w,c
 22128  001B46  6E17               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 22129                           
 22130                           ; BSR set to: 4
 22131                           ;usb_device.c: 2977: *pUEP &= ~0x0001;
 22132  001B48  C016  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 22133  001B4C  C017  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 22134  001B50  0EFE               	movlw	254
 22135  001B52  16DF               	andwf	indf2,f,c
 22136                           
 22137                           ; BSR set to: 4
 22138  001B54  0012               	return	
 22139  001B56                     __end_of_USBStdFeatureReqHandler:
 22140                           	opt stack 0
 22141                           pclatu	equ	0xFFB
 22142                           pclath	equ	0xFFA
 22143                           tblptru	equ	0xFF8
 22144                           tblptrh	equ	0xFF7
 22145                           tblptrl	equ	0xFF6
 22146                           tablat	equ	0xFF5
 22147                           prodh	equ	0xFF4
 22148                           prodl	equ	0xFF3
 22149                           intcon	equ	0xFF2
 22150                           indf0	equ	0xFEF
 22151                           postinc0	equ	0xFEE
 22152                           fsr0h	equ	0xFEA
 22153                           fsr0l	equ	0xFE9
 22154                           wreg	equ	0xFE8
 22155                           indf1	equ	0xFE7
 22156                           postdec1	equ	0xFE5
 22157                           fsr1h	equ	0xFE2
 22158                           fsr1l	equ	0xFE1
 22159                           indf2	equ	0xFDF
 22160                           postinc2	equ	0xFDE
 22161                           postdec2	equ	0xFDD
 22162                           plusw2	equ	0xFDB
 22163                           fsr2h	equ	0xFDA
 22164                           fsr2l	equ	0xFD9
 22165                           status	equ	0xFD8
 22166                           
 22167 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 22168 ;; Defined at:
 22169 ;;		line 29 in file "usb/usb_events.c"
 22170 ;; Parameters:    Size  Location     Type
 22171 ;;  event           2   12[COMRAM] enum E4185
 22172 ;;  pdata           2   14[COMRAM] PTR void 
 22173 ;;		 -> RAM(2047), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 22174 ;;		 -> BDT(48), 
 22175 ;;  size            2   16[COMRAM] unsigned int 
 22176 ;; Auto vars:     Size  Location     Type
 22177 ;;		None
 22178 ;; Return value:  Size  Location     Type
 22179 ;;                  1    wreg      unsigned char 
 22180 ;; Registers used:
 22181 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22182 ;; Tracked objects:
 22183 ;;		On entry : 0/0
 22184 ;;		On exit  : 0/0
 22185 ;;		Unchanged: 0/0
 22186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22187 ;;      Params:         6       0       0       0       0       0       0       0       0
 22188 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22189 ;;      Temps:          2       0       0       0       0       0       0       0       0
 22190 ;;      Totals:         8       0       0       0       0       0       0       0       0
 22191 ;;Total ram usage:        8 bytes
 22192 ;; Hardware stack levels used:    1
 22193 ;; Hardware stack levels required when called:    3
 22194 ;; This function calls:
 22195 ;;		_CDCInitEP
 22196 ;;		_USBCheckCDCRequest
 22197 ;; This function is called by:
 22198 ;;		_USBDeviceTasks
 22199 ;;		_USBStdSetCfgHandler
 22200 ;;		_USBSuspend
 22201 ;;		_USBWakeFromSuspend
 22202 ;;		_USBCtrlTrfSetupHandler
 22203 ;;		_USBCheckStdRequest
 22204 ;;		_USBStdFeatureReqHandler
 22205 ;; This function uses a non-reentrant model
 22206 ;;
 22207                           
 22208                           	psect	text88
 22209  0048D2                     __ptext88:
 22210                           	opt stack 0
 22211  0048D2                     _USER_USB_CALLBACK_EVENT_HANDLER:
 22212                           	opt stack 20
 22213                           
 22214                           ;usb_events.c: 31: switch( (int) event )
 22215                           
 22216                           ;incstack = 0
 22217  0048D2  D006               	goto	i2l273
 22218  0048D4                     
 22219                           ;usb_events.c: 56: CDCInitEP();
 22220  0048D4  ECAA  F023         	call	_CDCInitEP	;wreg free
 22221                           
 22222                           ;usb_events.c: 60: break;
 22223                           
 22224                           ;usb_events.c: 59: case EVENT_SET_DESCRIPTOR:
 22225                           
 22226                           ;usb_events.c: 57: break;
 22227  0048D8  0012               	return	
 22228  0048DA                     
 22229                           ;usb_events.c: 65: USBCheckCDCRequest();
 22230  0048DA  EC6D  F01E         	call	_USBCheckCDCRequest	;wreg free
 22231                           
 22232                           ;usb_events.c: 76: }
 22233                           
 22234                           ;usb_events.c: 75: break;
 22235                           
 22236                           ;usb_events.c: 74: default:
 22237                           
 22238                           ;usb_events.c: 72: break;
 22239                           
 22240                           ;usb_events.c: 71: case EVENT_TRANSFER_TERMINATED:
 22241                           
 22242                           ;usb_events.c: 69: break;
 22243                           
 22244                           ;usb_events.c: 68: case EVENT_BUS_ERROR:
 22245                           
 22246                           ;usb_events.c: 66: break;
 22247  0048DE  0012               	return	
 22248  0048E0                     i2l273:
 22249  0048E0  C00D  F013         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 22250  0048E4  C00E  F014         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 22251                           
 22252                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 22253                           ; Switch size 1, requested type "space"
 22254                           ; Number of cases is 2, Range of values is 0 to 127
 22255                           ; switch strategies available:
 22256                           ; Name         Instructions Cycles
 22257                           ; simple_byte            7     4 (average)
 22258                           ;	Chosen strategy is simple_byte
 22259  0048E8  5014               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 22260  0048EA  0A00               	xorlw	0	; case 0
 22261  0048EC  B4D8               	btfsc	status,2,c
 22262  0048EE  D004               	goto	i2l11373
 22263  0048F0  0A7F               	xorlw	127	; case 127
 22264  0048F2  A4D8               	btfss	status,2,c
 22265  0048F4  0012               	return	
 22266  0048F6  D018               	goto	i2l11375
 22267  0048F8                     i2l11373:
 22268                           
 22269                           ; Switch size 1, requested type "space"
 22270                           ; Number of cases is 8, Range of values is 1 to 117
 22271                           ; switch strategies available:
 22272                           ; Name         Instructions Cycles
 22273                           ; simple_byte           25    13 (average)
 22274                           ;	Chosen strategy is simple_byte
 22275  0048F8  5013               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 22276  0048FA  0A01               	xorlw	1	; case 1
 22277  0048FC  B4D8               	btfsc	status,2,c
 22278  0048FE  D7EA               	goto	i2l279
 22279  004900  0A03               	xorlw	3	; case 2
 22280  004902  B4D8               	btfsc	status,2,c
 22281  004904  0012               	return	
 22282  004906  0A01               	xorlw	1	; case 3
 22283  004908  B4D8               	btfsc	status,2,c
 22284  00490A  D7E7               	goto	i2l281
 22285  00490C  0A06               	xorlw	6	; case 5
 22286  00490E  B4D8               	btfsc	status,2,c
 22287  004910  0012               	return	
 22288  004912  0A77               	xorlw	119	; case 114
 22289  004914  B4D8               	btfsc	status,2,c
 22290  004916  0012               	return	
 22291  004918  0A01               	xorlw	1	; case 115
 22292  00491A  B4D8               	btfsc	status,2,c
 22293  00491C  0012               	return	
 22294  00491E  0A07               	xorlw	7	; case 116
 22295  004920  B4D8               	btfsc	status,2,c
 22296  004922  0012               	return	
 22297  004924  0A01               	xorlw	1	; case 117
 22298  004926  0012               	return	
 22299  004928                     i2l11375:
 22300                           
 22301                           ; Switch size 1, requested type "space"
 22302                           ; Number of cases is 1, Range of values is 255 to 255
 22303                           ; switch strategies available:
 22304                           ; Name         Instructions Cycles
 22305                           ; simple_byte            4     3 (average)
 22306                           ;	Chosen strategy is simple_byte
 22307  004928  5013               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 22308  00492A  0AFF               	xorlw	255	; case 255
 22309  00492C  0012               	return	
 22310  00492E                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 22311                           	opt stack 0
 22312                           pclatu	equ	0xFFB
 22313                           pclath	equ	0xFFA
 22314                           tblptru	equ	0xFF8
 22315                           tblptrh	equ	0xFF7
 22316                           tblptrl	equ	0xFF6
 22317                           tablat	equ	0xFF5
 22318                           prodh	equ	0xFF4
 22319                           prodl	equ	0xFF3
 22320                           intcon	equ	0xFF2
 22321                           indf0	equ	0xFEF
 22322                           postinc0	equ	0xFEE
 22323                           fsr0h	equ	0xFEA
 22324                           fsr0l	equ	0xFE9
 22325                           wreg	equ	0xFE8
 22326                           indf1	equ	0xFE7
 22327                           postdec1	equ	0xFE5
 22328                           fsr1h	equ	0xFE2
 22329                           fsr1l	equ	0xFE1
 22330                           indf2	equ	0xFDF
 22331                           postinc2	equ	0xFDE
 22332                           postdec2	equ	0xFDD
 22333                           plusw2	equ	0xFDB
 22334                           fsr2h	equ	0xFDA
 22335                           fsr2l	equ	0xFD9
 22336                           status	equ	0xFD8
 22337                           
 22338 ;; *************** function _USBCheckCDCRequest *****************
 22339 ;; Defined at:
 22340 ;;		line 147 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device_cdc.c"
 22341 ;; Parameters:    Size  Location     Type
 22342 ;;		None
 22343 ;; Auto vars:     Size  Location     Type
 22344 ;;		None
 22345 ;; Return value:  Size  Location     Type
 22346 ;;                  1    wreg      void 
 22347 ;; Registers used:
 22348 ;;		wreg, status,2, status,0
 22349 ;; Tracked objects:
 22350 ;;		On entry : 0/0
 22351 ;;		On exit  : 0/0
 22352 ;;		Unchanged: 0/0
 22353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22354 ;;      Params:         0       0       0       0       0       0       0       0       0
 22355 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22356 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22357 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22358 ;;Total ram usage:        0 bytes
 22359 ;; Hardware stack levels used:    1
 22360 ;; This function calls:
 22361 ;;		Nothing
 22362 ;; This function is called by:
 22363 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 22364 ;; This function uses a non-reentrant model
 22365 ;;
 22366                           
 22367                           	psect	text89
 22368  003CDA                     __ptext89:
 22369                           	opt stack 0
 22370  003CDA                     _USBCheckCDCRequest:
 22371                           	opt stack 22
 22372                           
 22373                           ;usb_device_cdc.c: 152: if(SetupPkt.Recipient != (0x01)) return;
 22374                           
 22375                           ;incstack = 0
 22376  003CDA  0104               	movlb	4	; () banked
 22377  003CDC  5130               	movf	48,w,b	;volatile
 22378  003CDE  0B1F               	andlw	31
 22379  003CE0  06E8               	decf	wreg,f,c
 22380  003CE2  A4D8               	btfss	status,2,c
 22381  003CE4  0012               	return	
 22382                           
 22383                           ; BSR set to: 4
 22384                           ;usb_device_cdc.c: 157: if(SetupPkt.RequestType != (0x20>>5)) return;
 22385                           
 22386                           ; BSR set to: 4
 22387                           
 22388                           ; BSR set to: 4
 22389  003CE6  3930               	swapf	48,w,b	;volatile
 22390  003CE8  32E8               	rrcf	wreg,f,c
 22391  003CEA  0B03               	andlw	3
 22392  003CEC  06E8               	decf	wreg,f,c
 22393  003CEE  A4D8               	btfss	status,2,c
 22394  003CF0  0012               	return	
 22395                           
 22396                           ; BSR set to: 4
 22397                           ;usb_device_cdc.c: 163: if((SetupPkt.bIntfID != 0x0)&&
 22398                           ;usb_device_cdc.c: 164: (SetupPkt.bIntfID != 0x01)) return;
 22399                           
 22400                           ; BSR set to: 4
 22401                           
 22402                           ; BSR set to: 4
 22403  003CF2  5134               	movf	52,w,b	;volatile
 22404  003CF4  B4D8               	btfsc	status,2,c
 22405  003CF6  D036               	goto	i2l844
 22406                           
 22407                           ; BSR set to: 4
 22408  003CF8  0534               	decf	52,w,b	;volatile
 22409  003CFA  A4D8               	btfss	status,2,c
 22410  003CFC  0012               	return	
 22411  003CFE  D032               	goto	i2l844
 22412  003D00                     
 22413                           ; BSR set to: 4
 22414                           ;usb_device_cdc.c: 171: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 22415                           
 22416                           ; BSR set to: 4
 22417  003D00  0EE6               	movlw	low _dummy_encapsulated_cmd_response
 22418  003D02  0100               	movlb	0	; () banked
 22419  003D04  6FF9               	movwf	_inPipes& (0+255),b	;volatile
 22420  003D06  0E02               	movlw	high _dummy_encapsulated_cmd_response
 22421  003D08  6FFA               	movwf	(_inPipes+1)& (0+255),b	;volatile
 22422                           
 22423                           ; BSR set to: 0
 22424                           ;usb_device_cdc.c: 172: inPipes[0].wCount.Val = 0x08;
 22425  003D0A  0E00               	movlw	0
 22426  003D0C  6FFE               	movwf	(_inPipes+5)& (0+255),b	;volatile
 22427  003D0E  0E08               	movlw	8
 22428  003D10  6FFD               	movwf	(_inPipes+4)& (0+255),b	;volatile
 22429                           
 22430                           ; BSR set to: 0
 22431                           ;usb_device_cdc.c: 173: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 22432  003D12  81FC               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 22433                           
 22434                           ; BSR set to: 0
 22435                           ;usb_device_cdc.c: 174: inPipes[0].info.bits.busy = 1;
 22436  003D14  8FFC               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 22437                           
 22438                           ;usb_device_cdc.c: 175: break;
 22439  003D16  0012               	return	
 22440  003D18                     
 22441                           ;usb_device_cdc.c: 178: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 22442                           
 22443                           ; BSR set to: 0
 22444  003D18  0EE6               	movlw	low _dummy_encapsulated_cmd_response
 22445  003D1A  0100               	movlb	0	; () banked
 22446  003D1C  6FF9               	movwf	_inPipes& (0+255),b	;volatile
 22447  003D1E  0E02               	movlw	high _dummy_encapsulated_cmd_response
 22448  003D20  6FFA               	movwf	(_inPipes+1)& (0+255),b	;volatile
 22449                           
 22450                           ; BSR set to: 0
 22451                           ;usb_device_cdc.c: 179: inPipes[0].info.bits.busy = 1;
 22452  003D22  8FFC               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 22453                           
 22454                           ;usb_device_cdc.c: 180: break;
 22455  003D24  0012               	return	
 22456  003D26                     i2l848:
 22457                           
 22458                           ; BSR set to: 4
 22459                           ;usb_device_cdc.c: 185: outPipes[0].wCount.Val = SetupPkt.wLength;
 22460  003D26  C436 F03C          	movff	1078,_outPipes+4	;volatile
 22461  003D2A  C437 F03D          	movff	1079,_outPipes+5	;volatile
 22462                           
 22463                           ; BSR set to: 4
 22464                           ;usb_device_cdc.c: 186: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 22465  003D2E  0EF1               	movlw	low _line_coding
 22466  003D30  6E38               	movwf	_outPipes,c	;volatile
 22467  003D32  0E01               	movlw	high _line_coding
 22468  003D34  6E39               	movwf	_outPipes+1,c	;volatile
 22469                           
 22470                           ;usb_device_cdc.c: 187: outPipes[0].pFunc = (0);
 22471  003D36  0E00               	movlw	0
 22472  003D38  6E3E               	movwf	_outPipes+6,c	;volatile
 22473  003D3A  0E00               	movlw	0
 22474  003D3C  6E3F               	movwf	_outPipes+7,c	;volatile
 22475                           
 22476                           ; BSR set to: 4
 22477                           ;usb_device_cdc.c: 188: outPipes[0].info.bits.busy = 1;
 22478  003D3E  8E3B               	bsf	_outPipes+3,7,c	;volatile
 22479                           
 22480                           ;usb_device_cdc.c: 189: break;
 22481  003D40  0012               	return	
 22482  003D42                     
 22483                           ; BSR set to: 4
 22484                           ;usb_device_cdc.c: 192: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 22485                           
 22486                           ; BSR set to: 4
 22487  003D42  0EF1               	movlw	low _line_coding
 22488  003D44  0100               	movlb	0	; () banked
 22489  003D46  6FF9               	movwf	_inPipes& (0+255),b	;volatile
 22490  003D48  0E01               	movlw	high _line_coding
 22491  003D4A  6FFA               	movwf	(_inPipes+1)& (0+255),b	;volatile
 22492                           
 22493                           ; BSR set to: 0
 22494  003D4C  0E00               	movlw	0
 22495  003D4E  6FFE               	movwf	(_inPipes+5)& (0+255),b	;volatile
 22496  003D50  0E07               	movlw	7
 22497  003D52  6FFD               	movwf	(_inPipes+4)& (0+255),b	;volatile
 22498                           
 22499                           ; BSR set to: 0
 22500  003D54  0EC1               	movlw	193
 22501  003D56  6FFC               	movwf	(_inPipes+3)& (0+255),b	;volatile
 22502                           
 22503                           ;usb_device_cdc.c: 196: break;
 22504  003D58  0012               	return	
 22505  003D5A                     i2l850:
 22506                           
 22507                           ; BSR set to: 4
 22508                           ;usb_device_cdc.c: 199: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 22509  003D5A  C432 F1D1          	movff	1074,_control_signal_bitmap	;volatile
 22510                           
 22511                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
 22512  003D5E  0100               	movlb	0	; () banked
 22513  003D60  8FFC               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 22514                           
 22515                           ; BSR set to: 0
 22516                           ;usb_device_cdc.c: 258: }
 22517                           
 22518                           ; BSR set to: 0
 22519                           ;usb_device_cdc.c: 257: break;
 22520                           
 22521                           ;usb_device_cdc.c: 256: default:
 22522                           
 22523                           ;usb_device_cdc.c: 232: break;
 22524  003D62  0012               	return	
 22525  003D64                     i2l844:
 22526                           
 22527                           ; BSR set to: 0
 22528  003D64  0104               	movlb	4	; () banked
 22529  003D66  5131               	movf	49,w,b	;volatile
 22530                           
 22531                           ; Switch size 1, requested type "space"
 22532                           ; Number of cases is 5, Range of values is 0 to 34
 22533                           ; switch strategies available:
 22534                           ; Name         Instructions Cycles
 22535                           ; simple_byte           16     9 (average)
 22536                           ;	Chosen strategy is simple_byte
 22537  003D68  0A00               	xorlw	0	; case 0
 22538  003D6A  B4D8               	btfsc	status,2,c
 22539  003D6C  D7C9               	goto	i2l845
 22540  003D6E  0A01               	xorlw	1	; case 1
 22541  003D70  B4D8               	btfsc	status,2,c
 22542  003D72  D7D2               	goto	i2l847
 22543  003D74  0A21               	xorlw	33	; case 32
 22544  003D76  B4D8               	btfsc	status,2,c
 22545  003D78  D7D6               	goto	i2l848
 22546  003D7A  0A01               	xorlw	1	; case 33
 22547  003D7C  B4D8               	btfsc	status,2,c
 22548  003D7E  D7E1               	goto	i2l849
 22549  003D80  0A03               	xorlw	3	; case 34
 22550  003D82  A4D8               	btfss	status,2,c
 22551  003D84  0012               	return	
 22552  003D86  D7E9               	goto	i2l850
 22553  003D88                     __end_of_USBCheckCDCRequest:
 22554                           	opt stack 0
 22555                           pclatu	equ	0xFFB
 22556                           pclath	equ	0xFFA
 22557                           tblptru	equ	0xFF8
 22558                           tblptrh	equ	0xFF7
 22559                           tblptrl	equ	0xFF6
 22560                           tablat	equ	0xFF5
 22561                           prodh	equ	0xFF4
 22562                           prodl	equ	0xFF3
 22563                           intcon	equ	0xFF2
 22564                           indf0	equ	0xFEF
 22565                           postinc0	equ	0xFEE
 22566                           fsr0h	equ	0xFEA
 22567                           fsr0l	equ	0xFE9
 22568                           wreg	equ	0xFE8
 22569                           indf1	equ	0xFE7
 22570                           postdec1	equ	0xFE5
 22571                           fsr1h	equ	0xFE2
 22572                           fsr1l	equ	0xFE1
 22573                           indf2	equ	0xFDF
 22574                           postinc2	equ	0xFDE
 22575                           postdec2	equ	0xFDD
 22576                           plusw2	equ	0xFDB
 22577                           fsr2h	equ	0xFDA
 22578                           fsr2l	equ	0xFD9
 22579                           status	equ	0xFD8
 22580                           
 22581 ;; *************** function _CDCInitEP *****************
 22582 ;; Defined at:
 22583 ;;		line 294 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device_cdc.c"
 22584 ;; Parameters:    Size  Location     Type
 22585 ;;		None
 22586 ;; Auto vars:     Size  Location     Type
 22587 ;;		None
 22588 ;; Return value:  Size  Location     Type
 22589 ;;                  1    wreg      void 
 22590 ;; Registers used:
 22591 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22592 ;; Tracked objects:
 22593 ;;		On entry : 0/0
 22594 ;;		On exit  : 0/0
 22595 ;;		Unchanged: 0/0
 22596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22597 ;;      Params:         0       0       0       0       0       0       0       0       0
 22598 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22599 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22600 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22601 ;;Total ram usage:        0 bytes
 22602 ;; Hardware stack levels used:    1
 22603 ;; Hardware stack levels required when called:    2
 22604 ;; This function calls:
 22605 ;;		_USBEnableEndpoint
 22606 ;;		i2_USBTransferOnePacket
 22607 ;; This function is called by:
 22608 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 22609 ;; This function uses a non-reentrant model
 22610 ;;
 22611                           
 22612                           	psect	text90
 22613  004754                     __ptext90:
 22614                           	opt stack 0
 22615  004754                     _CDCInitEP:
 22616                           	opt stack 20
 22617                           
 22618                           ;usb_device_cdc.c: 297: line_coding.dwDTERate = 19200;
 22619                           
 22620                           ;incstack = 0
 22621  004754  0E00               	movlw	0
 22622  004756  0101               	movlb	1	; () banked
 22623  004758  6FF1               	movwf	_line_coding& (0+255),b
 22624  00475A  0E4B               	movlw	75
 22625  00475C  6FF2               	movwf	(_line_coding+1)& (0+255),b
 22626  00475E  0E00               	movlw	0
 22627  004760  6FF3               	movwf	(_line_coding+2)& (0+255),b
 22628  004762  0E00               	movlw	0
 22629  004764  6FF4               	movwf	(_line_coding+3)& (0+255),b
 22630                           
 22631                           ;usb_device_cdc.c: 298: line_coding.bCharFormat = 0x00;
 22632  004766  0E00               	movlw	0
 22633  004768  6FF5               	movwf	(_line_coding+4)& (0+255),b
 22634                           
 22635                           ;usb_device_cdc.c: 299: line_coding.bParityType = 0x00;
 22636  00476A  0E00               	movlw	0
 22637  00476C  6FF6               	movwf	(_line_coding+5)& (0+255),b
 22638                           
 22639                           ;usb_device_cdc.c: 300: line_coding.bDataBits = 0x08;
 22640  00476E  0E08               	movlw	8
 22641  004770  6FF7               	movwf	(_line_coding+6)& (0+255),b
 22642                           
 22643                           ;usb_device_cdc.c: 302: cdc_rx_len = 0;
 22644  004772  0E00               	movlw	0
 22645  004774  6E52               	movwf	_cdc_rx_len,c
 22646                           
 22647                           ; BSR set to: 1
 22648                           ;usb_device_cdc.c: 315: USBEnableEndpoint(1,0x02|0x10|0x08);
 22649  004776  0E1A               	movlw	26
 22650  004778  6E09               	movwf	USBEnableEndpoint@options,c
 22651  00477A  0E01               	movlw	1
 22652  00477C  EC45  F027         	call	_USBEnableEndpoint
 22653                           
 22654                           ;usb_device_cdc.c: 316: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 22655  004780  0E1E               	movlw	30
 22656  004782  6E09               	movwf	USBEnableEndpoint@options,c
 22657  004784  0E02               	movlw	2
 22658  004786  EC45  F027         	call	_USBEnableEndpoint
 22659                           
 22660                           ;usb_device_cdc.c: 318: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 22661  00478A  0E00               	movlw	0
 22662  00478C  6E01               	movwf	i2USBTransferOnePacket@dir,c
 22663  00478E  0E40               	movlw	64
 22664  004790  6E02               	movwf	i2USBTransferOnePacket@data,c
 22665  004792  0E05               	movlw	5
 22666  004794  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 22667  004796  0E40               	movlw	64
 22668  004798  6E04               	movwf	i2USBTransferOnePacket@len,c
 22669  00479A  0E02               	movlw	2
 22670  00479C  EC7B  F017         	call	i2_USBTransferOnePacket
 22671  0047A0  C001  F04A         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 22672  0047A4  C002  F04B         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 22673                           
 22674                           ;usb_device_cdc.c: 319: CDCDataInHandle = (0);
 22675  0047A8  0E00               	movlw	0
 22676  0047AA  0101               	movlb	1	; () banked
 22677  0047AC  6FC0               	movwf	_CDCDataInHandle& (0+255),b
 22678  0047AE  0E00               	movlw	0
 22679  0047B0  6FC1               	movwf	(_CDCDataInHandle+1)& (0+255),b
 22680                           
 22681                           ; BSR set to: 1
 22682                           ;usb_device_cdc.c: 346: cdc_trf_state = 0;
 22683  0047B2  0E00               	movlw	0
 22684  0047B4  0100               	movlb	0	; () banked
 22685  0047B6  6FFF               	movwf	_cdc_trf_state& (0+255),b
 22686                           
 22687                           ; BSR set to: 0
 22688  0047B8  0012               	return		;funcret
 22689  0047BA                     __end_of_CDCInitEP:
 22690                           	opt stack 0
 22691                           pclatu	equ	0xFFB
 22692                           pclath	equ	0xFFA
 22693                           tblptru	equ	0xFF8
 22694                           tblptrh	equ	0xFF7
 22695                           tblptrl	equ	0xFF6
 22696                           tablat	equ	0xFF5
 22697                           prodh	equ	0xFF4
 22698                           prodl	equ	0xFF3
 22699                           intcon	equ	0xFF2
 22700                           indf0	equ	0xFEF
 22701                           postinc0	equ	0xFEE
 22702                           fsr0h	equ	0xFEA
 22703                           fsr0l	equ	0xFE9
 22704                           wreg	equ	0xFE8
 22705                           indf1	equ	0xFE7
 22706                           postdec1	equ	0xFE5
 22707                           fsr1h	equ	0xFE2
 22708                           fsr1l	equ	0xFE1
 22709                           indf2	equ	0xFDF
 22710                           postinc2	equ	0xFDE
 22711                           postdec2	equ	0xFDD
 22712                           plusw2	equ	0xFDB
 22713                           fsr2h	equ	0xFDA
 22714                           fsr2l	equ	0xFD9
 22715                           status	equ	0xFD8
 22716                           
 22717 ;; *************** function i2_USBTransferOnePacket *****************
 22718 ;; Defined at:
 22719 ;;		line 995 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 22720 ;; Parameters:    Size  Location     Type
 22721 ;;  ep              1    wreg     unsigned char 
 22722 ;;  dir             1    0[COMRAM] unsigned char 
 22723 ;;  data            2    1[COMRAM] PTR unsigned char 
 22724 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 22725 ;;  len             1    3[COMRAM] unsigned char 
 22726 ;; Auto vars:     Size  Location     Type
 22727 ;;  ep              1    8[COMRAM] unsigned char 
 22728 ;;  USBTransferO    2    9[COMRAM] PTR volatile struct __BD
 22729 ;;		 -> RAM(2047), NULL(0), BDT(48), 
 22730 ;; Return value:  Size  Location     Type
 22731 ;;                  2    0[COMRAM] PTR void 
 22732 ;; Registers used:
 22733 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22734 ;; Tracked objects:
 22735 ;;		On entry : 0/0
 22736 ;;		On exit  : 0/0
 22737 ;;		Unchanged: 0/0
 22738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22739 ;;      Params:         4       0       0       0       0       0       0       0       0
 22740 ;;      Locals:         3       0       0       0       0       0       0       0       0
 22741 ;;      Temps:          4       0       0       0       0       0       0       0       0
 22742 ;;      Totals:        11       0       0       0       0       0       0       0       0
 22743 ;;Total ram usage:       11 bytes
 22744 ;; Hardware stack levels used:    1
 22745 ;; This function calls:
 22746 ;;		Nothing
 22747 ;; This function is called by:
 22748 ;;		_CDCInitEP
 22749 ;; This function uses a non-reentrant model
 22750 ;;
 22751                           
 22752                           	psect	text91
 22753  002EF6                     __ptext91:
 22754                           	opt stack 0
 22755  002EF6                     i2_USBTransferOnePacket:
 22756                           	opt stack 21
 22757                           
 22758                           ; BSR set to: 0
 22759                           ;incstack = 0
 22760                           ;i2USBTransferOnePacket@ep stored from wreg
 22761  002EF6  6E09               	movwf	i2USBTransferOnePacket@ep,c
 22762                           
 22763                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 22764                           ;usb_device.c: 1000: if(dir != 0)
 22765  002EF8  5001               	movf	i2USBTransferOnePacket@dir,w,c
 22766  002EFA  B4D8               	btfsc	status,2,c
 22767  002EFC  D007               	goto	i2l465
 22768                           
 22769                           ;usb_device.c: 1001: {
 22770                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 22771  002EFE  5009               	movf	i2USBTransferOnePacket@ep,w,c
 22772  002F00  0D02               	mullw	2
 22773  002F02  0E40               	movlw	low _pBDTEntryIn
 22774  002F04  24F3               	addwf	prodl,w,c
 22775  002F06  6ED9               	movwf	fsr2l,c
 22776  002F08  0E00               	movlw	high _pBDTEntryIn
 22777  002F0A  D006               	goto	L26
 22778  002F0C                     i2l465:
 22779                           
 22780                           ;usb_device.c: 1005: else
 22781                           ;usb_device.c: 1006: {
 22782                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 22783  002F0C  5009               	movf	i2USBTransferOnePacket@ep,w,c
 22784  002F0E  0D02               	mullw	2
 22785  002F10  0E8C               	movlw	low _pBDTEntryOut
 22786  002F12  24F3               	addwf	prodl,w,c
 22787  002F14  6ED9               	movwf	fsr2l,c
 22788  002F16  0E01               	movlw	high _pBDTEntryOut
 22789  002F18                     L26:
 22790  002F18  20F4               	addwfc	prodh,w,c
 22791  002F1A  6EDA               	movwf	fsr2h,c
 22792  002F1C  CFDE F00A          	movff	postinc2,i2USBTransferOnePacket@handle
 22793  002F20  CFDD F00B          	movff	postdec2,i2USBTransferOnePacket@handle+1
 22794                           
 22795                           ;usb_device.c: 1009: }
 22796                           ;usb_device.c: 1013: if(handle == 0)
 22797  002F24  500A               	movf	i2USBTransferOnePacket@handle,w,c
 22798  002F26  100B               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 22799  002F28  A4D8               	btfss	status,2,c
 22800  002F2A  D005               	goto	i2l467
 22801                           
 22802                           ;usb_device.c: 1014: {
 22803                           ;usb_device.c: 1015: return 0;
 22804  002F2C  0E00               	movlw	0
 22805  002F2E  6E01               	movwf	?i2_USBTransferOnePacket,c
 22806  002F30  0E00               	movlw	0
 22807  002F32  6E02               	movwf	?i2_USBTransferOnePacket+1,c
 22808  002F34  0012               	return	
 22809  002F36                     i2l467:
 22810                           
 22811                           ;usb_device.c: 1016: }
 22812                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 22813  002F36  EE20 F002          	lfsr	2,2
 22814  002F3A  500A               	movf	i2USBTransferOnePacket@handle,w,c
 22815  002F3C  26D9               	addwf	fsr2l,f,c
 22816  002F3E  500B               	movf	i2USBTransferOnePacket@handle+1,w,c
 22817  002F40  22DA               	addwfc	fsr2h,f,c
 22818  002F42  C002  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 22819  002F46  C003  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 22820                           
 22821                           ;usb_device.c: 1030: handle->CNT = len;
 22822  002F4A  EE20 F001          	lfsr	2,1
 22823  002F4E  500A               	movf	i2USBTransferOnePacket@handle,w,c
 22824  002F50  26D9               	addwf	fsr2l,f,c
 22825  002F52  500B               	movf	i2USBTransferOnePacket@handle+1,w,c
 22826  002F54  22DA               	addwfc	fsr2h,f,c
 22827  002F56  C004  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 22828                           
 22829                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 22830  002F5A  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 22831  002F5E  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 22832  002F62  0E40               	movlw	64
 22833  002F64  16DF               	andwf	indf2,f,c
 22834                           
 22835                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 22836  002F66  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 22837  002F6A  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 22838  002F6E  0E00               	movlw	0
 22839  002F70  86DB               	bsf	plusw2,3,c
 22840                           
 22841                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 22842  002F72  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 22843  002F76  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 22844  002F7A  0E00               	movlw	0
 22845  002F7C  8EDB               	bsf	plusw2,7,c
 22846                           
 22847                           ;usb_device.c: 1036: if(dir != 0)
 22848  002F7E  5001               	movf	i2USBTransferOnePacket@dir,w,c
 22849  002F80  B4D8               	btfsc	status,2,c
 22850  002F82  D018               	goto	i2l469
 22851                           
 22852                           ;usb_device.c: 1037: {
 22853                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
 22854  002F84  5009               	movf	i2USBTransferOnePacket@ep,w,c
 22855  002F86  0D02               	mullw	2
 22856  002F88  0E40               	movlw	low _pBDTEntryIn
 22857  002F8A  24F3               	addwf	prodl,w,c
 22858  002F8C  6ED9               	movwf	fsr2l,c
 22859  002F8E  0E00               	movlw	high _pBDTEntryIn
 22860  002F90  20F4               	addwfc	prodh,w,c
 22861  002F92  6EDA               	movwf	fsr2h,c
 22862  002F94  CFDE F005          	movff	postinc2,??i2_USBTransferOnePacket
 22863  002F98  CFDD F006          	movff	postdec2,??i2_USBTransferOnePacket+1
 22864  002F9C  0E04               	movlw	4
 22865  002F9E  1805               	xorwf	??i2_USBTransferOnePacket,w,c
 22866  002FA0  6E07               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 22867  002FA2  5006               	movf	??i2_USBTransferOnePacket+1,w,c
 22868  002FA4  6E08               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 22869  002FA6  5009               	movf	i2USBTransferOnePacket@ep,w,c
 22870  002FA8  0D02               	mullw	2
 22871  002FAA  0E40               	movlw	low _pBDTEntryIn
 22872  002FAC  24F3               	addwf	prodl,w,c
 22873  002FAE  6ED9               	movwf	fsr2l,c
 22874  002FB0  0E00               	movlw	high _pBDTEntryIn
 22875  002FB2  D017               	goto	L27
 22876  002FB4                     i2l469:
 22877                           
 22878                           ;usb_device.c: 1041: else
 22879                           ;usb_device.c: 1042: {
 22880                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
 22881  002FB4  5009               	movf	i2USBTransferOnePacket@ep,w,c
 22882  002FB6  0D02               	mullw	2
 22883  002FB8  0E8C               	movlw	low _pBDTEntryOut
 22884  002FBA  24F3               	addwf	prodl,w,c
 22885  002FBC  6ED9               	movwf	fsr2l,c
 22886  002FBE  0E01               	movlw	high _pBDTEntryOut
 22887  002FC0  20F4               	addwfc	prodh,w,c
 22888  002FC2  6EDA               	movwf	fsr2h,c
 22889  002FC4  CFDE F005          	movff	postinc2,??i2_USBTransferOnePacket
 22890  002FC8  CFDD F006          	movff	postdec2,??i2_USBTransferOnePacket+1
 22891  002FCC  0E04               	movlw	4
 22892  002FCE  1805               	xorwf	??i2_USBTransferOnePacket,w,c
 22893  002FD0  6E07               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 22894  002FD2  5006               	movf	??i2_USBTransferOnePacket+1,w,c
 22895  002FD4  6E08               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 22896  002FD6  5009               	movf	i2USBTransferOnePacket@ep,w,c
 22897  002FD8  0D02               	mullw	2
 22898  002FDA  0E8C               	movlw	low _pBDTEntryOut
 22899  002FDC  24F3               	addwf	prodl,w,c
 22900  002FDE  6ED9               	movwf	fsr2l,c
 22901  002FE0  0E01               	movlw	high _pBDTEntryOut
 22902  002FE2                     L27:
 22903  002FE2  20F4               	addwfc	prodh,w,c
 22904  002FE4  6EDA               	movwf	fsr2h,c
 22905  002FE6  C007  FFDE         	movff	??i2_USBTransferOnePacket+2,postinc2
 22906  002FEA  C008  FFDD         	movff	??i2_USBTransferOnePacket+3,postdec2
 22907                           
 22908                           ;usb_device.c: 1045: }
 22909                           ;usb_device.c: 1046: return (void*)handle;
 22910  002FEE  C00A  F001         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 22911  002FF2  C00B  F002         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 22912  002FF6  0012               	return	
 22913  002FF8                     __end_ofi2_USBTransferOnePacket:
 22914                           	opt stack 0
 22915                           pclatu	equ	0xFFB
 22916                           pclath	equ	0xFFA
 22917                           tblptru	equ	0xFF8
 22918                           tblptrh	equ	0xFF7
 22919                           tblptrl	equ	0xFF6
 22920                           tablat	equ	0xFF5
 22921                           prodh	equ	0xFF4
 22922                           prodl	equ	0xFF3
 22923                           intcon	equ	0xFF2
 22924                           indf0	equ	0xFEF
 22925                           postinc0	equ	0xFEE
 22926                           fsr0h	equ	0xFEA
 22927                           fsr0l	equ	0xFE9
 22928                           wreg	equ	0xFE8
 22929                           indf1	equ	0xFE7
 22930                           postdec1	equ	0xFE5
 22931                           fsr1h	equ	0xFE2
 22932                           fsr1l	equ	0xFE1
 22933                           indf2	equ	0xFDF
 22934                           postinc2	equ	0xFDE
 22935                           postdec2	equ	0xFDD
 22936                           plusw2	equ	0xFDB
 22937                           fsr2h	equ	0xFDA
 22938                           fsr2l	equ	0xFD9
 22939                           status	equ	0xFD8
 22940                           
 22941 ;; *************** function _USBEnableEndpoint *****************
 22942 ;; Defined at:
 22943 ;;		line 878 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 22944 ;; Parameters:    Size  Location     Type
 22945 ;;  ep              1    wreg     unsigned char 
 22946 ;;  options         1    8[COMRAM] unsigned char 
 22947 ;; Auto vars:     Size  Location     Type
 22948 ;;  ep              1   11[COMRAM] unsigned char 
 22949 ;;  p               2    9[COMRAM] PTR unsigned char 
 22950 ;;		 -> UEP0(1), 
 22951 ;; Return value:  Size  Location     Type
 22952 ;;                  1    wreg      void 
 22953 ;; Registers used:
 22954 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22955 ;; Tracked objects:
 22956 ;;		On entry : 0/0
 22957 ;;		On exit  : 0/0
 22958 ;;		Unchanged: 0/0
 22959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22960 ;;      Params:         1       0       0       0       0       0       0       0       0
 22961 ;;      Locals:         3       0       0       0       0       0       0       0       0
 22962 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22963 ;;      Totals:         4       0       0       0       0       0       0       0       0
 22964 ;;Total ram usage:        4 bytes
 22965 ;; Hardware stack levels used:    1
 22966 ;; Hardware stack levels required when called:    1
 22967 ;; This function calls:
 22968 ;;		_USBConfigureEndpoint
 22969 ;; This function is called by:
 22970 ;;		_CDCInitEP
 22971 ;; This function uses a non-reentrant model
 22972 ;;
 22973                           
 22974                           	psect	text92
 22975  004E8A                     __ptext92:
 22976                           	opt stack 0
 22977  004E8A                     _USBEnableEndpoint:
 22978                           	opt stack 20
 22979                           
 22980                           ;incstack = 0
 22981                           ;USBEnableEndpoint@ep stored from wreg
 22982  004E8A  6E0C               	movwf	USBEnableEndpoint@ep,c
 22983                           
 22984                           ;usb_device.c: 880: unsigned char* p;
 22985                           ;usb_device.c: 884: if(options & 0x04)
 22986  004E8C  A409               	btfss	USBEnableEndpoint@options,2,c
 22987  004E8E  D005               	goto	i2l460
 22988                           
 22989                           ;usb_device.c: 885: {
 22990                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 22991  004E90  0E00               	movlw	0
 22992  004E92  6E01               	movwf	USBConfigureEndpoint@direction,c
 22993  004E94  500C               	movf	USBEnableEndpoint@ep,w,c
 22994  004E96  EC58  F020         	call	_USBConfigureEndpoint
 22995  004E9A                     i2l460:
 22996                           
 22997                           ;usb_device.c: 887: }
 22998                           ;usb_device.c: 888: if(options & 0x02)
 22999  004E9A  A209               	btfss	USBEnableEndpoint@options,1,c
 23000  004E9C  D005               	goto	i2l461
 23001                           
 23002                           ;usb_device.c: 889: {
 23003                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 23004  004E9E  0E01               	movlw	1
 23005  004EA0  6E01               	movwf	USBConfigureEndpoint@direction,c
 23006  004EA2  500C               	movf	USBEnableEndpoint@ep,w,c
 23007  004EA4  EC58  F020         	call	_USBConfigureEndpoint
 23008  004EA8                     i2l461:
 23009                           
 23010                           ;usb_device.c: 891: }
 23011                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 23012  004EA8  500C               	movf	USBEnableEndpoint@ep,w,c
 23013  004EAA  0D01               	mullw	1
 23014  004EAC  0E70               	movlw	112
 23015  004EAE  24F3               	addwf	prodl,w,c
 23016  004EB0  6E0A               	movwf	USBEnableEndpoint@p,c
 23017  004EB2  0E0F               	movlw	15
 23018  004EB4  20F4               	addwfc	prodh,w,c
 23019  004EB6  6E0B               	movwf	USBEnableEndpoint@p+1,c
 23020                           
 23021                           ;usb_device.c: 901: *p = options;
 23022  004EB8  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 23023  004EBC  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 23024  004EC0  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 23025  004EC4  0012               	return		;funcret
 23026  004EC6                     __end_of_USBEnableEndpoint:
 23027                           	opt stack 0
 23028                           pclatu	equ	0xFFB
 23029                           pclath	equ	0xFFA
 23030                           tblptru	equ	0xFF8
 23031                           tblptrh	equ	0xFF7
 23032                           tblptrl	equ	0xFF6
 23033                           tablat	equ	0xFF5
 23034                           prodh	equ	0xFF4
 23035                           prodl	equ	0xFF3
 23036                           intcon	equ	0xFF2
 23037                           indf0	equ	0xFEF
 23038                           postinc0	equ	0xFEE
 23039                           fsr0h	equ	0xFEA
 23040                           fsr0l	equ	0xFE9
 23041                           wreg	equ	0xFE8
 23042                           indf1	equ	0xFE7
 23043                           postdec1	equ	0xFE5
 23044                           fsr1h	equ	0xFE2
 23045                           fsr1l	equ	0xFE1
 23046                           indf2	equ	0xFDF
 23047                           postinc2	equ	0xFDE
 23048                           postdec2	equ	0xFDD
 23049                           plusw2	equ	0xFDB
 23050                           fsr2h	equ	0xFDA
 23051                           fsr2l	equ	0xFD9
 23052                           status	equ	0xFD8
 23053                           
 23054 ;; *************** function _USBConfigureEndpoint *****************
 23055 ;; Defined at:
 23056 ;;		line 1543 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 23057 ;; Parameters:    Size  Location     Type
 23058 ;;  EPNum           1    wreg     unsigned char 
 23059 ;;  direction       1    0[COMRAM] unsigned char 
 23060 ;; Auto vars:     Size  Location     Type
 23061 ;;  EPNum           1    5[COMRAM] unsigned char 
 23062 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 23063 ;;		 -> BDT(48), 
 23064 ;; Return value:  Size  Location     Type
 23065 ;;                  1    wreg      void 
 23066 ;; Registers used:
 23067 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23068 ;; Tracked objects:
 23069 ;;		On entry : 0/0
 23070 ;;		On exit  : 0/0
 23071 ;;		Unchanged: 0/0
 23072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23073 ;;      Params:         1       0       0       0       0       0       0       0       0
 23074 ;;      Locals:         3       0       0       0       0       0       0       0       0
 23075 ;;      Temps:          4       0       0       0       0       0       0       0       0
 23076 ;;      Totals:         8       0       0       0       0       0       0       0       0
 23077 ;;Total ram usage:        8 bytes
 23078 ;; Hardware stack levels used:    1
 23079 ;; This function calls:
 23080 ;;		Nothing
 23081 ;; This function is called by:
 23082 ;;		_USBEnableEndpoint
 23083 ;; This function uses a non-reentrant model
 23084 ;;
 23085                           
 23086                           	psect	text93
 23087  0040B0                     __ptext93:
 23088                           	opt stack 0
 23089  0040B0                     _USBConfigureEndpoint:
 23090                           	opt stack 20
 23091                           
 23092                           ;incstack = 0
 23093                           ;USBConfigureEndpoint@EPNum stored from wreg
 23094  0040B0  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 23095                           
 23096                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
 23097                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
 23098  0040B2  0E00               	movlw	0
 23099  0040B4  6E07               	movwf	USBConfigureEndpoint@handle,c
 23100  0040B6  0E04               	movlw	4
 23101  0040B8  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 23102                           
 23103                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
 23104  0040BA  5001               	movf	USBConfigureEndpoint@direction,w,c
 23105  0040BC  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 23106  0040BE  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 23107  0040C0  90D8               	bcf	status,0,c
 23108  0040C2  3602               	rlcf	??_USBConfigureEndpoint,f,c
 23109  0040C4  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 23110  0040C6  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 23111  0040C8  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 23112  0040CA  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 23113  0040CC  90D8               	bcf	status,0,c
 23114  0040CE  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 23115  0040D0  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 23116  0040D2  90D8               	bcf	status,0,c
 23117  0040D4  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 23118  0040D6  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 23119  0040D8  5002               	movf	??_USBConfigureEndpoint,w,c
 23120  0040DA  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 23121  0040DC  5003               	movf	??_USBConfigureEndpoint+1,w,c
 23122  0040DE  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 23123  0040E0  90D8               	bcf	status,0,c
 23124  0040E2  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 23125  0040E4  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 23126  0040E6  90D8               	bcf	status,0,c
 23127  0040E8  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 23128  0040EA  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 23129  0040EC  5004               	movf	??_USBConfigureEndpoint+2,w,c
 23130  0040EE  2607               	addwf	USBConfigureEndpoint@handle,f,c
 23131  0040F0  5005               	movf	??_USBConfigureEndpoint+3,w,c
 23132  0040F2  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 23133                           
 23134                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
 23135  0040F4  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 23136  0040F8  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 23137  0040FC  9EDF               	bcf	indf2,7,c
 23138                           
 23139                           ;usb_device.c: 1557: if(direction == 0)
 23140  0040FE  5001               	movf	USBConfigureEndpoint@direction,w,c
 23141  004100  A4D8               	btfss	status,2,c
 23142  004102  D007               	goto	i2l507
 23143                           
 23144                           ;usb_device.c: 1558: {
 23145                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
 23146  004104  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 23147  004106  0D02               	mullw	2
 23148  004108  0E8C               	movlw	low _pBDTEntryOut
 23149  00410A  24F3               	addwf	prodl,w,c
 23150  00410C  6ED9               	movwf	fsr2l,c
 23151  00410E  0E01               	movlw	high _pBDTEntryOut
 23152  004110  D006               	goto	L28
 23153  004112                     i2l507:
 23154                           
 23155                           ;usb_device.c: 1561: else
 23156                           ;usb_device.c: 1562: {
 23157                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
 23158  004112  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 23159  004114  0D02               	mullw	2
 23160  004116  0E40               	movlw	low _pBDTEntryIn
 23161  004118  24F3               	addwf	prodl,w,c
 23162  00411A  6ED9               	movwf	fsr2l,c
 23163  00411C  0E00               	movlw	high _pBDTEntryIn
 23164  00411E                     L28:
 23165  00411E  20F4               	addwfc	prodh,w,c
 23166  004120  6EDA               	movwf	fsr2h,c
 23167  004122  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 23168  004126  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 23169                           
 23170                           ;usb_device.c: 1564: }
 23171                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
 23172  00412A  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 23173  00412E  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 23174  004132  9CDF               	bcf	indf2,6,c
 23175                           
 23176                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
 23177  004134  EE20 F004          	lfsr	2,4
 23178  004138  5007               	movf	USBConfigureEndpoint@handle,w,c
 23179  00413A  26D9               	addwf	fsr2l,f,c
 23180  00413C  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 23181  00413E  22DA               	addwfc	fsr2h,f,c
 23182  004140  8CDF               	bsf	indf2,6,c
 23183  004142  0012               	return		;funcret
 23184  004144                     __end_of_USBConfigureEndpoint:
 23185                           	opt stack 0
 23186                           pclatu	equ	0xFFB
 23187                           pclath	equ	0xFFA
 23188                           tblptru	equ	0xFF8
 23189                           tblptrh	equ	0xFF7
 23190                           tblptrl	equ	0xFF6
 23191                           tablat	equ	0xFF5
 23192                           prodh	equ	0xFF4
 23193                           prodl	equ	0xFF3
 23194                           intcon	equ	0xFF2
 23195                           indf0	equ	0xFEF
 23196                           postinc0	equ	0xFEE
 23197                           fsr0h	equ	0xFEA
 23198                           fsr0l	equ	0xFE9
 23199                           wreg	equ	0xFE8
 23200                           indf1	equ	0xFE7
 23201                           postdec1	equ	0xFE5
 23202                           fsr1h	equ	0xFE2
 23203                           fsr1l	equ	0xFE1
 23204                           indf2	equ	0xFDF
 23205                           postinc2	equ	0xFDE
 23206                           postdec2	equ	0xFDD
 23207                           plusw2	equ	0xFDB
 23208                           fsr2h	equ	0xFDA
 23209                           fsr2l	equ	0xFD9
 23210                           status	equ	0xFD8
 23211                           
 23212 ;; *************** function _USBCtrlTrfOutHandler *****************
 23213 ;; Defined at:
 23214 ;;		line 2538 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 23215 ;; Parameters:    Size  Location     Type
 23216 ;;		None
 23217 ;; Auto vars:     Size  Location     Type
 23218 ;;		None
 23219 ;; Return value:  Size  Location     Type
 23220 ;;                  1    wreg      void 
 23221 ;; Registers used:
 23222 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23223 ;; Tracked objects:
 23224 ;;		On entry : 0/0
 23225 ;;		On exit  : 0/0
 23226 ;;		Unchanged: 0/0
 23227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23228 ;;      Params:         0       0       0       0       0       0       0       0       0
 23229 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23230 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23231 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23232 ;;Total ram usage:        0 bytes
 23233 ;; Hardware stack levels used:    1
 23234 ;; Hardware stack levels required when called:    2
 23235 ;; This function calls:
 23236 ;;		_USBCtrlTrfRxService
 23237 ;; This function is called by:
 23238 ;;		_USBCtrlEPService
 23239 ;; This function uses a non-reentrant model
 23240 ;;
 23241                           
 23242                           	psect	text94
 23243  004818                     __ptext94:
 23244                           	opt stack 0
 23245  004818                     _USBCtrlTrfOutHandler:
 23246                           	opt stack 20
 23247                           
 23248                           ;usb_device.c: 2540: if(controlTransferState == 2)
 23249                           
 23250                           ;incstack = 0
 23251  004818  0E02               	movlw	2
 23252  00481A  1856               	xorwf	_controlTransferState,w,c	;volatile
 23253  00481C  A4D8               	btfss	status,2,c
 23254  00481E  D003               	goto	i2l613
 23255                           
 23256                           ;usb_device.c: 2541: {
 23257                           ;usb_device.c: 2542: USBCtrlTrfRxService();
 23258  004820  EC72  F016         	call	_USBCtrlTrfRxService	;wreg free
 23259                           
 23260                           ;usb_device.c: 2543: }
 23261  004824  0012               	return	
 23262  004826                     i2l613:
 23263                           
 23264                           ;usb_device.c: 2544: else
 23265                           ;usb_device.c: 2545: {
 23266                           ;usb_device.c: 2548: controlTransferState = 0;
 23267  004826  0E00               	movlw	0
 23268  004828  6E56               	movwf	_controlTransferState,c	;volatile
 23269                           
 23270                           ;usb_device.c: 2555: if(BothEP0OutUOWNsSet == 0)
 23271  00482A  0101               	movlb	1	; () banked
 23272  00482C  51D8               	movf	_BothEP0OutUOWNsSet& (0+255),w,b	;volatile
 23273  00482E  A4D8               	btfss	status,2,c
 23274  004830  D01F               	goto	i2l615
 23275                           
 23276                           ; BSR set to: 1
 23277                           ;usb_device.c: 2556: {
 23278                           ;usb_device.c: 2557: pBDTEntryEP0OutNext->CNT = 8;
 23279  004832  EE20 F001          	lfsr	2,1
 23280  004836  504C               	movf	_pBDTEntryEP0OutNext,w,c
 23281  004838  26D9               	addwf	fsr2l,f,c
 23282  00483A  504D               	movf	_pBDTEntryEP0OutNext+1,w,c
 23283  00483C  22DA               	addwfc	fsr2h,f,c
 23284  00483E  0E08               	movlw	8
 23285  004840  6EDF               	movwf	indf2,c
 23286                           
 23287                           ;usb_device.c: 2558: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 23288  004842  EE20 F002          	lfsr	2,2
 23289  004846  504C               	movf	_pBDTEntryEP0OutNext,w,c
 23290  004848  26D9               	addwf	fsr2l,f,c
 23291  00484A  504D               	movf	_pBDTEntryEP0OutNext+1,w,c
 23292  00484C  22DA               	addwfc	fsr2h,f,c
 23293  00484E  0E30               	movlw	48
 23294  004850  6EDE               	movwf	postinc2,c
 23295  004852  0E04               	movlw	4
 23296  004854  6EDD               	movwf	postdec2,c
 23297                           
 23298                           ; BSR set to: 1
 23299                           ;usb_device.c: 2559: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 23300  004856  C04C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23301  00485A  C04D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23302  00485E  0E0C               	movlw	12
 23303  004860  6EDF               	movwf	indf2,c
 23304                           
 23305                           ; BSR set to: 1
 23306                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 23307  004862  C04C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23308  004866  C04D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23309  00486A  0E00               	movlw	0
 23310  00486C  8EDB               	bsf	plusw2,7,c
 23311                           
 23312                           ;usb_device.c: 2561: }
 23313  00486E  0012               	return	
 23314  004870                     i2l615:
 23315                           
 23316                           ; BSR set to: 1
 23317                           ;usb_device.c: 2562: else
 23318                           ;usb_device.c: 2563: {
 23319                           ;usb_device.c: 2564: BothEP0OutUOWNsSet = 0;
 23320                           
 23321                           ; BSR set to: 1
 23322  004870  0E00               	movlw	0
 23323  004872  6FD8               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 23324                           
 23325                           ; BSR set to: 1
 23326  004874  0012               	return	
 23327  004876                     __end_of_USBCtrlTrfOutHandler:
 23328                           	opt stack 0
 23329                           pclatu	equ	0xFFB
 23330                           pclath	equ	0xFFA
 23331                           tblptru	equ	0xFF8
 23332                           tblptrh	equ	0xFF7
 23333                           tblptrl	equ	0xFF6
 23334                           tablat	equ	0xFF5
 23335                           prodh	equ	0xFF4
 23336                           prodl	equ	0xFF3
 23337                           intcon	equ	0xFF2
 23338                           indf0	equ	0xFEF
 23339                           postinc0	equ	0xFEE
 23340                           fsr0h	equ	0xFEA
 23341                           fsr0l	equ	0xFE9
 23342                           wreg	equ	0xFE8
 23343                           indf1	equ	0xFE7
 23344                           postdec1	equ	0xFE5
 23345                           fsr1h	equ	0xFE2
 23346                           fsr1l	equ	0xFE1
 23347                           indf2	equ	0xFDF
 23348                           postinc2	equ	0xFDE
 23349                           postdec2	equ	0xFDD
 23350                           plusw2	equ	0xFDB
 23351                           fsr2h	equ	0xFDA
 23352                           fsr2l	equ	0xFD9
 23353                           status	equ	0xFD8
 23354                           
 23355 ;; *************** function _USBCtrlTrfRxService *****************
 23356 ;; Defined at:
 23357 ;;		line 1852 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 23358 ;; Parameters:    Size  Location     Type
 23359 ;;		None
 23360 ;; Auto vars:     Size  Location     Type
 23361 ;;  byteToRead      1    1[COMRAM] unsigned char 
 23362 ;;  i               1    0[COMRAM] unsigned char 
 23363 ;; Return value:  Size  Location     Type
 23364 ;;                  1    wreg      void 
 23365 ;; Registers used:
 23366 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23367 ;; Tracked objects:
 23368 ;;		On entry : 0/0
 23369 ;;		On exit  : 0/0
 23370 ;;		Unchanged: 0/0
 23371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23372 ;;      Params:         0       0       0       0       0       0       0       0       0
 23373 ;;      Locals:         2       0       0       0       0       0       0       0       0
 23374 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23375 ;;      Totals:         2       0       0       0       0       0       0       0       0
 23376 ;;Total ram usage:        2 bytes
 23377 ;; Hardware stack levels used:    1
 23378 ;; Hardware stack levels required when called:    1
 23379 ;; This function calls:
 23380 ;;		_USBCtrlEPAllowStatusStage
 23381 ;; This function is called by:
 23382 ;;		_USBCtrlTrfOutHandler
 23383 ;; This function uses a non-reentrant model
 23384 ;;
 23385                           
 23386                           	psect	text95
 23387  002CE4                     __ptext95:
 23388                           	opt stack 0
 23389  002CE4                     _USBCtrlTrfRxService:
 23390                           	opt stack 20
 23391                           
 23392                           ;usb_device.c: 1854: uint8_t byteToRead;
 23393                           ;usb_device.c: 1855: uint8_t i;
 23394                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 23395                           
 23396                           ;incstack = 0
 23397  002CE4  EE20 F001          	lfsr	2,1
 23398  002CE8  504E               	movf	_pBDTEntryEP0OutCurrent,w,c
 23399  002CEA  26D9               	addwf	fsr2l,f,c
 23400  002CEC  504F               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 23401  002CEE  22DA               	addwfc	fsr2h,f,c
 23402  002CF0  50DF               	movf	indf2,w,c
 23403  002CF2  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 23404                           
 23405                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
 23406  002CF4  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 23407  002CF6  5C3C               	subwf	_outPipes+4,w,c	;volatile
 23408  002CF8  0E00               	movlw	0
 23409  002CFA  583D               	subwfb	_outPipes+5,w,c	;volatile
 23410  002CFC  A0D8               	btfss	status,0,c
 23411                           
 23412                           ;usb_device.c: 1866: {
 23413                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
 23414  002CFE  C03C  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 23415                           
 23416                           ;usb_device.c: 1868: }
 23417                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
 23418  002D02  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 23419  002D04  5E3C               	subwf	_outPipes+4,f,c	;volatile
 23420  002D06  0E00               	movlw	0
 23421  002D08  5A3D               	subwfb	_outPipes+5,f,c	;volatile
 23422                           
 23423                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
 23424  002D0A  0E00               	movlw	0
 23425  002D0C  6E01               	movwf	USBCtrlTrfRxService@i,c
 23426  002D0E  D011               	goto	i2l541
 23427  002D10                     
 23428                           ;usb_device.c: 1875: {
 23429                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 23430  002D10  5001               	movf	USBCtrlTrfRxService@i,w,c
 23431  002D12  0D01               	mullw	1
 23432  002D14  0E38               	movlw	56
 23433  002D16  24F3               	addwf	prodl,w,c
 23434  002D18  6ED9               	movwf	fsr2l,c
 23435  002D1A  0E04               	movlw	4
 23436  002D1C  20F4               	addwfc	prodh,w,c
 23437  002D1E  6EDA               	movwf	fsr2h,c
 23438  002D20  C038  FFE1         	movff	_outPipes,fsr1l	;volatile
 23439  002D24  C039  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 23440  002D28  CFDF FFE7          	movff	indf2,indf1
 23441  002D2C  4A38               	infsnz	_outPipes,f,c	;volatile
 23442  002D2E  2A39               	incf	_outPipes+1,f,c	;volatile
 23443  002D30  2A01               	incf	USBCtrlTrfRxService@i,f,c
 23444  002D32                     i2l541:
 23445  002D32  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 23446  002D34  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 23447  002D36  A0D8               	btfss	status,0,c
 23448  002D38  D7EB               	goto	i2l542
 23449                           
 23450                           ;usb_device.c: 1877: }
 23451                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
 23452  002D3A  503C               	movf	_outPipes+4,w,c	;volatile
 23453  002D3C  103D               	iorwf	_outPipes+5,w,c	;volatile
 23454  002D3E  B4D8               	btfsc	status,2,c
 23455  002D40  D032               	goto	i2l544
 23456                           
 23457                           ;usb_device.c: 1882: {
 23458                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
 23459  002D42  EE20 F001          	lfsr	2,1
 23460  002D46  504C               	movf	_pBDTEntryEP0OutNext,w,c
 23461  002D48  26D9               	addwf	fsr2l,f,c
 23462  002D4A  504D               	movf	_pBDTEntryEP0OutNext+1,w,c
 23463  002D4C  22DA               	addwfc	fsr2h,f,c
 23464  002D4E  0E08               	movlw	8
 23465  002D50  6EDF               	movwf	indf2,c
 23466                           
 23467                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 23468  002D52  EE20 F002          	lfsr	2,2
 23469  002D56  504C               	movf	_pBDTEntryEP0OutNext,w,c
 23470  002D58  26D9               	addwf	fsr2l,f,c
 23471  002D5A  504D               	movf	_pBDTEntryEP0OutNext+1,w,c
 23472  002D5C  22DA               	addwfc	fsr2h,f,c
 23473  002D5E  0E38               	movlw	56
 23474  002D60  6EDE               	movwf	postinc2,c
 23475  002D62  0E04               	movlw	4
 23476  002D64  6EDD               	movwf	postdec2,c
 23477                           
 23478                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 23479  002D66  C04E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 23480  002D6A  C04F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 23481  002D6E  BCDF               	btfsc	indf2,6,c
 23482  002D70  D00D               	goto	i2l545
 23483                           
 23484                           ;usb_device.c: 1886: {
 23485                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 23486  002D72  C04C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23487  002D76  C04D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23488  002D7A  0E48               	movlw	72
 23489  002D7C  6EDF               	movwf	indf2,c
 23490                           
 23491                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 23492  002D7E  C04C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23493  002D82  C04D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23494  002D86  0E00               	movlw	0
 23495  002D88  8EDB               	bsf	plusw2,7,c
 23496                           
 23497                           ;usb_device.c: 1889: }
 23498  002D8A  0012               	return	
 23499  002D8C                     i2l545:
 23500                           
 23501                           ;usb_device.c: 1890: else
 23502                           ;usb_device.c: 1891: {
 23503                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 23504  002D8C  C04C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23505  002D90  C04D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23506  002D94  0E08               	movlw	8
 23507  002D96  6EDF               	movwf	indf2,c
 23508                           
 23509                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 23510  002D98  C04C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23511  002D9C  C04D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23512  002DA0  0E00               	movlw	0
 23513  002DA2  8EDB               	bsf	plusw2,7,c
 23514                           
 23515                           ;usb_device.c: 1894: }
 23516                           ;usb_device.c: 1895: }
 23517  002DA4  0012               	return	
 23518  002DA6                     i2l544:
 23519                           
 23520                           ;usb_device.c: 1896: else
 23521                           ;usb_device.c: 1897: {
 23522                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 23523  002DA6  EE20 F001          	lfsr	2,1
 23524  002DAA  504C               	movf	_pBDTEntryEP0OutNext,w,c
 23525  002DAC  26D9               	addwf	fsr2l,f,c
 23526  002DAE  504D               	movf	_pBDTEntryEP0OutNext+1,w,c
 23527  002DB0  22DA               	addwfc	fsr2h,f,c
 23528  002DB2  0E08               	movlw	8
 23529  002DB4  6EDF               	movwf	indf2,c
 23530                           
 23531                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 23532  002DB6  EE20 F002          	lfsr	2,2
 23533  002DBA  504C               	movf	_pBDTEntryEP0OutNext,w,c
 23534  002DBC  26D9               	addwf	fsr2l,f,c
 23535  002DBE  504D               	movf	_pBDTEntryEP0OutNext+1,w,c
 23536  002DC0  22DA               	addwfc	fsr2h,f,c
 23537  002DC2  0E30               	movlw	48
 23538  002DC4  6EDE               	movwf	postinc2,c
 23539  002DC6  0E04               	movlw	4
 23540  002DC8  6EDD               	movwf	postdec2,c
 23541                           
 23542                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 23543  002DCA  C04C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23544  002DCE  C04D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23545  002DD2  0E04               	movlw	4
 23546  002DD4  6EDF               	movwf	indf2,c
 23547                           
 23548                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 23549  002DD6  C04C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23550  002DDA  C04D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23551  002DDE  0E00               	movlw	0
 23552  002DE0  8EDB               	bsf	plusw2,7,c
 23553                           
 23554                           ;usb_device.c: 1926: }
 23555                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
 23556                           
 23557                           ;usb_device.c: 1915: {
 23558                           ;usb_device.c: 1921: outPipes[0].pFunc();
 23559  002DE2  9E3B               	bcf	_outPipes+3,7,c	;volatile
 23560                           
 23561                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
 23562  002DE4  5053               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 23563  002DE6  A4D8               	btfss	status,2,c
 23564  002DE8  0012               	return	
 23565                           
 23566                           ;usb_device.c: 1942: {
 23567                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
 23568  002DEA  EC55  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
 23569  002DEE  0012               	return	
 23570  002DF0                     __end_of_USBCtrlTrfRxService:
 23571                           	opt stack 0
 23572                           pclatu	equ	0xFFB
 23573                           pclath	equ	0xFFA
 23574                           tblptru	equ	0xFF8
 23575                           tblptrh	equ	0xFF7
 23576                           tblptrl	equ	0xFF6
 23577                           tablat	equ	0xFF5
 23578                           prodh	equ	0xFF4
 23579                           prodl	equ	0xFF3
 23580                           intcon	equ	0xFF2
 23581                           indf0	equ	0xFEF
 23582                           postinc0	equ	0xFEE
 23583                           fsr0h	equ	0xFEA
 23584                           fsr0l	equ	0xFE9
 23585                           wreg	equ	0xFE8
 23586                           indf1	equ	0xFE7
 23587                           postdec1	equ	0xFE5
 23588                           fsr1h	equ	0xFE2
 23589                           fsr1l	equ	0xFE1
 23590                           indf2	equ	0xFDF
 23591                           postinc2	equ	0xFDE
 23592                           postdec2	equ	0xFDD
 23593                           plusw2	equ	0xFDB
 23594                           fsr2h	equ	0xFDA
 23595                           fsr2l	equ	0xFD9
 23596                           status	equ	0xFD8
 23597                           
 23598 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 23599 ;; Defined at:
 23600 ;;		line 1416 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 23601 ;; Parameters:    Size  Location     Type
 23602 ;;		None
 23603 ;; Auto vars:     Size  Location     Type
 23604 ;;		None
 23605 ;; Return value:  Size  Location     Type
 23606 ;;                  1    wreg      void 
 23607 ;; Registers used:
 23608 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23609 ;; Tracked objects:
 23610 ;;		On entry : 0/0
 23611 ;;		On exit  : 0/0
 23612 ;;		Unchanged: 0/0
 23613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23614 ;;      Params:         0       0       0       0       0       0       0       0       0
 23615 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23616 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23617 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23618 ;;Total ram usage:        0 bytes
 23619 ;; Hardware stack levels used:    1
 23620 ;; This function calls:
 23621 ;;		Nothing
 23622 ;; This function is called by:
 23623 ;;		_USBDeviceTasks
 23624 ;;		_USBCtrlEPServiceComplete
 23625 ;;		_USBCtrlTrfRxService
 23626 ;; This function uses a non-reentrant model
 23627 ;;
 23628                           
 23629                           	psect	text96
 23630  003AAA                     __ptext96:
 23631                           	opt stack 0
 23632  003AAA                     _USBCtrlEPAllowStatusStage:
 23633                           	opt stack 20
 23634                           
 23635                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
 23636                           
 23637                           ;incstack = 0
 23638  003AAA  0101               	movlb	1	; () banked
 23639  003AAC  51D7               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 23640  003AAE  A4D8               	btfss	status,2,c
 23641  003AB0  0012               	return	
 23642                           
 23643                           ; BSR set to: 1
 23644                           ;usb_device.c: 1424: {
 23645                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
 23646  003AB2  0E01               	movlw	1
 23647  003AB4  6FD7               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 23648                           
 23649                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
 23650  003AB6  51D6               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 23651  003AB8  A4D8               	btfss	status,2,c
 23652  003ABA  0012               	return	
 23653                           
 23654                           ; BSR set to: 1
 23655                           ;usb_device.c: 1427: {
 23656                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
 23657  003ABC  0E01               	movlw	1
 23658  003ABE  6FD6               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 23659                           
 23660                           ; BSR set to: 1
 23661                           ;usb_device.c: 1432: if(controlTransferState == 2)
 23662  003AC0  0E02               	movlw	2
 23663  003AC2  1856               	xorwf	_controlTransferState,w,c	;volatile
 23664  003AC4  A4D8               	btfss	status,2,c
 23665  003AC6  D015               	goto	i2l495
 23666                           
 23667                           ; BSR set to: 1
 23668                           ;usb_device.c: 1433: {
 23669                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
 23670  003AC8  EE20 F001          	lfsr	2,1
 23671  003ACC  5040               	movf	_pBDTEntryIn,w,c
 23672  003ACE  26D9               	addwf	fsr2l,f,c
 23673  003AD0  5041               	movf	_pBDTEntryIn+1,w,c
 23674  003AD2  22DA               	addwfc	fsr2h,f,c
 23675  003AD4  0E00               	movlw	0
 23676  003AD6  6EDF               	movwf	indf2,c
 23677                           
 23678                           ; BSR set to: 1
 23679                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 23680  003AD8  C040  FFD9         	movff	_pBDTEntryIn,fsr2l
 23681  003ADC  C041  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23682  003AE0  0E48               	movlw	72
 23683  003AE2  6EDF               	movwf	indf2,c
 23684                           
 23685                           ; BSR set to: 1
 23686                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
 23687  003AE4  C040  FFD9         	movff	_pBDTEntryIn,fsr2l
 23688  003AE8  C041  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23689  003AEC  0E00               	movlw	0
 23690  003AEE  8EDB               	bsf	plusw2,7,c
 23691                           
 23692                           ;usb_device.c: 1437: }
 23693  003AF0  0012               	return	
 23694  003AF2                     i2l495:
 23695                           
 23696                           ; BSR set to: 1
 23697                           ;usb_device.c: 1438: else if(controlTransferState == 1)
 23698                           
 23699                           ; BSR set to: 1
 23700  003AF2  0456               	decf	_controlTransferState,w,c	;volatile
 23701  003AF4  A4D8               	btfss	status,2,c
 23702  003AF6  0012               	return	
 23703                           
 23704                           ; BSR set to: 1
 23705                           ;usb_device.c: 1439: {
 23706                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
 23707  003AF8  0E00               	movlw	0
 23708  003AFA  6FD8               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 23709                           
 23710                           ; BSR set to: 1
 23711                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
 23712  003AFC  EE20 F001          	lfsr	2,1
 23713  003B00  504E               	movf	_pBDTEntryEP0OutCurrent,w,c
 23714  003B02  26D9               	addwf	fsr2l,f,c
 23715  003B04  504F               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 23716  003B06  22DA               	addwfc	fsr2h,f,c
 23717  003B08  0E08               	movlw	8
 23718  003B0A  6EDF               	movwf	indf2,c
 23719                           
 23720                           ; BSR set to: 1
 23721                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 23722  003B0C  EE20 F002          	lfsr	2,2
 23723  003B10  504E               	movf	_pBDTEntryEP0OutCurrent,w,c
 23724  003B12  26D9               	addwf	fsr2l,f,c
 23725  003B14  504F               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 23726  003B16  22DA               	addwfc	fsr2h,f,c
 23727  003B18  0E30               	movlw	48
 23728  003B1A  6EDE               	movwf	postinc2,c
 23729  003B1C  0E04               	movlw	4
 23730  003B1E  6EDD               	movwf	postdec2,c
 23731                           
 23732                           ; BSR set to: 1
 23733                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 23734  003B20  C04E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 23735  003B24  C04F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 23736  003B28  0E04               	movlw	4
 23737  003B2A  6EDF               	movwf	indf2,c
 23738                           
 23739                           ; BSR set to: 1
 23740                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 23741  003B2C  C04E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 23742  003B30  C04F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 23743  003B34  0E00               	movlw	0
 23744  003B36  8EDB               	bsf	plusw2,7,c
 23745                           
 23746                           ; BSR set to: 1
 23747                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
 23748  003B38  0E01               	movlw	1
 23749  003B3A  6FD8               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 23750                           
 23751                           ; BSR set to: 1
 23752                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
 23753  003B3C  EE20 F001          	lfsr	2,1
 23754  003B40  504C               	movf	_pBDTEntryEP0OutNext,w,c
 23755  003B42  26D9               	addwf	fsr2l,f,c
 23756  003B44  504D               	movf	_pBDTEntryEP0OutNext+1,w,c
 23757  003B46  22DA               	addwfc	fsr2h,f,c
 23758  003B48  0E08               	movlw	8
 23759  003B4A  6EDF               	movwf	indf2,c
 23760                           
 23761                           ; BSR set to: 1
 23762                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 23763  003B4C  EE20 F002          	lfsr	2,2
 23764  003B50  504C               	movf	_pBDTEntryEP0OutNext,w,c
 23765  003B52  26D9               	addwf	fsr2l,f,c
 23766  003B54  504D               	movf	_pBDTEntryEP0OutNext+1,w,c
 23767  003B56  22DA               	addwfc	fsr2h,f,c
 23768  003B58  0E30               	movlw	48
 23769  003B5A  6EDE               	movwf	postinc2,c
 23770  003B5C  0E04               	movlw	4
 23771  003B5E  6EDD               	movwf	postdec2,c
 23772                           
 23773                           ; BSR set to: 1
 23774                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 23775  003B60  C04C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23776  003B64  C04D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23777  003B68  0E80               	movlw	128
 23778  003B6A  6EDF               	movwf	indf2,c
 23779                           
 23780                           ; BSR set to: 1
 23781                           
 23782                           ; BSR set to: 1
 23783                           
 23784                           ; BSR set to: 1
 23785  003B6C  0012               	return	
 23786  003B6E                     __end_of_USBCtrlEPAllowStatusStage:
 23787                           	opt stack 0
 23788                           pclatu	equ	0xFFB
 23789                           pclath	equ	0xFFA
 23790                           tblptru	equ	0xFF8
 23791                           tblptrh	equ	0xFF7
 23792                           tblptrl	equ	0xFF6
 23793                           tablat	equ	0xFF5
 23794                           prodh	equ	0xFF4
 23795                           prodl	equ	0xFF3
 23796                           intcon	equ	0xFF2
 23797                           indf0	equ	0xFEF
 23798                           postinc0	equ	0xFEE
 23799                           fsr0h	equ	0xFEA
 23800                           fsr0l	equ	0xFE9
 23801                           wreg	equ	0xFE8
 23802                           indf1	equ	0xFE7
 23803                           postdec1	equ	0xFE5
 23804                           fsr1h	equ	0xFE2
 23805                           fsr1l	equ	0xFE1
 23806                           indf2	equ	0xFDF
 23807                           postinc2	equ	0xFDE
 23808                           postdec2	equ	0xFDD
 23809                           plusw2	equ	0xFDB
 23810                           fsr2h	equ	0xFDA
 23811                           fsr2l	equ	0xFD9
 23812                           status	equ	0xFD8
 23813                           
 23814 ;; *************** function _USBCtrlTrfInHandler *****************
 23815 ;; Defined at:
 23816 ;;		line 2592 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 23817 ;; Parameters:    Size  Location     Type
 23818 ;;		None
 23819 ;; Auto vars:     Size  Location     Type
 23820 ;;  lastDTS         1    1[COMRAM] unsigned char 
 23821 ;; Return value:  Size  Location     Type
 23822 ;;                  1    wreg      void 
 23823 ;; Registers used:
 23824 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23825 ;; Tracked objects:
 23826 ;;		On entry : 0/0
 23827 ;;		On exit  : 0/0
 23828 ;;		Unchanged: 0/0
 23829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23830 ;;      Params:         0       0       0       0       0       0       0       0       0
 23831 ;;      Locals:         1       0       0       0       0       0       0       0       0
 23832 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23833 ;;      Totals:         1       0       0       0       0       0       0       0       0
 23834 ;;Total ram usage:        1 bytes
 23835 ;; Hardware stack levels used:    1
 23836 ;; Hardware stack levels required when called:    1
 23837 ;; This function calls:
 23838 ;;		_USBCtrlTrfTxService
 23839 ;; This function is called by:
 23840 ;;		_USBCtrlEPService
 23841 ;; This function uses a non-reentrant model
 23842 ;;
 23843                           
 23844                           	psect	text97
 23845  003B6E                     __ptext97:
 23846                           	opt stack 0
 23847  003B6E                     _USBCtrlTrfInHandler:
 23848                           	opt stack 21
 23849                           
 23850                           ;usb_device.c: 2594: uint8_t lastDTS;
 23851                           ;usb_device.c: 2596: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 23852                           
 23853                           ; BSR set to: 1
 23854                           ;incstack = 0
 23855  003B6E  C040  FFD9         	movff	_pBDTEntryIn,fsr2l
 23856  003B72  C041  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23857  003B76  0E00               	movlw	0
 23858  003B78  BCDF               	btfsc	indf2,6,c
 23859  003B7A  0E01               	movlw	1
 23860  003B7C  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 23861                           
 23862                           ;usb_device.c: 2599: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 23863  003B7E  0E04               	movlw	4
 23864  003B80  1840               	xorwf	_pBDTEntryIn,w,c
 23865  003B82  6E40               	movwf	_pBDTEntryIn,c
 23866  003B84  5041               	movf	_pBDTEntryIn+1,w,c
 23867  003B86  6E41               	movwf	_pBDTEntryIn+1,c
 23868                           
 23869                           ;usb_device.c: 2604: if(USBDeviceState == ADR_PENDING_STATE)
 23870  003B88  0E08               	movlw	8
 23871  003B8A  1858               	xorwf	_USBDeviceState,w,c	;volatile
 23872  003B8C  A4D8               	btfss	status,2,c
 23873  003B8E  D00B               	goto	i2l622
 23874                           
 23875                           ;usb_device.c: 2605: {
 23876                           ;usb_device.c: 2606: UADDR = (SetupPkt.bDevADR & 0x7F);
 23877  003B90  0104               	movlb	4	; () banked
 23878  003B92  5132               	movf	50,w,b	;volatile
 23879  003B94  0B7F               	andlw	127
 23880  003B96  6E6E               	movwf	3950,c	;volatile
 23881                           
 23882                           ; BSR set to: 4
 23883                           ;usb_device.c: 2607: if(UADDR != 0u)
 23884  003B98  506E               	movf	3950,w,c	;volatile
 23885  003B9A  B4D8               	btfsc	status,2,c
 23886  003B9C  D002               	goto	i2l621
 23887                           
 23888                           ; BSR set to: 4
 23889                           ;usb_device.c: 2608: {
 23890                           ;usb_device.c: 2609: USBDeviceState=ADDRESS_STATE;
 23891  003B9E  0E10               	movlw	16
 23892  003BA0  D001               	goto	L29
 23893  003BA2                     i2l621:
 23894                           
 23895                           ; BSR set to: 4
 23896                           ;usb_device.c: 2611: else
 23897                           ;usb_device.c: 2612: {
 23898                           ;usb_device.c: 2613: USBDeviceState=DEFAULT_STATE;
 23899                           
 23900                           ; BSR set to: 4
 23901  003BA2  0E04               	movlw	4
 23902  003BA4                     L29:
 23903  003BA4  6E58               	movwf	_USBDeviceState,c	;volatile
 23904  003BA6                     i2l622:
 23905                           
 23906                           ;usb_device.c: 2614: }
 23907                           ;usb_device.c: 2615: }
 23908                           ;usb_device.c: 2618: if(controlTransferState == 1)
 23909                           
 23910                           ; BSR set to: 4
 23911                           
 23912                           ; BSR set to: 4
 23913  003BA6  0456               	decf	_controlTransferState,w,c	;volatile
 23914  003BA8  A4D8               	btfss	status,2,c
 23915  003BAA  D03A               	goto	i2l623
 23916                           
 23917                           ;usb_device.c: 2619: {
 23918                           ;usb_device.c: 2620: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 23919  003BAC  EE20 F002          	lfsr	2,2
 23920  003BB0  5040               	movf	_pBDTEntryIn,w,c
 23921  003BB2  26D9               	addwf	fsr2l,f,c
 23922  003BB4  5041               	movf	_pBDTEntryIn+1,w,c
 23923  003BB6  22DA               	addwfc	fsr2h,f,c
 23924  003BB8  0E38               	movlw	56
 23925  003BBA  6EDE               	movwf	postinc2,c
 23926  003BBC  0E04               	movlw	4
 23927  003BBE  6EDD               	movwf	postdec2,c
 23928                           
 23929                           ;usb_device.c: 2621: USBCtrlTrfTxService();
 23930  003BC0  EC1B  F01C         	call	_USBCtrlTrfTxService	;wreg free
 23931                           
 23932                           ;usb_device.c: 2627: if(shortPacketStatus == 2)
 23933  003BC4  0E02               	movlw	2
 23934  003BC6  1857               	xorwf	_shortPacketStatus,w,c	;volatile
 23935  003BC8  A4D8               	btfss	status,2,c
 23936  003BCA  D00D               	goto	i2l624
 23937                           
 23938                           ;usb_device.c: 2628: {
 23939                           ;usb_device.c: 2631: pBDTEntryIn[0]->STAT.Val = 0x04;
 23940  003BCC  C040  FFD9         	movff	_pBDTEntryIn,fsr2l
 23941  003BD0  C041  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23942  003BD4  0E04               	movlw	4
 23943  003BD6  6EDF               	movwf	indf2,c
 23944                           
 23945                           ;usb_device.c: 2632: pBDTEntryIn[0]->STAT.Val |= 0x80;
 23946  003BD8  C040  FFD9         	movff	_pBDTEntryIn,fsr2l
 23947  003BDC  C041  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23948  003BE0  0E00               	movlw	0
 23949  003BE2  8EDB               	bsf	plusw2,7,c
 23950                           
 23951                           ;usb_device.c: 2633: }
 23952  003BE4  0012               	return	
 23953  003BE6                     i2l624:
 23954                           
 23955                           ;usb_device.c: 2634: else
 23956                           ;usb_device.c: 2635: {
 23957                           ;usb_device.c: 2636: if(lastDTS == 0)
 23958  003BE6  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 23959  003BE8  A4D8               	btfss	status,2,c
 23960  003BEA  D00D               	goto	i2l626
 23961                           
 23962                           ;usb_device.c: 2637: {
 23963                           ;usb_device.c: 2638: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 23964  003BEC  C040  FFD9         	movff	_pBDTEntryIn,fsr2l
 23965  003BF0  C041  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23966  003BF4  0E48               	movlw	72
 23967  003BF6  6EDF               	movwf	indf2,c
 23968                           
 23969                           ;usb_device.c: 2639: pBDTEntryIn[0]->STAT.Val |= 0x80;
 23970  003BF8  C040  FFD9         	movff	_pBDTEntryIn,fsr2l
 23971  003BFC  C041  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23972  003C00  0E00               	movlw	0
 23973  003C02  8EDB               	bsf	plusw2,7,c
 23974                           
 23975                           ;usb_device.c: 2640: }
 23976  003C04  0012               	return	
 23977  003C06                     i2l626:
 23978                           
 23979                           ;usb_device.c: 2641: else
 23980                           ;usb_device.c: 2642: {
 23981                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 23982  003C06  C040  FFD9         	movff	_pBDTEntryIn,fsr2l
 23983  003C0A  C041  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23984  003C0E  0E08               	movlw	8
 23985  003C10  6EDF               	movwf	indf2,c
 23986                           
 23987                           ;usb_device.c: 2644: pBDTEntryIn[0]->STAT.Val |= 0x80;
 23988  003C12  C040  FFD9         	movff	_pBDTEntryIn,fsr2l
 23989  003C16  C041  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23990  003C1A  0E00               	movlw	0
 23991  003C1C  8EDB               	bsf	plusw2,7,c
 23992                           
 23993                           ;usb_device.c: 2645: }
 23994                           ;usb_device.c: 2646: }
 23995                           ;usb_device.c: 2647: }
 23996  003C1E  0012               	return	
 23997  003C20                     i2l623:
 23998                           
 23999                           ;usb_device.c: 2648: else
 24000                           ;usb_device.c: 2649: {
 24001                           ;usb_device.c: 2653: if(outPipes[0].info.bits.busy == 1)
 24002  003C20  BE3B               	btfsc	_outPipes+3,7,c	;volatile
 24003                           
 24004                           ;usb_device.c: 2658: }
 24005                           ;usb_device.c: 2659: outPipes[0].info.bits.busy = 0;
 24006                           
 24007                           ;usb_device.c: 2656: {
 24008                           ;usb_device.c: 2657: outPipes[0].pFunc();
 24009  003C22  9E3B               	bcf	_outPipes+3,7,c	;volatile
 24010                           
 24011                           ;usb_device.c: 2660: }
 24012                           ;usb_device.c: 2662: controlTransferState = 0;
 24013  003C24  0E00               	movlw	0
 24014  003C26  6E56               	movwf	_controlTransferState,c	;volatile
 24015  003C28  0012               	return	
 24016  003C2A                     __end_of_USBCtrlTrfInHandler:
 24017                           	opt stack 0
 24018                           pclatu	equ	0xFFB
 24019                           pclath	equ	0xFFA
 24020                           tblptru	equ	0xFF8
 24021                           tblptrh	equ	0xFF7
 24022                           tblptrl	equ	0xFF6
 24023                           tablat	equ	0xFF5
 24024                           prodh	equ	0xFF4
 24025                           prodl	equ	0xFF3
 24026                           intcon	equ	0xFF2
 24027                           indf0	equ	0xFEF
 24028                           postinc0	equ	0xFEE
 24029                           fsr0h	equ	0xFEA
 24030                           fsr0l	equ	0xFE9
 24031                           wreg	equ	0xFE8
 24032                           indf1	equ	0xFE7
 24033                           postdec1	equ	0xFE5
 24034                           fsr1h	equ	0xFE2
 24035                           fsr1l	equ	0xFE1
 24036                           indf2	equ	0xFDF
 24037                           postinc2	equ	0xFDE
 24038                           postdec2	equ	0xFDD
 24039                           plusw2	equ	0xFDB
 24040                           fsr2h	equ	0xFDA
 24041                           fsr2l	equ	0xFD9
 24042                           status	equ	0xFD8
 24043                           
 24044 ;; *************** function _USBCtrlTrfTxService *****************
 24045 ;; Defined at:
 24046 ;;		line 1771 in file "../../Microchip/microchip/mla/v2017_03_06/framework/usb/src/usb_device.c"
 24047 ;; Parameters:    Size  Location     Type
 24048 ;;		None
 24049 ;; Auto vars:     Size  Location     Type
 24050 ;;  byteToSend      1    0[COMRAM] unsigned char 
 24051 ;; Return value:  Size  Location     Type
 24052 ;;                  1    wreg      void 
 24053 ;; Registers used:
 24054 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 24055 ;; Tracked objects:
 24056 ;;		On entry : 0/0
 24057 ;;		On exit  : 0/0
 24058 ;;		Unchanged: 0/0
 24059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24060 ;;      Params:         0       0       0       0       0       0       0       0       0
 24061 ;;      Locals:         1       0       0       0       0       0       0       0       0
 24062 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24063 ;;      Totals:         1       0       0       0       0       0       0       0       0
 24064 ;;Total ram usage:        1 bytes
 24065 ;; Hardware stack levels used:    1
 24066 ;; This function calls:
 24067 ;;		Nothing
 24068 ;; This function is called by:
 24069 ;;		_USBCtrlEPAllowDataStage
 24070 ;;		_USBCtrlTrfInHandler
 24071 ;; This function uses a non-reentrant model
 24072 ;;
 24073                           
 24074                           	psect	text98
 24075  003836                     __ptext98:
 24076                           	opt stack 0
 24077  003836                     _USBCtrlTrfTxService:
 24078                           	opt stack 19
 24079                           
 24080                           ;usb_device.c: 1773: uint8_t byteToSend;
 24081                           ;usb_device.c: 1777: byteToSend = 8;
 24082                           
 24083                           ;incstack = 0
 24084  003836  0E08               	movlw	8
 24085  003838  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 24086                           
 24087                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 24088  00383A  0100               	movlb	0	; () banked
 24089  00383C  51FE               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 24090  00383E  E110               	bnz	i2l7719
 24091  003840  0E08               	movlw	8
 24092  003842  5DFD               	subwf	(_inPipes+4)& (0+255),w,b	;volatile
 24093  003844  B0D8               	btfsc	status,0,c
 24094  003846  D00C               	goto	i2l528
 24095                           
 24096                           ; BSR set to: 0
 24097                           ;usb_device.c: 1779: {
 24098                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 24099  003848  C0FD  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 24100                           
 24101                           ; BSR set to: 0
 24102                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 24103  00384C  5057               	movf	_shortPacketStatus,w,c	;volatile
 24104  00384E  A4D8               	btfss	status,2,c
 24105  003850  D002               	goto	i2l526
 24106                           
 24107                           ; BSR set to: 0
 24108                           ;usb_device.c: 1788: {
 24109                           ;usb_device.c: 1789: shortPacketStatus = 1;
 24110  003852  0E01               	movlw	1
 24111  003854  D004               	goto	L30
 24112  003856                     i2l526:
 24113                           
 24114                           ; BSR set to: 0
 24115                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 24116                           
 24117                           ; BSR set to: 0
 24118  003856  0457               	decf	_shortPacketStatus,w,c	;volatile
 24119  003858  A4D8               	btfss	status,2,c
 24120  00385A  D002               	goto	i2l528
 24121                           
 24122                           ; BSR set to: 0
 24123                           ;usb_device.c: 1792: {
 24124                           ;usb_device.c: 1793: shortPacketStatus = 2;
 24125  00385C  0E02               	movlw	2
 24126  00385E                     L30:
 24127  00385E  6E57               	movwf	_shortPacketStatus,c	;volatile
 24128  003860                     i2l528:
 24129  003860                     i2l7719:
 24130                           
 24131                           ; BSR set to: 0
 24132                           ;usb_device.c: 1794: }
 24133                           ;usb_device.c: 1795: }
 24134                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 24135  003860  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 24136  003862  5FFD               	subwf	(_inPipes+4)& (0+255),f,b	;volatile
 24137  003864  0E00               	movlw	0
 24138  003866  5BFE               	subwfb	(_inPipes+5)& (0+255),f,b	;volatile
 24139                           
 24140                           ; BSR set to: 0
 24141                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 24142  003868  EE20 F001          	lfsr	2,1
 24143  00386C  5040               	movf	_pBDTEntryIn,w,c
 24144  00386E  26D9               	addwf	fsr2l,f,c
 24145  003870  5041               	movf	_pBDTEntryIn+1,w,c
 24146  003872  22DA               	addwfc	fsr2h,f,c
 24147  003874  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 24148                           
 24149                           ; BSR set to: 0
 24150                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 24151  003878  0E38               	movlw	56
 24152  00387A  0101               	movlb	1	; () banked
 24153  00387C  6FC2               	movwf	_pDst& (0+255),b
 24154  00387E  0E04               	movlw	4
 24155  003880  6FC3               	movwf	(_pDst+1)& (0+255),b
 24156                           
 24157                           ; BSR set to: 1
 24158                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 24159  003882  0100               	movlb	0	; () banked
 24160  003884  A1FC               	btfss	(_inPipes+3)& (0+255),0,b	;volatile
 24161  003886  D01D               	goto	i2l530
 24162  003888  D03C               	goto	i2l534
 24163  00388A                     
 24164                           ;usb_device.c: 1812: {
 24165                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 24166                           
 24167                           ; BSR set to: 0
 24168  00388A  C0F9  FFF6         	movff	_inPipes,tblptrl	;volatile
 24169  00388E  C0FA  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 24170  003892  6AF8               	clrf	tblptru,c
 24171  003894  C1C2  FFD9         	movff	_pDst,fsr2l
 24172  003898  C1C3  FFDA         	movff	_pDst+1,fsr2h
 24173  00389C  0E07               	movlw	(high __ramtop+-1)
 24174  00389E  64F7               	cpfsgt	tblptrh,c
 24175  0038A0  D003               	bra	i2u588_47
 24176  0038A2  0008               	tblrd		*
 24177  0038A4  50F5               	movf	tablat,w,c
 24178  0038A6  D005               	bra	i2u588_40
 24179  0038A8                     i2u588_47:
 24180  0038A8  CFF6 FFE9          	movff	tblptrl,fsr0l
 24181  0038AC  CFF7 FFEA          	movff	tblptrh,fsr0h
 24182  0038B0  50EF               	movf	indf0,w,c
 24183  0038B2                     i2u588_40:
 24184  0038B2  6EDF               	movwf	indf2,c
 24185  0038B4  0100               	movlb	0	; () banked
 24186  0038B6  4BF9               	infsnz	_inPipes& (0+255),f,b	;volatile
 24187  0038B8  2BFA               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 24188                           
 24189                           ; BSR set to: 0
 24190  0038BA  0101               	movlb	1	; () banked
 24191  0038BC  4BC2               	infsnz	_pDst& (0+255),f,b
 24192  0038BE  2BC3               	incf	(_pDst+1)& (0+255),f,b
 24193                           
 24194                           ; BSR set to: 1
 24195                           ;usb_device.c: 1814: byteToSend--;
 24196  0038C0  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 24197  0038C2                     i2l530:
 24198                           
 24199                           ; BSR set to: 1
 24200  0038C2  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 24201  0038C4  B4D8               	btfsc	status,2,c
 24202  0038C6  0012               	return	
 24203  0038C8  D7E0               	goto	i2l531
 24204  0038CA                     
 24205                           ;usb_device.c: 1820: {
 24206                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 24207  0038CA  C0F9  FFF6         	movff	_inPipes,tblptrl	;volatile
 24208  0038CE  C0FA  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 24209  0038D2  6AF8               	clrf	tblptru,c
 24210  0038D4  C1C2  FFD9         	movff	_pDst,fsr2l
 24211  0038D8  C1C3  FFDA         	movff	_pDst+1,fsr2h
 24212  0038DC  0E07               	movlw	(high __ramtop+-1)
 24213  0038DE  64F7               	cpfsgt	tblptrh,c
 24214  0038E0  D003               	bra	i2u590_47
 24215  0038E2  0008               	tblrd		*
 24216  0038E4  50F5               	movf	tablat,w,c
 24217  0038E6  D005               	bra	i2u590_40
 24218  0038E8                     i2u590_47:
 24219  0038E8  CFF6 FFE9          	movff	tblptrl,fsr0l
 24220  0038EC  CFF7 FFEA          	movff	tblptrh,fsr0h
 24221  0038F0  50EF               	movf	indf0,w,c
 24222  0038F2                     i2u590_40:
 24223  0038F2  6EDF               	movwf	indf2,c
 24224  0038F4  0100               	movlb	0	; () banked
 24225  0038F6  4BF9               	infsnz	_inPipes& (0+255),f,b	;volatile
 24226  0038F8  2BFA               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 24227                           
 24228                           ; BSR set to: 0
 24229  0038FA  0101               	movlb	1	; () banked
 24230  0038FC  4BC2               	infsnz	_pDst& (0+255),f,b
 24231  0038FE  2BC3               	incf	(_pDst+1)& (0+255),f,b
 24232                           
 24233                           ; BSR set to: 1
 24234                           ;usb_device.c: 1822: byteToSend--;
 24235  003900  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 24236  003902                     i2l534:
 24237                           
 24238                           ; BSR set to: 1
 24239  003902  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 24240  003904  B4D8               	btfsc	status,2,c
 24241  003906  0012               	return	
 24242  003908  D7E0               	goto	i2l535
 24243  00390A                     __end_of_USBCtrlTrfTxService:
 24244                           	opt stack 0
 24245                           pclatu	equ	0xFFB
 24246                           pclath	equ	0xFFA
 24247                           tblptru	equ	0xFF8
 24248                           tblptrh	equ	0xFF7
 24249                           tblptrl	equ	0xFF6
 24250                           tablat	equ	0xFF5
 24251                           prodh	equ	0xFF4
 24252                           prodl	equ	0xFF3
 24253                           intcon	equ	0xFF2
 24254                           indf0	equ	0xFEF
 24255                           postinc0	equ	0xFEE
 24256                           fsr0h	equ	0xFEA
 24257                           fsr0l	equ	0xFE9
 24258                           wreg	equ	0xFE8
 24259                           indf1	equ	0xFE7
 24260                           postdec1	equ	0xFE5
 24261                           fsr1h	equ	0xFE2
 24262                           fsr1l	equ	0xFE1
 24263                           indf2	equ	0xFDF
 24264                           postinc2	equ	0xFDE
 24265                           postdec2	equ	0xFDD
 24266                           plusw2	equ	0xFDB
 24267                           fsr2h	equ	0xFDA
 24268                           fsr2l	equ	0xFD9
 24269                           status	equ	0xFD8
 24270                           pclatu	equ	0xFFB
 24271                           pclath	equ	0xFFA
 24272                           tblptru	equ	0xFF8
 24273                           tblptrh	equ	0xFF7
 24274                           tblptrl	equ	0xFF6
 24275                           tablat	equ	0xFF5
 24276                           prodh	equ	0xFF4
 24277                           prodl	equ	0xFF3
 24278                           intcon	equ	0xFF2
 24279                           indf0	equ	0xFEF
 24280                           postinc0	equ	0xFEE
 24281                           fsr0h	equ	0xFEA
 24282                           fsr0l	equ	0xFE9
 24283                           wreg	equ	0xFE8
 24284                           indf1	equ	0xFE7
 24285                           postdec1	equ	0xFE5
 24286                           fsr1h	equ	0xFE2
 24287                           fsr1l	equ	0xFE1
 24288                           indf2	equ	0xFDF
 24289                           postinc2	equ	0xFDE
 24290                           postdec2	equ	0xFDD
 24291                           plusw2	equ	0xFDB
 24292                           fsr2h	equ	0xFDA
 24293                           fsr2l	equ	0xFD9
 24294                           status	equ	0xFD8
 24295                           
 24296                           	psect	rparam
 24297  0000                     pclatu	equ	0xFFB
 24298                           pclath	equ	0xFFA
 24299                           tblptru	equ	0xFF8
 24300                           tblptrh	equ	0xFF7
 24301                           tblptrl	equ	0xFF6
 24302                           tablat	equ	0xFF5
 24303                           prodh	equ	0xFF4
 24304                           prodl	equ	0xFF3
 24305                           intcon	equ	0xFF2
 24306                           indf0	equ	0xFEF
 24307                           postinc0	equ	0xFEE
 24308                           fsr0h	equ	0xFEA
 24309                           fsr0l	equ	0xFE9
 24310                           wreg	equ	0xFE8
 24311                           indf1	equ	0xFE7
 24312                           postdec1	equ	0xFE5
 24313                           fsr1h	equ	0xFE2
 24314                           fsr1l	equ	0xFE1
 24315                           indf2	equ	0xFDF
 24316                           postinc2	equ	0xFDE
 24317                           postdec2	equ	0xFDD
 24318                           plusw2	equ	0xFDB
 24319                           fsr2h	equ	0xFDA
 24320                           fsr2l	equ	0xFD9
 24321                           status	equ	0xFD8
 24322                           
 24323                           	psect	temp
 24324  00005F                     btemp:
 24325                           	opt stack 0
 24326  00005F                     	ds	1
 24327  0000                     int$flags	set	btemp
 24328  0000                     wtemp6	set	btemp+1
 24329                           pclatu	equ	0xFFB
 24330                           pclath	equ	0xFFA
 24331                           tblptru	equ	0xFF8
 24332                           tblptrh	equ	0xFF7
 24333                           tblptrl	equ	0xFF6
 24334                           tablat	equ	0xFF5
 24335                           prodh	equ	0xFF4
 24336                           prodl	equ	0xFF3
 24337                           intcon	equ	0xFF2
 24338                           indf0	equ	0xFEF
 24339                           postinc0	equ	0xFEE
 24340                           fsr0h	equ	0xFEA
 24341                           fsr0l	equ	0xFE9
 24342                           wreg	equ	0xFE8
 24343                           indf1	equ	0xFE7
 24344                           postdec1	equ	0xFE5
 24345                           fsr1h	equ	0xFE2
 24346                           fsr1l	equ	0xFE1
 24347                           indf2	equ	0xFDF
 24348                           postinc2	equ	0xFDE
 24349                           postdec2	equ	0xFDD
 24350                           plusw2	equ	0xFDB
 24351                           fsr2h	equ	0xFDA
 24352                           fsr2l	equ	0xFD9
 24353                           status	equ	0xFD8


Data Sizes:
    Strings     515
    Constant    553
    Data        63
    BSS         1021
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     55      94
    BANK0           160    153     160
    BANK1           256    132     255
    BANK2           256    191     249
    BANK3           256      0     157
    BANK4           192      0     100
    BANK5           128      0     100
    BANK6           256      0     200
    BANK7           256      0       0

Pointer List with Targets:

    addSensor@sensor	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[6]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMl[48]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_23(CODE[16]), STR_22(CODE[7]), STR_21(CODE[14]), STR_20(CODE[8]), 
		 -> STR_19(CODE[8]), STR_18(CODE[10]), STR_17(CODE[17]), STR_16(CODE[11]), 
		 -> STR_15(CODE[5]), STR_14(CODE[32]), STR_13(CODE[7]), STR_12(CODE[11]), 
		 -> STR_11(CODE[11]), STR_10(CODE[14]), STR_9(CODE[3]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 100
		 -> recebeByteLoRaWan@frameData(BANK4[100]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 300
		 -> recebeByteLoRaWan@frameData(BANK4[100]), SYS(CODE[5]), MAC(CODE[5]), TxLoRaWan@comando(BANK1[200]), 
		 -> DataRate@comando(BANK1[200]), SetBandWidth@comando(BANK1[200]), SetSpreadingFactor@comando(BANK1[200]), MacSave@comando(BANK1[200]), 
		 -> GetAdr@comando(BANK1[200]), SetAdr@comando(BANK1[200]), SetChannelLoRaWan@comando(BANK1[200]), MAC_JOIN_OTAA(CODE[10]), 
		 -> SYS_RESET(CODE[6]), SetAppKey@comando(BANK1[200]), SetAppEUI@comando(BANK1[200]), SetDevEUI@comando(BANK1[200]), 
		 -> GetDnctr@comando(BANK1[200]), STR_23(CODE[16]), STR_22(CODE[7]), STR_21(CODE[14]), 
		 -> STR_20(CODE[8]), STR_19(CODE[8]), STR_18(CODE[10]), STR_17(CODE[17]), 
		 -> STR_16(CODE[11]), STR_15(CODE[5]), STR_14(CODE[32]), STR_13(CODE[7]), 
		 -> STR_12(CODE[11]), STR_11(CODE[11]), STR_10(CODE[14]), STR_9(CODE[3]), 
		 -> frameBuffer(BIGRAMl[300]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 300
		 -> recebeByteLoRaWan@frameData(BANK4[100]), SYS(CODE[5]), MAC(CODE[5]), TxLoRaWan@comando(BANK1[200]), 
		 -> DataRate@comando(BANK1[200]), SetBandWidth@comando(BANK1[200]), SetSpreadingFactor@comando(BANK1[200]), MacSave@comando(BANK1[200]), 
		 -> GetAdr@comando(BANK1[200]), SetAdr@comando(BANK1[200]), SetChannelLoRaWan@comando(BANK1[200]), MAC_JOIN_OTAA(CODE[10]), 
		 -> SYS_RESET(CODE[6]), SetAppKey@comando(BANK1[200]), SetAppEUI@comando(BANK1[200]), SetDevEUI@comando(BANK1[200]), 
		 -> GetDnctr@comando(BANK1[200]), STR_23(CODE[16]), STR_22(CODE[7]), STR_21(CODE[14]), 
		 -> STR_20(CODE[8]), STR_19(CODE[8]), STR_18(CODE[10]), STR_17(CODE[17]), 
		 -> STR_16(CODE[11]), STR_15(CODE[5]), STR_14(CODE[32]), STR_13(CODE[7]), 
		 -> STR_12(CODE[11]), STR_11(CODE[11]), STR_10(CODE[14]), STR_9(CODE[3]), 
		 -> frameBuffer(BIGRAMl[300]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 100
		 -> recebeByteLoRaWan@frameData(BANK4[100]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 300
		 -> frameBuffer(BIGRAMl[300]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 300
		 -> frameBuffer(BIGRAMl[300]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_23(CODE[16]), STR_22(CODE[7]), STR_21(CODE[14]), STR_20(CODE[8]), 
		 -> STR_19(CODE[8]), STR_18(CODE[10]), STR_17(CODE[17]), STR_16(CODE[11]), 
		 -> STR_15(CODE[5]), STR_14(CODE[32]), STR_13(CODE[7]), STR_12(CODE[11]), 
		 -> STR_11(CODE[11]), STR_10(CODE[14]), STR_9(CODE[3]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 100
		 -> recebeByteLoRaWan@frameData(BANK4[100]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 100
		 -> TxLoRaWan@hex(COMRAM[4]), addSensorInt@f(COMRAM[30]), addSensorStr@f(COMRAM[30]), addSensor@f(BANK1[100]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 300
		 -> TxLoRaWan@comando(BANK1[200]), frameBuffer(BIGRAMl[300]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 300
		 -> TxLoRaWan@comando(BANK1[200]), frameBuffer(BIGRAMl[300]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 100
		 -> receivePacket(BANK5[100]), response(BANK3[100]), SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 100
		 -> receivePacket(BANK5[100]), response(BANK3[100]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 2047
		 -> recebeByte@frameData(BANK6[100]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[2047]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 2047
		 -> recebeByte@frameData(BANK6[100]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[2047]), SetupPkt(BIGRAMhl[8]), 

    sprintf$5142	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_41(CODE[17]), STR_40(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_39(CODE[7]), MAC_TX_UNCNF(CODE[9]), MAC_TX_CNF(CODE[7]), MAC_SET_DR(CODE[7]), 
		 -> MAC_SET_BW(CODE[13]), MAC_SET_SF(CODE[16]), MAC_SAVE(CODE[5]), MAC_GET_ADR(CODE[8]), 
		 -> MAC_SET_ADR(CODE[8]), MAC_SET_CH_STATUS(CODE[14]), MAC_SET_APPKEY(CODE[11]), MAC_SET_APPEUI(CODE[11]), 
		 -> MAC_SET_DEVEUI(CODE[11]), MAC_GET_DNCTR(CODE[10]), itoaVitor@buffer(BANK2[12]), STR_1(CODE[5]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 92
		 -> STR_38(CODE[5]), STR_37(CODE[7]), STR_36(CODE[7]), STR_35(CODE[6]), 
		 -> STR_34(CODE[6]), STR_33(CODE[5]), STR_32(CODE[3]), STR_31(CODE[3]), 
		 -> STR_30(CODE[6]), STR_29(CODE[10]), STR_28(CODE[9]), STR_27(CODE[68]), 
		 -> STR_26(CODE[36]), STR_25(CODE[36]), STR_24(CODE[3]), STR_8(CODE[7]), 
		 -> STR_7(CODE[8]), STR_6(CODE[7]), STR_5(CODE[9]), STR_4(CODE[17]), 
		 -> STR_3(CODE[92]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 300
		 -> TxLoRaWan@hex(COMRAM[4]), TxLoRaWan@comando(BANK1[200]), DataRate@comando(BANK1[200]), SetBandWidth@comando(BANK1[200]), 
		 -> SetSpreadingFactor@comando(BANK1[200]), MacSave@comando(BANK1[200]), GetAdr@comando(BANK1[200]), SetAdr@comando(BANK1[200]), 
		 -> SetChannelLoRaWan@comando(BANK1[200]), SetAppKey@comando(BANK1[200]), SetAppEUI@comando(BANK1[200]), SetDevEUI@comando(BANK1[200]), 
		 -> GetDnctr@comando(BANK1[200]), addSensorFloat@f(COMRAM[30]), addSensorInt@f(COMRAM[30]), addSensorStr@f(COMRAM[30]), 
		 -> addSensor@f(BANK1[100]), main@data(BANK2[150]), frameBuffer(BIGRAMl[300]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 300
		 -> frameBuffer(BIGRAMl[300]), 

    MSG_LORAWAN	PTR const unsigned char [15] size(2) Largest target is 32
		 -> STR_23(CODE[16]), STR_22(CODE[7]), STR_21(CODE[14]), STR_20(CODE[8]), 
		 -> STR_19(CODE[8]), STR_18(CODE[10]), STR_17(CODE[17]), STR_16(CODE[11]), 
		 -> STR_15(CODE[5]), STR_14(CODE[32]), STR_13(CODE[7]), STR_12(CODE[11]), 
		 -> STR_11(CODE[11]), STR_10(CODE[14]), STR_9(CODE[3]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 300
		 -> TxLoRaWan@comando(BANK1[200]), frameBuffer(BIGRAMl[300]), 

    sp__itoaVitor	PTR unsigned char  size(2) Largest target is 12
		 -> itoaVitor@buffer(BANK2[12]), 

    createFrameHeader@WaspID	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    setLinkKey@key	PTR const unsigned char  size(2) Largest target is 17
		 -> encryptKey(CODE[17]), 

    setChannelMask@mask	PTR unsigned char  size(2) Largest target is 8
		 -> Mask(BANK2[8]), 

    send@pointer	PTR unsigned char  size(2) Largest target is 300
		 -> frameBuffer(BIGRAMl[300]), 

    send@macAddress	PTR unsigned char  size(2) Largest target is 17
		 -> RX_ADDRESS(BANK3[17]), 

    setPAN@PANID	PTR unsigned char  size(2) Largest target is 2
		 -> panID(BANK2[2]), 

    gen_data@param	PTR unsigned char  size(2) Largest target is 2047
		 -> setEncryptionMode@mode(BANK0[1]), setChannel@_channel(COMRAM[1]), encryptKey(CODE[17]), Mask(BANK2[8]), 
		 -> panID(BANK2[2]), RAM(DATA[2047]), NULL(NULL[0]), 

    gen_data@data	PTR const unsigned char  size(2) Largest target is 2
		 -> gs_encryption(CODE[2]), set_link_key(CODE[2]), get_preambleid_900(CODE[2]), set_preambleid_900(CODE[2]), 
		 -> get_channelmask_900(CODE[2]), set_channelmask_900(CODE[2]), gs_channel(CODE[2]), write_values(CODE[2]), 
		 -> gs_pan(CODE[2]), get_own_mac_high(CODE[2]), get_own_mac_low(CODE[2]), 

    putsUSBUSART@data	PTR unsigned char  size(2) Largest target is 150
		 -> main@data(BANK2[150]), 

    putsUSBUSART@pData	PTR unsigned char  size(2) Largest target is 150
		 -> main@data(BANK2[150]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S2376_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S2376_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S2376_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S2376_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 100
		 -> receivePacket(BANK5[100]), response(BANK3[100]), SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BIGRAMhl[64]), cdc_data_rx(BIGRAMhh[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S555$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S545$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S545$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S521$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S521$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S521$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S521$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _SYS_InterruptHigh in COMRAM

    _SYS_InterruptHigh->_USBDeviceTasks
    _recebeByteLoRaWan->_strncmp
    i2_converter->i2_toupper
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    _main->_addSensor
    _setup_uart->___lldiv
    _setPreambleID->_gen_data
    _setPAN->_gen_data
    _setLinkKey->_gen_data
    _setEncryptionMode->_gen_data
    _setChannelMask->_gen_data
    _gen_send->_putch
    _gen_data->_addByteCommand
    _send->_sendXBeePriv
    _sendXBeePriv->_txZBStatusResponse
    _txZBStatusResponse->_millis
    _rand->___lmul
    _converter->_toupper
    _addByteCommand->_converter
    _le_AD->___ftdiv
    ___ftdiv->___ftmul
    ___awtoft->___ftpack
    _init_XBee->_resetXBee
    _verificaUSB->_CDCTxService
    _CDCTxService->_USBTransferOnePacket
    _createFrameHeader->_sprintf
    _addSensor->_sprintf
    _sprintf->___fttol
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___ftadd
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->_rand
    ___fttol->_le_AD
    ___ftsub->___ftadd
    ___ftadd->___wmul
    _itoaVitor->___awmod
    _USBDeviceInit->_memset

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_addSensor
    _createFrameHeader->_sprintf
    _addSensor->_sprintf

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _SYS_InterruptHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _SYS_InterruptHigh in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               197   197      0  338055
                                            149 BANK0      4     4      0
                                              0 BANK2    191   191      0
                      _USBDeviceInit
                            ___ftmul
                            ___fttol
                          _addSensor
                  _createFrameHeader
                              _delay
                          _init_XBee
                              _le_AD
                          _le_pulsos
                             _millis
                       _putsUSBUSART
                               _send
                     _setChannelMask
                  _setEncryptionMode
                         _setLinkKey
                             _setPAN
                      _setPreambleID
                           _setup_AD
                         _setup_ccp1
                       _setup_pulsos
                         _setup_uart
                            _sprintf
                             _strlen
                        _verificaUSB
 ---------------------------------------------------------------------------------
 (1) _strlen                                               6     4      2     761
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _setup_uart                                           8     4      4    1498
                                             13 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (1) _setup_pulsos                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup_ccp1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup_AD                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setPreambleID                                       24    24      0    6062
                                             18 BANK0      4     4      0
                           _gen_data
                           _gen_send
 ---------------------------------------------------------------------------------
 (1) _setPAN                                               3     1      2    6173
                                             18 BANK0      3     1      2
                           _gen_data
                           _gen_send
 ---------------------------------------------------------------------------------
 (1) _setLinkKey                                           3     1      2    6107
                                             18 BANK0      3     1      2
                           _gen_data
                           _gen_send
 ---------------------------------------------------------------------------------
 (1) _setEncryptionMode                                    2     2      0    6086
                                             18 BANK0      2     2      0
                           _gen_data
                           _gen_send
 ---------------------------------------------------------------------------------
 (1) _setChannelMask                                      53    51      2    6305
                                             18 BANK0      3     1      2
                           _gen_data
                           _gen_send
 ---------------------------------------------------------------------------------
 (2) _gen_send                                             3     3      0      91
                                              1 BANK0      3     3      0
                              _putch
 ---------------------------------------------------------------------------------
 (2) _gen_data                                            10     5      5    5897
                                              8 BANK0     10     5      5
                     _addByteCommand
 ---------------------------------------------------------------------------------
 (1) _send                                                24    18      6    5007
                                             29 BANK0     24    18      6
                            ___llmod
                     _addByteCommand
                          _converter
                               _rand
                       _sendXBeePriv
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _sendXBeePriv                                         2     2      0     161
                                             27 BANK0      2     2      0
                              _putch
                 _txZBStatusResponse
 ---------------------------------------------------------------------------------
 (3) _txZBStatusResponse                                  19    19      0      93
                                              8 BANK0     19    19      0
                             _millis
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _rand                                                 2     0      2     422
                                             12 BANK0      2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     422
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) _converter                                            5     4      1     649
                                              1 BANK0      5     4      1
                            _toupper
 ---------------------------------------------------------------------------------
 (3) _toupper                                              1     1      0      67
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _addByteCommand                                       2     1      1    1958
                                              6 BANK0      2     1      1
                          _converter (ARG)
 ---------------------------------------------------------------------------------
 (1) _putsUSBUSART                                         5     3      2     202
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _le_pulsos                                            9     5      4     492
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _le_AD                                               18    15      3   17964
                                             62 BANK0     18    15      3
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3544
                                             47 BANK0     15     9      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3    3114
                                              8 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _init_XBee                                            0     0      0       0
                          _resetXBee
 ---------------------------------------------------------------------------------
 (2) _resetXBee                                            2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _delay                                               16    12      4    1927
                                             13 BANK0     16    12      4
                             _millis
                        _verificaUSB
 ---------------------------------------------------------------------------------
 (1) _verificaUSB                                          0     0      0    1770
                       _CDCTxService
                    _USBDeviceAttach
                    _USBDeviceDetach
 ---------------------------------------------------------------------------------
 (2) _USBDeviceDetach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CDCTxService                                         2     2      0    1770
                                             11 BANK0      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                11     7      4    1633
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 (4) _millis                                               8     4      4      23
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _createFrameHeader                                    3     0      3   88548
                                            145 BANK0      3     0      3
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _addSensor                                          104   100      4   92079
                                            145 BANK0      4     0      4
                                             32 BANK1    100   100      0
                          _itoaVitor
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (2) _strcat                                               6     2      4     810
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             83    39     44   88326
                                             95 BANK0     50     6     44
                                              0 BANK1     32    32      0
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                          _itoaVitor (ARG)
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                7     4      3   21960
                                             47 BANK0      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              10     7      3   21762
                                             47 BANK0     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftadd (ARG)
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4   10923
                                             14 BANK0      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    6438
                                             32 BANK0     15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    2080
                                              6 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         15     9      6     481
                                              0 BANK0     15     9      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          12     6      6     624
                                              0 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    3092
                                              8 BANK0      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8    1049
                                             14 BANK0      9     1      8
                            ___lldiv (ARG)
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8    1230
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     697
                                             80 BANK0     15    11      4
                            ___ftmul (ARG)
                              _le_AD (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    5035
                                             32 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    4638
                                             20 BANK0     12     6      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2934
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     134
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     670
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (2) _itoaVitor                                            7     5      2    2551
                                              6 BANK0      7     5      2
                            ___awmod
                            ___lbdiv
 ---------------------------------------------------------------------------------
 (3) ___lbdiv                                              4     3      1     251
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    2076
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1132
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     930
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _SYS_InterruptHigh                                   27    27      0   33300
                                             28 COMRAM    27    27      0
                     _USBDeviceTasks
                              _getch
                  _recebeByteLoRaWan
 ---------------------------------------------------------------------------------
 (7) _recebeByteLoRaWan                                   10    10      0    2363
                                              9 COMRAM    10    10      0
                             _strcmp
                             _strcpy
                            _strncmp
                        i2_converter
                           i2_strlen
 ---------------------------------------------------------------------------------
 (8) i2_strlen                                             6     4      2     220
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) i2_converter                                          5     4      1     523
                                              1 COMRAM     5     4      1
                          i2_toupper
 ---------------------------------------------------------------------------------
 (9) i2_toupper                                            1     1      0      67
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _strncmp                                              9     3      6     668
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (8) _strcpy                                               6     2      4     253
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _strcmp                                               6     2      4     269
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) _getch                                                3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (7) _USBDeviceTasks                                       1     1      0   30623
                                             27 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (8) i2_USBDeviceInit                                      1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (8) _USBWakeFromSuspend                                   0     0      0    3879
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBSuspend                                           0     0      0    3879
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBStallHandler                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPService                                     1     1      0   18330
                                             26 COMRAM     1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (9) _memcpy                                              11     5      6    1478
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfSetupHandler                               0     0      0   16623
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (10) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (11) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (10) _USBCheckStdRequest                                  0     0      0   12652
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (11) _USBStdSetCfgHandler                                 1     1      0    4377
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (9) i2_memset                                             8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (11) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (11) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (11) _USBStdFeatureReqHandler                             6     6      0    4350
                                             20 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    3879
                                             12 COMRAM     8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (9) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _CDCInitEP                                            0     0      0    1187
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (10) i2_USBTransferOnePacket                             11     7      4     454
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (10) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (11) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (10) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (11) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfInHandler                                  1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (12) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _USBDeviceInit
     _memset
   ___ftmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftpack (ARG)
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
   ___fttol
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _le_AD (ARG)
       ___awtoft
         ___ftpack
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   _addSensor
     _itoaVitor
       ___awmod
       ___lbdiv
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _le_AD (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
         _rand (ARG)
           ___lmul
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _itoaVitor (ARG)
         ___awmod
         ___lbdiv
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     _strcat
   _createFrameHeader
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _le_AD (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
         _rand (ARG)
           ___lmul
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _itoaVitor (ARG)
         ___awmod
         ___lbdiv
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _delay
     _millis
     _verificaUSB
       _CDCTxService
         _USBTransferOnePacket
       _USBDeviceAttach
       _USBDeviceDetach
   _init_XBee
     _resetXBee
   _le_AD
     ___awtoft
       ___ftpack
     ___ftadd
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   _le_pulsos
   _millis
   _putsUSBUSART
   _send
     ___llmod
       ___lldiv (ARG)
       _rand (ARG)
         ___lmul
     _addByteCommand
       _converter (ARG)
         _toupper
     _converter
       _toupper
     _rand
       ___lmul
     _sendXBeePriv
       _putch
       _txZBStatusResponse
         _millis
     _strlen (ARG)
   _setChannelMask
     _gen_data
       _addByteCommand
         _converter (ARG)
           _toupper
     _gen_send
       _putch
   _setEncryptionMode
     _gen_data
       _addByteCommand
         _converter (ARG)
           _toupper
     _gen_send
       _putch
   _setLinkKey
     _gen_data
       _addByteCommand
         _converter (ARG)
           _toupper
     _gen_send
       _putch
   _setPAN
     _gen_data
       _addByteCommand
         _converter (ARG)
           _toupper
     _gen_send
       _putch
   _setPreambleID
     _gen_data
       _addByteCommand
         _converter (ARG)
           _toupper
     _gen_send
       _putch
   _setup_AD
   _setup_ccp1
   _setup_pulsos
   _setup_uart
     ___lldiv
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg
     ___ftsub
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _le_AD (ARG)
         ___awtoft
           ___ftpack
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
       _rand (ARG)
         ___lmul
     ___lltoft
       ___ftpack
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftadd (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _isdigit
     _itoaVitor (ARG)
       ___awmod
       ___lbdiv
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   _strlen
   _verificaUSB
     _CDCTxService
       _USBTransferOnePacket
     _USBDeviceAttach
     _USBDeviceDetach

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _USBCheckCDCRequest
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _memcpy
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USBCheckCDCRequest
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USBCheckCDCRequest
     _USER_USB_CALLBACK_EVENT_HANDLER
       _CDCInitEP
         _USBEnableEndpoint
           _USBConfigureEndpoint
         i2_USBTransferOnePacket
       _USBCheckCDCRequest
     i2_USBDeviceInit
       i2_memset
   _getch
   _recebeByteLoRaWan
     _strcmp
     _strcpy
     _strncmp
     i2_converter
       i2_toupper
     i2_strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            3FF      0     12C      23       29.3%
BIGRAMhh           280      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      C8      18       78.1%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      9D      11       61.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100     BF      F9       9       97.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100     84      FF       7       99.6%
BIGRAMhl            C0      0       0      22        0.0%
BITBANK4            C0      0       0      12        0.0%
BANK4               C0      0      64      13       52.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     99      A0       5      100.0%
BITBANK5            80      0       0      14        0.0%
BANK5               80      0      64      15       78.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     37      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     523      16        0.0%
DATA                 0      0     64F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Tue Mar 12 13:53:36 2019

                      setChannelMask@mask 0072                                _USB_SD_Ptr 7C69  
              createFrameHeader@Sequencia 00F3                    __end_of_setChannelMask 39DA  
              txZBStatusResponse@previous 0074                       setChannelMask@error 0074  
                            ___awdiv@sign 006B                               __CFG_BOR$ON 000000  
                                      _cs 01CE                  recebeByte@estadoRecepcao 01D0  
                           _USBDeviceInit 235A                       ___wmul@multiplicand 0070  
                             __CFG_BORV$0 000000                        __size_of_CDCInitEP 0066  
                            __CFG_CP0$OFF 000000                              __CFG_CP1$OFF 000000  
                            __CFG_CP2$OFF 000000                              __CFG_CP3$OFF 000000  
                            _putsUSBUSART 4ADC                              ___ftadd@exp1 007F  
                            ___ftadd@exp2 007E                                _RX_ADDRESS 038C  
    USER_USB_CALLBACK_EVENT_HANDLER@event 000D      USER_USB_CALLBACK_EVENT_HANDLER@pdata 000F  
                            ___ftadd@sign 007D               __end_of_USBStdGetDscHandler 296A  
                                     l430 2400                                       l426 23A0  
                                     l428 23C6                                       l465 2E0A  
                                     l467 2E34                                       l900 2CE0  
                                     l469 2EB2                                       l901 2C34  
                                     l902 2C38                                       l487 4F60  
                                     l912 2CBE                                       l904 2C78  
                                     l488 4F5E                                       l913 2CC2  
                                     l905 2C56                                       l908 2CA4  
                                     _BDT 000400                                       l909 2C82  
                                     l880 4AEA                                       l882 4AF6  
                                     l894 2BDC                                       l896 2BEA  
                                     l897 2BF4                                       l898 2C22  
                                     _MAC 7DDD                              __CFG_CPB$OFF 000000  
                            __CFG_CPD$OFF 000000                                       _UIE 000F69  
                                     _UIR 000F68                                       _SYS 7DD3  
                                     _aaa 01E5                                _USBSuspend 5058  
                            ___awmod@sign 0065                      USBStdSetCfgHandler@i 0015  
                 createFrameHeader@WaspID 00F1                                       prod 000FF3  
                                     wreg 000FE8                            _USBDeviceTasks 270E  
                          _USBDeviceState 0058                             _encryptEnable 02EE  
                   ??_USBCtrlTrfRxService 0001                  __size_ofi2_USBDeviceInit 013E  
                USBEnableEndpoint@options 0009                              __CFG_LVP$OFF 000000  
                            ___ftdiv@cntr 0098                              ___ftdiv@sign 009D  
                            __CFG_WDT$OFF 000000                                      l1100 461E  
                                    l1110 157A                                      l1107 12A2  
                                    l1109 1350                                      l2200 3728  
                                    l2201 3680                                      l1090 4FA8  
                                    l2203 3744                                      l1092 4FB4  
                                    l2204 36AA                                      l1093 4FC2  
                                    l3110 46CA                                      l2070 2984  
                                    l2206 36D4                                      l3111 46D4  
                                    l3103 4690                                      l2071 29A4  
                                    l1511 45A6                                      l3112 46E2  
                                    l3104 469C                                      l3200 227C  
                                    l2208 36FE                                      l1512 45EE  
                                    l1513 45D0                                      l3106 46B2  
                                    l3122 2AB6                                      l2074 29A8  
                                    l1514 45B2                                      l3107 46AA  
                                    l3211 22E8                                      l1099 4622  
                                    l1531 42B2                                      l1523 33B6  
                                    l3212 2304                                      l3124 2AD4  
                                    l3220 341E                                      l2076 29F2  
                                    l1532 42C4                                      l1524 3376  
                                    l3213 2334                                      l3125 2B16  
                                    l3221 345C                                      l2077 2A88  
                                    l2069 297A                                      l1541 4DB8  
                                    l3134 2BA8                                      l3126 2B46  
                                    l3230 2696                                      l3118 4EDC  
                                    l3222 3482                                      l1534 42D6  
                                    l1630 3AA4                                      l1542 4DA0  
                                    l3135 2B9C                                      l1519 45F0  
                                    l3160 3CB0                                      l3208 22C4  
                                    l3312 44BE                                      l3128 2B84  
                                    l3232 26D2                                      l1536 42E8  
                                    l1624 3A04                                      l3161 3CA6  
                                    l3209 22BA                                      l3313 44B2  
                                    l3129 2B74                                      l3233 26C2  
                                    l1537 42F2                                      l1529 42A0  
                                    l1625 3A6A                                      l1617 4CAE  
                                    l3154 3C54                                      l3322 470C  
                                    l3226 2608                                      l3090 4398  
                                    l3250 3216                                      l3218 33F6  
                                    l1618 4C96                                      l3243 4176  
                                    l3155 3C4A                                      l3323 4700  
                                    l3091 43A8                                      l3244 41A6  
                                    l3316 44F2                                      l3228 2634  
                                    l3252 323E                                      l1580 1DE0  
              USBConfigureEndpoint@handle 0007                                      l3261 5118  
                                    l3157 3C88                                      l3317 4500  
                                    l3333 47CE                                      l3229 266E  
                                    l3093 43C6                                      l3253 3270  
                                    l1581 1DF2                                      l1637 4B48  
                                    l3158 3C72                                      l3326 4734  
                                    l3334 47C2                                      l3238 26F6  
                                    l3094 43BE                                      l3254 3280  
                                    l3271 3122                                      l3327 4742  
                                    l3239 26EA                                      l1583 1DFE  
                                    l1920 4374                                      l3280 31B2  
                                    l3256 3298                                      l2800 0186  
                                    l3185 2200                                      l3273 319A  
                                    l3097 43E6                                      l3257 32A8  
                                    l2801 030A                                      l1593 1F60  
                                    l1585 1E34                                      l1577 1E08  
                                    l3194 2290                                      l3282 31DA  
                                    l3274 318A                                      l3098 43F0  
                                    l1586 1E94                                      l1578 1DD6  
                                    l3291 4E2C                                      l3267 4CE4  
                                    l3099 43FE                                      l2811 021E  
                                    l1579 1E1E                                      l3292 4E26  
                                    l2900 0C48                                      l2812 0234  
                                    l2804 018A                                      l1596 1FD8  
                                    l1588 1F2A                                      l1917 431A  
                                    l3189 222A                                      l2821 02B0  
                                    l2805 018C                                      l3533 4BCC  
                                    l1597 1FB8                                      l1589 1F0E  
                                    l3286 5166                                      l2822 09D0  
                                    l2830 04D2                                      l2814 0250  
                                    l2806 0190                                      l3534 4BC6  
                                    l3295 4E42                                      l3199 2286  
                                    l3279 31BE                                      l2911 0DD2  
                                    l2831 05A0                                      l2823 031E  
                                    l2815 023E                                      l2807 01B8  
                                    l3296 4E4A                                      l2912 0CC0  
                                    l2840 0606                                      l2824 0360  
                                    l2808 01C8                                      l3536 4BE6  
                                    l2817 029A                                      l2809 01C2  
                                    l3537 4BDC                                      l2762 1CAE  
                                    l2914 0DEA                                      l2834 0548  
                                    l2826 03FE                                      l2818 0264  
                                    l3395 4FE6                                      l2915 0D40  
                                    l2827 0468                                      l3571 51A2  
                                    l3396 4FD4                                      l2772 1036  
                                    l2860 0800                                      l2852 0724  
                                    l2844 068A                                      l2780 003E  
                                    l3556 49EE                                      l2765 1D84  
                                    l2773 1194                                      l2909 0DFC  
                                    l2917 0DA4                                      l2853 070A  
                                    l2845 06AC                                      l2829 0492  
                                    l3557 49E8                                      l2862 083E  
                                    l2790 0174                                      l2782 005C  
                                    l2934 4998                                      l2775 124C  
                                    l2871 0A48                                      l2863 0842  
                                    l2791 015E                                      l2783 0052  
                                    l2935 49AC                                      l2768 105C  
                                    l2880 0AA8                                      l2872 0A0C  
                                    l2864 0866                                      l2856 07F4  
                                    l2848 06F8                                      l2792 011C  
                                    l2769 0F7E                                      l2865 09A0  
                                    l2857 075A                                      l2849 06DE  
                                    l2890 0B58                                      l2866 08B8  
                                    l2859 081A                                      l2779 0020  
                                    l2892 0B82                                      l2876 0A6A  
                                    l2868 09C6                                      l2796 02B6  
                                    l2788 008C                                      l2893 0BAE  
                                    l2885 0B36                                      l2877 0A8E  
                                    l2869 09AC                                      l2886 0AE4  
                                    l2895 0BDA                                      l2879 0B20  
                                    l2799 0182                                      l2896 0BE4  
                                    l2897 0C10                                      l2898 0C1A  
                                    l2899 0C6E                                      _ADIE 007CEE  
                                    _ADIF 007CF6                                      l9305 070A  
                                    l9241 04D2                                      l7573 41D2  
                                    l9421 0AE8                                      l9173 023E  
                                    l9407 0AAC                                      l9329 0800  
                                    l9249 051E                                      l9179 0264  
                                    _ADON 007E10                                      l9509 0DD2  
                                    l9269 060A                                      l9297 06DE  
                                    l8577 51E2                                      STR_1 7FFA  
                                    STR_2 7FE5                                      STR_3 7DFC  
                                    STR_4 7F13                                      l8995 4FD4  
                                    STR_5 7F8E                                      STR_6 7FD2  
                                    STR_7 7FA7                                      STR_8 7FCB  
                                    STR_9 7F82                                      _GIEH 007F97  
                                    u6320 3C3C                                      _RCIE 007CED  
                                    u8020 01FA                                      _RCIF 007CF5  
                                    u7150 2CAC                                      u6360 3CBA  
                                    u7250 3A7C                                      u8027 01F0  
                                    u6620 221C                                      u8220 051E  
                                    u8140 039A                                      u6551 21BE  
                   ??_USBCtrlTrfTxService 0001                                      u6720 22CC  
                                    u7520 2BAE                                      u8320 0732  
                                    u8080 028C                                      u6561 21D2  
                                    u7601 3106                                      u8145 0390  
                                    u6650 225A                                      u7450 26FC  
                                    u7371 25EC                                      u7620 3140  
                                    u8260 0642                                      u8180 04A4  
                                    u6910 46B6                                      u6590 21F2  
                                    u8350 0828                                      u8190 04E4  
                                    u7391 2618                                      u8087 0282  
                                    _UCFG 000F6F                                      u7720 44C2  
                                    u8360 0838                                      u7625 3138  
                                    u6761 31FE                                      u6690 2298  
                                    u6850 43CA                                      u7660 31C4  
                                    _UEP0 000F70                                      u6781 3226  
                                    _UEP1 000F71                                      u7750 4710  
                                    u8630 0C76                                      u8640 0C98  
                                    u7690 4E30                                      _UEIE 000F6B  
                                    u9620 4B10                                      u8670 0E0E  
                                    u7950 4FBE                                      u9560 23BC  
                                    u8680 0E2C                                      u9640 3D96  
                                    u8921 33DE                                      u8690 33AE  
                                    u9650 3DB0                                      u7980 00F4  
                                    u9660 3DCA                                      u8941 3406  
                                    u9590 245C                                      u9670 3DE4  
                                    u9648 3D9A                                      u9840 4A0E  
                                    _UEIR 000F6A                                      _UCON 000F6D  
                                    u8697 33A4                                      u9770 29CE  
                                    u9658 3DB4                                      u9940 1FF2  
                                    u9668 3DCE                                      u9678 3DE8  
                                    u9847 4A04                                      u9785 29D2  
                                    u9890 1ED4                                      _TXIF 007CF4  
                            __CFG_PWRT$ON 000000                                      _Mask 02EF  
                         _CDCDataInHandle 01C0    USBStdFeatureReqHandler@current_ep_data 0018  
                                    _pDst 01C2                                      _data 0600  
                         _USBDeviceDetach 51EC                                      _main 1272  
                            ___ftpack@arg 0060                                      _rand 4876  
                ??i2_USBTransferOnePacket 0005                              ___ftpack@exp 0063  
                                    _send 1DC6                            _addByteCommand 4594  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    indf0 000FEF                                      fsr2h 000FDA  
                                    fsr0l 000FE9                                      indf1 000FE7  
                             _BaudRateGen 02D3                                      indf2 000FDF  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                         _USBDeviceAttach 4F36                                      btemp 005F  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 000E                             __CFG_IESO$OFF 000000  
                            _sprintf$5142 0103                __end_of_USBCheckStdRequest 3678  
                            main@dadoPoco 02A9                    ??_USBCtrlTrfOutHandler 0003  
                            _sprintf$5951 0100                             __CFG_MCLRE$ON 000000  
                            ___ftmul@cntr 008D                              ___param_bank 000000  
                       gen_data@sizeParam 006C                              ___ftmul@sign 008E  
               ??_USBStdFeatureReqHandler 0015                              __channelMask 0184  
                           le_AD@corrente 00A6                  ??_USBStdGetStatusHandler 0001  
                         ?_setChannelMask 0072                              ___fttol@exp1 00BE  
                        __end_of_MAC_SAVE 7DDD                           send@MAX_RETRIES 0090  
                            ___fttol@lval 00BA                            ?_USBDeviceInit 0001  
                           __CFG_PLLDIV$5 000000                                     l10103 2398  
                                   l10131 23F8                                     l10345 2994  
                                   l10357 29CE                                     l10471 1F48  
                                   l10447 1E8C                                     l10727 1292  
                                   l10739 12D2                              _sourceMacLow 01AE  
                                   ?_main 0001                                     ?_rand 006C  
                         __end_of___awdiv 4408                           __end_of___lbdiv 4E4E  
                                   _EEADR 000FA9                           __end_of___ftadd 235A  
                                   ?_send 007D                                     STR_10 7F34  
                                   STR_11 7F50                                     STR_20 7F9F  
                                   STR_12 7F66                                     STR_21 7F42  
                                   STR_13 7FC4                                     STR_30 7FDF  
                                   STR_22 7FBD                                     STR_14 7EC0  
                                   STR_23 7F24                                     STR_15 7FF5  
                                   STR_40 7EE0                                     STR_16 7F5B  
                                   STR_33 7FF0                                     STR_41 7EF1  
                                   STR_25 7E9C                                     STR_17 7F02  
                                   STR_34 7FD9                                     STR_18 7F7B  
                                   STR_27 7E58                                     STR_19 7F97  
                                   STR_36 7FB6                                     STR_28 7F85  
                         __end_of___awmod 46EC                                     STR_29 7F71  
                                   STR_38 7FEB                                     STR_39 7FAF  
       __size_of_USBCtrlEPServiceComplete 00FC                           __end_of___ftdiv 34B4  
                         __end_of___ftneg 5126                           __end_of___lldiv 4512  
                                   u10411 15DA                           __end_of___ftmul 32E2  
                                   _T0CON 000FD5                                     u10370 12D2  
                         ___awdiv@divisor 0068                                     u10365 12AE  
                                   u10366 12B0                                     _T1CON 000FCD  
                         __end_of___llmod 4754                                     u10385 1372  
                  __end_of_USBDeviceTasks 283C                                     u10386 1374  
                         __end_of___ftsub 4D0E                           __end_of___fttol 31EC  
                                   u11437 12BC                                     u11447 1FC0  
                                   u11457 4DE2                                     u11467 4E00  
                                   _T3CON 000FB1                 ?_USBCtrlEPServiceComplete 0001  
                          __CFG_DEBUG$OFF 000000                                     i2l141 2160  
                                   i2l133 214A                                     i2l134 20C2  
                                   i2l135 20EC                                     i2l136 2116  
                                   i2l137 2140                                     i2l139 215A  
                                   i2l501 3FCC                                     i2l430 253E  
                                   i2l503 3FE8                                     i2l512 3074  
                                   i2l440 2748                                     i2l273 48E0  
                                   i2l281 48DA                                     i2l513 301E  
                                   i2l441 2752                                     i2l530 38C2  
                                   i2l602 40A0                                     i2l426 24DE  
                                   i2l450 27D2                                     i2l531 388A  
                                   i2l507 4112                                     i2l603 409A  
                                   i2l443 2776                                     i2l460 4E9A  
                                   i2l428 2504                                     i2l436 2722  
                                   i2l621 3BA2                                     i2l541 2D32  
                                   i2l613 4826                                     i2l461 4EA8  
                                   i2l517 309E                                     i2l453 27F8  
                                   i2l445 278A                                     i2l437 272E  
                                   i2l534 3902                                     i2l526 3856  
                                   i2l622 3BA6                                     i2l542 2D10  
                                   i2l446 2794                                     i2l438 2736  
                                   i2l535 38CA                                     i2l623 3C20  
                                   i2l615 4870                                     i2l279 48D4  
                                   i2l455 2818                                     i2l447 27B8  
                                   i2l528 3860                                     i2l624 3BE6  
                                   i2l544 2DA6                                     i2l640 35B6  
                                   i2l448 27C2                                     i2l545 2D8C  
                                   i2l465 2F0C                                     i2l561 2952  
                                   i2l553 37A2                                     i2l641 35BC  
                                   i2l457 2834                                     i2l626 3C06  
                                   i2l570 294A                                     i2l562 284E  
                                   i2l642 35D0                                     i2l467 2F36  
                                   i2l555 3814                                     i2l643 35D6  
                                   i2l660 19D2                                     i2l564 2862  
                                   i2l580 3E56                                     i2l636 3634  
                                   i2l469 2FB4                                     i2l653 18F6  
                                   i2l565 28EA                                     i2l581 3E74  
                                   i2l645 35DC                                     i2l637 35A6  
                                   i2l662 1A52                                     i2l654 18FC  
                                   i2l574 3EB0                                     i2l646 35FA  
                                   i2l495 3AF2                                     i2l567 28F2  
                                   i2l575 3E3E                                     i2l647 3616  
                                   i2l639 35B0                                     i2l672 1ADE  
                                   i2l664 1A1C                                     i2l656 1968  
                                   i2l568 2942                                     i2l665 1A38  
                                   i2l850 3D5A                                     i2l674 1B30  
                                   i2l658 19B0                                     i2l578 3EC6  
                                   i2l667 1A9E                                     i2l579 3E50  
                                   i2l844 3D64                                     i2l668 1AAA  
                                   i2l588 4D4C                                     i2l596 4F2A  
                                   i2l845 3D00                                     i2l669 1B24  
                                   i2l589 4D4A                                     i2l597 4F28  
                                   i2l847 3D18                                     i2l848 3D26  
                                   i2l849 3D42                                     _UADDR 000F6E  
                         ___awdiv@counter 006A                                     _RCREG 000FAE  
                                   _RCSTA 000FAB                                     _TMR1H 000FCF  
                                   _TMR1L 000FCE                                     _SPBRG 000FAF  
                           __CFG_USBDIV$2 000000                                     _USBIE 007D05  
                             i2_converter 4408                                     _USTAT 000F6C  
                                   _TXREG 000FAD        __size_of_USBCtrlEPAllowStatusStage 00C4  
                     ___lmul@multiplicand 0064                              ___lltoft@exp 0070  
                          __CFG_FCMEN$OFF 000000           __end_of_USBCtrlEPAllowDataStage 401A  
                                   _sd000 7DE2                                     _sd001 7CEF  
                                   _sd002 7CBB            ?_USBIncrement1msInternalTimers 0001  
                                   _dig_1 01CA                                     _dig_2 01C8  
                                   _dig_3 01C6                                     _dig_4 01C4  
                                   _le_AD 296A                             ___awtoft@sign 006B  
                                   _delay 4608                                i2memset@p1 0001  
                        __end_of_STATE_ON 7C76                                     _panID 02F7  
                                   _getch 5126                           __end_of_dpowers 7BFB  
                                   _scale 0E3A                           __end_of_isdigit 516E  
                                   _randx 01FA                                     _ticks 0196  
                           ___ftpack@sign 0064                                     _putch 51DE  
                                   main@i 02A6                    __end_of_addByteCommand 4608  
                                   pclath 000FFA                                     tablat 000FF5  
                           _gs_encryption 7DEE                                     send@i 0094  
                                   send@r 0084                                     plusw2 000FDB  
                       __end_of_CDCInitEP 47BA                                     status 000FD8  
                                   wtemp6 0060                           __end_of_sprintf 0E3A  
                         __end_of_strncmp 4594                           __end_of_toupper 51A6  
                         ___lbdiv@divisor 0060                          __end_ofi2_memset 50B2  
                         ___lbdiv@counter 0062                            _tamanhoCommand 01BE  
            __size_of_USBStdSetCfgHandler 00DE                          __end_ofi2_strlen 4ADC  
                           setup_uart@brg 0071                           __initialization 34B4  
                            __end_of_main 163C                              __end_of_rand 48D2  
                            __end_of_send 1FF6                     _control_signal_bitmap 01D1  
                   setEncryptionMode@mode 0073                     __end_of_setPreambleID 4C46  
               __size_of_USBCtrlEPService 0096                                    ??_main 00F5  
                           ___fttol@sign1 00B9                                    ??_rand 006E  
                                  ??_send 0083                             __activetblptr 000002  
                         ?_USBDeviceTasks 0001                               ?_USBSuspend 0001  
                      recebeByte@sizeData 0046                      __size_of__tdiv_to_l_ 0134  
                      __size_ofi2_toupper 0014                                i2strlen@cp 0005  
                      recebeByteLoRaWan@b 0010                        recebeByteLoRaWan@i 0011  
                              i2toupper@c 0001                              _cdc_mem_type 01D2  
                 __end_of_USBDeviceDetach 51FA                             _sourceMacHigh 01AA  
                                  ?_le_AD 009E                                    ?_delay 006D  
                                  ?_getch 0001                   __end_of_USBDeviceAttach 4F6A  
                                  _ADCON0 000FC2                                    _ADCON1 000FC1  
                                  _ADCON2 000FC0                          _CDCDataOutHandle 004A  
                                  _CCP1IE 007CEA                                    _CCP1IF 007CF2  
                        ___llmod@dividend 006E                                    ?_scale 008F  
                                  _ADRESH 000FC4                                    _ADRESL 000FC3  
                                  _EEDATA 000FA8                                    _CCPR1H 000FBF  
                                  _CCPR1L 000FBE                                    _EECON2 000FA7  
                        ___awdiv@dividend 0066                          __end_of___awtoft 4F00  
                                  ?_putch 0001                          __end_of___ftpack 3CDA  
                        __end_of___lltoft 4818                     __size_of_CDCTxService 0124  
                                  i2l1264 512E                                    i2l1266 5148  
                                  i2l1531 444A                                    i2l1532 445C  
                                  i2l1534 446E                                    i2l1536 4480  
                                  i2l1537 448A                                    i2l1529 4438  
                                  i2l2602 185C                                    i2l2603 17EC  
                                  i2l2604 1858                           ?_addByteCommand 0066  
                                  i2l2607 18B8                                    i2l2608 189A  
                                  i2l3390 4C58                                    i2l3542 4B7E  
                                  i2l3550 503C                                    i2l2590 16C2  
                                  i2l3543 4B76                                    i2l3551 5034  
                                  i2l2591 16F8                                    i2l3562 457A  
                                  i2l2594 1740                                    i2l3395 50A0  
                                  i2l3563 4514                                    i2l3571 51CA  
                                  i2l3396 5090                                    i2l3564 4572  
                                  i2l3556 4A98                                    i2l2596 17CA  
                                  i2l3389 4C78                                    i2l3557 4A94  
                                  i2l2597 177C                                    i2l2589 16FA  
                                  i2l2598 17AA                                    i2l8421 4C58  
                                  i2l7821 379A                                    i2l7719 3860  
                                  i2l7751 5090                                    i2l9771 24D6  
                                  i2l9683 4514                                    i2l9799 2536  
                                  _PAN_ID 01CC                         gen_send@error_int 0061  
                           CDCTxService@i 006B                                    _TMR0IE 007F95  
                                  _TMR1IE 007CE8                                    _SPBRGH 000FB0  
                i2USBTransferOnePacket@ep 0009                         ??i2_USBDeviceInit 0009  
         __size_ofi2_USBTransferOnePacket 0102                            __CFG_VREGEN$ON 000000  
                       _shortPacketStatus 0057                          __end_of_gen_data 33CC  
                          __CFG_XINST$OFF 000000                          __end_of_gen_send 4DD0  
                        __end_of__powers_ 7C22                           USBDeviceTasks@i 001C  
                            _write_values 7DF2               USBStdFeatureReqHandler@pUEP 0016  
                USBTransferOnePacket@data 0061                USBCtrlTrfInHandler@lastDTS 0002  
                         ??_USBDeviceInit 0068                                    ___ftge 4144  
                                  ___lmul 4986                                    ___wmul 50B2  
                               ??___awdiv 006A                                 ??___lbdiv 0061  
                               ??___ftadd 007A                            __CFG_STVREN$ON 000000  
                               ??___awmod 0064                                 ??___ftdiv 0095  
                               ??___ftneg 0063                         __end_of_STATE_OFF 7C73  
                               ??___lldiv 0068                                 ??___ftmul 0086  
                               ??___llmod 0076                                 ??___ftsub 0086  
                               ??___fttol 00B4                 txZBStatusResponse@timeout 007A  
                       _USBEnableEndpoint 4E8A           __size_of_USBStdGetStatusHandler 00AA  
                                  le_AD@i 00AC                                    _gs_pan 7DF6  
                                  _memcpy 4C46                                    _setPAN 492E  
                                  _memset 4FCA                                    _fround 1B56  
                                  _millis 50DA                                    clear_0 351C  
                                  clear_1 352E                                    clear_2 353A  
                                  clear_3 3546                                    clear_4 3552  
                                  clear_5 355E                                    clear_6 356A  
                                  clear_7 3576                                    clear_8 3582  
                                  _nivel1 01E0                                    _nivel2 01DF  
                        ___awdiv@quotient 006C                           ___awmod@divisor 0062  
                                  _teste0 02D8                                    _teste1 01E1  
                             setPAN@PANID 0072                           ___awmod@counter 0064  
                      ?_USBEnableEndpoint 0009                              converter@aux 0063  
                                  _strcat 4BBC                                    _strcmp 4B74  
                                  _strcpy 502A                                    _strlen 49DE  
                   ___ftmul@f3_as_product 008A             __size_of_USBTransferOnePacket 0106  
                               ??_isdigit 0060                              _CDCTxService 2BC0  
                          itoaVitor@value 006C                          __end_of_setup_AD 51DE  
                            __mediumconst 7BD2                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                             setPAN@error 0074                       ??_USBEnableEndpoint 000A  
                    __end_of_MAC_TX_UNCNF 7DAF                   recebeByteLoRaWan@i_4900 0013  
                               ??_sprintf 00EB                               _CtrlTrfData 000438  
                               ??_strncmp 0007                                 ??_toupper 0060  
                        ___lbdiv@dividend 0061                         __end_of_SYS_RESET 7DD3  
                      setup_uart@baudRate 006D                      _controlTransferState 0056  
                      __size_of_addSensor 0056                                __accesstop 0060  
                 __end_of__initialization 3588               __size_of_txZBStatusResponse 00D0  
                            __pbssBIGRAMl 06C8                              ?_verificaUSB 0001  
                         __CFG_PBADEN$OFF 000000                                ___ftadd@f1 0074  
                              ___ftadd@f2 0077                                ___ftge@ff1 0060  
                              ___ftge@ff2 0063                             ___rparam_used 000001  
                              ___ftdiv@f1 008F                                ___ftdiv@f2 0092  
                              ___ftdiv@f3 0099                  __size_of_USBStallHandler 0042  
                              ___ftneg@f1 0060                                ___awtoft@c 0068  
                       __end_ofi2_toupper 51CE                       __size_of_USBSuspend 002E  
                              ___ftmul@f1 0080                                ___ftmul@f2 0083  
                     recebeByte@frameData 0664                __end_of_get_preambleid_900 7DE8  
              __end_of_set_preambleid_900 7DEA                                ___ftsub@f1 0080  
                              ___ftsub@f2 0083                                ___fttol@f1 00B0  
                          __pcstackCOMRAM 0001                 __end_of_USBEnableEndpoint 4EC6  
                           __end_of_sd000 7DE6                             __end_of_sd001 7D23  
                           __end_of_sd002 7CEF                              __pidataBANK1 5205  
                            __pidataBANK2 51FA                              __pidataBANK3 4FFA  
                           sendXBeePriv@i 007B                             __end_of_le_AD 2A96  
                           __end_of_delay 467A                                ___lltoft@c 0068  
        __size_of_USBCtrlEPAllowDataStage 009E                             __end_of_getch 514C  
                           __end_of_scale 1272             __size_of_USBConfigureEndpoint 0094  
                         _retries_sending 01E7                             __end_of_putch 51EC  
                              _le_AD$5947 00A3               __end_of_USBCtrlTrfInHandler 3C2A  
                  setEncryptionMode@error 0072                             ?_sendXBeePriv 0001  
                        ___lbdiv@quotient 0063                         _MAC_SET_CH_STATUS 7D56  
                  i2_USBTransferOnePacket 2EF6                           _responseLoRaWan 01E4  
                              __div_to_l_ 2A96                                _cdc_notice 0300  
                         addByteCommand@b 0067                                 ?i2_memset 0001  
                              _cdc_rx_len 0052                                _cdc_tx_len 0051  
                          main@deltaTempo 029F                        __end_of_MAC_SET_DR 7DC6  
                      __end_of_MAC_SET_BW 7D71                                   ??_le_AD 00A1  
                      __end_of_MAC_SET_SF 7D56                                   ??_delay 0071  
                               ?i2_strlen 0001                  ??_USBCtrlTrfSetupHandler 001B  
                        ?_USBDeviceDetach 0001                   _USBTicksSinceSuspendEnd 01D3  
                                 ??_getch 0001                           __div_to_l_@exp1 006B  
                         __div_to_l_@cntr 006A                          ?_USBDeviceAttach 0001  
                                 ??_scale 0092                           __div_to_l_@quot 0066  
                      __end_of_MAC_TX_CNF 7DCD                    _USBStdGetStatusHandler 3E32  
                            sprintf@width 0119                                   ??_putch 0060  
                              addSensor@f 0120                           le_AD@leituraAux 00AA  
                      __size_of_converter 008E                                __pbssBANK0 00F9  
                              __pbssBANK1 0184                                __pbssBANK2 02BF  
                              __pbssBANK3 0300                                __pbssBANK4 0440  
                              __pbssBANK5 0580                                __pbssBANK6 0600  
                      __size_of_le_pulsos 00E0                     recebeByteLoRaWan@port 000F  
                      __size_of_init_XBee 0014                        setPreambleID@error 0074  
                          _novaMsgLoRaWan 0059                             __div_to_l_@f1 0060  
                           __div_to_l_@f2 0063               __size_of_USBWakeFromSuspend 0036  
                             send@pointer 007F                          ??_setChannelMask 0074  
                             _pBDTEntryIn 0040                   setPreambleID@preambleID 0075  
        __end_of_USBCtrlEPServiceComplete 30F4               __size_of_USBCheckCDCRequest 00AE  
                      __size_of_itoaVitor 008C                      USBCtrlTrfRxService@i 0001  
                                 ?___ftge 0060                                   ?___lmul 0060  
                                 ?___wmul 006E                 __end_of_MAC_SET_CH_STATUS 7D64  
                                 _CCP1CON 000FBD                            ??_sendXBeePriv 007B  
                                 ?_memcpy 0001                                   ?_setPAN 0072  
                                 ?_memset 0060                                   ?_fround 008F  
                      __size_of_resetXBee 0040                            ___lmul@product 0068  
                                 ?_millis 0060                                _device_dsc 7D23  
                               ?___awtoft 0068                                 ?___ftpack 0060  
                        _USBCtrlEPService 401A                                _ep_data_in 01BB  
                               ?___lltoft 0068                         __end_of_addSensor 4A8A  
                                 ?_strcat 0060                                   ?_strcmp 0001  
                                 ?_strcpy 0001                                   ?_strlen 0060  
                             _NumOfFields 01FE               __end_of_USBCtrlTrfRxService 2DF0  
                      _USBCheckStdRequest 3596                       le_pulsos@freqPulses 0064  
                       _configDescriptor1 7C78                                   i2l10063 27CA  
                                 i2l11373 48F8                                   i2l11375 4928  
                            ?i2_converter 0002                         _tamDadosRecebidos 005B  
                                 _GO_DONE 007E11                                ??i2_memset 0007  
             __end_of_USBCtrlTrfTxService 390A                       _USBStdSetCfgHandler 3758  
                               ?_gen_data 0068                     __end_of_MAC_GET_DNCTR 7D9C  
                              ??i2_strlen 0003                          _discovery_status 01E8  
                               ?_gen_send 0001                       ?_USBCheckStdRequest 0001  
            __size_of_USBStdGetDscHandler 012E                                   _UIEbits 000F69  
                                 _UIRbits 000F68                                _encryptKey 7D35  
                              _gs_channel 7DF4                             _cdc_trf_state 00FF  
                         putsUSBUSART@len 0064                     __end_of_MAC_JOIN_OTAA 7DA6  
                                 _pCDCDst 01B2                             setLinkKey@key 0072  
                                 _pCDCSrc 01B5                         __end_of__npowers_ 7C49  
                                 __Hparam 0000           ??_USBIncrement1msInternalTimers 0001  
                    ?_USBStdSetCfgHandler 0001                                 _CDCInitEP 4754  
                              _scale$5950 0092                                   __Lparam 0000  
              __size_of_USBEnableEndpoint 003C                                 ?_setup_AD 0001  
                    ??_USBCheckStdRequest 001B                           __size_of___ftge 0092  
           __size_of_USBCtrlTrfOutHandler 005E                                   ___awdiv 4382  
                                 ___lbdiv 4E10                           __size_of___lmul 0058  
                                 ___ftadd 21AC                                   ___awmod 467A  
                                 ___ftdiv 33CC                                   ___ftneg 5100  
                                 ___lldiv 448E                          ??_USBDeviceTasks 001C  
                         __size_of___wmul 0028                                   ___ftmul 31EC  
                                 ___llmod 46EC                                   ___ftsub 4CCC  
                                 ___fttol 30F4                         ??_USBStallHandler 0001  
                       __end_of_converter 42F6                                   _channel 01EB  
                                 __pcinit 34B4                         __end_of_le_pulsos 3758  
                         __size_of_memcpy 0044                                ??___awtoft 006B  
                              ??___ftpack 0065                           __size_of_setPAN 0058  
                         __size_of_memset 0030                           __size_of_fround 0270  
               __end_of_configDescriptor1 7CBB                           __size_of_millis 0026  
                                 __ramtop 0800                                ??___lltoft 006C  
                                 __ptext0 1272                                   __ptext1 49DE  
                                 __ptext2 3EDC                                   __ptext3 3D88  
                                 __ptext4 4D50                                   __ptext5 51CE  
                                 __ptext6 4C02                                   __ptext7 492E  
                                 __ptext8 4F6A                                   __ptext9 4B2C  
                                 _inPipes 00F9                                   _command 005C  
             _USBDeferOUTDataStagePackets 01D4                         __end_of_init_XBee 51BA  
                         __size_of_strcat 0046                           __size_of_strcmp 0048  
                         __size_of_strcpy 002E                           __size_of_strlen 0056  
                   SYS_InterruptHigh@dig1 0030                     SYS_InterruptHigh@dig2 0032  
                   SYS_InterruptHigh@dig3 0034                     SYS_InterruptHigh@dig4 0036  
                       __end_of_hexpowers 7C69                               ?__div_to_l_ 0060  
                                 _dpowers 7BD3                              ??_USBSuspend 0015  
                                 _isdigit 514C                            i2converter@aux 0004  
                                 delay@to 0079                          ___awmod@dividend 0060  
                           _receivePacket 0580                          ??_addByteCommand 0067  
                         i2_USBDeviceInit 249C                          i2USBDeviceInit@i 0009  
                       __end_of_itoaVitor 4382                                   getch@RC 0002  
                              ??_gen_data 006D                             converter@aux2 0064  
                              ??_gen_send 0061                        __end_of_USB_CD_Ptr 7C78  
                                 _pulsos1 01DE                                   _pulsos2 01DD  
                                 _pulsos3 01DC                                   _pulsos4 01DB  
                                 _sprintf 0012           __size_of_USBCtrlTrfSetupHandler 0092  
                                 _strncmp 4512                            __pintcode_body 1FF6  
                                 _toupper 518E                      end_of_initialization 3588  
                              _setLinkKey 4F6A                        __end_of_USB_SD_Ptr 7C6F  
                       __end_of_resetXBee 4E10                                   memcpy@d 0007  
                                 memcpy@n 0005                                   memcpy@s 0009  
                     _pBDTEntryEP0OutNext 004C                                   memset@c 0062  
                                 memset@n 0064                                   memset@p 0066  
                           __Lmediumconst 7BD2                           itoaVitor@buffer 02DA  
                                 int_func 1FF6                           _USB1msTickCount 0192  
         _dummy_encapsulated_cmd_response 02E6                                   millis@m 0064  
                               i2u1010_40 2072                                 i2u1011_40 2084  
                               i2u1010_48 2074                                 i2u1012_40 2096  
                               i2u1011_48 2086                                 i2u1013_40 20AE  
                               i2u1012_48 2098                                 i2u1015_40 20D8  
                               i2u1017_40 2102                                 i2u1009_40 2060  
                               i2u1009_48 2062                                 i2u1019_40 212C  
                ?_USBStdFeatureReqHandler 0001                     ??_USBStdSetCfgHandler 0015  
                          send@macAddress 007D                           ___lldiv@divisor 0064  
                    __size_of_verificaUSB 0030                                ?_CDCInitEP 0001  
                         ___lldiv@counter 006C                                _preambleID 02D9  
                recebeByte@escapeCaracter 0050                        __end_of_USBSuspend 5086  
                 _USBCtrlEPAllowDataStage 3F7C                                 _RCSTAbits 000FAB  
                              ??_setup_AD 0060                                   postdec1 000FE5  
                                 postdec2 000FDD                              _MAC_TX_UNCNF 7DA6  
                                 postinc0 000FEE                                   postinc2 000FDE  
                _USBCtrlEPServiceComplete 2FF8                            __tdiv_to_l_@f1 0060  
                          __tdiv_to_l_@f2 0063                       _get_channelmask_900 7DEA  
                                 strcmp@r 0006                       _set_channelmask_900 7DEC  
                                 strlen@s 0060                             ??__tdiv_to_l_ 0066  
              _USBStatusStageEnabledFlag1 01D7                _USBStatusStageEnabledFlag2 01D6  
                      USBEnableEndpoint@p 000A                                 _PORTCbits 000F82  
                               _PORTDbits 000F83                                 _PORTEbits 000F84  
                               _STATE_OFF 7C6F                                _setup_ccp1 4D50  
                           le_pulsos@freq 0065                             le_pulsos@modo 0060  
                              _setup_uart 3EDC                                 _TRISCbits 000F94  
                               _TRISDbits 000F95                                 _TRISEbits 000F96  
                           ?_setup_pulsos 0001                        _BothEP0OutUOWNsSet 01D8  
               USBConfigureEndpoint@EPNum 0006                ?_USBCtrlEPAllowStatusStage 0001  
     USER_USB_CALLBACK_EVENT_HANDLER@size 0011                                 _USTATcopy 005D  
                    __end_of_sendXBeePriv 4CCC              __end_of_USBTransferOnePacket 2EF6  
                             ___ftdiv@exp 009C                    __size_of_setPreambleID 0044  
                               _TXSTAbits 000FAC                                 _SYS_RESET 7DCD  
                          send@maxPayload 0092                       __size_of__div_to_l_ 012A  
                             ___ftmul@exp 0089                    _USBCtrlTrfSetupHandler 41D6  
                            le_AD@leitura 00AE                         putsUSBUSART@pData 0062  
                 ?i2_USBTransferOnePacket 0001                                 i2_toupper 51BA  
                   __end_of_USBDeviceInit 249C                            __end_of___ftge 41D6  
   __end_of_USBIncrement1msInternalTimers 518E    __size_of_USBIncrement1msInternalTimers 0020  
           _USBIncrement1msInternalTimers 516E                            __end_of___lmul 49DE  
                          __end_of___wmul 50DA                               _BAUDCONbits 000FB8  
                 __end_ofi2_USBDeviceInit 25DA                             ?_putsUSBUSART 0060  
                          __end_of_gs_pan 7DF8                                 i2memset@c 0003  
                               i2memset@n 0005                                 i2memset@p 0007  
                          __end_of_memcpy 4C8A                            __end_of_setPAN 4986  
                          __end_of_memset 4FFA                            __end_of_fround 1DC6  
                          __end_of_millis 5100                addByteCommand@calcChecksum 0066  
                       _USBBusIsSuspended 01D9                        _get_preambleid_900 7DE6  
                      _set_preambleid_900 7DE8                            __end_of_strcat 4C02  
                          __end_of_strcmp 4BBC                            __end_of_strcpy 5058  
                          __end_of_strlen 4A34                       start_initialization 34B4  
                          ??_setup_pulsos 0060                   ?_USBStdGetStatusHandler 0001  
                             __end_of_MAC 7DE2             USBCtrlTrfRxService@byteToRead 0002  
                             __end_of_SYS 7DD8                       __end_of__tdiv_to_l_ 270E  
                    __size_ofi2_converter 0086                               _cdc_data_rx 000540  
                             _cdc_data_tx 000500                         __size_ofi2_memset 002C  
            __end_of_USBConfigureEndpoint 4144                           setLinkKey@error 0074  
              __end_of_txZBStatusResponse 3AAA           __end_of_USBStdFeatureReqHandler 1B56  
                             ?_setLinkKey 0072         __end_of_USBCtrlEPAllowStatusStage 3B6E  
                       __size_ofi2_strlen 0052                                 i2strlen@s 0001  
                __end_of_USBCtrlEPService 40B0                           ___llmod@divisor 0072  
                         ___llmod@counter 0076                 ??_USBCtrlEPAllowDataStage 0002  
                     __end_of_MAC_GET_ADR 7DB7                         _setEncryptionMode 4B2C  
                             ??_CDCInitEP 000D                            USBDeviceInit@i 0068  
                       _createFrameHeader 4E4E                    _pBDTEntryEP0OutCurrent 004E  
                 USBTransferOnePacket@dir 0060                   USBTransferOnePacket@len 0063  
                      ?_setEncryptionMode 0001            __end_ofi2_USBTransferOnePacket 2FF8  
                                ??___ftge 0066                                  ??___lmul 0068  
                     __end_of_MAC_SET_ADR 7DBF                        ?_createFrameHeader 00F1  
                                ??___wmul 0072                       _USBStdGetDscHandler 283C  
                              ?i2_toupper 0001                               __pdataBANK1 01FA  
                             __pdataBANK2 02EE                               __pdataBANK3 036E  
                        __CFG_LPT1OSC$OFF 000000                                  ??_memcpy 0007  
                                ??_setPAN 0074                                  ??_memset 0066  
                          ??_putsUSBUSART 0062                                  ??_fround 0092  
                                ??_millis 0064                       ??_setEncryptionMode 0072  
                           sprintf@tmpval 010C                             _setPreambleID 4C02  
                                ??_strcat 0064                                  ??_strcmp 0005  
                                ??_strcpy 0005                                  ??_strlen 0062  
                             ?_setup_ccp1 0001                       ??_createFrameHeader 00F4  
               recebeByteLoRaWan@tamMsgRx 0012                    _USBActiveConfiguration 005E  
                              fround@prec 0098            __end_of_USBStdGetStatusHandler 3EDC  
                             ?_setup_uart 006D                         __size_of___awtoft 003A  
                       __size_of___ftpack 00B0                         __size_of___lltoft 005E  
                             __pbssCOMRAM 0038                         _recebeByteLoRaWan 163C  
                               _addSensor 4A34                             __pcstackBANK0 0060  
                           __pcstackBANK1 0100                             __pcstackBANK2 0200  
            __size_of_USBCtrlTrfInHandler 00BC                      __end_of_set_link_key 7DF2  
                      ?_recebeByteLoRaWan 0001                                itoaVitor@c 006A  
                            _isdigit$5368 0061                      ?_USBStdGetDscHandler 0001  
                              send@i_4001 0088                                send@i_3998 008E  
                              send@i_3999 0091                     __end_of_gs_encryption 7DF0  
                       __size_of_gen_data 00EA                         __size_of_gen_send 0040  
              __end_of_USBWakeFromSuspend 4F36                               sprintf@flag 011B  
               __end_of_setEncryptionMode 4B74                               sprintf@fval 0116  
                             sprintf@prec 011D                           _USBStallHandler 4D0E  
                     ??_recebeByteLoRaWan 000A                              _pBDTEntryOut 018C  
               __end_of_createFrameHeader 4E8A                __end_of_USBCheckCDCRequest 3D88  
                    recebeByteLoRaWan@len 000E                  __size_of_USBDeviceDetach 000E  
                              send@length 0081                  __size_of_USBDeviceAttach 0034  
                               _feedback1 01E3                                 _feedback2 01E2  
                               _main$5946 02A3                                 __pintcode 0008  
                           __pmediumconst 7BD2                                  ?___awdiv 0066  
                                ?___lbdiv 0060                                  ?___ftadd 0074  
                                ?___awmod 0060                                  ?___ftdiv 008F  
                                ?___ftneg 0060                                  ?___lldiv 0060  
                                ?___ftmul 0080                                  ?___llmod 006E  
                                ?___ftsub 0080                                 __npowers_ 7C22  
                                ?___fttol 00B0                         __size_of_setup_AD 0010  
                             __preambleID 01F0                       __size_of_setLinkKey 0030  
                          ?_setPreambleID 0001                          ?i2_USBDeviceInit 0001  
                             __tdiv_to_l_ 25DA                 __end_of_recebeByteLoRaWan 18D2  
                           __send_retries 01EA                              ??__div_to_l_ 0066  
                    _USBTransferOnePacket 2DF0                                 _converter 4268  
                                ?_isdigit 0001                                 _le_pulsos 3678  
                              ?_addSensor 00F1                                 _init_XBee 51A6  
                   __size_of_sendXBeePriv 0042              __end_of_USBCtrlTrfOutHandler 4876  
                               _hexpowers 7C49                     ??_USBStdGetDscHandler 0001  
                             _ep_data_out 01B8                            __size_of_le_AD 012C  
                          __size_of_delay 0072                            __size_of_getch 0026  
                                ?_sprintf 00BF              __size_of_USBCtrlTrfRxService 010C  
                          __size_of_scale 0438             USBConfigureEndpoint@direction 0001  
                                ?_strncmp 0001                                  ?_toupper 0001  
                             _MAC_GET_ADR 7DAF                            __size_of_putch 000E  
                        i2converter@conv1 0006                          i2converter@conv2 0002  
                               _itoaVitor 42F6             txZBStatusResponse@intervalMAX 0078  
                               delay@time 006D                                  _MAC_SAVE 7DD8  
            __size_of_USBCtrlTrfTxService 00D4                          i2converter@resul 0003  
                          ___wmul@product 0072                               _MAC_SET_ADR 7DB7  
              ??_USBCtrlEPServiceComplete 0002                                  _IPR1bits 000F9F  
                                _IPR2bits 000FA2                                  _PIE2bits 000FA0  
                     __size_of_setup_ccp1 0040                                 _resetXBee 4DD0  
                     __size_of_setup_uart 00A0                                  i2u600_40 37CE  
                      __end_of__div_to_l_ 2BC0                                  _PIR2bits 000FA1  
                                i2u604_40 28B4                                  i2u604_47 28AA  
                                i2u605_40 28E4                                  i2u605_47 28DA  
                                i2u607_40 2936                                  i2u607_47 292C  
                                i2u629_40 1AC4                                  i2u590_40 38F2  
                                i2u902_40 259A                      __end_of_setup_pulsos 3E32  
                                i2u590_47 38E8                                  i2u912_40 4AB8  
                                i2u912_47 4AAE                                  i2u930_40 18CC  
                                i2u588_40 38B2                                  i2u924_40 17E8  
                                i2u588_47 38A8                                  i2u928_40 18BE  
                                i2u954_40 2838                                  i2u890_40 4540  
                                _RCONbits 000FD0                                  i2u888_40 4BB0  
                                i2u899_40 24FA                          __CFG_WDTPS$32768 000000  
                                _UEP0bits 000F70                                 gen_data@i 0071  
              _USBDeferINDataStagePackets 01D5               __size_of_USBCheckStdRequest 00E2  
                             ??i2_toupper 0001                                  _UCONbits 000F6D  
                                _STATE_ON 7C73                      _USBConfigureEndpoint 40B0  
                               gen_send@i 0062                                 getch@data 0003  
                             _frameBuffer 06C8          __size_of_USBStdFeatureReqHandler 0284  
                            _sendXBeePriv 4C8A                   __size_of_setChannelMask 00D0  
                        _get_own_mac_high 7DF8                         ___wmul@multiplier 006E  
                   ?_USBTransferOnePacket 0060                         _SYS_InterruptHigh 0008  
                             _encryptMode 01E6                                ?_converter 0061  
                           ?_CDCTxService 0001                                ?_le_pulsos 0060  
                            _RemoteWakeup 01DA                                 main@pisca 02A8  
                               main@tempo 0297                                  i2_memset 5086  
                        main@tempoTimeOut 029B                        ?_SYS_InterruptHigh 0001  
                              ?_init_XBee 0001                          putsUSBUSART@data 0060  
                 __end_of_USBStallHandler 4D50                                  i2_strlen 4A8A  
                       ___lmul@multiplier 0060                                 copy_data0 34C8  
                               copy_data1 34E8                                 copy_data2 3508  
                             _freqPulses1 01A6                               _freqPulses2 01A2  
                             _freqPulses3 019E                               _freqPulses4 019A  
             ??_USBCtrlEPAllowStatusStage 0001               __end_of_USBStdSetCfgHandler 3836  
                              ?_itoaVitor 0066                       ??_SYS_InterruptHigh 001D  
                          _MAC_SET_DEVEUI 7D87                      __end_of_putsUSBUSART 4B2C  
                           ??_verificaUSB 006D                            _MAC_SET_APPEUI 7D7C  
                          _MAC_SET_APPKEY 7D71                __size_of_setEncryptionMode 0048  
                      __end_of_device_dsc 7D35                __size_of_createFrameHeader 003C  
                              _EECON1bits 000FA6                   ?_USBCtrlTrfSetupHandler 0001  
                              ?_resetXBee 0001                   USBStdGetStatusHandler@p 0002  
                                __Hrparam 0000                                 memcpy@tmp 000B  
                                __Lrparam 0000                    USBTransferOnePacket@ep 0068  
                                _Sequence 02D7                                  _SetupPkt 000430  
              recebeByteLoRaWan@frameData 0440                         ??_USBDeviceDetach 0060  
                   ?_USBConfigureEndpoint 0001                           ??_setPreambleID 0072  
                       ??_USBDeviceAttach 0060                          __size_of___awdiv 0086  
                        __size_of___lbdiv 003E                          __size_of___ftadd 01AE  
                        __size_of___awmod 0072                          __size_of___ftdiv 00E8  
                        __size_of___ftneg 0026                          __size_of___lldiv 0084  
                        __size_of___ftmul 00F6                          __size_of___llmod 0068  
                        __size_of___ftsub 0042                          __size_of___fttol 00F8  
                           gen_data@param 006A                                  ___awtoft 4EC6  
                                ___ftpack 3C2A                 __end_of_SYS_InterruptHigh 21AC  
                                ___lltoft 47BA                               _fround$5948 0095  
                             _fround$5949 0092                        __end_of_encryptKey 7D46  
                             _line_coding 01F1                __size_of_recebeByteLoRaWan 0296  
                      __end_of_gs_channel 7DF6                            ??_CDCTxService 006B  
                              sprintf@idx 0105                                sprintf@len 0108  
                              sprintf@exp 0110                                sprintf@val 0112  
                              strcat@from 0062                               ??_addSensor 00F5  
                        __size_of_isdigit 0022                   __size_of_USBDeviceTasks 012E  
                                _gen_data 32E2                                  __ptext10 390A  
                                __ptext11 4D90                                  __ptext20 518E  
                                __ptext12 32E2                                  __ptext21 4594  
                                __ptext13 1DC6                                  __ptext30 4F9A  
                                __ptext22 4ADC                                  __ptext14 4C8A  
                                __ptext31 51EC                                  __ptext23 3678  
                                __ptext15 39DA                                  __ptext40 0E3A  
                                __ptext32 4F36                                  __ptext24 296A  
                                __ptext16 51DE                                  __ptext41 514C  
                                __ptext33 2BC0                                  __ptext25 33CC  
                                __ptext17 4876                                  __ptext50 448E  
                                __ptext42 1B56                                  __ptext34 2DF0  
                                __ptext26 4EC6                                  __ptext18 4986  
                                __ptext51 30F4                                  __ptext43 50B2  
                                __ptext35 50DA                                  __ptext27 51A6  
                                __ptext19 4268                                  __ptext60 235A  
                                __ptext52 4CCC                                  __ptext44 31EC  
                                __ptext36 4E4E                                  __ptext28 4DD0  
                                __ptext61 4FCA                                  __ptext53 21AC  
                                __ptext45 4382                                  __ptext37 4A34  
                                __ptext29 4608                                  __ptext70 5126  
                                __ptext54 3C2A                                  __ptext46 25DA  
                                __ptext38 4BBC                                  __ptext71 270E  
                                __ptext63 163C                                  __ptext55 5100  
                                __ptext47 2A96                                  __ptext39 0012  
                                __ptext80 2FF8                                  __ptext72 249C  
                                __ptext64 4A8A                                  __ptext56 4144  
                                __ptext48 47BA                                  __ptext81 3F7C  
                                __ptext73 4F00                                  __ptext65 4408  
                                __ptext57 42F6                                  __ptext49 46EC  
                                __ptext90 4754                                  __ptext82 3596  
                                __ptext74 5058                                  __ptext66 51BA  
                                __ptext58 4E10                                  __ptext91 2EF6  
                                __ptext83 3758                                  __ptext75 4D0E  
                                __ptext67 4512                                  __ptext59 467A  
                                __ptext92 4E8A                                  __ptext84 5086  
                                __ptext76 516E                                  __ptext68 502A  
                                __ptext93 40B0                                  __ptext85 3E32  
                                __ptext77 401A                                  __ptext69 4B74  
                                __ptext94 4818                                  __ptext86 283C  
                                __ptext78 4C46                                  __ptext95 2CE4  
                                __ptext87 18D2                                  __ptext79 41D6  
                                __ptext96 3AAA                                  __ptext88 48D2  
                                __ptext97 3B6E                                  __ptext89 3CDA  
                                __ptext98 3836                                  _gen_send 4D90  
                       itoaVitor@original 0068                                  __powers_ 7BFB  
           recebeByte@checksumRecebimento 01CF                             _MAC_GET_DNCTR 7D92  
                  __end_of_MAC_SET_DEVEUI 7D92                    __end_of_MAC_SET_APPEUI 7D87  
                  __end_of_MAC_SET_APPKEY 7D7C                              ??_setLinkKey 0074  
                        __size_of_sprintf 0E28                          __size_of_strncmp 0082  
                        __size_of_toupper 0018                                strcpy@from 0003  
                          _dadosRecebidos 02BF                                  _error_AT 01EF  
                                _error_RX 01ED                                  _error_TX 01EC  
          __end_of_USBCtrlTrfSetupHandler 4268                             __size_of_main 03CA  
                       ?_USBCtrlEPService 0001                             __size_of_rand 005C  
                           __size_of_send 0230                                  _tamFrame 005A  
                         i2converter@aux2 0005                   __size_of_addByteCommand 0074  
                              strncmp@len 0005                        ??_USBCtrlEPService 001B  
                              _MAC_SET_DR 7DBF                                _MAC_SET_BW 7D64  
                           _MAC_JOIN_OTAA 7D9C                                _MAC_SET_SF 7D46  
                     _USBCtrlTrfInHandler 3B6E                                _MAC_TX_CNF 7DC6  
                      _txZBStatusResponse 39DA                       __end_of_verificaUSB 4FCA  
                                _response 030A                                  _setup_AD 51CE  
                                _outPipes 0038                              _set_link_key 7DF0  
                    _USBCtrlTrfOutHandler 4818                                  int$flags 005F  
               _USBCtrlEPAllowStatusStage 3AAA                            converter@conv1 0065  
                          converter@conv2 0061                           _get_own_mac_low 7DFA  
                                _protocol 01EE                                  main@data 0200  
                          converter@resul 0062                                  main@resp 0296  
                  ??_USBTransferOnePacket 0064                       ?_txZBStatusResponse 0001  
                      __end_of_setLinkKey 4F9A                              ??_setup_ccp1 0060  
                             _MSG_LORAWAN 036E                     __CFG_CPUDIV$OSC1_PLL2 000000  
                            ??_setup_uart 0071                 _USBDeferStatusStagePacket 0053  
                           ??i2_converter 0003                  CDCTxService@byte_to_send 006C  
                               putch@data 0060                               ??_converter 0062  
             __end_of_get_channelmask_900 7DEC                               ??_le_pulsos 0064  
                              _INTCONbits 000FF2               __end_of_set_channelmask_900 7DEE  
                    ?_USBCtrlTrfInHandler 0001                                  memcpy@d1 0001  
                                memcpy@s1 0003                           _delivery_status 01E9  
           USBCtrlTrfTxService@byteToSend 0001                               ??_init_XBee 0062  
                                isdigit@c 0062                                  memset@p1 0060  
                                scale@scl 0095                              gen_data@data 0068  
                        ?_USBStallHandler 0001                  USBStdFeatureReqHandler@p 0019  
                            gen_data@size 006F                                  intlevel2 0000  
                               sprintf@ap 010A                                 sprintf@cp 0106  
                        __tdiv_to_l_@exp1 006E                               ??_itoaVitor 0068  
                               sprintf@sp 00BF                          __tdiv_to_l_@cntr 006D  
                  __size_of_USBDeviceInit 0142                          __tdiv_to_l_@quot 0069  
                                send@size 008C                      ??_txZBStatusResponse 0068  
 __end_of_USER_USB_CALLBACK_EVENT_HANDLER 492E  __size_of_USER_USB_CALLBACK_EVENT_HANDLER 005C  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 0013          ?_USER_USB_CALLBACK_EVENT_HANDLER 000D  
         _USER_USB_CALLBACK_EVENT_HANDLER 48D2              i2USBTransferOnePacket@handle 000A  
                        ___lldiv@dividend 0060                     __size_of_setup_pulsos 00AA  
                             ??_resetXBee 0060                                 strncmp@s1 0001  
                               strncmp@s2 0003                        __end_of_setup_ccp1 4D90  
                      __end_of_setup_uart 3F7C                i2USBTransferOnePacket@data 0002  
                  ??_USBConfigureEndpoint 0002                           addSensor@nivel1 00F3  
                   ?_USBCtrlTrfOutHandler 0001                           addSensor@nivel2 00F4  
                         addSensor@sensor 00F1                       _USBCtrlTrfRxService 2CE4  
                      _USBWakeFromSuspend 4F00                   _USBStdFeatureReqHandler 18D2  
                          _setChannelMask 390A                        _USBCheckCDCRequest 3CDA  
                     _USBCtrlTrfTxService 3836                __size_of_SYS_InterruptHigh 21A4  
                            ?__tdiv_to_l_ 0060                           le_AD@AnalogPort 00A9  
                                sprintf@c 011F                                  sprintf@f 00C1  
                                strcat@cp 0064                 recebeByte@tamanhoMensagem 0048  
                                strcat@to 0060                       ?_USBWakeFromSuspend 0001  
                                strcmp@s1 0001                                  strcmp@s2 0003  
                        ___lldiv@quotient 0068                     ??_USBCtrlTrfInHandler 0002  
                                strcpy@cp 0005                                  strlen@cp 0064  
                                strcpy@to 0001                     _USBAlternateInterface 01F8  
                                toupper@c 0060                       ?_USBCheckCDCRequest 0001  
                    __end_of_write_values 7DF4                 i2USBTransferOnePacket@dir 0001  
               i2USBTransferOnePacket@len 0004                              _setup_pulsos 3D88  
                     USBEnableEndpoint@ep 000C                           _endpoint_number 0055  
                   __size_of_putsUSBUSART 0050                      ?_USBCtrlTrfRxService 0001  
                     __end_ofi2_converter 448E                        __CFG_FOSC$HSPLL_HS 000000  
                ?_USBCtrlEPAllowDataStage 0001                      ?_USBCtrlTrfTxService 0001  
                             _verificaUSB 4F9A                  __end_of_get_own_mac_high 7DFA  
            _USBStatusStageTimeoutCounter 0054                      ??_USBWakeFromSuspend 0015  
              USBTransferOnePacket@handle 0069                      __end_of_CDCTxService 2CE4  
                 __end_of_get_own_mac_low 7DFC                      ??_USBCheckCDCRequest 0001  
                              _USB_CD_Ptr 7C76  
